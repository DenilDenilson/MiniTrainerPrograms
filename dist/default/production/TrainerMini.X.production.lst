

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 20 18:05:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 09/02/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F45K50 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	idataBANK0
    87   00180C                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for _Keypad4x4
    91   00180C  31                 	db	49
    92   00180D  32                 	db	50
    93   00180E  33                 	db	51
    94   00180F  41                 	db	65
    95   001810  34                 	db	52
    96   001811  35                 	db	53
    97   001812  36                 	db	54
    98   001813  42                 	db	66
    99   001814  37                 	db	55
   100   001815  38                 	db	56
   101   001816  39                 	db	57
   102   001817  43                 	db	67
   103   001818  2A                 	db	42
   104   001819  30                 	db	48
   105   00181A  23                 	db	35
   106   00181B  44                 	db	68
   107   000000                     _ANSELD	set	3934
   108   000000                     _ANSELEbits	set	3935
   109   000000                     _RCREG1	set	4014
   110   000000                     _TXREG1	set	4013
   111   000000                     _SPBRG1	set	4015
   112   000000                     _BAUDCON1	set	4024
   113   000000                     _ANSELCbits	set	3933
   114   000000                     _TRISCbits	set	3988
   115   000000                     _TRISD	set	3989
   116   000000                     _PORTB	set	3969
   117   000000                     _LATB	set	3978
   118   000000                     _SSP1CON2bits	set	4037
   119   000000                     _SSP1CON1bits	set	4038
   120   000000                     _SSP1STATbits	set	4039
   121   000000                     _OSCCONbits	set	4051
   122   000000                     _ADRESL	set	4035
   123   000000                     _ADRESH	set	4036
   124   000000                     _ADCON0bits	set	4034
   125   000000                     _RCSTA1bits	set	4011
   126   000000                     _TXSTA1bits	set	4012
   127   000000                     _SSP1CON1	set	4038
   128   000000                     _SSP1STAT	set	4039
   129   000000                     _TRISB	set	3987
   130   000000                     _SSPCON2bits	set	4037
   131   000000                     _ANSELBbits	set	3932
   132   000000                     _TRISBbits	set	3987
   133   000000                     _ADCON2bits	set	4032
   134   000000                     _ADCON1bits	set	4033
   135   000000                     _INTCON3bits	set	4080
   136   000000                     _INTCON2bits	set	4081
   137   000000                     _RCONbits	set	4048
   138   000000                     _SSP1BUF	set	4041
   139   000000                     _SSP1ADD	set	4040
   140   000000                     _LATD	set	3980
   141   000000                     _PORTD	set	3971
   142   000000                     _LATEbits	set	3981
   143   000000                     _WPUB	set	3973
   144   000000                     _TRISEbits	set	3990
   145   000000                     _PIE1bits	set	3997
   146   000000                     _PIR1bits	set	3998
   147   000000                     _INTCONbits	set	4082
   148   000000                     _RCSTA1	set	4011
   149   000000                     _TXSTA1	set	4012
   150   000000                     _SPBRGH1	set	4016
   151                           
   152                           	psect	smallconst
   153   000800                     __psmallconst:
   154                           	callstack 0
   155   000800  00                 	db	0
   156   000801                     STR_1:
   157   000801  43                 	db	67	;'C'
   158   000802  6F                 	db	111	;'o'
   159   000803  75                 	db	117	;'u'
   160   000804  6E                 	db	110	;'n'
   161   000805  74                 	db	116	;'t'
   162   000806  65                 	db	101	;'e'
   163   000807  72                 	db	114	;'r'
   164   000808  3A                 	db	58	;':'
   165   000809  20                 	db	32
   166   00080A  20                 	db	32
   167   00080B  20                 	db	32
   168   00080C  20                 	db	32
   169   00080D  20                 	db	32
   170   00080E  25                 	db	37
   171   00080F  30                 	db	48	;'0'
   172   000810  33                 	db	51	;'3'
   173   000811  75                 	db	117	;'u'
   174   000812  00                 	db	0
   175   000813                     STR_2:
   176   000813  43                 	db	67	;'C'
   177   000814  6F                 	db	111	;'o'
   178   000815  75                 	db	117	;'u'
   179   000816  6E                 	db	110	;'n'
   180   000817  74                 	db	116	;'t'
   181   000818  65                 	db	101	;'e'
   182   000819  72                 	db	114	;'r'
   183   00081A  3A                 	db	58	;':'
   184   00081B  20                 	db	32
   185   00081C  25                 	db	37
   186   00081D  30                 	db	48	;'0'
   187   00081E  33                 	db	51	;'3'
   188   00081F  75                 	db	117	;'u'
   189   000820  0D                 	db	13
   190   000821  0A                 	db	10
   191   000822  00                 	db	0
   192   000823  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   00168E                     __pcinit:
   198                           	callstack 0
   199   00168E                     start_initialization:
   200                           	callstack 0
   201   00168E                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to BANK0 (16 bytes)
   205                           ; load TBLPTR registers with __pidataBANK0
   206   00168E  0E0C               	movlw	low __pidataBANK0
   207   001690  6EF6               	movwf	tblptrl,c
   208   001692  0E18               	movlw	high __pidataBANK0
   209   001694  6EF7               	movwf	tblptrh,c
   210   001696  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   211   001698  6EF8               	movwf	tblptru,c
   212   00169A  EE00  F0AC         	lfsr	0,__pdataBANK0
   213   00169E  EE10 F010          	lfsr	1,16
   214   0016A2                     copy_data0:
   215   0016A2  0009               	tblrd		*+
   216   0016A4  CFF5 FFEE          	movff	tablat,postinc0
   217   0016A8  50E5               	movf	postdec1,w,c
   218   0016AA  50E1               	movf	fsr1l,w,c
   219   0016AC  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BANK0 (57 bytes)
   222   0016AE  EE00  F060         	lfsr	0,__pbssBANK0
   223   0016B2  0E39               	movlw	57
   224   0016B4                     clear_0:
   225   0016B4  6AEE               	clrf	postinc0,c
   226   0016B6  06E8               	decf	wreg,f,c
   227   0016B8  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (2 bytes)
   230   0016BA  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   231   0016BC  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   232   0016BE                     end_of_initialization:
   233                           	callstack 0
   234   0016BE                     __end_of__initialization:
   235                           	callstack 0
   236   0016BE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237   0016C0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238   0016C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239   0016C4  6EF8               	movwf	tblptru,c
   240   0016C6  0100               	movlb	0
   241   0016C8  EF85  F007         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244   00005D                     __pbssCOMRAM:
   245                           	callstack 0
   246   00005D                     _flags:
   247                           	callstack 0
   248   00005D                     	ds	1
   249   00005E                     _datoRx:
   250                           	callstack 0
   251   00005E                     	ds	1
   252                           
   253                           	psect	bssBANK0
   254   000060                     __pbssBANK0:
   255                           	callstack 0
   256   000060                     _width:
   257                           	callstack 0
   258   000060                     	ds	2
   259   000062                     _prec:
   260                           	callstack 0
   261   000062                     	ds	2
   262   000064                     _counter:
   263                           	callstack 0
   264   000064                     	ds	1
   265   000065                     _dbuf:
   266                           	callstack 0
   267   000065                     	ds	32
   268   000085                     _strCounter:
   269                           	callstack 0
   270   000085                     	ds	20
   271                           
   272                           	psect	dataBANK0
   273   0000AC                     __pdataBANK0:
   274                           	callstack 0
   275   0000AC                     _Keypad4x4:
   276                           	callstack 0
   277   0000AC                     	ds	16
   278                           
   279                           	psect	cstackBANK0
   280   000099                     __pcstackBANK0:
   281                           	callstack 0
   282   000099                     ?_sprintf:
   283                           	callstack 0
   284   000099                     sprintf@s:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x0
   288   000099                     	ds	2
   289   00009B                     sprintf@fmt:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x2
   293   00009B                     	ds	4
   294   00009F                     sprintf@ap:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x6
   298   00009F                     	ds	2
   299   0000A1                     sprintf@f:
   300                           	callstack 0
   301                           
   302                           ; 11 bytes @ 0x8
   303   0000A1                     	ds	11
   304                           
   305                           	psect	cstackCOMRAM
   306   000001                     __pcstackCOMRAM:
   307                           	callstack 0
   308   000001                     ?_isdigit:
   309                           	callstack 0
   310   000001                     ?_isspace:
   311                           	callstack 0
   312   000001                     ?___wmul:
   313                           	callstack 0
   314   000001                     ?___awmod:
   315                           	callstack 0
   316   000001                     ?___lldiv:
   317                           	callstack 0
   318   000001                     ?___lodiv:
   319                           	callstack 0
   320   000001                     ?___lomod:
   321                           	callstack 0
   322   000001                     Lcd_Port@a:
   323                           	callstack 0
   324   000001                     USART_WriteByte@data:
   325                           	callstack 0
   326   000001                     putch@c:
   327                           	callstack 0
   328   000001                     ___wmul@multiplier:
   329                           	callstack 0
   330   000001                     ___awmod@dividend:
   331                           	callstack 0
   332   000001                     isdigit@c:
   333                           	callstack 0
   334   000001                     isspace@c:
   335                           	callstack 0
   336   000001                     ___lldiv@dividend:
   337                           	callstack 0
   338   000001                     ___lodiv@dividend:
   339                           	callstack 0
   340   000001                     ___lomod@dividend:
   341                           	callstack 0
   342                           
   343                           ; 8 bytes @ 0x0
   344   000001                     	ds	1
   345   000002                     ??_Lcd_Cmd:
   346   000002                     Lcd_Write_Char@temp:
   347                           	callstack 0
   348   000002                     USART_WriteString@pString:
   349                           	callstack 0
   350   000002                     fputc@c:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x1
   354   000002                     	ds	1
   355   000003                     ??_isdigit:
   356   000003                     ??_isspace:
   357   000003                     Lcd_Cmd@a:
   358                           	callstack 0
   359   000003                     Lcd_Write_Char@y:
   360                           	callstack 0
   361   000003                     ___wmul@multiplicand:
   362                           	callstack 0
   363   000003                     ___awmod@divisor:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x2
   367   000003                     	ds	1
   368   000004                     ??_Lcd_Init:
   369   000004                     Lcd_Set_Cursor@b:
   370                           	callstack 0
   371   000004                     Lcd_Write_Char@a:
   372                           	callstack 0
   373   000004                     fputc@fp:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x3
   377   000004                     	ds	1
   378   000005                     Lcd_Set_Cursor@a:
   379                           	callstack 0
   380   000005                     ___awmod@counter:
   381                           	callstack 0
   382   000005                     _isspace$2172:
   383                           	callstack 0
   384   000005                     Lcd_Write_String@a:
   385                           	callstack 0
   386   000005                     ___wmul@product:
   387                           	callstack 0
   388   000005                     ___lldiv@divisor:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x4
   392   000005                     	ds	1
   393   000006                     ??_fputc:
   394   000006                     Lcd_Set_Cursor@z:
   395                           	callstack 0
   396   000006                     ___awmod@sign:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x5
   400   000006                     	ds	1
   401   000007                     ?_atoi:
   402                           	callstack 0
   403   000007                     Lcd_Set_Cursor@y:
   404                           	callstack 0
   405   000007                     Lcd_Write_String@i:
   406                           	callstack 0
   407   000007                     atoi@s:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x6
   411   000007                     	ds	1
   412   000008                     Lcd_Set_Cursor@temp:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x7
   416   000008                     	ds	1
   417   000009                     ??_atoi:
   418   000009                     ___lldiv@quotient:
   419                           	callstack 0
   420   000009                     ___lodiv@divisor:
   421                           	callstack 0
   422   000009                     ___lomod@divisor:
   423                           	callstack 0
   424                           
   425                           ; 8 bytes @ 0x8
   426   000009                     	ds	2
   427   00000B                     fputs@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xA
   431   00000B                     	ds	1
   432   00000C                     atoi@neg:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xB
   436   00000C                     	ds	1
   437   00000D                     ___lldiv@counter:
   438                           	callstack 0
   439   00000D                     fputs@fp:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xC
   443   00000D                     	ds	1
   444   00000E                     atoi@n:
   445                           	callstack 0
   446   00000E                     USART_SerialBegin@baudios:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0xD
   450   00000E                     	ds	1
   451   00000F                     fputs@c:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0xE
   455   00000F                     	ds	1
   456   000010                     fputs@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xF
   460   000010                     	ds	1
   461   000011                     ___lomod@counter:
   462                           	callstack 0
   463   000011                     ___lodiv@quotient:
   464                           	callstack 0
   465                           
   466                           ; 8 bytes @ 0x10
   467   000011                     	ds	1
   468   000012                     USART_SerialBegin@n:
   469                           	callstack 0
   470   000012                     pad@fp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x11
   474   000012                     	ds	2
   475   000014                     pad@buf:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x13
   479   000014                     	ds	2
   480   000016                     pad@p:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x15
   484   000016                     	ds	2
   485   000018                     ??_pad:
   486                           
   487                           ; 1 bytes @ 0x17
   488   000018                     	ds	1
   489   000019                     ___lodiv@counter:
   490                           	callstack 0
   491   000019                     pad@i:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x18
   495   000019                     	ds	2
   496   00001B                     pad@w:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1A
   500   00001B                     	ds	2
   501   00001D                     utoa@fp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x1C
   505   00001D                     	ds	2
   506   00001F                     utoa@d:
   507                           	callstack 0
   508                           
   509                           ; 8 bytes @ 0x1E
   510   00001F                     	ds	8
   511   000027                     ??_utoa:
   512                           
   513                           ; 1 bytes @ 0x26
   514   000027                     	ds	8
   515   00002F                     utoa@p:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2E
   519   00002F                     	ds	2
   520   000031                     utoa@w:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x30
   524   000031                     	ds	2
   525   000033                     utoa@n:
   526                           	callstack 0
   527                           
   528                           ; 8 bytes @ 0x32
   529   000033                     	ds	8
   530   00003B                     utoa@i:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x3A
   534   00003B                     	ds	2
   535   00003D                     vfpfcnvrt@fp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x3C
   539   00003D                     	ds	2
   540   00003F                     vfpfcnvrt@fmt:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x3E
   544   00003F                     	ds	2
   545   000041                     vfpfcnvrt@ap:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x40
   549   000041                     	ds	2
   550   000043                     ??_vfpfcnvrt:
   551                           
   552                           ; 1 bytes @ 0x42
   553   000043                     	ds	4
   554   000047                     vfpfcnvrt@convarg:
   555                           	callstack 0
   556                           
   557                           ; 8 bytes @ 0x46
   558   000047                     	ds	8
   559   00004F                     vfpfcnvrt@done:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x4E
   563   00004F                     	ds	2
   564   000051                     vfpfcnvrt@cp:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x50
   568   000051                     	ds	2
   569   000053                     ?_vfprintf:
   570                           	callstack 0
   571   000053                     vfprintf@fp:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x52
   575   000053                     	ds	2
   576   000055                     vfprintf@fmt:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x54
   580   000055                     	ds	2
   581   000057                     vfprintf@ap:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x56
   585   000057                     	ds	2
   586   000059                     vfprintf@cfmt:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x58
   590   000059                     	ds	2
   591   00005B                     ??_main:
   592                           
   593                           ; 1 bytes @ 0x5A
   594   00005B                     	ds	2
   595                           
   596 ;;
   597 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   598 ;;
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 14 in file "Usart_Butt_Lcd_Buzzer.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  2  420[None  ] int 
   608 ;; Registers used:
   609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         0       0       0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0       0       0
   617 ;;      Temps:          2       0       0       0       0       0       0       0       0
   618 ;;      Totals:         2       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        2 bytes
   620 ;; Hardware stack levels required when called: 9
   621 ;; This function calls:
   622 ;;		_INTERRUPT_Global_Config
   623 ;;		_INTERRUPT_INTx_Config
   624 ;;		_Lcd_Clear
   625 ;;		_Lcd_Init
   626 ;;		_Lcd_Set_Cursor
   627 ;;		_Lcd_Write_String
   628 ;;		_OSCILADOR_Init
   629 ;;		_PORT_Init
   630 ;;		_USART_SerialBegin
   631 ;;		_USART_WriteString
   632 ;;		___awmod
   633 ;;		_sprintf
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640   000F0A                     __ptext0:
   641                           	callstack 0
   642   000F0A                     _main:
   643                           	callstack 22
   644   000F0A                     
   645                           ;Usart_Butt_Lcd_Buzzer.c: 15:     OSCILADOR_Init();
   646   000F0A  ECFD  F00B         	call	_OSCILADOR_Init	;wreg free
   647                           
   648                           ;Usart_Butt_Lcd_Buzzer.c: 16:     PORT_Init();
   649   000F0E  ECE9  F00B         	call	_PORT_Init	;wreg free
   650   000F12                     
   651                           ;Usart_Butt_Lcd_Buzzer.c: 17:     USART_SerialBegin(9600);
   652   000F12  0E80               	movlw	128
   653   000F14  6E0E               	movwf	USART_SerialBegin@baudios^0,c
   654   000F16  0E25               	movlw	37
   655   000F18  6E0F               	movwf	(USART_SerialBegin@baudios+1)^0,c
   656   000F1A  0E00               	movlw	0
   657   000F1C  6E10               	movwf	(USART_SerialBegin@baudios+2)^0,c
   658   000F1E  0E00               	movlw	0
   659   000F20  6E11               	movwf	(USART_SerialBegin@baudios+3)^0,c
   660   000F22  ECFE  F009         	call	_USART_SerialBegin	;wreg free
   661   000F26                     
   662                           ;Usart_Butt_Lcd_Buzzer.c: 18:     INTERRUPT_INTx_Config();
   663   000F26  ECF3  F00B         	call	_INTERRUPT_INTx_Config	;wreg free
   664   000F2A                     
   665                           ;Usart_Butt_Lcd_Buzzer.c: 19:     INTERRUPT_Global_Config();
   666   000F2A  EC15  F00C         	call	_INTERRUPT_Global_Config	;wreg free
   667   000F2E                     
   668                           ;Usart_Butt_Lcd_Buzzer.c: 21:     Lcd_Init();
   669   000F2E  ECC2  F009         	call	_Lcd_Init	;wreg free
   670   000F32                     
   671                           ;Usart_Butt_Lcd_Buzzer.c: 22:     Lcd_Clear();
   672   000F32  EC0E  F00C         	call	_Lcd_Clear	;wreg free
   673   000F36                     l2707:
   674                           
   675                           ;Usart_Butt_Lcd_Buzzer.c: 25:         Lcd_Set_Cursor(1, 1);
   676   000F36  0E01               	movlw	1
   677   000F38  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   678   000F3A  0E01               	movlw	1
   679   000F3C  EC31  F00A         	call	_Lcd_Set_Cursor
   680   000F40                     
   681                           ;Usart_Butt_Lcd_Buzzer.c: 26:         sprintf(strCounter, "Counter:     %03u", counter);
   682   000F40  0E85               	movlw	low _strCounter
   683   000F42  0100               	movlb	0	; () banked
   684   000F44  6F99               	movwf	sprintf@s& (0+255),b
   685   000F46  0E00               	movlw	high _strCounter
   686   000F48  6F9A               	movwf	(sprintf@s+1)& (0+255),b
   687   000F4A  0E01               	movlw	low STR_1
   688   000F4C  6F9B               	movwf	sprintf@fmt& (0+255),b
   689   000F4E  0E08               	movlw	high STR_1
   690   000F50  6F9C               	movwf	(sprintf@fmt+1)& (0+255),b
   691   000F52  C064  F09D         	movff	_counter,?_sprintf+4	;volatile
   692   000F56  6B9E               	clrf	(?_sprintf+5)& (0+255),b
   693   000F58  EC92  F00A         	call	_sprintf	;wreg free
   694   000F5C                     
   695                           ;Usart_Butt_Lcd_Buzzer.c: 27:         Lcd_Write_String(strCounter);
   696   000F5C  0E85               	movlw	low _strCounter
   697   000F5E  6E05               	movwf	Lcd_Write_String@a^0,c
   698   000F60  0E00               	movlw	high _strCounter
   699   000F62  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   700   000F64  EC27  F00B         	call	_Lcd_Write_String	;wreg free
   701   000F68                     
   702                           ;Usart_Butt_Lcd_Buzzer.c: 28:         sprintf(strCounter, "Counter: %03u\r\n", counter);
   703   000F68  0E85               	movlw	low _strCounter
   704   000F6A  0100               	movlb	0	; () banked
   705   000F6C  6F99               	movwf	sprintf@s& (0+255),b
   706   000F6E  0E00               	movlw	high _strCounter
   707   000F70  6F9A               	movwf	(sprintf@s+1)& (0+255),b
   708   000F72  0E13               	movlw	low STR_2
   709   000F74  6F9B               	movwf	sprintf@fmt& (0+255),b
   710   000F76  0E08               	movlw	high STR_2
   711   000F78  6F9C               	movwf	(sprintf@fmt+1)& (0+255),b
   712   000F7A  C064  F09D         	movff	_counter,?_sprintf+4	;volatile
   713   000F7E  6B9E               	clrf	(?_sprintf+5)& (0+255),b
   714   000F80  EC92  F00A         	call	_sprintf	;wreg free
   715   000F84                     
   716                           ;Usart_Butt_Lcd_Buzzer.c: 29:         USART_WriteString(strCounter);
   717   000F84  0E85               	movlw	low _strCounter
   718   000F86  6E02               	movwf	USART_WriteString@pString^0,c
   719   000F88  0E00               	movlw	high _strCounter
   720   000F8A  6E03               	movwf	(USART_WriteString@pString+1)^0,c
   721   000F8C  EC82  F00B         	call	_USART_WriteString	;wreg free
   722   000F90                     
   723                           ;Usart_Butt_Lcd_Buzzer.c: 33:         if (counter % 10 == 0 && counter != 0) {
   724   000F90  C064  F001         	movff	_counter,___awmod@dividend	;volatile
   725   000F94  6A02               	clrf	(___awmod@dividend+1)^0,c
   726   000F96  0E00               	movlw	0
   727   000F98  6E04               	movwf	(___awmod@divisor+1)^0,c
   728   000F9A  0E0A               	movlw	10
   729   000F9C  6E03               	movwf	___awmod@divisor^0,c
   730   000F9E  ECC3  F008         	call	___awmod	;wreg free
   731   000FA2  5001               	movf	?___awmod^0,w,c
   732   000FA4  1002               	iorwf	(?___awmod+1)^0,w,c
   733   000FA6  A4D8               	btfss	status,2,c
   734   000FA8  EFD8  F007         	goto	u1711
   735   000FAC  EFDA  F007         	goto	u1710
   736   000FB0                     u1711:
   737   000FB0  EFE6  F007         	goto	l422
   738   000FB4                     u1710:
   739   000FB4  0100               	movlb	0	; () banked
   740   000FB6  5164               	movf	_counter& (0+255),w,b	;volatile
   741   000FB8  B4D8               	btfsc	status,2,c
   742   000FBA  EFE1  F007         	goto	u1721
   743   000FBE  EFE3  F007         	goto	u1720
   744   000FC2                     u1721:
   745   000FC2  EFE6  F007         	goto	l422
   746   000FC6                     u1720:
   747   000FC6                     
   748                           ; BSR set to: 0
   749                           ;Usart_Butt_Lcd_Buzzer.c: 34:             LATEbits.LATE2 = 1;
   750   000FC6  848D               	bsf	141,2,c	;volatile
   751                           
   752                           ;Usart_Butt_Lcd_Buzzer.c: 35:         }
   753   000FC8  EFE7  F007         	goto	l2723
   754   000FCC                     l422:
   755                           
   756                           ;Usart_Butt_Lcd_Buzzer.c: 37:             LATEbits.LATE2 = 0;
   757   000FCC  948D               	bcf	141,2,c	;volatile
   758   000FCE                     l2723:
   759                           
   760                           ;Usart_Butt_Lcd_Buzzer.c: 39:         _delay((unsigned long)((250)*(8000000UL/4000.0)));
   761   000FCE  0E03               	movlw	3
   762   000FD0  6E5C               	movwf	(??_main+1)^0,c
   763   000FD2  0E8A               	movlw	138
   764   000FD4  6E5B               	movwf	??_main^0,c
   765   000FD6  0E56               	movlw	86
   766   000FD8                     u1797:
   767   000FD8  2EE8               	decfsz	wreg,f,c
   768   000FDA  D7FE               	bra	u1797
   769   000FDC  2E5B               	decfsz	??_main^0,f,c
   770   000FDE  D7FC               	bra	u1797
   771   000FE0  2E5C               	decfsz	(??_main+1)^0,f,c
   772   000FE2  D7FA               	bra	u1797
   773   000FE4  EF9B  F007         	goto	l2707
   774   000FE8  EF3B  F000         	goto	start
   775   000FEC                     __end_of_main:
   776                           	callstack 0
   777                           
   778 ;; *************** function _sprintf *****************
   779 ;; Defined at:
   780 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  s               2    0[BANK0 ] PTR unsigned char 
   783 ;;		 -> strCounter(20), 
   784 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   785 ;;		 -> STR_2(16), STR_1(18), 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  f              11    8[BANK0 ] struct _IO_FILE
   788 ;;  ap              2    6[BANK0 ] PTR void [1]
   789 ;;		 -> ?_sprintf(2), 
   790 ;;  ret             2    0        int 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  2    0[BANK0 ] int 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   800 ;;      Params:         0       6       0       0       0       0       0       0       0
   801 ;;      Locals:         0      13       0       0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0
   803 ;;      Totals:         0      19       0       0       0       0       0       0       0
   804 ;;Total ram usage:       19 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 8
   807 ;; This function calls:
   808 ;;		_vfprintf
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text1
   815   001524                     __ptext1:
   816                           	callstack 0
   817   001524                     _sprintf:
   818                           	callstack 22
   819   001524  0E9D               	movlw	low (?_sprintf+4)
   820   001526  0100               	movlb	0	; () banked
   821   001528  6F9F               	movwf	sprintf@ap& (0+255),b
   822   00152A  0E00               	movlw	high (?_sprintf+4)
   823   00152C  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
   824   00152E  C099  F0A1         	movff	sprintf@s,sprintf@f
   825   001532  C09A  F0A2         	movff	sprintf@s+1,sprintf@f+1
   826   001536                     
   827                           ; BSR set to: 0
   828   001536  0E00               	movlw	0
   829   001538  6FA5               	movwf	(sprintf@f+4)& (0+255),b
   830   00153A  0E00               	movlw	0
   831   00153C  6FA4               	movwf	(sprintf@f+3)& (0+255),b
   832   00153E                     
   833                           ; BSR set to: 0
   834   00153E  0E00               	movlw	0
   835   001540  6FAB               	movwf	(sprintf@f+10)& (0+255),b
   836   001542  0E00               	movlw	0
   837   001544  6FAA               	movwf	(sprintf@f+9)& (0+255),b
   838   001546                     
   839                           ; BSR set to: 0
   840   001546  0EA1               	movlw	low sprintf@f
   841   001548  6E53               	movwf	vfprintf@fp^0,c
   842   00154A  0E00               	movlw	high sprintf@f
   843   00154C  6E54               	movwf	(vfprintf@fp+1)^0,c
   844   00154E  C09B  F055         	movff	sprintf@fmt,vfprintf@fmt
   845   001552  C09C  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
   846   001556  0E9F               	movlw	low sprintf@ap
   847   001558  6E57               	movwf	vfprintf@ap^0,c
   848   00155A  0E00               	movlw	high sprintf@ap
   849   00155C  6E58               	movwf	(vfprintf@ap+1)^0,c
   850   00155E  ECBB  F00A         	call	_vfprintf	;wreg free
   851   001562  0100               	movlb	0	; () banked
   852   001564  51A4               	movf	(sprintf@f+3)& (0+255),w,b
   853   001566  2599               	addwf	sprintf@s& (0+255),w,b
   854   001568  6ED9               	movwf	fsr2l,c
   855   00156A  51A5               	movf	(sprintf@f+4)& (0+255),w,b
   856   00156C  219A               	addwfc	(sprintf@s+1)& (0+255),w,b
   857   00156E  6EDA               	movwf	fsr2h,c
   858   001570  0E00               	movlw	0
   859   001572  6EDF               	movwf	indf2,c
   860   001574                     
   861                           ; BSR set to: 0
   862   001574  0012               	return		;funcret
   863   001576                     __end_of_sprintf:
   864                           	callstack 0
   865                           
   866 ;; *************** function _vfprintf *****************
   867 ;; Defined at:
   868 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
   871 ;;		 -> sprintf@f(11), 
   872 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
   873 ;;		 -> STR_2(16), STR_1(18), 
   874 ;;  ap              2   86[COMRAM] PTR PTR void 
   875 ;;		 -> sprintf@ap(2), 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
   878 ;;		 -> STR_2(16), STR_1(18), 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  2   82[COMRAM] int 
   881 ;; Registers used:
   882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   888 ;;      Params:         6       0       0       0       0       0       0       0       0
   889 ;;      Locals:         2       0       0       0       0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0
   891 ;;      Totals:         8       0       0       0       0       0       0       0       0
   892 ;;Total ram usage:        8 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; Hardware stack levels required when called: 7
   895 ;; This function calls:
   896 ;;		_vfpfcnvrt
   897 ;; This function is called by:
   898 ;;		_sprintf
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text2
   903   001576                     __ptext2:
   904                           	callstack 0
   905   001576                     _vfprintf:
   906                           	callstack 22
   907   001576                     
   908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   909   001576  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
   910   00157A  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   911                           
   912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   913   00157E  EFCF  F00A         	goto	l2427
   914   001582                     l2425:
   915                           
   916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   917   001582  C053  F03D         	movff	vfprintf@fp,vfpfcnvrt@fp
   918   001586  C054  F03E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   919   00158A  0E59               	movlw	low vfprintf@cfmt
   920   00158C  6E3F               	movwf	vfpfcnvrt@fmt^0,c
   921   00158E  0E00               	movlw	high vfprintf@cfmt
   922   001590  6E40               	movwf	(vfpfcnvrt@fmt+1)^0,c
   923   001592  C057  F041         	movff	vfprintf@ap,vfpfcnvrt@ap
   924   001596  C058  F042         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   925   00159A  EC12  F004         	call	_vfpfcnvrt	;wreg free
   926   00159E                     l2427:
   927                           
   928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   929   00159E  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
   930   0015A2  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   931   0015A6                     	if	0	;tblptru may be non-zero
   932   0015A6                     	endif
   933   0015A6                     	if	0	;tblptru may be non-zero
   934   0015A6                     	endif
   935   0015A6  0008               	tblrd		*
   936   0015A8  50F5               	movf	tablat,w,c
   937   0015AA  0900               	iorlw	0
   938   0015AC  A4D8               	btfss	status,2,c
   939   0015AE  EFDB  F00A         	goto	u1471
   940   0015B2  EFDD  F00A         	goto	u1470
   941   0015B6                     u1471:
   942   0015B6  EFC1  F00A         	goto	l2425
   943   0015BA                     u1470:
   944   0015BA                     
   945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   946   0015BA  0E00               	movlw	0
   947   0015BC  6E54               	movwf	(?_vfprintf+1)^0,c
   948   0015BE  0E00               	movlw	0
   949   0015C0  6E53               	movwf	?_vfprintf^0,c
   950   0015C2  0012               	return		;funcret
   951   0015C4                     __end_of_vfprintf:
   952                           	callstack 0
   953                           
   954 ;; *************** function _vfpfcnvrt *****************
   955 ;; Defined at:
   956 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  fp              2   60[COMRAM] PTR struct _IO_FILE
   959 ;;		 -> sprintf@f(11), 
   960 ;;  fmt             2   62[COMRAM] PTR PTR unsigned char 
   961 ;;		 -> vfprintf@cfmt(2), 
   962 ;;  ap              2   64[COMRAM] PTR PTR void 
   963 ;;		 -> sprintf@ap(2), 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  convarg         8   70[COMRAM] struct .
   966 ;;  cp              2   80[COMRAM] PTR unsigned char 
   967 ;;		 -> STR_2(16), STR_1(18), 
   968 ;;  done            2   78[COMRAM] int 
   969 ;;  i               2    0        int 
   970 ;;  c               1    0        unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         6       0       0       0       0       0       0       0       0
   981 ;;      Locals:        12       0       0       0       0       0       0       0       0
   982 ;;      Temps:          4       0       0       0       0       0       0       0       0
   983 ;;      Totals:        22       0       0       0       0       0       0       0       0
   984 ;;Total ram usage:       22 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 6
   987 ;; This function calls:
   988 ;;		_atoi
   989 ;;		_fputc
   990 ;;		_isdigit
   991 ;;		_utoa
   992 ;; This function is called by:
   993 ;;		_vfprintf
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text3
   998   000824                     __ptext3:
   999                           	callstack 0
  1000   000824                     _vfpfcnvrt:
  1001                           	callstack 22
  1002   000824                     
  1003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1004   000824  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1005   000828  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1006   00082C  CFDE FFF6          	movff	postinc2,tblptrl
  1007   000830  CFDD FFF7          	movff	postdec2,tblptrh
  1008   000834                     	if	0	;tblptru may be non-zero
  1009   000834                     	endif
  1010   000834                     	if	0	;tblptru may be non-zero
  1011   000834                     	endif
  1012   000834  0008               	tblrd		*
  1013   000836  50F5               	movf	tablat,w,c
  1014   000838  0A25               	xorlw	37
  1015   00083A  A4D8               	btfss	status,2,c
  1016   00083C  EF22  F004         	goto	u1371
  1017   000840  EF24  F004         	goto	u1370
  1018   000844                     u1371:
  1019   000844  EF57  F005         	goto	l2355
  1020   000848                     u1370:
  1021   000848                     
  1022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1023   000848  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1024   00084C  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1025   000850  2ADE               	incf	postinc2,f,c
  1026   000852  0E00               	movlw	0
  1027   000854  22DD               	addwfc	postdec2,f,c
  1028   000856                     
  1029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1030   000856  0E00               	movlw	0
  1031   000858  0100               	movlb	0	; () banked
  1032   00085A  6F61               	movwf	(_width+1)& (0+255),b
  1033   00085C  0E00               	movlw	0
  1034   00085E  6F60               	movwf	_width& (0+255),b
  1035   000860  C060  F05D         	movff	_width,_flags
  1036   000864                     
  1037                           ; BSR set to: 0
  1038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1039   000864  6962               	setf	_prec& (0+255),b
  1040   000866  6963               	setf	(_prec+1)& (0+255),b
  1041   000868                     
  1042                           ; BSR set to: 0
  1043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1044   000868  0E00               	movlw	0
  1045   00086A  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1046   00086C  0E00               	movlw	0
  1047   00086E  6E4F               	movwf	vfpfcnvrt@done^0,c
  1048                           
  1049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1050   000870  EF64  F004         	goto	l2319
  1051   000874                     l2309:
  1052                           
  1053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1054   000874  825D               	bsf	_flags^0,1,c
  1055   000876                     
  1056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1057   000876  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1058   00087A  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1059   00087E  2ADE               	incf	postinc2,f,c
  1060   000880  0E00               	movlw	0
  1061   000882  22DD               	addwfc	postdec2,f,c
  1062                           
  1063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1064   000884  EF64  F004         	goto	l2319
  1065   000888                     l2313:
  1066                           
  1067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1068   000888  0E00               	movlw	0
  1069   00088A  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1070   00088C  0E01               	movlw	1
  1071   00088E  6E4F               	movwf	vfpfcnvrt@done^0,c
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1074   000890  EF64  F004         	goto	l2319
  1075   000894                     l2317:
  1076   000894  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1077   000898  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1078   00089C  CFDE FFF6          	movff	postinc2,tblptrl
  1079   0008A0  CFDD FFF7          	movff	postdec2,tblptrh
  1080   0008A4                     	if	0	;tblptru may be non-zero
  1081   0008A4                     	endif
  1082   0008A4                     	if	0	;tblptru may be non-zero
  1083   0008A4                     	endif
  1084   0008A4  0008               	tblrd		*
  1085   0008A6  50F5               	movf	tablat,w,c
  1086   0008A8  6E43               	movwf	??_vfpfcnvrt^0,c
  1087   0008AA  6A44               	clrf	(??_vfpfcnvrt+1)^0,c
  1088                           
  1089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1090                           ; Switch size 1, requested type "simple"
  1091                           ; Number of cases is 1, Range of values is 0 to 0
  1092                           ; switch strategies available:
  1093                           ; Name         Instructions Cycles
  1094                           ; simple_byte            4     3 (average)
  1095                           ;	Chosen strategy is simple_byte
  1096   0008AC  5044               	movf	(??_vfpfcnvrt+1)^0,w,c
  1097   0008AE  0A00               	xorlw	0	; case 0
  1098   0008B0  B4D8               	btfsc	status,2,c
  1099   0008B2  EF5D  F004         	goto	l2809
  1100   0008B6  EF44  F004         	goto	l2313
  1101   0008BA                     l2809:
  1102                           
  1103                           ; Switch size 1, requested type "simple"
  1104                           ; Number of cases is 1, Range of values is 48 to 48
  1105                           ; switch strategies available:
  1106                           ; Name         Instructions Cycles
  1107                           ; simple_byte            4     3 (average)
  1108                           ;	Chosen strategy is simple_byte
  1109   0008BA  5043               	movf	??_vfpfcnvrt^0,w,c
  1110   0008BC  0A30               	xorlw	48	; case 48
  1111   0008BE  B4D8               	btfsc	status,2,c
  1112   0008C0  EF3A  F004         	goto	l2309
  1113   0008C4  EF44  F004         	goto	l2313
  1114   0008C8                     l2319:
  1115                           
  1116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1117   0008C8  504F               	movf	vfpfcnvrt@done^0,w,c
  1118   0008CA  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1119   0008CC  B4D8               	btfsc	status,2,c
  1120   0008CE  EF6B  F004         	goto	u1381
  1121   0008D2  EF6D  F004         	goto	u1380
  1122   0008D6                     u1381:
  1123   0008D6  EF4A  F004         	goto	l2317
  1124   0008DA                     u1380:
  1125   0008DA                     
  1126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1127   0008DA  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1128   0008DE  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1129   0008E2  CFDE FFF6          	movff	postinc2,tblptrl
  1130   0008E6  CFDD FFF7          	movff	postdec2,tblptrh
  1131   0008EA                     	if	0	;tblptru may be non-zero
  1132   0008EA                     	endif
  1133   0008EA                     	if	0	;tblptru may be non-zero
  1134   0008EA                     	endif
  1135   0008EA  0008               	tblrd		*
  1136   0008EC  50F5               	movf	tablat,w,c
  1137   0008EE  0A2A               	xorlw	42
  1138   0008F0  A4D8               	btfss	status,2,c
  1139   0008F2  EF7D  F004         	goto	u1391
  1140   0008F6  EF7F  F004         	goto	u1390
  1141   0008FA                     u1391:
  1142   0008FA  EFA9  F004         	goto	l2329
  1143   0008FE                     u1390:
  1144   0008FE                     
  1145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1146   0008FE  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1147   000902  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1148   000906  2ADE               	incf	postinc2,f,c
  1149   000908  0E00               	movlw	0
  1150   00090A  22DD               	addwfc	postdec2,f,c
  1151                           
  1152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1153   00090C  C041  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1154   000910  C042  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1155   000914  CFDF F043          	movff	indf2,??_vfpfcnvrt
  1156   000918  0E02               	movlw	2
  1157   00091A  26DE               	addwf	postinc2,f,c
  1158   00091C  CFDF F044          	movff	indf2,??_vfpfcnvrt+1
  1159   000920  0E00               	movlw	0
  1160   000922  22DD               	addwfc	postdec2,f,c
  1161   000924  C043  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1162   000928  C044  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1163   00092C  CFDE F060          	movff	postinc2,_width
  1164   000930  CFDD F061          	movff	postdec2,_width+1
  1165   000934                     
  1166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1167   000934  0100               	movlb	0	; () banked
  1168   000936  BF61               	btfsc	(_width+1)& (0+255),7,b
  1169   000938  EFA2  F004         	goto	u1400
  1170   00093C  EFA0  F004         	goto	u1401
  1171   000940                     u1401:
  1172   000940  EFDC  F004         	goto	l2337
  1173   000944                     u1400:
  1174   000944                     
  1175                           ; BSR set to: 0
  1176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1177   000944  805D               	bsf	_flags^0,0,c
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1180   000946  6D60               	negf	_width& (0+255),b
  1181   000948  1F61               	comf	(_width+1)& (0+255),f,b
  1182   00094A  B0D8               	btfsc	status,0,c
  1183   00094C  2B61               	incf	(_width+1)& (0+255),f,b
  1184   00094E  EFDC  F004         	goto	l2337
  1185   000952                     l2329:
  1186                           
  1187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1188   000952  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1189   000956  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1190   00095A  CFDE F007          	movff	postinc2,atoi@s
  1191   00095E  CFDD F008          	movff	postdec2,atoi@s+1
  1192   000962  EC68  F006         	call	_atoi	;wreg free
  1193   000966  C007  F060         	movff	?_atoi,_width
  1194   00096A  C008  F061         	movff	?_atoi+1,_width+1
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1197   00096E  EFC0  F004         	goto	l2335
  1198   000972                     l2331:
  1199                           
  1200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1201   000972  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202   000976  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203   00097A  2ADE               	incf	postinc2,f,c
  1204   00097C  0E00               	movlw	0
  1205   00097E  22DD               	addwfc	postdec2,f,c
  1206   000980                     l2335:
  1207   000980  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1208   000984  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1209   000988  CFDE FFF6          	movff	postinc2,tblptrl
  1210   00098C  CFDD FFF7          	movff	postdec2,tblptrh
  1211   000990                     	if	0	;tblptru may be non-zero
  1212   000990                     	endif
  1213   000990                     	if	0	;tblptru may be non-zero
  1214   000990                     	endif
  1215   000990  0008               	tblrd		*
  1216   000992  CFF5 F043          	movff	tablat,??_vfpfcnvrt
  1217   000996  0ED0               	movlw	208
  1218   000998  2443               	addwf	??_vfpfcnvrt^0,w,c
  1219   00099A  6E44               	movwf	(??_vfpfcnvrt+1)^0,c
  1220   00099C  6A45               	clrf	(??_vfpfcnvrt+2)^0,c
  1221   00099E  0EFF               	movlw	255
  1222   0009A0  2245               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1223   0009A2  5045               	movf	(??_vfpfcnvrt+2)^0,w,c
  1224   0009A4  E109               	bnz	u1410
  1225   0009A6  0E0A               	movlw	10
  1226   0009A8  5C44               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1227   0009AA  A0D8               	btfss	status,0,c
  1228   0009AC  EFDA  F004         	goto	u1411
  1229   0009B0  EFDC  F004         	goto	u1410
  1230   0009B4                     u1411:
  1231   0009B4  EFB9  F004         	goto	l2331
  1232   0009B8                     u1410:
  1233   0009B8                     l2337:
  1234                           
  1235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  1236   0009B8  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237   0009BC  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238   0009C0  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1239   0009C4  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1240   0009C8  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1241   0009CC  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1242   0009D0                     	if	0	;tblptru may be non-zero
  1243   0009D0                     	endif
  1244   0009D0                     	if	0	;tblptru may be non-zero
  1245   0009D0                     	endif
  1246   0009D0  0008               	tblrd		*
  1247   0009D2  50F5               	movf	tablat,w,c
  1248   0009D4  0A75               	xorlw	117
  1249   0009D6  A4D8               	btfss	status,2,c
  1250   0009D8  EFF0  F004         	goto	u1421
  1251   0009DC  EFF2  F004         	goto	u1420
  1252   0009E0                     u1421:
  1253   0009E0  EF4E  F005         	goto	l2351
  1254   0009E4                     u1420:
  1255   0009E4                     
  1256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1257   0009E4  C041  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1258   0009E8  C042  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1259   0009EC  CFDF F043          	movff	indf2,??_vfpfcnvrt
  1260   0009F0  0E02               	movlw	2
  1261   0009F2  26DE               	addwf	postinc2,f,c
  1262   0009F4  CFDF F044          	movff	indf2,??_vfpfcnvrt+1
  1263   0009F8  0E00               	movlw	0
  1264   0009FA  22DD               	addwfc	postdec2,f,c
  1265   0009FC  C043  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1266   000A00  C044  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1267   000A04  CFDE F045          	movff	postinc2,??_vfpfcnvrt+2
  1268   000A08  CFDD F046          	movff	postdec2,??_vfpfcnvrt+3
  1269   000A0C  C045  F047         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  1270   000A10  C046  F048         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  1271   000A14  6A49               	clrf	(vfpfcnvrt@convarg+2)^0,c
  1272   000A16  6A4A               	clrf	(vfpfcnvrt@convarg+3)^0,c
  1273   000A18  6A4B               	clrf	(vfpfcnvrt@convarg+4)^0,c
  1274   000A1A  6A4C               	clrf	(vfpfcnvrt@convarg+5)^0,c
  1275   000A1C  6A4D               	clrf	(vfpfcnvrt@convarg+6)^0,c
  1276   000A1E  6A4E               	clrf	(vfpfcnvrt@convarg+7)^0,c
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  1279   000A20  0E01               	movlw	1
  1280   000A22  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1281   000A24  6E43               	movwf	??_vfpfcnvrt^0,c
  1282   000A26  0E00               	movlw	0
  1283   000A28  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1284   000A2A  6E44               	movwf	(??_vfpfcnvrt+1)^0,c
  1285   000A2C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1286   000A30  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1287   000A34  C043  FFDE         	movff	??_vfpfcnvrt,postinc2
  1288   000A38  C044  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  1291   000A3C  EF38  F005         	goto	l2349
  1292   000A40                     l2343:
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  1295   000A40  C03D  F01D         	movff	vfpfcnvrt@fp,utoa@fp
  1296   000A44  C03E  F01E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1297   000A48  C047  F01F         	movff	vfpfcnvrt@convarg,utoa@d
  1298   000A4C  C048  F020         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1299   000A50  C049  F021         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  1300   000A54  C04A  F022         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  1301   000A58  C04B  F023         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  1302   000A5C  C04C  F024         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  1303   000A60  C04D  F025         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  1304   000A64  C04E  F026         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  1305   000A68  EC6C  F005         	call	_utoa	;wreg free
  1306   000A6C  EF6B  F005         	goto	l1193
  1307   000A70                     l2349:
  1308   000A70  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1309   000A74  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1310   000A78                     	if	0	;tblptru may be non-zero
  1311   000A78                     	endif
  1312   000A78                     	if	0	;tblptru may be non-zero
  1313   000A78                     	endif
  1314   000A78  0008               	tblrd		*
  1315   000A7A  50F5               	movf	tablat,w,c
  1316   000A7C  6E43               	movwf	??_vfpfcnvrt^0,c
  1317   000A7E  6A44               	clrf	(??_vfpfcnvrt+1)^0,c
  1318                           
  1319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 1, Range of values is 0 to 0
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte            4     3 (average)
  1325                           ;	Chosen strategy is simple_byte
  1326   000A80  5044               	movf	(??_vfpfcnvrt+1)^0,w,c
  1327   000A82  0A00               	xorlw	0	; case 0
  1328   000A84  B4D8               	btfsc	status,2,c
  1329   000A86  EF47  F005         	goto	l2811
  1330   000A8A  EF4E  F005         	goto	l2351
  1331   000A8E                     l2811:
  1332                           
  1333                           ; Switch size 1, requested type "simple"
  1334                           ; Number of cases is 1, Range of values is 117 to 117
  1335                           ; switch strategies available:
  1336                           ; Name         Instructions Cycles
  1337                           ; simple_byte            4     3 (average)
  1338                           ;	Chosen strategy is simple_byte
  1339   000A8E  5043               	movf	??_vfpfcnvrt^0,w,c
  1340   000A90  0A75               	xorlw	117	; case 117
  1341   000A92  B4D8               	btfsc	status,2,c
  1342   000A94  EF20  F005         	goto	l2343
  1343   000A98  EF4E  F005         	goto	l2351
  1344   000A9C                     l2351:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1347   000A9C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1348   000AA0  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1349   000AA4  2ADE               	incf	postinc2,f,c
  1350   000AA6  0E00               	movlw	0
  1351   000AA8  22DD               	addwfc	postdec2,f,c
  1352   000AAA  EF6B  F005         	goto	l1193
  1353   000AAE                     l2355:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1356   000AAE  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1357   000AB2  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1358   000AB6  CFDE FFF6          	movff	postinc2,tblptrl
  1359   000ABA  CFDD FFF7          	movff	postdec2,tblptrh
  1360   000ABE                     	if	0	;tblptru may be non-zero
  1361   000ABE                     	endif
  1362   000ABE                     	if	0	;tblptru may be non-zero
  1363   000ABE                     	endif
  1364   000ABE  0008               	tblrd		*
  1365   000AC0  50F5               	movf	tablat,w,c
  1366   000AC2  6E02               	movwf	fputc@c^0,c
  1367   000AC4  6A03               	clrf	(fputc@c+1)^0,c
  1368   000AC6  C03D  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1369   000ACA  C03E  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1370   000ACE  EC5E  F008         	call	_fputc	;wreg free
  1371   000AD2  EF4E  F005         	goto	l2351
  1372   000AD6                     l1193:
  1373   000AD6  0012               	return		;funcret
  1374   000AD8                     __end_of_vfpfcnvrt:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _utoa *****************
  1378 ;; Defined at:
  1379 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1382 ;;		 -> sprintf@f(11), 
  1383 ;;  d               8   30[COMRAM] unsigned long long 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  n               8   50[COMRAM] unsigned long long 
  1386 ;;  i               2   58[COMRAM] int 
  1387 ;;  w               2   48[COMRAM] int 
  1388 ;;  p               2   46[COMRAM] int 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:        10       0       0       0       0       0       0       0       0
  1399 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1401 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:       32 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 5
  1405 ;; This function calls:
  1406 ;;		___lodiv
  1407 ;;		___lomod
  1408 ;;		_pad
  1409 ;; This function is called by:
  1410 ;;		_vfpfcnvrt
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text4
  1415   000AD8                     __ptext4:
  1416                           	callstack 0
  1417   000AD8                     _utoa:
  1418                           	callstack 22
  1419   000AD8                     
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  1421   000AD8  0100               	movlb	0	; () banked
  1422   000ADA  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1423   000ADC  EF72  F005         	goto	u1221
  1424   000AE0  EF74  F005         	goto	u1220
  1425   000AE4                     u1221:
  1426   000AE4  EF75  F005         	goto	l2211
  1427   000AE8                     u1220:
  1428   000AE8                     
  1429                           ; BSR set to: 0
  1430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  1431   000AE8  925D               	bcf	_flags^0,1,c
  1432   000AEA                     l2211:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  1436   000AEA  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1437   000AEC  EF82  F005         	goto	u1230
  1438   000AF0  5163               	movf	(_prec+1)& (0+255),w,b
  1439   000AF2  E106               	bnz	u1231
  1440   000AF4  0562               	decf	_prec& (0+255),w,b
  1441   000AF6  B0D8               	btfsc	status,0,c
  1442   000AF8  EF80  F005         	goto	u1231
  1443   000AFC  EF82  F005         	goto	u1230
  1444   000B00                     u1231:
  1445   000B00  EF88  F005         	goto	l1159
  1446   000B04                     u1230:
  1447   000B04                     
  1448                           ; BSR set to: 0
  1449   000B04  0E00               	movlw	0
  1450   000B06  6E30               	movwf	(utoa@p+1)^0,c
  1451   000B08  0E01               	movlw	1
  1452   000B0A  6E2F               	movwf	utoa@p^0,c
  1453   000B0C  EF8C  F005         	goto	l1161
  1454   000B10                     l1159:
  1455                           
  1456                           ; BSR set to: 0
  1457   000B10  C062  F02F         	movff	_prec,utoa@p
  1458   000B14  C063  F030         	movff	_prec+1,utoa@p+1
  1459   000B18                     l1161:
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  1463   000B18  C060  F031         	movff	_width,utoa@w
  1464   000B1C  C061  F032         	movff	_width+1,utoa@w+1
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  1467   000B20  C01F  F033         	movff	utoa@d,utoa@n
  1468   000B24  C020  F034         	movff	utoa@d+1,utoa@n+1
  1469   000B28  C021  F035         	movff	utoa@d+2,utoa@n+2
  1470   000B2C  C022  F036         	movff	utoa@d+3,utoa@n+3
  1471   000B30  C023  F037         	movff	utoa@d+4,utoa@n+4
  1472   000B34  C024  F038         	movff	utoa@d+5,utoa@n+5
  1473   000B38  C025  F039         	movff	utoa@d+6,utoa@n+6
  1474   000B3C  C026  F03A         	movff	utoa@d+7,utoa@n+7
  1475   000B40                     
  1476                           ; BSR set to: 0
  1477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  1478   000B40  0E00               	movlw	0
  1479   000B42  6E3C               	movwf	(utoa@i+1)^0,c
  1480   000B44  0E1F               	movlw	31
  1481   000B46  6E3B               	movwf	utoa@i^0,c
  1482   000B48                     
  1483                           ; BSR set to: 0
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  1485   000B48  0E00               	movlw	0
  1486   000B4A  6F84               	movwf	(_dbuf+31)& (0+255),b
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1489   000B4C  EF1E  F006         	goto	l2229
  1490   000B50                     l2219:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  1493   000B50  063B               	decf	utoa@i^0,f,c
  1494   000B52  A0D8               	btfss	status,0,c
  1495   000B54  063C               	decf	(utoa@i+1)^0,f,c
  1496   000B56                     
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  1498   000B56  0E65               	movlw	low _dbuf
  1499   000B58  243B               	addwf	utoa@i^0,w,c
  1500   000B5A  6ED9               	movwf	fsr2l,c
  1501   000B5C  0E00               	movlw	high _dbuf
  1502   000B5E  203C               	addwfc	(utoa@i+1)^0,w,c
  1503   000B60  6EDA               	movwf	fsr2h,c
  1504   000B62  C033  F001         	movff	utoa@n,___lomod@dividend
  1505   000B66  C034  F002         	movff	utoa@n+1,___lomod@dividend+1
  1506   000B6A  C035  F003         	movff	utoa@n+2,___lomod@dividend+2
  1507   000B6E  C036  F004         	movff	utoa@n+3,___lomod@dividend+3
  1508   000B72  C037  F005         	movff	utoa@n+4,___lomod@dividend+4
  1509   000B76  C038  F006         	movff	utoa@n+5,___lomod@dividend+5
  1510   000B7A  C039  F007         	movff	utoa@n+6,___lomod@dividend+6
  1511   000B7E  C03A  F008         	movff	utoa@n+7,___lomod@dividend+7
  1512   000B82  0E0A               	movlw	10
  1513   000B84  6E09               	movwf	___lomod@divisor^0,c
  1514   000B86  0E00               	movlw	0
  1515   000B88  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1516   000B8A  0E00               	movlw	0
  1517   000B8C  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1518   000B8E  0E00               	movlw	0
  1519   000B90  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1520   000B92  0E00               	movlw	0
  1521   000B94  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1522   000B96  0E00               	movlw	0
  1523   000B98  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1524   000B9A  0E00               	movlw	0
  1525   000B9C  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1526   000B9E  0E00               	movlw	0
  1527   000BA0  6E10               	movwf	(___lomod@divisor+7)^0,c
  1528   000BA2  ECF6  F007         	call	___lomod	;wreg free
  1529   000BA6  C001  F027         	movff	?___lomod,??_utoa
  1530   000BAA  C002  F028         	movff	?___lomod+1,??_utoa+1
  1531   000BAE  C003  F029         	movff	?___lomod+2,??_utoa+2
  1532   000BB2  C004  F02A         	movff	?___lomod+3,??_utoa+3
  1533   000BB6  C005  F02B         	movff	?___lomod+4,??_utoa+4
  1534   000BBA  C006  F02C         	movff	?___lomod+5,??_utoa+5
  1535   000BBE  C007  F02D         	movff	?___lomod+6,??_utoa+6
  1536   000BC2  C008  F02E         	movff	?___lomod+7,??_utoa+7
  1537   000BC6  5027               	movf	??_utoa^0,w,c
  1538   000BC8  0F30               	addlw	48
  1539   000BCA  6EDF               	movwf	indf2,c
  1540   000BCC                     
  1541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  1542   000BCC  062F               	decf	utoa@p^0,f,c
  1543   000BCE  A0D8               	btfss	status,0,c
  1544   000BD0  0630               	decf	(utoa@p+1)^0,f,c
  1545   000BD2                     
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  1547   000BD2  0631               	decf	utoa@w^0,f,c
  1548   000BD4  A0D8               	btfss	status,0,c
  1549   000BD6  0632               	decf	(utoa@w+1)^0,f,c
  1550   000BD8                     
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  1552   000BD8  C033  F001         	movff	utoa@n,___lodiv@dividend
  1553   000BDC  C034  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1554   000BE0  C035  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1555   000BE4  C036  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1556   000BE8  C037  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1557   000BEC  C038  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1558   000BF0  C039  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1559   000BF4  C03A  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1560   000BF8  0E0A               	movlw	10
  1561   000BFA  6E09               	movwf	___lodiv@divisor^0,c
  1562   000BFC  0E00               	movlw	0
  1563   000BFE  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1564   000C00  0E00               	movlw	0
  1565   000C02  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1566   000C04  0E00               	movlw	0
  1567   000C06  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1568   000C08  0E00               	movlw	0
  1569   000C0A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1570   000C0C  0E00               	movlw	0
  1571   000C0E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1572   000C10  0E00               	movlw	0
  1573   000C12  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1574   000C14  0E00               	movlw	0
  1575   000C16  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1576   000C18  EC0D  F007         	call	___lodiv	;wreg free
  1577   000C1C  C001  F033         	movff	?___lodiv,utoa@n
  1578   000C20  C002  F034         	movff	?___lodiv+1,utoa@n+1
  1579   000C24  C003  F035         	movff	?___lodiv+2,utoa@n+2
  1580   000C28  C004  F036         	movff	?___lodiv+3,utoa@n+3
  1581   000C2C  C005  F037         	movff	?___lodiv+4,utoa@n+4
  1582   000C30  C006  F038         	movff	?___lodiv+5,utoa@n+5
  1583   000C34  C007  F039         	movff	?___lodiv+6,utoa@n+6
  1584   000C38  C008  F03A         	movff	?___lodiv+7,utoa@n+7
  1585   000C3C                     l2229:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1588   000C3C  503B               	movf	utoa@i^0,w,c
  1589   000C3E  103C               	iorwf	(utoa@i+1)^0,w,c
  1590   000C40  B4D8               	btfsc	status,2,c
  1591   000C42  EF25  F006         	goto	u1241
  1592   000C46  EF27  F006         	goto	u1240
  1593   000C4A                     u1241:
  1594   000C4A  EF57  F006         	goto	l2239
  1595   000C4E                     u1240:
  1596   000C4E  5033               	movf	utoa@n^0,w,c
  1597   000C50  1034               	iorwf	(utoa@n+1)^0,w,c
  1598   000C52  1035               	iorwf	(utoa@n+2)^0,w,c
  1599   000C54  1036               	iorwf	(utoa@n+3)^0,w,c
  1600   000C56  1037               	iorwf	(utoa@n+4)^0,w,c
  1601   000C58  1038               	iorwf	(utoa@n+5)^0,w,c
  1602   000C5A  1039               	iorwf	(utoa@n+6)^0,w,c
  1603   000C5C  103A               	iorwf	(utoa@n+7)^0,w,c
  1604   000C5E  A4D8               	btfss	status,2,c
  1605   000C60  EF34  F006         	goto	u1251
  1606   000C64  EF36  F006         	goto	u1250
  1607   000C68                     u1251:
  1608   000C68  EFA8  F005         	goto	l2219
  1609   000C6C                     u1250:
  1610   000C6C  BE30               	btfsc	(utoa@p+1)^0,7,c
  1611   000C6E  EF43  F006         	goto	u1260
  1612   000C72  5030               	movf	(utoa@p+1)^0,w,c
  1613   000C74  E106               	bnz	u1261
  1614   000C76  042F               	decf	utoa@p^0,w,c
  1615   000C78  B0D8               	btfsc	status,0,c
  1616   000C7A  EF41  F006         	goto	u1261
  1617   000C7E  EF43  F006         	goto	u1260
  1618   000C82                     u1261:
  1619   000C82  EFA8  F005         	goto	l2219
  1620   000C86                     u1260:
  1621   000C86  BE32               	btfsc	(utoa@w+1)^0,7,c
  1622   000C88  EF4E  F006         	goto	u1271
  1623   000C8C  5032               	movf	(utoa@w+1)^0,w,c
  1624   000C8E  E108               	bnz	u1270
  1625   000C90  0431               	decf	utoa@w^0,w,c
  1626   000C92  A0D8               	btfss	status,0,c
  1627   000C94  EF4E  F006         	goto	u1271
  1628   000C98  EF50  F006         	goto	u1270
  1629   000C9C                     u1271:
  1630   000C9C  EF57  F006         	goto	l2239
  1631   000CA0                     u1270:
  1632   000CA0  B25D               	btfsc	_flags^0,1,c
  1633   000CA2  EF55  F006         	goto	u1281
  1634   000CA6  EF57  F006         	goto	u1280
  1635   000CAA                     u1281:
  1636   000CAA  EFA8  F005         	goto	l2219
  1637   000CAE                     u1280:
  1638   000CAE                     l2239:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1641   000CAE  C01D  F012         	movff	utoa@fp,pad@fp
  1642   000CB2  C01E  F013         	movff	utoa@fp+1,pad@fp+1
  1643   000CB6  0E65               	movlw	low _dbuf
  1644   000CB8  243B               	addwf	utoa@i^0,w,c
  1645   000CBA  6E14               	movwf	pad@buf^0,c
  1646   000CBC  0E00               	movlw	high _dbuf
  1647   000CBE  203C               	addwfc	(utoa@i+1)^0,w,c
  1648   000CC0  6E15               	movwf	(pad@buf+1)^0,c
  1649   000CC2  C031  F016         	movff	utoa@w,pad@p
  1650   000CC6  C032  F017         	movff	utoa@w+1,pad@p+1
  1651   000CCA  EC1B  F009         	call	_pad	;wreg free
  1652   000CCE  0012               	return		;funcret
  1653   000CD0                     __end_of_utoa:
  1654                           	callstack 0
  1655                           
  1656 ;; *************** function _pad *****************
  1657 ;; Defined at:
  1658 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1661 ;;		 -> sprintf@f(11), 
  1662 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1663 ;;		 -> dbuf(32), 
  1664 ;;  p               2   21[COMRAM] int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  w               2   26[COMRAM] int 
  1667 ;;  i               2   24[COMRAM] int 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1677 ;;      Params:         6       0       0       0       0       0       0       0       0
  1678 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1679 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1680 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1681 ;;Total ram usage:       11 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 4
  1684 ;; This function calls:
  1685 ;;		_fputc
  1686 ;;		_fputs
  1687 ;; This function is called by:
  1688 ;;		_utoa
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text5
  1693   001236                     __ptext5:
  1694                           	callstack 0
  1695   001236                     _pad:
  1696                           	callstack 22
  1697   001236                     
  1698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  1699   001236  A05D               	btfss	_flags^0,0,c
  1700   001238  EF20  F009         	goto	u1141
  1701   00123C  EF22  F009         	goto	u1140
  1702   001240                     u1141:
  1703   001240  EF2C  F009         	goto	l2177
  1704   001244                     u1140:
  1705   001244                     
  1706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  1707   001244  C014  F00B         	movff	pad@buf,fputs@s
  1708   001248  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1709   00124C  C012  F00D         	movff	pad@fp,fputs@fp
  1710   001250  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1711   001254  EC05  F00B         	call	_fputs	;wreg free
  1712   001258                     l2177:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  1715   001258  BE17               	btfsc	(pad@p+1)^0,7,c
  1716   00125A  EF31  F009         	goto	u1151
  1717   00125E  EF33  F009         	goto	u1150
  1718   001262                     u1151:
  1719   001262  EF39  F009         	goto	l2181
  1720   001266                     u1150:
  1721   001266  C016  F01B         	movff	pad@p,pad@w
  1722   00126A  C017  F01C         	movff	pad@p+1,pad@w+1
  1723   00126E  EF3D  F009         	goto	l1149
  1724   001272                     l2181:
  1725   001272  0E00               	movlw	0
  1726   001274  6E1C               	movwf	(pad@w+1)^0,c
  1727   001276  0E00               	movlw	0
  1728   001278  6E1B               	movwf	pad@w^0,c
  1729   00127A                     l1149:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1732   00127A  0E00               	movlw	0
  1733   00127C  6E1A               	movwf	(pad@i+1)^0,c
  1734   00127E  0E00               	movlw	0
  1735   001280  6E19               	movwf	pad@i^0,c
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1738   001282  EF4F  F009         	goto	l2187
  1739   001286                     l2183:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1742   001286  0E00               	movlw	0
  1743   001288  6E03               	movwf	(fputc@c+1)^0,c
  1744   00128A  0E20               	movlw	32
  1745   00128C  6E02               	movwf	fputc@c^0,c
  1746   00128E  C012  F004         	movff	pad@fp,fputc@fp
  1747   001292  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1748   001296  EC5E  F008         	call	_fputc	;wreg free
  1749   00129A                     
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1751   00129A  4A19               	infsnz	pad@i^0,f,c
  1752   00129C  2A1A               	incf	(pad@i+1)^0,f,c
  1753   00129E                     l2187:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1756   00129E  501B               	movf	pad@w^0,w,c
  1757   0012A0  5C19               	subwf	pad@i^0,w,c
  1758   0012A2  501A               	movf	(pad@i+1)^0,w,c
  1759   0012A4  0A80               	xorlw	128
  1760   0012A6  6E18               	movwf	??_pad^0,c
  1761   0012A8  501C               	movf	(pad@w+1)^0,w,c
  1762   0012AA  0A80               	xorlw	128
  1763   0012AC  5818               	subwfb	??_pad^0,w,c
  1764   0012AE  A0D8               	btfss	status,0,c
  1765   0012B0  EF5C  F009         	goto	u1161
  1766   0012B4  EF5E  F009         	goto	u1160
  1767   0012B8                     u1161:
  1768   0012B8  EF43  F009         	goto	l2183
  1769   0012BC                     u1160:
  1770   0012BC                     
  1771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  1772   0012BC  B05D               	btfsc	_flags^0,0,c
  1773   0012BE  EF63  F009         	goto	u1171
  1774   0012C2  EF65  F009         	goto	u1170
  1775   0012C6                     u1171:
  1776   0012C6  EF6F  F009         	goto	l1154
  1777   0012CA                     u1170:
  1778   0012CA                     
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1780   0012CA  C014  F00B         	movff	pad@buf,fputs@s
  1781   0012CE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1782   0012D2  C012  F00D         	movff	pad@fp,fputs@fp
  1783   0012D6  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1784   0012DA  EC05  F00B         	call	_fputs	;wreg free
  1785   0012DE                     l1154:
  1786   0012DE  0012               	return		;funcret
  1787   0012E0                     __end_of_pad:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _fputs *****************
  1791 ;; Defined at:
  1792 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1795 ;;		 -> dbuf(32), 
  1796 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1797 ;;		 -> sprintf@f(11), 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  i               2   15[COMRAM] int 
  1800 ;;  c               1   14[COMRAM] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2   10[COMRAM] int 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1810 ;;      Params:         4       0       0       0       0       0       0       0       0
  1811 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1813 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1814 ;;Total ram usage:        7 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; Hardware stack levels required when called: 3
  1817 ;; This function calls:
  1818 ;;		_fputc
  1819 ;; This function is called by:
  1820 ;;		_pad
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text6
  1825   00160A                     __ptext6:
  1826                           	callstack 0
  1827   00160A                     _fputs:
  1828                           	callstack 22
  1829   00160A  0E00               	movlw	0
  1830   00160C  6E11               	movwf	(fputs@i+1)^0,c
  1831   00160E  0E00               	movlw	0
  1832   001610  6E10               	movwf	fputs@i^0,c
  1833   001612  EF16  F00B         	goto	l2127
  1834   001616                     l2123:
  1835   001616  C00F  F002         	movff	fputs@c,fputc@c
  1836   00161A  6A03               	clrf	(fputc@c+1)^0,c
  1837   00161C  C00D  F004         	movff	fputs@fp,fputc@fp
  1838   001620  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  1839   001624  EC5E  F008         	call	_fputc	;wreg free
  1840   001628  4A10               	infsnz	fputs@i^0,f,c
  1841   00162A  2A11               	incf	(fputs@i+1)^0,f,c
  1842   00162C                     l2127:
  1843   00162C  5010               	movf	fputs@i^0,w,c
  1844   00162E  240B               	addwf	fputs@s^0,w,c
  1845   001630  6ED9               	movwf	fsr2l,c
  1846   001632  5011               	movf	(fputs@i+1)^0,w,c
  1847   001634  200C               	addwfc	(fputs@s+1)^0,w,c
  1848   001636  6EDA               	movwf	fsr2h,c
  1849   001638  50DF               	movf	indf2,w,c
  1850   00163A  6E0F               	movwf	fputs@c^0,c
  1851   00163C  500F               	movf	fputs@c^0,w,c
  1852   00163E  A4D8               	btfss	status,2,c
  1853   001640  EF24  F00B         	goto	u1061
  1854   001644  EF26  F00B         	goto	u1060
  1855   001648                     u1061:
  1856   001648  EF0B  F00B         	goto	l2123
  1857   00164C                     u1060:
  1858   00164C  0012               	return		;funcret
  1859   00164E                     __end_of_fputs:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _fputc *****************
  1863 ;; Defined at:
  1864 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  c               2    1[COMRAM] int 
  1867 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1868 ;;		 -> sprintf@f(11), 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2    1[COMRAM] int 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1880 ;;      Params:         4       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1882 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1883 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1884 ;;Total ram usage:        9 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 2
  1887 ;; This function calls:
  1888 ;;		_putch
  1889 ;; This function is called by:
  1890 ;;		_pad
  1891 ;;		_vfpfcnvrt
  1892 ;;		_fputs
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text7
  1897   0010BC                     __ptext7:
  1898                           	callstack 0
  1899   0010BC                     _fputc:
  1900                           	callstack 22
  1901   0010BC  5004               	movf	fputc@fp^0,w,c
  1902   0010BE  1005               	iorwf	(fputc@fp+1)^0,w,c
  1903   0010C0  B4D8               	btfsc	status,2,c
  1904   0010C2  EF65  F008         	goto	u1021
  1905   0010C6  EF67  F008         	goto	u1020
  1906   0010CA                     u1021:
  1907   0010CA  EF70  F008         	goto	l2111
  1908   0010CE                     u1020:
  1909   0010CE  5004               	movf	fputc@fp^0,w,c
  1910   0010D0  1005               	iorwf	(fputc@fp+1)^0,w,c
  1911   0010D2  A4D8               	btfss	status,2,c
  1912   0010D4  EF6E  F008         	goto	u1031
  1913   0010D8  EF70  F008         	goto	u1030
  1914   0010DC                     u1031:
  1915   0010DC  EF75  F008         	goto	l2113
  1916   0010E0                     u1030:
  1917   0010E0                     l2111:
  1918   0010E0  5002               	movf	fputc@c^0,w,c
  1919   0010E2  ECD3  F00B         	call	_putch
  1920   0010E6  EFC2  F008         	goto	l1251
  1921   0010EA                     l2113:
  1922   0010EA  EE20 F009          	lfsr	2,9
  1923   0010EE  5004               	movf	fputc@fp^0,w,c
  1924   0010F0  26D9               	addwf	fsr2l,f,c
  1925   0010F2  5005               	movf	(fputc@fp+1)^0,w,c
  1926   0010F4  22DA               	addwfc	fsr2h,f,c
  1927   0010F6  50DE               	movf	postinc2,w,c
  1928   0010F8  10DE               	iorwf	postinc2,w,c
  1929   0010FA  B4D8               	btfsc	status,2,c
  1930   0010FC  EF82  F008         	goto	u1041
  1931   001100  EF84  F008         	goto	u1040
  1932   001104                     u1041:
  1933   001104  EF9F  F008         	goto	l2117
  1934   001108                     u1040:
  1935   001108  EE20 F009          	lfsr	2,9
  1936   00110C  5004               	movf	fputc@fp^0,w,c
  1937   00110E  26D9               	addwf	fsr2l,f,c
  1938   001110  5005               	movf	(fputc@fp+1)^0,w,c
  1939   001112  22DA               	addwfc	fsr2h,f,c
  1940   001114  EE10 F003          	lfsr	1,3
  1941   001118  5004               	movf	fputc@fp^0,w,c
  1942   00111A  26E1               	addwf	fsr1l,f,c
  1943   00111C  5005               	movf	(fputc@fp+1)^0,w,c
  1944   00111E  22E2               	addwfc	fsr1h,f,c
  1945   001120  50DE               	movf	postinc2,w,c
  1946   001122  5CE6               	subwf	postinc1,w,c
  1947   001124  50E6               	movf	postinc1,w,c
  1948   001126  0A80               	xorlw	128
  1949   001128  6E0A               	movwf	(??_fputc+4)^0,c
  1950   00112A  50DE               	movf	postinc2,w,c
  1951   00112C  0A80               	xorlw	128
  1952   00112E  580A               	subwfb	(??_fputc+4)^0,w,c
  1953   001130  B0D8               	btfsc	status,0,c
  1954   001132  EF9D  F008         	goto	u1051
  1955   001136  EF9F  F008         	goto	u1050
  1956   00113A                     u1051:
  1957   00113A  EFC2  F008         	goto	l1251
  1958   00113E                     u1050:
  1959   00113E                     l2117:
  1960   00113E  EE20 F003          	lfsr	2,3
  1961   001142  5004               	movf	fputc@fp^0,w,c
  1962   001144  26D9               	addwf	fsr2l,f,c
  1963   001146  5005               	movf	(fputc@fp+1)^0,w,c
  1964   001148  22DA               	addwfc	fsr2h,f,c
  1965   00114A  CFDE F006          	movff	postinc2,??_fputc
  1966   00114E  CFDD F007          	movff	postdec2,??_fputc+1
  1967   001152  C004  FFD9         	movff	fputc@fp,fsr2l
  1968   001156  C005  FFDA         	movff	fputc@fp+1,fsr2h
  1969   00115A  CFDE F008          	movff	postinc2,??_fputc+2
  1970   00115E  CFDD F009          	movff	postdec2,??_fputc+3
  1971   001162  5006               	movf	??_fputc^0,w,c
  1972   001164  2408               	addwf	(??_fputc+2)^0,w,c
  1973   001166  6ED9               	movwf	fsr2l,c
  1974   001168  5007               	movf	(??_fputc+1)^0,w,c
  1975   00116A  2009               	addwfc	(??_fputc+3)^0,w,c
  1976   00116C  6EDA               	movwf	fsr2h,c
  1977   00116E  C002  FFDF         	movff	fputc@c,indf2
  1978   001172  EE20 F003          	lfsr	2,3
  1979   001176  5004               	movf	fputc@fp^0,w,c
  1980   001178  26D9               	addwf	fsr2l,f,c
  1981   00117A  5005               	movf	(fputc@fp+1)^0,w,c
  1982   00117C  22DA               	addwfc	fsr2h,f,c
  1983   00117E  2ADE               	incf	postinc2,f,c
  1984   001180  0E00               	movlw	0
  1985   001182  22DD               	addwfc	postdec2,f,c
  1986   001184                     l1251:
  1987   001184  0012               	return		;funcret
  1988   001186                     __end_of_fputc:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _putch *****************
  1992 ;; Defined at:
  1993 ;;		line 93 in file "lib_pic/usart.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  c               1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  c               1    0[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_fputc
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text8
  2022   0017A6                     __ptext8:
  2023                           	callstack 0
  2024   0017A6                     _putch:
  2025                           	callstack 22
  2026                           
  2027                           ;incstack = 0
  2028                           ;putch@c stored from wreg
  2029   0017A6  6E01               	movwf	putch@c^0,c
  2030   0017A8                     l363:
  2031   0017A8  A2AC               	btfss	172,1,c	;volatile
  2032   0017AA  EFD9  F00B         	goto	u1011
  2033   0017AE  EFDB  F00B         	goto	u1010
  2034   0017B2                     u1011:
  2035   0017B2  EFD4  F00B         	goto	l363
  2036   0017B6                     u1010:
  2037   0017B6                     
  2038                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  2039   0017B6  C001  FFAD         	movff	putch@c,4013	;volatile
  2040   0017BA  0012               	return		;funcret
  2041   0017BC                     __end_of_putch:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function ___lomod *****************
  2045 ;; Defined at:
  2046 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  dividend        8    0[COMRAM] unsigned long long 
  2049 ;;  divisor         8    8[COMRAM] unsigned long long 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  counter         1   16[COMRAM] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  8    0[COMRAM] unsigned long long 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2061 ;;      Params:        16       0       0       0       0       0       0       0       0
  2062 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2064 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2065 ;;Total ram usage:       17 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; Hardware stack levels required when called: 1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_utoa
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text9
  2076   000FEC                     __ptext9:
  2077                           	callstack 0
  2078   000FEC                     ___lomod:
  2079                           	callstack 25
  2080   000FEC  5009               	movf	___lomod@divisor^0,w,c
  2081   000FEE  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2082   000FF0  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2083   000FF2  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2084   000FF4  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2085   000FF6  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2086   000FF8  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2087   000FFA  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2088   000FFC  B4D8               	btfsc	status,2,c
  2089   000FFE  EF03  F008         	goto	u1111
  2090   001002  EF05  F008         	goto	u1110
  2091   001006                     u1111:
  2092   001006  EF4D  F008         	goto	l894
  2093   00100A                     u1110:
  2094   00100A  0E01               	movlw	1
  2095   00100C  6E11               	movwf	___lomod@counter^0,c
  2096   00100E  EF13  F008         	goto	l2163
  2097   001012                     l2161:
  2098   001012  90D8               	bcf	status,0,c
  2099   001014  3609               	rlcf	___lomod@divisor^0,f,c
  2100   001016  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2101   001018  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2102   00101A  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2103   00101C  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2104   00101E  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2105   001020  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2106   001022  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2107   001024  2A11               	incf	___lomod@counter^0,f,c
  2108   001026                     l2163:
  2109   001026  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2110   001028  EF18  F008         	goto	u1121
  2111   00102C  EF1A  F008         	goto	u1120
  2112   001030                     u1121:
  2113   001030  EF09  F008         	goto	l2161
  2114   001034                     u1120:
  2115   001034                     l2165:
  2116   001034  5009               	movf	___lomod@divisor^0,w,c
  2117   001036  5C01               	subwf	___lomod@dividend^0,w,c
  2118   001038  500A               	movf	(___lomod@divisor+1)^0,w,c
  2119   00103A  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2120   00103C  500B               	movf	(___lomod@divisor+2)^0,w,c
  2121   00103E  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2122   001040  500C               	movf	(___lomod@divisor+3)^0,w,c
  2123   001042  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2124   001044  500D               	movf	(___lomod@divisor+4)^0,w,c
  2125   001046  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2126   001048  500E               	movf	(___lomod@divisor+5)^0,w,c
  2127   00104A  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2128   00104C  500F               	movf	(___lomod@divisor+6)^0,w,c
  2129   00104E  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2130   001050  5010               	movf	(___lomod@divisor+7)^0,w,c
  2131   001052  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2132   001054  A0D8               	btfss	status,0,c
  2133   001056  EF2F  F008         	goto	u1131
  2134   00105A  EF31  F008         	goto	u1130
  2135   00105E                     u1131:
  2136   00105E  EF41  F008         	goto	l2169
  2137   001062                     u1130:
  2138   001062  5009               	movf	___lomod@divisor^0,w,c
  2139   001064  5E01               	subwf	___lomod@dividend^0,f,c
  2140   001066  500A               	movf	(___lomod@divisor+1)^0,w,c
  2141   001068  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2142   00106A  500B               	movf	(___lomod@divisor+2)^0,w,c
  2143   00106C  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2144   00106E  500C               	movf	(___lomod@divisor+3)^0,w,c
  2145   001070  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2146   001072  500D               	movf	(___lomod@divisor+4)^0,w,c
  2147   001074  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2148   001076  500E               	movf	(___lomod@divisor+5)^0,w,c
  2149   001078  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2150   00107A  500F               	movf	(___lomod@divisor+6)^0,w,c
  2151   00107C  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2152   00107E  5010               	movf	(___lomod@divisor+7)^0,w,c
  2153   001080  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2154   001082                     l2169:
  2155   001082  90D8               	bcf	status,0,c
  2156   001084  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2157   001086  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2158   001088  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2159   00108A  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2160   00108C  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2161   00108E  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2162   001090  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2163   001092  3209               	rrcf	___lomod@divisor^0,f,c
  2164   001094  2E11               	decfsz	___lomod@counter^0,f,c
  2165   001096  EF1A  F008         	goto	l2165
  2166   00109A                     l894:
  2167   00109A  C001  F001         	movff	___lomod@dividend,?___lomod
  2168   00109E  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2169   0010A2  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2170   0010A6  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2171   0010AA  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2172   0010AE  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2173   0010B2  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2174   0010B6  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2175   0010BA  0012               	return		;funcret
  2176   0010BC                     __end_of___lomod:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function ___lodiv *****************
  2180 ;; Defined at:
  2181 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  dividend        8    0[COMRAM] unsigned long long 
  2184 ;;  divisor         8    8[COMRAM] unsigned long long 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  quotient        8   16[COMRAM] unsigned long long 
  2187 ;;  counter         1   24[COMRAM] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  8    0[COMRAM] unsigned long long 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:        16       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2200 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:       25 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_utoa
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text10
  2212   000E1A                     __ptext10:
  2213                           	callstack 0
  2214   000E1A                     ___lodiv:
  2215                           	callstack 25
  2216   000E1A  EE20  F011         	lfsr	2,___lodiv@quotient
  2217   000E1E  0E07               	movlw	7
  2218   000E20                     u1071:
  2219   000E20  6ADE               	clrf	postinc2,c
  2220   000E22  06E8               	decf	wreg,f,c
  2221   000E24  E2FD               	bc	u1071
  2222   000E26  5009               	movf	___lodiv@divisor^0,w,c
  2223   000E28  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2224   000E2A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2225   000E2C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2226   000E2E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2227   000E30  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2228   000E32  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2229   000E34  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2230   000E36  B4D8               	btfsc	status,2,c
  2231   000E38  EF20  F007         	goto	u1081
  2232   000E3C  EF22  F007         	goto	u1080
  2233   000E40                     u1081:
  2234   000E40  EF74  F007         	goto	l884
  2235   000E44                     u1080:
  2236   000E44  0E01               	movlw	1
  2237   000E46  6E19               	movwf	___lodiv@counter^0,c
  2238   000E48  EF30  F007         	goto	l2143
  2239   000E4C                     l2141:
  2240   000E4C  90D8               	bcf	status,0,c
  2241   000E4E  3609               	rlcf	___lodiv@divisor^0,f,c
  2242   000E50  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2243   000E52  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2244   000E54  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2245   000E56  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2246   000E58  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2247   000E5A  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2248   000E5C  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2249   000E5E  2A19               	incf	___lodiv@counter^0,f,c
  2250   000E60                     l2143:
  2251   000E60  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2252   000E62  EF35  F007         	goto	u1091
  2253   000E66  EF37  F007         	goto	u1090
  2254   000E6A                     u1091:
  2255   000E6A  EF26  F007         	goto	l2141
  2256   000E6E                     u1090:
  2257   000E6E                     l2145:
  2258   000E6E  90D8               	bcf	status,0,c
  2259   000E70  3611               	rlcf	___lodiv@quotient^0,f,c
  2260   000E72  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2261   000E74  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2262   000E76  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2263   000E78  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2264   000E7A  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2265   000E7C  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2266   000E7E  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2267   000E80  5009               	movf	___lodiv@divisor^0,w,c
  2268   000E82  5C01               	subwf	___lodiv@dividend^0,w,c
  2269   000E84  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2270   000E86  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2271   000E88  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2272   000E8A  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2273   000E8C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2274   000E8E  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2275   000E90  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2276   000E92  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2277   000E94  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2278   000E96  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2279   000E98  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2280   000E9A  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2281   000E9C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2282   000E9E  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2283   000EA0  A0D8               	btfss	status,0,c
  2284   000EA2  EF55  F007         	goto	u1101
  2285   000EA6  EF57  F007         	goto	u1100
  2286   000EAA                     u1101:
  2287   000EAA  EF68  F007         	goto	l2153
  2288   000EAE                     u1100:
  2289   000EAE  5009               	movf	___lodiv@divisor^0,w,c
  2290   000EB0  5E01               	subwf	___lodiv@dividend^0,f,c
  2291   000EB2  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2292   000EB4  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2293   000EB6  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2294   000EB8  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2295   000EBA  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2296   000EBC  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2297   000EBE  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2298   000EC0  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2299   000EC2  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2300   000EC4  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2301   000EC6  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2302   000EC8  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2303   000ECA  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2304   000ECC  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2305   000ECE  8011               	bsf	___lodiv@quotient^0,0,c
  2306   000ED0                     l2153:
  2307   000ED0  90D8               	bcf	status,0,c
  2308   000ED2  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2309   000ED4  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2310   000ED6  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2311   000ED8  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2312   000EDA  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2313   000EDC  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2314   000EDE  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2315   000EE0  3209               	rrcf	___lodiv@divisor^0,f,c
  2316   000EE2  2E19               	decfsz	___lodiv@counter^0,f,c
  2317   000EE4  EF37  F007         	goto	l2145
  2318   000EE8                     l884:
  2319   000EE8  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2320   000EEC  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2321   000EF0  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2322   000EF4  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2323   000EF8  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2324   000EFC  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2325   000F00  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2326   000F04  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2327   000F08  0012               	return		;funcret
  2328   000F0A                     __end_of___lodiv:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _atoi *****************
  2332 ;; Defined at:
  2333 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2336 ;;		 -> STR_2(16), STR_1(18), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  n               2   13[COMRAM] int 
  2339 ;;  neg             2   11[COMRAM] int 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2    6[COMRAM] int 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2349 ;;      Params:         2       0       0       0       0       0       0       0       0
  2350 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2351 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2352 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2353 ;;Total ram usage:        9 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 2
  2356 ;; This function calls:
  2357 ;;		___wmul
  2358 ;;		_isdigit
  2359 ;;		_isspace
  2360 ;; This function is called by:
  2361 ;;		_vfpfcnvrt
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text11
  2366   000CD0                     __ptext11:
  2367                           	callstack 0
  2368   000CD0                     _atoi:
  2369                           	callstack 25
  2370   000CD0  0E00               	movlw	0
  2371   000CD2  6E0F               	movwf	(atoi@n+1)^0,c
  2372   000CD4  0E00               	movlw	0
  2373   000CD6  6E0E               	movwf	atoi@n^0,c
  2374   000CD8  0E00               	movlw	0
  2375   000CDA  6E0D               	movwf	(atoi@neg+1)^0,c
  2376   000CDC  0E00               	movlw	0
  2377   000CDE  6E0C               	movwf	atoi@neg^0,c
  2378   000CE0  EF74  F006         	goto	l2249
  2379   000CE4                     l2245:
  2380   000CE4  4A07               	infsnz	atoi@s^0,f,c
  2381   000CE6  2A08               	incf	(atoi@s+1)^0,f,c
  2382   000CE8                     l2249:
  2383   000CE8  C007  FFF6         	movff	atoi@s,tblptrl
  2384   000CEC  C008  FFF7         	movff	atoi@s+1,tblptrh
  2385   000CF0                     	if	0	;tblptru may be non-zero
  2386   000CF0                     	endif
  2387   000CF0                     	if	0	;tblptru may be non-zero
  2388   000CF0                     	endif
  2389   000CF0  0008               	tblrd		*
  2390   000CF2  50F5               	movf	tablat,w,c
  2391   000CF4  0A20               	xorlw	32
  2392   000CF6  B4D8               	btfsc	status,2,c
  2393   000CF8  EF80  F006         	goto	u1291
  2394   000CFC  EF82  F006         	goto	u1290
  2395   000D00                     u1291:
  2396   000D00  EF72  F006         	goto	l2245
  2397   000D04                     u1290:
  2398   000D04  C007  FFF6         	movff	atoi@s,tblptrl
  2399   000D08  C008  FFF7         	movff	atoi@s+1,tblptrh
  2400   000D0C                     	if	0	;tblptru may be non-zero
  2401   000D0C                     	endif
  2402   000D0C                     	if	0	;tblptru may be non-zero
  2403   000D0C                     	endif
  2404   000D0C  0008               	tblrd		*
  2405   000D0E  CFF5 F009          	movff	tablat,??_atoi
  2406   000D12  0EF7               	movlw	247
  2407   000D14  2409               	addwf	??_atoi^0,w,c
  2408   000D16  6E0A               	movwf	(??_atoi+1)^0,c
  2409   000D18  6A0B               	clrf	(??_atoi+2)^0,c
  2410   000D1A  0EFF               	movlw	255
  2411   000D1C  220B               	addwfc	(??_atoi+2)^0,f,c
  2412   000D1E  500B               	movf	(??_atoi+2)^0,w,c
  2413   000D20  E109               	bnz	u1300
  2414   000D22  0E05               	movlw	5
  2415   000D24  5C0A               	subwf	(??_atoi+1)^0,w,c
  2416   000D26  A0D8               	btfss	status,0,c
  2417   000D28  EF98  F006         	goto	u1301
  2418   000D2C  EF9A  F006         	goto	u1300
  2419   000D30                     u1301:
  2420   000D30  EF72  F006         	goto	l2245
  2421   000D34                     u1300:
  2422   000D34  EFA4  F006         	goto	l2257
  2423   000D38                     l2253:
  2424   000D38  0E00               	movlw	0
  2425   000D3A  6E0D               	movwf	(atoi@neg+1)^0,c
  2426   000D3C  0E01               	movlw	1
  2427   000D3E  6E0C               	movwf	atoi@neg^0,c
  2428   000D40                     l2255:
  2429   000D40  4A07               	infsnz	atoi@s^0,f,c
  2430   000D42  2A08               	incf	(atoi@s+1)^0,f,c
  2431   000D44  EFD9  F006         	goto	l2265
  2432   000D48                     l2257:
  2433   000D48  C007  FFF6         	movff	atoi@s,tblptrl
  2434   000D4C  C008  FFF7         	movff	atoi@s+1,tblptrh
  2435   000D50                     	if	0	;tblptru may be non-zero
  2436   000D50                     	endif
  2437   000D50                     	if	0	;tblptru may be non-zero
  2438   000D50                     	endif
  2439   000D50  0008               	tblrd		*
  2440   000D52  50F5               	movf	tablat,w,c
  2441   000D54  6E09               	movwf	??_atoi^0,c
  2442   000D56  6A0A               	clrf	(??_atoi+1)^0,c
  2443                           
  2444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2445                           ; Switch size 1, requested type "simple"
  2446                           ; Number of cases is 1, Range of values is 0 to 0
  2447                           ; switch strategies available:
  2448                           ; Name         Instructions Cycles
  2449                           ; simple_byte            4     3 (average)
  2450                           ;	Chosen strategy is simple_byte
  2451   000D58  500A               	movf	(??_atoi+1)^0,w,c
  2452   000D5A  0A00               	xorlw	0	; case 0
  2453   000D5C  B4D8               	btfsc	status,2,c
  2454   000D5E  EFB3  F006         	goto	l2813
  2455   000D62  EFD9  F006         	goto	l2265
  2456   000D66                     l2813:
  2457                           
  2458                           ; Switch size 1, requested type "simple"
  2459                           ; Number of cases is 2, Range of values is 43 to 45
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte            7     4 (average)
  2463                           ;	Chosen strategy is simple_byte
  2464   000D66  5009               	movf	??_atoi^0,w,c
  2465   000D68  0A2B               	xorlw	43	; case 43
  2466   000D6A  B4D8               	btfsc	status,2,c
  2467   000D6C  EFA0  F006         	goto	l2255
  2468   000D70  0A06               	xorlw	6	; case 45
  2469   000D72  B4D8               	btfsc	status,2,c
  2470   000D74  EF9C  F006         	goto	l2253
  2471   000D78  EFD9  F006         	goto	l2265
  2472   000D7C                     l2259:
  2473   000D7C  C00E  F001         	movff	atoi@n,___wmul@multiplier
  2474   000D80  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2475   000D84  0E00               	movlw	0
  2476   000D86  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2477   000D88  0E0A               	movlw	10
  2478   000D8A  6E03               	movwf	___wmul@multiplicand^0,c
  2479   000D8C  ECB0  F00B         	call	___wmul	;wreg free
  2480   000D90  C007  FFF6         	movff	atoi@s,tblptrl
  2481   000D94  C008  FFF7         	movff	atoi@s+1,tblptrh
  2482   000D98                     	if	0	;tblptru may be non-zero
  2483   000D98                     	endif
  2484   000D98                     	if	0	;tblptru may be non-zero
  2485   000D98                     	endif
  2486   000D98  0008               	tblrd		*
  2487   000D9A  50F5               	movf	tablat,w,c
  2488   000D9C  5E01               	subwf	?___wmul^0,f,c
  2489   000D9E  0E00               	movlw	0
  2490   000DA0  5A02               	subwfb	(?___wmul+1)^0,f,c
  2491   000DA2  0E30               	movlw	48
  2492   000DA4  2401               	addwf	?___wmul^0,w,c
  2493   000DA6  6E0E               	movwf	atoi@n^0,c
  2494   000DA8  0E00               	movlw	0
  2495   000DAA  2002               	addwfc	(?___wmul+1)^0,w,c
  2496   000DAC  6E0F               	movwf	(atoi@n+1)^0,c
  2497   000DAE  EFA0  F006         	goto	l2255
  2498   000DB2                     l2265:
  2499   000DB2  C007  FFF6         	movff	atoi@s,tblptrl
  2500   000DB6  C008  FFF7         	movff	atoi@s+1,tblptrh
  2501   000DBA                     	if	0	;tblptru may be non-zero
  2502   000DBA                     	endif
  2503   000DBA                     	if	0	;tblptru may be non-zero
  2504   000DBA                     	endif
  2505   000DBA  0008               	tblrd		*
  2506   000DBC  CFF5 F009          	movff	tablat,??_atoi
  2507   000DC0  0ED0               	movlw	208
  2508   000DC2  2409               	addwf	??_atoi^0,w,c
  2509   000DC4  6E0A               	movwf	(??_atoi+1)^0,c
  2510   000DC6  6A0B               	clrf	(??_atoi+2)^0,c
  2511   000DC8  0EFF               	movlw	255
  2512   000DCA  220B               	addwfc	(??_atoi+2)^0,f,c
  2513   000DCC  500B               	movf	(??_atoi+2)^0,w,c
  2514   000DCE  E109               	bnz	u1310
  2515   000DD0  0E0A               	movlw	10
  2516   000DD2  5C0A               	subwf	(??_atoi+1)^0,w,c
  2517   000DD4  A0D8               	btfss	status,0,c
  2518   000DD6  EFEF  F006         	goto	u1311
  2519   000DDA  EFF1  F006         	goto	u1310
  2520   000DDE                     u1311:
  2521   000DDE  EFBE  F006         	goto	l2259
  2522   000DE2                     u1310:
  2523   000DE2  500C               	movf	atoi@neg^0,w,c
  2524   000DE4  100D               	iorwf	(atoi@neg+1)^0,w,c
  2525   000DE6  A4D8               	btfss	status,2,c
  2526   000DE8  EFF8  F006         	goto	u1321
  2527   000DEC  EFFA  F006         	goto	u1320
  2528   000DF0                     u1321:
  2529   000DF0  EF08  F007         	goto	l1222
  2530   000DF4                     u1320:
  2531   000DF4  C00E  F009         	movff	atoi@n,??_atoi
  2532   000DF8  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  2533   000DFC  1E09               	comf	??_atoi^0,f,c
  2534   000DFE  1E0A               	comf	(??_atoi+1)^0,f,c
  2535   000E00  4A09               	infsnz	??_atoi^0,f,c
  2536   000E02  2A0A               	incf	(??_atoi+1)^0,f,c
  2537   000E04  C009  F007         	movff	??_atoi,?_atoi
  2538   000E08  C00A  F008         	movff	??_atoi+1,?_atoi+1
  2539   000E0C  EF0C  F007         	goto	l1225
  2540   000E10                     l1222:
  2541   000E10  C00E  F007         	movff	atoi@n,?_atoi
  2542   000E14  C00F  F008         	movff	atoi@n+1,?_atoi+1
  2543   000E18                     l1225:
  2544   000E18  0012               	return		;funcret
  2545   000E1A                     __end_of_atoi:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _isspace *****************
  2549 ;; Defined at:
  2550 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  c               2    0[COMRAM] int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2    0[COMRAM] int 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2564 ;;      Params:         2       0       0       0       0       0       0       0       0
  2565 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2566 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2567 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2568 ;;Total ram usage:        5 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_atoi
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text12
  2579   0015C4                     __ptext12:
  2580                           	callstack 0
  2581   0015C4                     _isspace:
  2582                           	callstack 25
  2583   0015C4  0E01               	movlw	1
  2584   0015C6  6E05               	movwf	_isspace$2172^0,c
  2585   0015C8  0E20               	movlw	32
  2586   0015CA  1801               	xorwf	isspace@c^0,w,c
  2587   0015CC  1002               	iorwf	(isspace@c+1)^0,w,c
  2588   0015CE  B4D8               	btfsc	status,2,c
  2589   0015D0  EFEC  F00A         	goto	u1201
  2590   0015D4  EFEE  F00A         	goto	u1200
  2591   0015D8                     u1201:
  2592   0015D8  EF01  F00B         	goto	l2203
  2593   0015DC                     u1200:
  2594   0015DC  0EF7               	movlw	247
  2595   0015DE  2401               	addwf	isspace@c^0,w,c
  2596   0015E0  6E03               	movwf	??_isspace^0,c
  2597   0015E2  0EFF               	movlw	255
  2598   0015E4  2002               	addwfc	(isspace@c+1)^0,w,c
  2599   0015E6  6E04               	movwf	(??_isspace+1)^0,c
  2600   0015E8  5004               	movf	(??_isspace+1)^0,w,c
  2601   0015EA  E109               	bnz	u1210
  2602   0015EC  0E05               	movlw	5
  2603   0015EE  5C03               	subwf	??_isspace^0,w,c
  2604   0015F0  A0D8               	btfss	status,0,c
  2605   0015F2  EFFD  F00A         	goto	u1211
  2606   0015F6  EFFF  F00A         	goto	u1210
  2607   0015FA                     u1211:
  2608   0015FA  EF01  F00B         	goto	l2203
  2609   0015FE                     u1210:
  2610   0015FE  0E00               	movlw	0
  2611   001600  6E05               	movwf	_isspace$2172^0,c
  2612   001602                     l2203:
  2613   001602  C005  F001         	movff	_isspace$2172,?_isspace
  2614   001606  6A02               	clrf	(?_isspace+1)^0,c
  2615   001608  0012               	return		;funcret
  2616   00160A                     __end_of_isspace:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _isdigit *****************
  2620 ;; Defined at:
  2621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  c               2    0[COMRAM] int 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  2    0[COMRAM] int 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2635 ;;      Params:         2       0       0       0       0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2637 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2638 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2639 ;;Total ram usage:        4 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_vfpfcnvrt
  2646 ;;		_atoi
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text13
  2651   001734                     __ptext13:
  2652                           	callstack 0
  2653   001734                     _isdigit:
  2654                           	callstack 26
  2655   001734  0ED0               	movlw	208
  2656   001736  2401               	addwf	isdigit@c^0,w,c
  2657   001738  6E03               	movwf	??_isdigit^0,c
  2658   00173A  0EFF               	movlw	255
  2659   00173C  2002               	addwfc	(isdigit@c+1)^0,w,c
  2660   00173E  6E04               	movwf	(??_isdigit+1)^0,c
  2661   001740  5004               	movf	(??_isdigit+1)^0,w,c
  2662   001742  E10A               	bnz	u1180
  2663   001744  0E0A               	movlw	10
  2664   001746  5C03               	subwf	??_isdigit^0,w,c
  2665   001748  A0D8               	btfss	status,0,c
  2666   00174A  EFA9  F00B         	goto	u1181
  2667   00174E  EFAC  F00B         	goto	u1180
  2668   001752                     u1181:
  2669   001752  0E01               	movlw	1
  2670   001754  EFAD  F00B         	goto	u1190
  2671   001758                     u1180:
  2672   001758  0E00               	movlw	0
  2673   00175A                     u1190:
  2674   00175A  6E01               	movwf	?_isdigit^0,c
  2675   00175C  6A02               	clrf	(?_isdigit+1)^0,c
  2676   00175E  0012               	return		;funcret
  2677   001760                     __end_of_isdigit:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function ___wmul *****************
  2681 ;; Defined at:
  2682 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  multiplier      2    0[COMRAM] unsigned int 
  2685 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  product         2    4[COMRAM] unsigned int 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2    0[COMRAM] unsigned int 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, prodl, prodh
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2697 ;;      Params:         4       0       0       0       0       0       0       0       0
  2698 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2700 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2701 ;;Total ram usage:        6 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; Hardware stack levels required when called: 1
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_atoi
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text14
  2712   001760                     __ptext14:
  2713                           	callstack 0
  2714   001760                     ___wmul:
  2715                           	callstack 25
  2716   001760  5001               	movf	___wmul@multiplier^0,w,c
  2717   001762  0203               	mulwf	___wmul@multiplicand^0,c
  2718   001764  CFF3 F005          	movff	prodl,___wmul@product
  2719   001768  CFF4 F006          	movff	prodh,___wmul@product+1
  2720   00176C  5001               	movf	___wmul@multiplier^0,w,c
  2721   00176E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2722   001770  50F3               	movf	243,w,c
  2723   001772  2606               	addwf	(___wmul@product+1)^0,f,c
  2724   001774  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2725   001776  0203               	mulwf	___wmul@multiplicand^0,c
  2726   001778  50F3               	movf	243,w,c
  2727   00177A  2606               	addwf	(___wmul@product+1)^0,f,c
  2728   00177C  C005  F001         	movff	___wmul@product,?___wmul
  2729   001780  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2730   001784  0012               	return		;funcret
  2731   001786                     __end_of___wmul:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function ___awmod *****************
  2735 ;; Defined at:
  2736 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  dividend        2    0[COMRAM] int 
  2739 ;;  divisor         2    2[COMRAM] int 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  sign            1    5[COMRAM] unsigned char 
  2742 ;;  counter         1    4[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2    0[COMRAM] int 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2752 ;;      Params:         4       0       0       0       0       0       0       0       0
  2753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2755 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        6 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text15
  2767   001186                     __ptext15:
  2768                           	callstack 0
  2769   001186                     ___awmod:
  2770                           	callstack 29
  2771   001186  0E00               	movlw	0
  2772   001188  6E06               	movwf	___awmod@sign^0,c
  2773   00118A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2774   00118C  EFCC  F008         	goto	u1610
  2775   001190  EFCA  F008         	goto	u1611
  2776   001194                     u1611:
  2777   001194  EFD2  F008         	goto	l2599
  2778   001198                     u1610:
  2779   001198  6C01               	negf	___awmod@dividend^0,c
  2780   00119A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2781   00119C  B0D8               	btfsc	status,0,c
  2782   00119E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2783   0011A0  0E01               	movlw	1
  2784   0011A2  6E06               	movwf	___awmod@sign^0,c
  2785   0011A4                     l2599:
  2786   0011A4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2787   0011A6  EFD9  F008         	goto	u1620
  2788   0011AA  EFD7  F008         	goto	u1621
  2789   0011AE                     u1621:
  2790   0011AE  EFDD  F008         	goto	l2603
  2791   0011B2                     u1620:
  2792   0011B2  6C03               	negf	___awmod@divisor^0,c
  2793   0011B4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2794   0011B6  B0D8               	btfsc	status,0,c
  2795   0011B8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2796   0011BA                     l2603:
  2797   0011BA  5003               	movf	___awmod@divisor^0,w,c
  2798   0011BC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2799   0011BE  B4D8               	btfsc	status,2,c
  2800   0011C0  EFE4  F008         	goto	u1631
  2801   0011C4  EFE6  F008         	goto	u1630
  2802   0011C8                     u1631:
  2803   0011C8  EF0A  F009         	goto	l2619
  2804   0011CC                     u1630:
  2805   0011CC  0E01               	movlw	1
  2806   0011CE  6E05               	movwf	___awmod@counter^0,c
  2807   0011D0  EFEE  F008         	goto	l2609
  2808   0011D4                     l2607:
  2809   0011D4  90D8               	bcf	status,0,c
  2810   0011D6  3603               	rlcf	___awmod@divisor^0,f,c
  2811   0011D8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2812   0011DA  2A05               	incf	___awmod@counter^0,f,c
  2813   0011DC                     l2609:
  2814   0011DC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2815   0011DE  EFF3  F008         	goto	u1641
  2816   0011E2  EFF5  F008         	goto	u1640
  2817   0011E6                     u1641:
  2818   0011E6  EFEA  F008         	goto	l2607
  2819   0011EA                     u1640:
  2820   0011EA                     l2611:
  2821   0011EA  5003               	movf	___awmod@divisor^0,w,c
  2822   0011EC  5C01               	subwf	___awmod@dividend^0,w,c
  2823   0011EE  5004               	movf	(___awmod@divisor+1)^0,w,c
  2824   0011F0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2825   0011F2  A0D8               	btfss	status,0,c
  2826   0011F4  EFFE  F008         	goto	u1651
  2827   0011F8  EF00  F009         	goto	u1650
  2828   0011FC                     u1651:
  2829   0011FC  EF04  F009         	goto	l2615
  2830   001200                     u1650:
  2831   001200  5003               	movf	___awmod@divisor^0,w,c
  2832   001202  5E01               	subwf	___awmod@dividend^0,f,c
  2833   001204  5004               	movf	(___awmod@divisor+1)^0,w,c
  2834   001206  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2835   001208                     l2615:
  2836   001208  90D8               	bcf	status,0,c
  2837   00120A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2838   00120C  3203               	rrcf	___awmod@divisor^0,f,c
  2839   00120E  2E05               	decfsz	___awmod@counter^0,f,c
  2840   001210  EFF5  F008         	goto	l2611
  2841   001214                     l2619:
  2842   001214  5006               	movf	___awmod@sign^0,w,c
  2843   001216  B4D8               	btfsc	status,2,c
  2844   001218  EF10  F009         	goto	u1661
  2845   00121C  EF12  F009         	goto	u1660
  2846   001220                     u1661:
  2847   001220  EF16  F009         	goto	l2623
  2848   001224                     u1660:
  2849   001224  6C01               	negf	___awmod@dividend^0,c
  2850   001226  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2851   001228  B0D8               	btfsc	status,0,c
  2852   00122A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2853   00122C                     l2623:
  2854   00122C  C001  F001         	movff	___awmod@dividend,?___awmod
  2855   001230  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2856   001234  0012               	return		;funcret
  2857   001236                     __end_of___awmod:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _USART_WriteString *****************
  2861 ;; Defined at:
  2862 ;;		line 62 in file "lib_pic/usart.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  pString         2    1[COMRAM] PTR unsigned char 
  2865 ;;		 -> strCounter(20), 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2877 ;;      Params:         2       0       0       0       0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2880 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2881 ;;Total ram usage:        2 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 2
  2884 ;; This function calls:
  2885 ;;		_USART_WriteByte
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text16
  2892   001704                     __ptext16:
  2893                           	callstack 0
  2894   001704                     _USART_WriteString:
  2895                           	callstack 28
  2896   001704                     
  2897                           ;lib_pic/usart.c: 62: void USART_WriteString(char *pString);lib_pic/usart.c: 63: {;lib_p
      +                          ic/usart.c: 64:     while(*pString != '\0')
  2898   001704  EF8D  F00B         	goto	l2561
  2899   001708                     l2557:
  2900                           
  2901                           ;lib_pic/usart.c: 65:     {;lib_pic/usart.c: 66:         USART_WriteByte(*pString);
  2902   001708  C002  FFD9         	movff	USART_WriteString@pString,fsr2l
  2903   00170C  C003  FFDA         	movff	USART_WriteString@pString+1,fsr2h
  2904   001710  50DF               	movf	indf2,w,c
  2905   001712  ECDE  F00B         	call	_USART_WriteByte
  2906   001716                     
  2907                           ;lib_pic/usart.c: 67:         pString++;
  2908   001716  4A02               	infsnz	USART_WriteString@pString^0,f,c
  2909   001718  2A03               	incf	(USART_WriteString@pString+1)^0,f,c
  2910   00171A                     l2561:
  2911                           
  2912                           ;lib_pic/usart.c: 64:     while(*pString != '\0')
  2913   00171A  C002  FFD9         	movff	USART_WriteString@pString,fsr2l
  2914   00171E  C003  FFDA         	movff	USART_WriteString@pString+1,fsr2h
  2915   001722  50DF               	movf	indf2,w,c
  2916   001724  A4D8               	btfss	status,2,c
  2917   001726  EF97  F00B         	goto	u1601
  2918   00172A  EF99  F00B         	goto	u1600
  2919   00172E                     u1601:
  2920   00172E  EF84  F00B         	goto	l2557
  2921   001732                     u1600:
  2922   001732  0012               	return		;funcret
  2923   001734                     __end_of_USART_WriteString:
  2924                           	callstack 0
  2925                           
  2926 ;; *************** function _USART_WriteByte *****************
  2927 ;; Defined at:
  2928 ;;		line 56 in file "lib_pic/usart.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  data            1    wreg     unsigned char 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  data            1    0[COMRAM] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0
  2943 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2945 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2946 ;;Total ram usage:        1 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 1
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_USART_WriteString
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text17
  2957   0017BC                     __ptext17:
  2958                           	callstack 0
  2959   0017BC                     _USART_WriteByte:
  2960                           	callstack 28
  2961                           
  2962                           ;incstack = 0
  2963                           ;USART_WriteByte@data stored from wreg
  2964   0017BC  6E01               	movwf	USART_WriteByte@data^0,c
  2965   0017BE                     l341:
  2966   0017BE  A2AC               	btfss	172,1,c	;volatile
  2967   0017C0  EFE4  F00B         	goto	u1431
  2968   0017C4  EFE6  F00B         	goto	u1430
  2969   0017C8                     u1431:
  2970   0017C8  EFDF  F00B         	goto	l341
  2971   0017CC                     u1430:
  2972   0017CC                     
  2973                           ;lib_pic/usart.c: 59:     TXREG1 = data;
  2974   0017CC  C001  FFAD         	movff	USART_WriteByte@data,4013	;volatile
  2975   0017D0  0012               	return		;funcret
  2976   0017D2                     __end_of_USART_WriteByte:
  2977                           	callstack 0
  2978                           
  2979 ;; *************** function _USART_SerialBegin *****************
  2980 ;; Defined at:
  2981 ;;		line 5 in file "lib_pic/usart.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  baudios         4   13[COMRAM] unsigned long 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  n               2   17[COMRAM] unsigned short 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2995 ;;      Params:         4       0       0       0       0       0       0       0       0
  2996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2998 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2999 ;;Total ram usage:        6 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 2
  3002 ;; This function calls:
  3003 ;;		___lldiv
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text18
  3010   0013FC                     __ptext18:
  3011                           	callstack 0
  3012   0013FC                     _USART_SerialBegin:
  3013                           	callstack 28
  3014   0013FC                     
  3015                           ;lib_pic/usart.c: 10:     TRISCbits.TRISC6 = 0;
  3016   0013FC  9C94               	bcf	148,6,c	;volatile
  3017   0013FE                     
  3018                           ;lib_pic/usart.c: 11:     ANSELCbits.ANSC6 = 0;
  3019   0013FE  010F               	movlb	15	; () banked
  3020   001400  9D5D               	bcf	93,6,b	;volatile
  3021   001402                     
  3022                           ; BSR set to: 15
  3023                           ;lib_pic/usart.c: 12:     TRISCbits.TRISC7 = 1;
  3024   001402  8E94               	bsf	148,7,c	;volatile
  3025   001404                     
  3026                           ; BSR set to: 15
  3027                           ;lib_pic/usart.c: 13:     ANSELCbits.ANSC7 = 0;
  3028   001404  9F5D               	bcf	93,7,b	;volatile
  3029                           
  3030                           ;lib_pic/usart.c: 16:     TXSTA1 = 0b00100100;
  3031   001406  0E24               	movlw	36
  3032   001408  6EAC               	movwf	172,c	;volatile
  3033                           
  3034                           ;lib_pic/usart.c: 17:     RCSTA1 = 0b10010000;
  3035   00140A  0E90               	movlw	144
  3036   00140C  6EAB               	movwf	171,c	;volatile
  3037                           
  3038                           ;lib_pic/usart.c: 18:     BAUDCON1 = 0b00001000;
  3039   00140E  0E08               	movlw	8
  3040   001410  6EB8               	movwf	184,c	;volatile
  3041   001412                     
  3042                           ; BSR set to: 15
  3043                           ;lib_pic/usart.c: 21:     n = (uint16_t)((8000000UL / baudios) / 4UL) - 1UL;
  3044   001412  0E00               	movlw	0
  3045   001414  6E01               	movwf	___lldiv@dividend^0,c
  3046   001416  0E12               	movlw	18
  3047   001418  6E02               	movwf	(___lldiv@dividend+1)^0,c
  3048   00141A  0E7A               	movlw	122
  3049   00141C  6E03               	movwf	(___lldiv@dividend+2)^0,c
  3050   00141E  0E00               	movlw	0
  3051   001420  6E04               	movwf	(___lldiv@dividend+3)^0,c
  3052   001422  C00E  F005         	movff	USART_SerialBegin@baudios,___lldiv@divisor
  3053   001426  C00F  F006         	movff	USART_SerialBegin@baudios+1,___lldiv@divisor+1
  3054   00142A  C010  F007         	movff	USART_SerialBegin@baudios+2,___lldiv@divisor+2
  3055   00142E  C011  F008         	movff	USART_SerialBegin@baudios+3,___lldiv@divisor+3
  3056   001432  EC70  F009         	call	___lldiv	;wreg free
  3057   001436  0E03               	movlw	3
  3058   001438  EF23  F00A         	goto	u1590
  3059   00143C                     u1595:
  3060   00143C  90D8               	bcf	status,0,c
  3061   00143E  3204               	rrcf	(?___lldiv+3)^0,f,c
  3062   001440  3203               	rrcf	(?___lldiv+2)^0,f,c
  3063   001442  3202               	rrcf	(?___lldiv+1)^0,f,c
  3064   001444  3201               	rrcf	?___lldiv^0,f,c
  3065   001446                     u1590:
  3066   001446  2EE8               	decfsz	wreg,f,c
  3067   001448  EF1E  F00A         	goto	u1595
  3068   00144C  0EFF               	movlw	255
  3069   00144E  2401               	addwf	?___lldiv^0,w,c
  3070   001450  6E12               	movwf	USART_SerialBegin@n^0,c
  3071   001452  0EFF               	movlw	255
  3072   001454  2002               	addwfc	(?___lldiv+1)^0,w,c
  3073   001456  6E13               	movwf	(USART_SerialBegin@n+1)^0,c
  3074   001458                     
  3075                           ;lib_pic/usart.c: 22:     SPBRG1 = (uint8_t)n;
  3076   001458  C012  FFAF         	movff	USART_SerialBegin@n,4015	;volatile
  3077   00145C                     
  3078                           ;lib_pic/usart.c: 23:     SPBRGH1 = (uint8_t)(n >> 8);
  3079   00145C  5013               	movf	(USART_SerialBegin@n+1)^0,w,c
  3080   00145E  6EB0               	movwf	176,c	;volatile
  3081   001460  0012               	return		;funcret
  3082   001462                     __end_of_USART_SerialBegin:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function ___lldiv *****************
  3086 ;; Defined at:
  3087 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  dividend        4    0[COMRAM] unsigned long 
  3090 ;;  divisor         4    4[COMRAM] unsigned long 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  quotient        4    8[COMRAM] unsigned long 
  3093 ;;  counter         1   12[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  4    0[COMRAM] unsigned long 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         8       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:       13 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_USART_SerialBegin
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text19
  3118   0012E0                     __ptext19:
  3119                           	callstack 0
  3120   0012E0                     ___lldiv:
  3121                           	callstack 28
  3122   0012E0  0E00               	movlw	0
  3123   0012E2  6E09               	movwf	___lldiv@quotient^0,c
  3124   0012E4  0E00               	movlw	0
  3125   0012E6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  3126   0012E8  0E00               	movlw	0
  3127   0012EA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  3128   0012EC  0E00               	movlw	0
  3129   0012EE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  3130   0012F0  5005               	movf	___lldiv@divisor^0,w,c
  3131   0012F2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  3132   0012F4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  3133   0012F6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  3134   0012F8  B4D8               	btfsc	status,2,c
  3135   0012FA  EF81  F009         	goto	u1441
  3136   0012FE  EF83  F009         	goto	u1440
  3137   001302                     u1441:
  3138   001302  EFB9  F009         	goto	l473
  3139   001306                     u1440:
  3140   001306  0E01               	movlw	1
  3141   001308  6E0D               	movwf	___lldiv@counter^0,c
  3142   00130A  EF8D  F009         	goto	l2409
  3143   00130E                     l2407:
  3144   00130E  90D8               	bcf	status,0,c
  3145   001310  3605               	rlcf	___lldiv@divisor^0,f,c
  3146   001312  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  3147   001314  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  3148   001316  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  3149   001318  2A0D               	incf	___lldiv@counter^0,f,c
  3150   00131A                     l2409:
  3151   00131A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  3152   00131C  EF92  F009         	goto	u1451
  3153   001320  EF94  F009         	goto	u1450
  3154   001324                     u1451:
  3155   001324  EF87  F009         	goto	l2407
  3156   001328                     u1450:
  3157   001328                     l2411:
  3158   001328  90D8               	bcf	status,0,c
  3159   00132A  3609               	rlcf	___lldiv@quotient^0,f,c
  3160   00132C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3161   00132E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3162   001330  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3163   001332  5005               	movf	___lldiv@divisor^0,w,c
  3164   001334  5C01               	subwf	___lldiv@dividend^0,w,c
  3165   001336  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3166   001338  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  3167   00133A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3168   00133C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  3169   00133E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3170   001340  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  3171   001342  A0D8               	btfss	status,0,c
  3172   001344  EFA6  F009         	goto	u1461
  3173   001348  EFA8  F009         	goto	u1460
  3174   00134C                     u1461:
  3175   00134C  EFB1  F009         	goto	l2419
  3176   001350                     u1460:
  3177   001350  5005               	movf	___lldiv@divisor^0,w,c
  3178   001352  5E01               	subwf	___lldiv@dividend^0,f,c
  3179   001354  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3180   001356  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  3181   001358  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3182   00135A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  3183   00135C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3184   00135E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  3185   001360  8009               	bsf	___lldiv@quotient^0,0,c
  3186   001362                     l2419:
  3187   001362  90D8               	bcf	status,0,c
  3188   001364  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  3189   001366  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  3190   001368  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  3191   00136A  3205               	rrcf	___lldiv@divisor^0,f,c
  3192   00136C  2E0D               	decfsz	___lldiv@counter^0,f,c
  3193   00136E  EF94  F009         	goto	l2411
  3194   001372                     l473:
  3195   001372  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3196   001376  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3197   00137A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3198   00137E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3199   001382  0012               	return		;funcret
  3200   001384                     __end_of___lldiv:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _PORT_Init *****************
  3204 ;; Defined at:
  3205 ;;		line 73 in file "Usart_Butt_Lcd_Buzzer.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text20
  3234   0017D2                     __ptext20:
  3235                           	callstack 0
  3236   0017D2                     _PORT_Init:
  3237                           	callstack 29
  3238   0017D2                     
  3239                           ;Usart_Butt_Lcd_Buzzer.c: 75:     ANSELEbits.ANSE0 = 0;
  3240   0017D2  010F               	movlb	15	; () banked
  3241   0017D4  915F               	bcf	95,0,b	;volatile
  3242                           
  3243                           ;Usart_Butt_Lcd_Buzzer.c: 76:     TRISEbits.RE0 = 0;
  3244   0017D6  9096               	bcf	150,0,c	;volatile
  3245   0017D8                     
  3246                           ; BSR set to: 15
  3247                           ;Usart_Butt_Lcd_Buzzer.c: 79:     ANSELD = 0X00;
  3248   0017D8  0E00               	movlw	0
  3249   0017DA  6F5E               	movwf	94,b	;volatile
  3250   0017DC                     
  3251                           ; BSR set to: 15
  3252                           ;Usart_Butt_Lcd_Buzzer.c: 82:     ANSELBbits.ANSB0 = 0;
  3253   0017DC  915C               	bcf	92,0,b	;volatile
  3254   0017DE                     
  3255                           ; BSR set to: 15
  3256                           ;Usart_Butt_Lcd_Buzzer.c: 83:     TRISBbits.RB0 = 1;
  3257   0017DE  8093               	bsf	147,0,c	;volatile
  3258   0017E0                     
  3259                           ; BSR set to: 15
  3260                           ;Usart_Butt_Lcd_Buzzer.c: 86:     ANSELEbits.ANSE2 = 0;
  3261   0017E0  955F               	bcf	95,2,b	;volatile
  3262   0017E2                     
  3263                           ; BSR set to: 15
  3264                           ;Usart_Butt_Lcd_Buzzer.c: 87:     TRISEbits.RE2 = 0;
  3265   0017E2  9496               	bcf	150,2,c	;volatile
  3266   0017E4                     
  3267                           ; BSR set to: 15
  3268   0017E4  0012               	return		;funcret
  3269   0017E6                     __end_of_PORT_Init:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _OSCILADOR_Init *****************
  3273 ;; Defined at:
  3274 ;;		line 5 in file "lib_pic/configDevice.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text21
  3303   0017FA                     __ptext21:
  3304                           	callstack 0
  3305   0017FA                     _OSCILADOR_Init:
  3306                           	callstack 29
  3307   0017FA                     
  3308                           ;lib_pic/configDevice.c: 9:     OSCCONbits.IRCF = 0b110;
  3309   0017FA  50D3               	movf	211,w,c	;volatile
  3310   0017FC  0B8F               	andlw	-113
  3311   0017FE  0960               	iorlw	96
  3312   001800  6ED3               	movwf	211,c	;volatile
  3313                           
  3314                           ;lib_pic/configDevice.c: 10:     OSCCONbits.SCS = 0b10;
  3315   001802  50D3               	movf	211,w,c	;volatile
  3316   001804  0BFC               	andlw	-4
  3317   001806  0902               	iorlw	2
  3318   001808  6ED3               	movwf	211,c	;volatile
  3319   00180A  0012               	return		;funcret
  3320   00180C                     __end_of_OSCILADOR_Init:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _Lcd_Write_String *****************
  3324 ;; Defined at:
  3325 ;;		line 113 in file "lib_pic/lcd_2x16.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  a               2    4[COMRAM] PTR unsigned char 
  3328 ;;		 -> strCounter(20), 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  i               2    6[COMRAM] int 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3340 ;;      Params:         2       0       0       0       0       0       0       0       0
  3341 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3343 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        4 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 3
  3347 ;; This function calls:
  3348 ;;		_Lcd_Write_Char
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text22
  3355   00164E                     __ptext22:
  3356                           	callstack 0
  3357   00164E                     _Lcd_Write_String:
  3358                           	callstack 27
  3359   00164E                     
  3360                           ;lib_pic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);lib_pic/lcd_2x16.c: 11
      +                          4: {;lib_pic/lcd_2x16.c: 115:  int i;;lib_pic/lcd_2x16.c: 116:  for(i=0;a[i]!='\0';i++)
  3361   00164E  0E00               	movlw	0
  3362   001650  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  3363   001652  0E00               	movlw	0
  3364   001654  6E07               	movwf	Lcd_Write_String@i^0,c
  3365   001656  EF38  F00B         	goto	l2537
  3366   00165A                     l2533:
  3367                           
  3368                           ;lib_pic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  3369   00165A  5007               	movf	Lcd_Write_String@i^0,w,c
  3370   00165C  2405               	addwf	Lcd_Write_String@a^0,w,c
  3371   00165E  6ED9               	movwf	fsr2l,c
  3372   001660  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  3373   001662  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  3374   001664  6EDA               	movwf	fsr2h,c
  3375   001666  50DF               	movf	indf2,w,c
  3376   001668  EC66  F00B         	call	_Lcd_Write_Char
  3377   00166C  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  3378   00166E  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  3379   001670                     l2537:
  3380   001670  5007               	movf	Lcd_Write_String@i^0,w,c
  3381   001672  2405               	addwf	Lcd_Write_String@a^0,w,c
  3382   001674  6ED9               	movwf	fsr2l,c
  3383   001676  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  3384   001678  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  3385   00167A  6EDA               	movwf	fsr2h,c
  3386   00167C  50DF               	movf	indf2,w,c
  3387   00167E  A4D8               	btfss	status,2,c
  3388   001680  EF44  F00B         	goto	u1581
  3389   001684  EF46  F00B         	goto	u1580
  3390   001688                     u1581:
  3391   001688  EF2D  F00B         	goto	l2533
  3392   00168C                     u1580:
  3393   00168C  0012               	return		;funcret
  3394   00168E                     __end_of_Lcd_Write_String:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _Lcd_Write_Char *****************
  3398 ;; Defined at:
  3399 ;;		line 96 in file "lib_pic/lcd_2x16.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  a               1    wreg     unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  a               1    3[COMRAM] unsigned char 
  3404 ;;  y               1    2[COMRAM] unsigned char 
  3405 ;;  temp            1    1[COMRAM] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3415 ;;      Params:         0       0       0       0       0       0       0       0       0
  3416 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3418 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3419 ;;Total ram usage:        3 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 2
  3422 ;; This function calls:
  3423 ;;		_Lcd_Port
  3424 ;; This function is called by:
  3425 ;;		_Lcd_Write_String
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text23
  3430   0016CC                     __ptext23:
  3431                           	callstack 0
  3432   0016CC                     _Lcd_Write_Char:
  3433                           	callstack 27
  3434                           
  3435                           ;incstack = 0
  3436                           ;Lcd_Write_Char@a stored from wreg
  3437   0016CC  6E04               	movwf	Lcd_Write_Char@a^0,c
  3438   0016CE                     
  3439                           ;lib_pic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);lib_pic/lcd_2x16.c: 97: {;
      +                          lib_pic/lcd_2x16.c: 98:    char temp,y;;lib_pic/lcd_2x16.c: 99:    temp = a&0x0F;
  3440   0016CE  5004               	movf	Lcd_Write_Char@a^0,w,c
  3441   0016D0  0B0F               	andlw	15
  3442   0016D2  6E02               	movwf	Lcd_Write_Char@temp^0,c
  3443                           
  3444                           ;lib_pic/lcd_2x16.c: 100:    y = a&0xF0;
  3445   0016D4  5004               	movf	Lcd_Write_Char@a^0,w,c
  3446   0016D6  0BF0               	andlw	240
  3447   0016D8  6E03               	movwf	Lcd_Write_Char@y^0,c
  3448   0016DA                     
  3449                           ;lib_pic/lcd_2x16.c: 101:    PORTD |= (1<<2);
  3450   0016DA  8483               	bsf	131,2,c	;volatile
  3451   0016DC                     
  3452                           ;lib_pic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  3453   0016DC  3803               	swapf	Lcd_Write_Char@y^0,w,c
  3454   0016DE  0B0F               	andlw	15
  3455   0016E0  EC64  F00A         	call	_Lcd_Port
  3456   0016E4                     
  3457                           ;lib_pic/lcd_2x16.c: 103:    PORTD |= (1<<3);
  3458   0016E4  8683               	bsf	131,3,c	;volatile
  3459   0016E6                     
  3460                           ;lib_pic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  3461   0016E6  0E1A               	movlw	26
  3462   0016E8                     u1807:
  3463   0016E8  2EE8               	decfsz	wreg,f,c
  3464   0016EA  D7FE               	bra	u1807
  3465   0016EC  D000               	nop2	
  3466   0016EE                     
  3467                           ;lib_pic/lcd_2x16.c: 105:    PORTD &= ~(1<<3);
  3468   0016EE  9683               	bcf	131,3,c	;volatile
  3469                           
  3470                           ;lib_pic/lcd_2x16.c: 106:    Lcd_Port(temp);
  3471   0016F0  5002               	movf	Lcd_Write_Char@temp^0,w,c
  3472   0016F2  EC64  F00A         	call	_Lcd_Port
  3473   0016F6                     
  3474                           ;lib_pic/lcd_2x16.c: 107:    PORTD |= (1<<3);
  3475   0016F6  8683               	bsf	131,3,c	;volatile
  3476   0016F8                     
  3477                           ;lib_pic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  3478   0016F8  0E1A               	movlw	26
  3479   0016FA                     u1817:
  3480   0016FA  2EE8               	decfsz	wreg,f,c
  3481   0016FC  D7FE               	bra	u1817
  3482   0016FE  D000               	nop2	
  3483   001700                     
  3484                           ;lib_pic/lcd_2x16.c: 109:    PORTD &= ~(1<<3);
  3485   001700  9683               	bcf	131,3,c	;volatile
  3486   001702  0012               	return		;funcret
  3487   001704                     __end_of_Lcd_Write_Char:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _Lcd_Set_Cursor *****************
  3491 ;; Defined at:
  3492 ;;		line 50 in file "lib_pic/lcd_2x16.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  a               1    wreg     unsigned char 
  3495 ;;  b               1    3[COMRAM] unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  a               1    4[COMRAM] unsigned char 
  3498 ;;  temp            1    7[COMRAM] unsigned char 
  3499 ;;  y               1    6[COMRAM] unsigned char 
  3500 ;;  z               1    5[COMRAM] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3510 ;;      Params:         1       0       0       0       0       0       0       0       0
  3511 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3513 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3514 ;;Total ram usage:        5 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 3
  3517 ;; This function calls:
  3518 ;;		_Lcd_Cmd
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text24
  3525   001462                     __ptext24:
  3526                           	callstack 0
  3527   001462                     _Lcd_Set_Cursor:
  3528                           	callstack 27
  3529                           
  3530                           ;incstack = 0
  3531                           ;Lcd_Set_Cursor@a stored from wreg
  3532   001462  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  3533   001464                     
  3534                           ;lib_pic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/l
      +                          cd_2x16.c: 51: {;lib_pic/lcd_2x16.c: 52:  char temp,z,y;;lib_pic/lcd_2x16.c: 53:  if(a =
      +                          = 1)
  3535   001464  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  3536   001466  A4D8               	btfss	status,2,c
  3537   001468  EF38  F00A         	goto	u1561
  3538   00146C  EF3A  F00A         	goto	u1560
  3539   001470                     u1561:
  3540   001470  EF4B  F00A         	goto	l2493
  3541   001474                     u1560:
  3542   001474                     
  3543                           ;lib_pic/lcd_2x16.c: 54:  {;lib_pic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  3544   001474  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3545   001476  0F7F               	addlw	127
  3546   001478  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  3547                           
  3548                           ;lib_pic/lcd_2x16.c: 56:   z = temp>>4;
  3549   00147A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3550   00147C  0B0F               	andlw	15
  3551   00147E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  3552                           
  3553                           ;lib_pic/lcd_2x16.c: 57:   y = temp & 0x0F;
  3554   001480  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  3555   001482  0B0F               	andlw	15
  3556   001484  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  3557   001486                     
  3558                           ;lib_pic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  3559   001486  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  3560   001488  ECC3  F00B         	call	_Lcd_Cmd
  3561   00148C                     
  3562                           ;lib_pic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  3563   00148C  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  3564   00148E  ECC3  F00B         	call	_Lcd_Cmd
  3565                           
  3566                           ;lib_pic/lcd_2x16.c: 60:  }
  3567   001492  EF63  F00A         	goto	l214
  3568   001496                     l2493:
  3569   001496  0E02               	movlw	2
  3570   001498  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3571   00149A  A4D8               	btfss	status,2,c
  3572   00149C  EF52  F00A         	goto	u1571
  3573   0014A0  EF54  F00A         	goto	u1570
  3574   0014A4                     u1571:
  3575   0014A4  EF63  F00A         	goto	l214
  3576   0014A8                     u1570:
  3577   0014A8                     
  3578                           ;lib_pic/lcd_2x16.c: 62:  {;lib_pic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  3579   0014A8  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3580   0014AA  0FBF               	addlw	191
  3581   0014AC  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  3582                           
  3583                           ;lib_pic/lcd_2x16.c: 64:   z = temp>>4;
  3584   0014AE  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3585   0014B0  0B0F               	andlw	15
  3586   0014B2  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  3587                           
  3588                           ;lib_pic/lcd_2x16.c: 65:   y = temp & 0x0F;
  3589   0014B4  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  3590   0014B6  0B0F               	andlw	15
  3591   0014B8  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  3592   0014BA                     
  3593                           ;lib_pic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  3594   0014BA  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  3595   0014BC  ECC3  F00B         	call	_Lcd_Cmd
  3596   0014C0                     
  3597                           ;lib_pic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  3598   0014C0  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  3599   0014C2  ECC3  F00B         	call	_Lcd_Cmd
  3600   0014C6                     l214:
  3601   0014C6  0012               	return		;funcret
  3602   0014C8                     __end_of_Lcd_Set_Cursor:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _Lcd_Init *****************
  3606 ;; Defined at:
  3607 ;;		line 72 in file "lib_pic/lcd_2x16.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3623 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3624 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3625 ;;Total ram usage:        1 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 3
  3628 ;; This function calls:
  3629 ;;		_Lcd_Cmd
  3630 ;;		_Lcd_Port
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text25
  3637   001384                     __ptext25:
  3638                           	callstack 0
  3639   001384                     _Lcd_Init:
  3640                           	callstack 27
  3641   001384                     
  3642                           ;lib_pic/lcd_2x16.c: 75:  TRISD &= ~(0xF0);
  3643   001384  0E0F               	movlw	15
  3644   001386  1695               	andwf	149,f,c	;volatile
  3645                           
  3646                           ;lib_pic/lcd_2x16.c: 76:  TRISD &= ~((1<<3)|(1<<2));
  3647   001388  0EF3               	movlw	243
  3648   00138A  1695               	andwf	149,f,c	;volatile
  3649   00138C                     
  3650                           ;lib_pic/lcd_2x16.c: 78:  Lcd_Port(0x00);
  3651   00138C  0E00               	movlw	0
  3652   00138E  EC64  F00A         	call	_Lcd_Port
  3653   001392                     
  3654                           ;lib_pic/lcd_2x16.c: 79:  _delay((unsigned long)((20)*(8000000UL/4000.0)));
  3655   001392  0E34               	movlw	52
  3656   001394  6E04               	movwf	??_Lcd_Init^0,c
  3657   001396  0EF2               	movlw	242
  3658   001398                     u1827:
  3659   001398  2EE8               	decfsz	wreg,f,c
  3660   00139A  D7FE               	bra	u1827
  3661   00139C  2E04               	decfsz	??_Lcd_Init^0,f,c
  3662   00139E  D7FC               	bra	u1827
  3663   0013A0                     
  3664                           ;lib_pic/lcd_2x16.c: 80:  Lcd_Cmd(0x03);
  3665   0013A0  0E03               	movlw	3
  3666   0013A2  ECC3  F00B         	call	_Lcd_Cmd
  3667   0013A6                     
  3668                           ;lib_pic/lcd_2x16.c: 81:  _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3669   0013A6  0E0D               	movlw	13
  3670   0013A8  6E04               	movwf	??_Lcd_Init^0,c
  3671   0013AA  0EFC               	movlw	252
  3672   0013AC                     u1837:
  3673   0013AC  2EE8               	decfsz	wreg,f,c
  3674   0013AE  D7FE               	bra	u1837
  3675   0013B0  2E04               	decfsz	??_Lcd_Init^0,f,c
  3676   0013B2  D7FC               	bra	u1837
  3677   0013B4                     
  3678                           ;lib_pic/lcd_2x16.c: 82:  Lcd_Cmd(0x03);
  3679   0013B4  0E03               	movlw	3
  3680   0013B6  ECC3  F00B         	call	_Lcd_Cmd
  3681   0013BA                     
  3682                           ;lib_pic/lcd_2x16.c: 83:  _delay((unsigned long)((11)*(8000000UL/4000.0)));
  3683   0013BA  0E1D               	movlw	29
  3684   0013BC  6E04               	movwf	??_Lcd_Init^0,c
  3685   0013BE  0E91               	movlw	145
  3686   0013C0                     u1847:
  3687   0013C0  2EE8               	decfsz	wreg,f,c
  3688   0013C2  D7FE               	bra	u1847
  3689   0013C4  2E04               	decfsz	??_Lcd_Init^0,f,c
  3690   0013C6  D7FC               	bra	u1847
  3691   0013C8  F000               	nop	
  3692   0013CA                     
  3693                           ;lib_pic/lcd_2x16.c: 84:  Lcd_Cmd(0x03);
  3694   0013CA  0E03               	movlw	3
  3695   0013CC  ECC3  F00B         	call	_Lcd_Cmd
  3696   0013D0                     
  3697                           ;lib_pic/lcd_2x16.c: 86:  Lcd_Cmd(0x02);
  3698   0013D0  0E02               	movlw	2
  3699   0013D2  ECC3  F00B         	call	_Lcd_Cmd
  3700   0013D6                     
  3701                           ;lib_pic/lcd_2x16.c: 87:  Lcd_Cmd(0x02);
  3702   0013D6  0E02               	movlw	2
  3703   0013D8  ECC3  F00B         	call	_Lcd_Cmd
  3704   0013DC                     
  3705                           ;lib_pic/lcd_2x16.c: 88:  Lcd_Cmd(0x08);
  3706   0013DC  0E08               	movlw	8
  3707   0013DE  ECC3  F00B         	call	_Lcd_Cmd
  3708   0013E2                     
  3709                           ;lib_pic/lcd_2x16.c: 89:  Lcd_Cmd(0x00);
  3710   0013E2  0E00               	movlw	0
  3711   0013E4  ECC3  F00B         	call	_Lcd_Cmd
  3712   0013E8                     
  3713                           ;lib_pic/lcd_2x16.c: 90:  Lcd_Cmd(0x0C);
  3714   0013E8  0E0C               	movlw	12
  3715   0013EA  ECC3  F00B         	call	_Lcd_Cmd
  3716   0013EE                     
  3717                           ;lib_pic/lcd_2x16.c: 91:  Lcd_Cmd(0x00);
  3718   0013EE  0E00               	movlw	0
  3719   0013F0  ECC3  F00B         	call	_Lcd_Cmd
  3720   0013F4                     
  3721                           ;lib_pic/lcd_2x16.c: 92:  Lcd_Cmd(0x06);
  3722   0013F4  0E06               	movlw	6
  3723   0013F6  ECC3  F00B         	call	_Lcd_Cmd
  3724   0013FA  0012               	return		;funcret
  3725   0013FC                     __end_of_Lcd_Init:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _Lcd_Clear *****************
  3729 ;; Defined at:
  3730 ;;		line 43 in file "lib_pic/lcd_2x16.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 3
  3751 ;; This function calls:
  3752 ;;		_Lcd_Cmd
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text26
  3759   00181C                     __ptext26:
  3760                           	callstack 0
  3761   00181C                     _Lcd_Clear:
  3762                           	callstack 27
  3763   00181C                     
  3764                           ;lib_pic/lcd_2x16.c: 45:  Lcd_Cmd(0);
  3765   00181C  0E00               	movlw	0
  3766   00181E  ECC3  F00B         	call	_Lcd_Cmd
  3767                           
  3768                           ;lib_pic/lcd_2x16.c: 46:  Lcd_Cmd(1);
  3769   001822  0E01               	movlw	1
  3770   001824  ECC3  F00B         	call	_Lcd_Cmd
  3771   001828  0012               	return		;funcret
  3772   00182A                     __end_of_Lcd_Clear:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _Lcd_Cmd *****************
  3776 ;; Defined at:
  3777 ;;		line 33 in file "lib_pic/lcd_2x16.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  a               1    wreg     unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  a               1    2[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0
  3792 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3793 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3794 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3795 ;;Total ram usage:        2 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 2
  3798 ;; This function calls:
  3799 ;;		_Lcd_Port
  3800 ;; This function is called by:
  3801 ;;		_Lcd_Clear
  3802 ;;		_Lcd_Set_Cursor
  3803 ;;		_Lcd_Init
  3804 ;;		_Lcd_Shift_Right
  3805 ;;		_Lcd_Shift_Left
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text27
  3810   001786                     __ptext27:
  3811                           	callstack 0
  3812   001786                     _Lcd_Cmd:
  3813                           	callstack 27
  3814                           
  3815                           ;incstack = 0
  3816                           ;Lcd_Cmd@a stored from wreg
  3817   001786  6E03               	movwf	Lcd_Cmd@a^0,c
  3818   001788                     
  3819                           ;lib_pic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd_2x16.c: 34: {;lib_pic
      +                          /lcd_2x16.c: 35:  PORTD &= ~(1<<2);
  3820   001788  9483               	bcf	131,2,c	;volatile
  3821   00178A                     
  3822                           ;lib_pic/lcd_2x16.c: 36:  Lcd_Port(a);
  3823   00178A  5003               	movf	Lcd_Cmd@a^0,w,c
  3824   00178C  EC64  F00A         	call	_Lcd_Port
  3825   001790                     
  3826                           ;lib_pic/lcd_2x16.c: 37:  PORTD |= (1<<3);
  3827   001790  8683               	bsf	131,3,c	;volatile
  3828   001792                     
  3829                           ;lib_pic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  3830   001792  0E0B               	movlw	11
  3831   001794  6E02               	movwf	??_Lcd_Cmd^0,c
  3832   001796  0E62               	movlw	98
  3833   001798                     u1857:
  3834   001798  2EE8               	decfsz	wreg,f,c
  3835   00179A  D7FE               	bra	u1857
  3836   00179C  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3837   00179E  D7FC               	bra	u1857
  3838   0017A0  D000               	nop2	
  3839   0017A2                     
  3840                           ;lib_pic/lcd_2x16.c: 39:  PORTD &= ~(1<<3);
  3841   0017A2  9683               	bcf	131,3,c	;volatile
  3842   0017A4  0012               	return		;funcret
  3843   0017A6                     __end_of_Lcd_Cmd:
  3844                           	callstack 0
  3845                           
  3846 ;; *************** function _Lcd_Port *****************
  3847 ;; Defined at:
  3848 ;;		line 5 in file "lib_pic/lcd_2x16.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  a               1    wreg     unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  a               1    0[COMRAM] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0
  3863 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3865 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3866 ;;Total ram usage:        1 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_Lcd_Cmd
  3873 ;;		_Lcd_Init
  3874 ;;		_Lcd_Write_Char
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text28
  3879   0014C8                     __ptext28:
  3880                           	callstack 0
  3881   0014C8                     _Lcd_Port:
  3882                           	callstack 27
  3883                           
  3884                           ;incstack = 0
  3885                           ;Lcd_Port@a stored from wreg
  3886   0014C8  6E01               	movwf	Lcd_Port@a^0,c
  3887   0014CA                     
  3888                           ;lib_pic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd_2x16.c: 6: {;lib_pic/
      +                          lcd_2x16.c: 7:  if(a & 1)
  3889   0014CA  A001               	btfss	Lcd_Port@a^0,0,c
  3890   0014CC  EF6A  F00A         	goto	u1331
  3891   0014D0  EF6C  F00A         	goto	u1330
  3892   0014D4                     u1331:
  3893   0014D4  EF6F  F00A         	goto	l2279
  3894   0014D8                     u1330:
  3895   0014D8                     
  3896                           ;lib_pic/lcd_2x16.c: 9:   LATD |= (1<<4);
  3897   0014D8  888C               	bsf	140,4,c	;volatile
  3898   0014DA  EF70  F00A         	goto	l2281
  3899   0014DE                     l2279:
  3900                           
  3901                           ;lib_pic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  3902   0014DE  988C               	bcf	140,4,c	;volatile
  3903   0014E0                     l2281:
  3904                           
  3905                           ;lib_pic/lcd_2x16.c: 13:  if(a & 2)
  3906   0014E0  A201               	btfss	Lcd_Port@a^0,1,c
  3907   0014E2  EF75  F00A         	goto	u1341
  3908   0014E6  EF77  F00A         	goto	u1340
  3909   0014EA                     u1341:
  3910   0014EA  EF7A  F00A         	goto	l2285
  3911   0014EE                     u1340:
  3912   0014EE                     
  3913                           ;lib_pic/lcd_2x16.c: 15:   LATD |= (1<<5);
  3914   0014EE  8A8C               	bsf	140,5,c	;volatile
  3915   0014F0  EF7B  F00A         	goto	l2287
  3916   0014F4                     l2285:
  3917                           
  3918                           ;lib_pic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  3919   0014F4  9A8C               	bcf	140,5,c	;volatile
  3920   0014F6                     l2287:
  3921                           
  3922                           ;lib_pic/lcd_2x16.c: 19:  if(a & 4)
  3923   0014F6  A401               	btfss	Lcd_Port@a^0,2,c
  3924   0014F8  EF80  F00A         	goto	u1351
  3925   0014FC  EF82  F00A         	goto	u1350
  3926   001500                     u1351:
  3927   001500  EF85  F00A         	goto	l2291
  3928   001504                     u1350:
  3929   001504                     
  3930                           ;lib_pic/lcd_2x16.c: 21:   LATD |= (1<<6);
  3931   001504  8C8C               	bsf	140,6,c	;volatile
  3932   001506  EF86  F00A         	goto	l2293
  3933   00150A                     l2291:
  3934                           
  3935                           ;lib_pic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  3936   00150A  9C8C               	bcf	140,6,c	;volatile
  3937   00150C                     l2293:
  3938                           
  3939                           ;lib_pic/lcd_2x16.c: 25:  if(a & 8)
  3940   00150C  A601               	btfss	Lcd_Port@a^0,3,c
  3941   00150E  EF8B  F00A         	goto	u1361
  3942   001512  EF8D  F00A         	goto	u1360
  3943   001516                     u1361:
  3944   001516  EF90  F00A         	goto	l2297
  3945   00151A                     u1360:
  3946   00151A                     
  3947                           ;lib_pic/lcd_2x16.c: 27:   LATD |= (1<<7);
  3948   00151A  8E8C               	bsf	140,7,c	;volatile
  3949   00151C  EF91  F00A         	goto	l202
  3950   001520                     l2297:
  3951                           
  3952                           ;lib_pic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  3953   001520  9E8C               	bcf	140,7,c	;volatile
  3954   001522                     l202:
  3955   001522  0012               	return		;funcret
  3956   001524                     __end_of_Lcd_Port:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _INTERRUPT_INTx_Config *****************
  3960 ;; Defined at:
  3961 ;;		line 102 in file "Usart_Butt_Lcd_Buzzer.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		None
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 1
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text29
  3990   0017E6                     __ptext29:
  3991                           	callstack 0
  3992   0017E6                     _INTERRUPT_INTx_Config:
  3993                           	callstack 29
  3994   0017E6                     
  3995                           ;Usart_Butt_Lcd_Buzzer.c: 104:     INTCONbits.INT0IE = 1;
  3996   0017E6  88F2               	bsf	242,4,c	;volatile
  3997                           
  3998                           ;Usart_Butt_Lcd_Buzzer.c: 105:     INTCONbits.INT0IF = 0;
  3999   0017E8  92F2               	bcf	242,1,c	;volatile
  4000                           
  4001                           ;Usart_Butt_Lcd_Buzzer.c: 106:     INTCON2bits.INTEDG0 = 0;
  4002   0017EA  9CF1               	bcf	241,6,c	;volatile
  4003                           
  4004                           ;Usart_Butt_Lcd_Buzzer.c: 109:     INTCON3bits.INT1IE = 1;
  4005   0017EC  86F0               	bsf	240,3,c	;volatile
  4006                           
  4007                           ;Usart_Butt_Lcd_Buzzer.c: 110:     INTCON3bits.INT1F = 0;
  4008   0017EE  90F0               	bcf	240,0,c	;volatile
  4009                           
  4010                           ;Usart_Butt_Lcd_Buzzer.c: 111:     INTCON2bits.INTEDG1 = 0;
  4011   0017F0  9AF1               	bcf	241,5,c	;volatile
  4012                           
  4013                           ;Usart_Butt_Lcd_Buzzer.c: 114:     INTCON3bits.INT2IE = 1;
  4014   0017F2  88F0               	bsf	240,4,c	;volatile
  4015                           
  4016                           ;Usart_Butt_Lcd_Buzzer.c: 115:     INTCON3bits.INT2IF = 0;
  4017   0017F4  92F0               	bcf	240,1,c	;volatile
  4018                           
  4019                           ;Usart_Butt_Lcd_Buzzer.c: 116:     INTCON2bits.INTEDG2 = 0;
  4020   0017F6  98F1               	bcf	241,4,c	;volatile
  4021   0017F8  0012               	return		;funcret
  4022   0017FA                     __end_of_INTERRUPT_INTx_Config:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function _INTERRUPT_Global_Config *****************
  4026 ;; Defined at:
  4027 ;;		line 93 in file "Usart_Butt_Lcd_Buzzer.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		None
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text30
  4056   00182A                     __ptext30:
  4057                           	callstack 0
  4058   00182A                     _INTERRUPT_Global_Config:
  4059                           	callstack 29
  4060   00182A                     
  4061                           ;Usart_Butt_Lcd_Buzzer.c: 95:     RCONbits.IPEN = 0;
  4062   00182A  9ED0               	bcf	208,7,c	;volatile
  4063                           
  4064                           ;Usart_Butt_Lcd_Buzzer.c: 98:     INTCONbits.GIE = 1;
  4065   00182C  8EF2               	bsf	242,7,c	;volatile
  4066   00182E  0012               	return		;funcret
  4067   001830                     __end_of_INTERRUPT_Global_Config:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _RutinaServicioInterrupcion_ISR *****************
  4071 ;; Defined at:
  4072 ;;		line 45 in file "Usart_Butt_Lcd_Buzzer.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		Interrupt level 2
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	intcode
  4100   000008                     __pintcode:
  4101                           	callstack 0
  4102   000008                     _RutinaServicioInterrupcion_ISR:
  4103                           	callstack 22
  4104                           
  4105                           ;incstack = 0
  4106   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4107   00000A                     
  4108                           ;Usart_Butt_Lcd_Buzzer.c: 49:     if ( INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1 
      +                          ) {
  4109   00000A  A8F2               	btfss	242,4,c	;volatile
  4110   00000C  EF0A  F000         	goto	i2u173_41
  4111   000010  EF0C  F000         	goto	i2u173_40
  4112   000014                     i2u173_41:
  4113   000014  EF17  F000         	goto	i2l2733
  4114   000018                     i2u173_40:
  4115   000018  A2F2               	btfss	242,1,c	;volatile
  4116   00001A  EF11  F000         	goto	i2u174_41
  4117   00001E  EF13  F000         	goto	i2u174_40
  4118   000022                     i2u174_41:
  4119   000022  EF17  F000         	goto	i2l2733
  4120   000026                     i2u174_40:
  4121   000026                     
  4122                           ;Usart_Butt_Lcd_Buzzer.c: 51:         counter = 0;
  4123   000026  0E00               	movlw	0
  4124   000028  0100               	movlb	0	; () banked
  4125   00002A  6F64               	movwf	_counter& (0+255),b	;volatile
  4126   00002C                     
  4127                           ; BSR set to: 0
  4128                           ;Usart_Butt_Lcd_Buzzer.c: 53:         INTCONbits.INT0IF = 0;
  4129   00002C  92F2               	bcf	242,1,c	;volatile
  4130   00002E                     i2l2733:
  4131                           
  4132                           ;Usart_Butt_Lcd_Buzzer.c: 57:     if ( INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 
      +                          1 ) {
  4133   00002E  A6F0               	btfss	240,3,c	;volatile
  4134   000030  EF1C  F000         	goto	i2u175_41
  4135   000034  EF1E  F000         	goto	i2u175_40
  4136   000038                     i2u175_41:
  4137   000038  EF28  F000         	goto	i2l2741
  4138   00003C                     i2u175_40:
  4139   00003C  A0F0               	btfss	240,0,c	;volatile
  4140   00003E  EF23  F000         	goto	i2u176_41
  4141   000042  EF25  F000         	goto	i2u176_40
  4142   000046                     i2u176_41:
  4143   000046  EF28  F000         	goto	i2l2741
  4144   00004A                     i2u176_40:
  4145   00004A                     
  4146                           ;Usart_Butt_Lcd_Buzzer.c: 59:         counter--;
  4147   00004A  0100               	movlb	0	; () banked
  4148   00004C  0764               	decf	_counter& (0+255),f,b	;volatile
  4149   00004E                     
  4150                           ; BSR set to: 0
  4151                           ;Usart_Butt_Lcd_Buzzer.c: 61:         INTCON3bits.INT1IF = 0;
  4152   00004E  90F0               	bcf	240,0,c	;volatile
  4153   000050                     i2l2741:
  4154                           
  4155                           ;Usart_Butt_Lcd_Buzzer.c: 65:     if ( INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 
      +                          1 ) {
  4156   000050  A8F0               	btfss	240,4,c	;volatile
  4157   000052  EF2D  F000         	goto	i2u177_41
  4158   000056  EF2F  F000         	goto	i2u177_40
  4159   00005A                     i2u177_41:
  4160   00005A  EF39  F000         	goto	i2l434
  4161   00005E                     i2u177_40:
  4162   00005E  A2F0               	btfss	240,1,c	;volatile
  4163   000060  EF34  F000         	goto	i2u178_41
  4164   000064  EF36  F000         	goto	i2u178_40
  4165   000068                     i2u178_41:
  4166   000068  EF39  F000         	goto	i2l434
  4167   00006C                     i2u178_40:
  4168   00006C                     
  4169                           ;Usart_Butt_Lcd_Buzzer.c: 67:         counter++;
  4170   00006C  0100               	movlb	0	; () banked
  4171   00006E  2B64               	incf	_counter& (0+255),f,b	;volatile
  4172   000070                     
  4173                           ; BSR set to: 0
  4174                           ;Usart_Butt_Lcd_Buzzer.c: 69:         INTCON3bits.INT2IF = 0;
  4175   000070  92F0               	bcf	240,1,c	;volatile
  4176   000072                     i2l434:
  4177   000072  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4178   000074  0011               	retfie		f
  4179   000076                     __end_of_RutinaServicioInterrupcion_ISR:
  4180                           	callstack 0
  4181                           
  4182                           	psect	rparam
  4183   000000                     
  4184                           	psect	temp
  4185   00005F                     btemp:
  4186                           	callstack 0
  4187   00005F                     	ds	1
  4188   000000                     int$flags	set	btemp
  4189   000000                     wtemp8	set	btemp+1
  4190   000000                     ttemp5	set	btemp+1
  4191   000000                     ttemp6	set	btemp+4
  4192   000000                     ttemp7	set	btemp+8
  4193                           
  4194                           	psect	idloc
  4195                           
  4196                           ;Config register IDLOC0 @ 0x200000
  4197                           ;	unspecified, using default values
  4198   200000                     	org	2097152
  4199   200000  FF                 	db	255
  4200                           
  4201                           ;Config register IDLOC1 @ 0x200001
  4202                           ;	unspecified, using default values
  4203   200001                     	org	2097153
  4204   200001  FF                 	db	255
  4205                           
  4206                           ;Config register IDLOC2 @ 0x200002
  4207                           ;	unspecified, using default values
  4208   200002                     	org	2097154
  4209   200002  FF                 	db	255
  4210                           
  4211                           ;Config register IDLOC3 @ 0x200003
  4212                           ;	unspecified, using default values
  4213   200003                     	org	2097155
  4214   200003  FF                 	db	255
  4215                           
  4216                           ;Config register IDLOC4 @ 0x200004
  4217                           ;	unspecified, using default values
  4218   200004                     	org	2097156
  4219   200004  FF                 	db	255
  4220                           
  4221                           ;Config register IDLOC5 @ 0x200005
  4222                           ;	unspecified, using default values
  4223   200005                     	org	2097157
  4224   200005  FF                 	db	255
  4225                           
  4226                           ;Config register IDLOC6 @ 0x200006
  4227                           ;	unspecified, using default values
  4228   200006                     	org	2097158
  4229   200006  FF                 	db	255
  4230                           
  4231                           ;Config register IDLOC7 @ 0x200007
  4232                           ;	unspecified, using default values
  4233   200007                     	org	2097159
  4234   200007  FF                 	db	255
  4235                           
  4236                           	psect	config
  4237                           
  4238                           ;Config register CONFIG1L @ 0x300000
  4239                           ;	PLL Selection
  4240                           ;	PLLSEL = PLL4X, 4x clock multiplier
  4241                           ;	PLL Enable Configuration bit
  4242                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  4243                           ;	CPU System Clock Postscaler
  4244                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4245                           ;	Low Speed USB mode with 48 MHz system clock
  4246                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  4247   300000                     	org	3145728
  4248   300000  00                 	db	0
  4249                           
  4250                           ;Config register CONFIG1H @ 0x300001
  4251                           ;	Oscillator Selection
  4252                           ;	FOSC = INTOSCIO, Internal oscillator
  4253                           ;	Primary Oscillator Shutdown
  4254                           ;	PCLKEN = ON, Primary oscillator enabled
  4255                           ;	Fail-Safe Clock Monitor
  4256                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4257                           ;	Internal/External Oscillator Switchover
  4258                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4259   300001                     	org	3145729
  4260   300001  28                 	db	40
  4261                           
  4262                           ;Config register CONFIG2L @ 0x300002
  4263                           ;	Power-up Timer Enable
  4264                           ;	nPWRTEN = ON, Power up timer enabled
  4265                           ;	Brown-out Reset Enable
  4266                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4267                           ;	Brown-out Reset Voltage
  4268                           ;	BORV = 190, BOR set to 1.9V nominal
  4269                           ;	Low-Power Brown-out Reset
  4270                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4271   300002                     	org	3145730
  4272   300002  5E                 	db	94
  4273                           
  4274                           ;Config register CONFIG2H @ 0x300003
  4275                           ;	Watchdog Timer Enable bits
  4276                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4277                           ;	Watchdog Timer Postscaler
  4278                           ;	WDTPS = 32768, 1:32768
  4279   300003                     	org	3145731
  4280   300003  3C                 	db	60
  4281                           
  4282                           ; Padding undefined space
  4283   300004                     	org	3145732
  4284   300004  FF                 	db	255
  4285                           
  4286                           ;Config register CONFIG3H @ 0x300005
  4287                           ;	CCP2 MUX bit
  4288                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4289                           ;	PORTB A/D Enable bit
  4290                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4291                           ;	Timer3 Clock Input MUX bit
  4292                           ;	T3CMX = RC0, T3CKI function is on RC0
  4293                           ;	SDO Output MUX bit
  4294                           ;	SDOMX = RB3, SDO function is on RB3
  4295                           ;	Master Clear Reset Pin Enable
  4296                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4297   300005                     	org	3145733
  4298   300005  D1                 	db	209
  4299                           
  4300                           ;Config register CONFIG4L @ 0x300006
  4301                           ;	Stack Full/Underflow Reset
  4302                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4303                           ;	Single-Supply ICSP Enable bit
  4304                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4305                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4306                           ;	ICPRT = OFF, ICPORT disabled
  4307                           ;	Extended Instruction Set Enable bit
  4308                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4309                           ;	Background Debugger Enable bit
  4310                           ;	DEBUG = 0x1, unprogrammed default
  4311   300006                     	org	3145734
  4312   300006  85                 	db	133
  4313                           
  4314                           ; Padding undefined space
  4315   300007                     	org	3145735
  4316   300007  FF                 	db	255
  4317                           
  4318                           ;Config register CONFIG5L @ 0x300008
  4319                           ;	Block 0 Code Protect
  4320                           ;	CP0 = OFF, Block 0 is not code-protected
  4321                           ;	Block 1 Code Protect
  4322                           ;	CP1 = OFF, Block 1 is not code-protected
  4323                           ;	Block 2 Code Protect
  4324                           ;	CP2 = OFF, Block 2 is not code-protected
  4325                           ;	Block 3 Code Protect
  4326                           ;	CP3 = OFF, Block 3 is not code-protected
  4327   300008                     	org	3145736
  4328   300008  0F                 	db	15
  4329                           
  4330                           ;Config register CONFIG5H @ 0x300009
  4331                           ;	Boot Block Code Protect
  4332                           ;	CPB = OFF, Boot block is not code-protected
  4333                           ;	Data EEPROM Code Protect
  4334                           ;	CPD = OFF, Data EEPROM is not code-protected
  4335   300009                     	org	3145737
  4336   300009  C0                 	db	192
  4337                           
  4338                           ;Config register CONFIG6L @ 0x30000A
  4339                           ;	Block 0 Write Protect
  4340                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4341                           ;	Block 1 Write Protect
  4342                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4343                           ;	Block 2 Write Protect
  4344                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4345                           ;	Block 3 Write Protect
  4346                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4347   30000A                     	org	3145738
  4348   30000A  0F                 	db	15
  4349                           
  4350                           ;Config register CONFIG6H @ 0x30000B
  4351                           ;	Configuration Registers Write Protect
  4352                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4353                           ;	Boot Block Write Protect
  4354                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4355                           ;	Data EEPROM Write Protect
  4356                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4357   30000B                     	org	3145739
  4358   30000B  E0                 	db	224
  4359                           
  4360                           ;Config register CONFIG7L @ 0x30000C
  4361                           ;	Block 0 Table Read Protect
  4362                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4363                           ;	Block 1 Table Read Protect
  4364                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4365                           ;	Block 2 Table Read Protect
  4366                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4367                           ;	Block 3 Table Read Protect
  4368                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4369   30000C                     	org	3145740
  4370   30000C  0F                 	db	15
  4371                           
  4372                           ;Config register CONFIG7H @ 0x30000D
  4373                           ;	Boot Block Table Read Protect
  4374                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4375   30000D                     	org	3145741
  4376   30000D  40                 	db	64
  4377                           tosu	equ	0xFFF
  4378                           tosh	equ	0xFFE
  4379                           tosl	equ	0xFFD
  4380                           stkptr	equ	0xFFC
  4381                           pclatu	equ	0xFFB
  4382                           pclath	equ	0xFFA
  4383                           pcl	equ	0xFF9
  4384                           tblptru	equ	0xFF8
  4385                           tblptrh	equ	0xFF7
  4386                           tblptrl	equ	0xFF6
  4387                           tablat	equ	0xFF5
  4388                           prodh	equ	0xFF4
  4389                           prodl	equ	0xFF3
  4390                           indf0	equ	0xFEF
  4391                           postinc0	equ	0xFEE
  4392                           postdec0	equ	0xFED
  4393                           preinc0	equ	0xFEC
  4394                           plusw0	equ	0xFEB
  4395                           fsr0h	equ	0xFEA
  4396                           fsr0l	equ	0xFE9
  4397                           wreg	equ	0xFE8
  4398                           indf1	equ	0xFE7
  4399                           postinc1	equ	0xFE6
  4400                           postdec1	equ	0xFE5
  4401                           preinc1	equ	0xFE4
  4402                           plusw1	equ	0xFE3
  4403                           fsr1h	equ	0xFE2
  4404                           fsr1l	equ	0xFE1
  4405                           bsr	equ	0xFE0
  4406                           indf2	equ	0xFDF
  4407                           postinc2	equ	0xFDE
  4408                           postdec2	equ	0xFDD
  4409                           preinc2	equ	0xFDC
  4410                           plusw2	equ	0xFDB
  4411                           fsr2h	equ	0xFDA
  4412                           fsr2l	equ	0xFD9
  4413                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        16
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160     19      92
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[16]), STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[16]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[16]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[16]), STR_1(CODE[18]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2089$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[16]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strCounter(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2041$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2041$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    USART_WriteString@pString	PTR unsigned char  size(2) Largest target is 20
		 -> strCounter(BANK0[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> strCounter(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _atoi->___wmul
    _USART_WriteString->_USART_WriteByte
    _USART_SerialBegin->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RutinaServicioInterrupcion_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9093
                                             90 COMRAM     2     2      0
            _INTERRUPT_Global_Config
              _INTERRUPT_INTx_Config
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                     _OSCILADOR_Init
                          _PORT_Init
                  _USART_SerialBegin
                  _USART_WriteString
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    6936
                                              0 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6431
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    6070
                                             60 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3289
                                             28 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2239
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1105
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     704
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _USART_WriteByte
 ---------------------------------------------------------------------------------
 (2) _USART_WriteByte                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_SerialBegin                                    6     2      4     458
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     344
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     456
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_INTx_Config                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Global_Config                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _RutinaServicioInterrupcion_ISR                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUPT_Global_Config
   _INTERRUPT_INTx_Config
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OSCILADOR_Init
   _PORT_Init
   _USART_SerialBegin
     ___lldiv
   _USART_WriteString
     _USART_WriteByte
   ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc

 _RutinaServicioInterrupcion_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      5C       5       57.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITBIGSFRllhllh     21      0       0      33        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlhhhl       C      0       0      26        0.0%
BITBIGSFRlll         9      0       0      34        0.0%
BITBIGSFRlhhhhl      7      0       0      25        0.0%
BITBIGSFRlhhhhh      7      0       0      24        0.0%
BITBIGSFRlhhl        6      0       0      27        0.0%
BITBIGSFRhhlhl       6      0       0      23        0.0%
BITBIGSFRllhhh       5      0       0      28        0.0%
BITBIGSFRllhlhh      4      0       0      30        0.0%
BITBIGSFRhhlhh       2      0       0      22        0.0%
BITBIGSFRllhlhh      1      0       0      31        0.0%
BITBIGSFRllhlhl      1      0       0      32        0.0%
BITBIGSFRllhhl       1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      35        0.0%
DATA                 0      0      BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 20 18:05:58 2023

                                    l39 180A                     ___wmul@multiplicand 0003  
                                   l202 1522                                     l220 1702  
                                   l205 17A4                                     l214 14C6  
                                   l208 1828                                     l320 1460  
                                   l217 13FA                                     l226 168C  
                                   l341 17BE                                     l350 1732  
                                   l422 0FCC                                     l440 182E  
                                   l344 17D0                                     l443 17F8  
                                   l363 17A8                                     l437 17E4  
                                   l446 1784                                     l366 17BA  
                                   l480 1382                                     l473 1372  
                                   l901 10BA                                     l690 1234  
                                   l891 0F08                                     l884 0EE8  
                                   l894 109A                                     _pad 1236  
       __end_of_INTERRUPT_Global_Config 1830                            ___awmod@sign 0006  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                                  l1200 15C2                                    l1124 1574  
                                  l1222 0E10                                    l2103 17A8  
                                  l2111 10E0                                    l1152 12BC  
                                  l2201 15FE                                    l1225 0E18  
                                  l2105 17B6                                    l2113 10EA  
                                  l2121 160A                                    l1161 0B18  
                                  l1154 12DE                                    l2131 177C  
                                  l2203 1602                                    l2115 1108  
                                  l1251 1184                                    l2107 10BC  
                                  l2123 1616                                    l2211 0AEA  
                                  l1228 175E                                    l1236 1608  
                                  l2141 0E4C                                    l2117 113E  
                                  l2109 10CE                                    l2125 1628  
                                  l1149 127A                                    l2221 0B56  
                                  l2213 0B04                                    l2301 0848  
                                  l2151 0ECE                                    l2143 0E60  
                                  l2135 0E1A                                    l2127 162C  
                                  l2231 0C4E                                    l2223 0BCC  
                                  l2215 0B40                                    l1159 0B10  
                                  l2207 0AD8                                    l2311 0876  
                                  l2303 0856                                    l2401 12E0  
                                  l2129 1760                                    l2153 0ED0  
                                  l2145 0E6E                                    l2137 0E26  
                                  l2161 1012                                    l1169 0CCE  
                                  l2233 0C6C                                    l2225 0BD2  
                                  l2217 0B48                                    l2209 0AE8  
                                  l1193 0AD6                                    l2321 08DA  
                                  l2313 0888                                    l2305 0864  
                                  l2411 1328                                    l2403 12F0  
                                  l2251 0D04                                    l2243 0CD0  
                                  l2155 0EE2                                    l2147 0E80  
                                  l2139 0E44                                    l2171 1094  
                                  l2163 1026                                    l1259 164C  
                                  l2235 0C86                                    l2227 0BD8  
                                  l2219 0B50                                    l2331 0972  
                                  l2323 08FE                                    l2307 0868  
                                  l2501 1384                                    l2421 136C  
                                  l2413 1332                                    l2405 1306  
                                  l2253 0D38                                    l2245 0CE4  
                                  l2149 0EAE                                    l2165 1034  
                                  l2157 0FEC                                    l2181 1272  
                                  l2173 1236                                    l2237 0CA0  
                                  l2229 0C3C                                    l2341 09E4  
                                  l2325 0934                                    l2317 0894  
                                  l2309 0874                                    l2511 13B4  
                                  l2503 138C                                    l2415 1350  
                                  l2407 130E                                    l2191 1734  
                                  l2255 0D40                                    l2167 1062  
                                  l2159 100A                                    l2183 1286  
                                  l2175 1244                                    l2239 0CAE  
                                  l2343 0A40                                    l2351 0A9C  
                                  l2335 0980                                    l2327 0944  
                                  l2319 08C8                                    l2423 1576  
                                  l2281 14E0                                    l2521 13DC  
                                  l2513 13BA                                    l2505 1392  
                                  l2433 17FA                                    l2417 1360  
                                  l2409 131A                                    l2601 11B2  
                                  l2265 0DB2                                    l2257 0D48  
                                  l2249 0CE8                                    l2169 1082  
                                  l2185 129A                                    l2177 1258  
                                  l2337 09B8                                    l2329 0952  
                                  l2425 1582                                    l2291 150A  
                                  l2283 14EE                                    l2275 14CA  
                                  l2371 178A                                    l2523 13E2  
                                  l2515 13CA                                    l2507 13A0  
                                  l2531 164E                                    l2419 1362  
                                  l2611 11EA                                    l2603 11BA  
                                  l2195 15C4                                    l2267 0DE2  
                                  l2259 0D7C                                    l2187 129E  
                                  l2179 1266                                    l2339 09C8  
                                  l2355 0AAE                                    l2427 159E  
                                  l2293 150C                                    l2285 14F4  
                                  l2277 14D8                                    l2373 1790  
                                  l2525 13E8                                    l2517 13D0  
                                  l2509 13A6                                    l2381 16DA  
                                  l2533 165A                                    l2541 13FC  
                                  l2621 1224                                    l2613 1200  
                                  l2605 11CC                                    l2197 15C8  
                                  l2269 0DF4                                    l2189 12CA  
                                  l2349 0A70                                    l2429 15BA  
                                  l2701 0F2A                                    l2295 151A  
                                  l2287 14F6                                    l2279 14DE  
                                  l2375 1792                                    l2527 13EE  
                                  l2519 13D6                                    l2391 16F6  
                                  l2383 16DC                                    l2535 166C  
                                  l2551 1458                                    l2543 13FE  
                                  l2623 122C                                    l2615 1208  
                                  l2607 11D4                                    l2199 15DC  
                                  l2711 0F5C                                    l2703 0F2E  
                                  l2297 1520                                    l2289 1504  
                                  l2377 17A2                                    l2369 1788  
                                  l2529 13F4                                    l2393 16F8  
                                  l2385 16E4                                    l2537 1670  
                                  l2553 145C                                    l2545 1402  
                                  l2561 171A                                    l2617 120E  
                                  l2609 11DC                                    l2721 0FC6  
                                  l2713 0F68                                    l2705 0F32  
                                  l2483 181C                                    l2491 148C  
                                  l2395 1700                                    l2387 16E6  
                                  l2379 16CE                                    l2571 17E0  
                                  l2563 17D2                                    l2547 1404  
                                  l2539 13FC                                    l2555 1704  
                                  l2619 1214                                    l2811 0A8E  
                                  l2299 0824                                    l2723 0FCE  
                                  l2715 0F84                                    l2707 0F36  
                                  l2493 1496                                    l2485 1464  
                                  l2389 16EE                                    l2573 17E2  
                                  l2565 17D8                                    l2549 1412  
                                  l2397 17BE                                    l2557 1708  
                                  l2813 0D66                                    l2581 1536  
                                  l2717 0F90                                    l2709 0F40  
                                  l2575 17E6                                    l2495 14A8  
                                  l2487 1474                                    l2567 17DC  
                                  l2399 17CC                                    l2559 1716  
                                  l2591 1186                                    l2583 153E  
                                  l2719 0FB4                                    l2577 182A  
                                  l2497 14BA                                    l2489 1486  
                                  l2569 17DE                                    l2593 118A  
                                  l2809 08BA                                    l2585 1546  
                                  l2499 14C0                                    l2595 1198  
                                  l2587 1562                                    l2579 1524  
                                  l2597 11A0                                    ?_pad 0012  
                                  l2599 11A4                                    l2695 0F0A  
                                  l2697 0F12                                    l2699 0F26  
                                  STR_1 0801                                    STR_2 0813  
                                  u1010 17B6                                    u1011 17B2  
                                  u1100 0EAE                                    u1020 10CE  
                                  u1101 0EAA                                    u1021 10CA  
                                  u1110 100A                                    u1030 10E0  
                                  u1111 1006                                    u1031 10DC  
                                  u1200 15DC                                    u1120 1034  
                                  u1040 1108                                    u1201 15D8  
                                  u1121 1030                                    u1041 1104  
                                  u1210 15FE                                    u1130 1062  
                                  u1050 113E                                    u1211 15FA  
                                  u1131 105E                                    u1051 113A  
                                  u1300 0D34                                    u1060 164C  
                                  u1140 1244                                    u1220 0AE8  
                                  u1301 0D30                                    u1061 1648  
                                  u1141 1240                                    u1221 0AE4  
                                  u1310 0DE2                                    u1150 1266  
                                  u1230 0B04                                    u1311 0DDE  
                                  u1071 0E20                                    u1151 1262  
                                  u1231 0B00                                    u1320 0DF4  
                                  u1080 0E44                                    u1160 12BC  
                                  u1240 0C4E                                    u1400 0944  
                                  u1321 0DF0                                    u1081 0E40  
                                  u1161 12B8                                    u1241 0C4A  
                                  u1401 0940                                    u1330 14D8  
                                  u1090 0E6E                                    u1170 12CA  
                                  u1250 0C6C                                    u1410 09B8  
                                  u1331 14D4                                    u1091 0E6A  
                                  u1171 12C6                                    u1251 0C68  
                                  u1411 09B4                                    u1340 14EE  
                                  u1180 1758                                    u1260 0C86  
                                  u1420 09E4                                    u1341 14EA  
                                  u1181 1752                                    u1261 0C82  
                                  u1421 09E0                                    u1350 1504  
                                  u1430 17CC                                    u1190 175A  
                                  u1270 0CA0                                    _LATB 000F8A  
                                  u1351 1500                                    u1431 17C8  
                                  u1271 0C9C                                    u1360 151A  
                                  u1440 1306                                    u1600 1732  
                                  u1280 0CAE                                    _LATD 000F8C  
                                  u1361 1516                                    u1441 1302  
                                  u1601 172E                                    u1281 0CAA  
                                  u1450 1328                                    u1610 1198  
                                  u1290 0D04                                    u1370 0848  
                                  u1451 1324                                    u1611 1194  
                                  u1291 0D00                                    u1371 0844  
                                  u1460 1350                                    u1620 11B2  
                                  u1380 08DA                                    u1461 134C  
                                  u1621 11AE                                    u1381 08D6  
                                  u1630 11CC                                    u1390 08FE  
                                  u1470 15BA                                    u1710 0FB4  
                                  u1631 11C8                                    u1391 08FA  
                                  u1471 15B6                                    u1711 0FB0  
                                  u1560 1474                                    u1640 11EA  
                                  u1720 0FC6                                    u1561 1470  
                                  u1641 11E6                                    u1721 0FC2  
                                  u1570 14A8                                    u1650 1200  
                                  u1571 14A4                                    u1651 11FC  
                                  u1580 168C                                    u1660 1224  
                                  u1581 1688                                    u1661 1220  
                                  u1590 1446                                    u1807 16E8  
                                  u1817 16FA                                    u1827 1398  
                                  u1595 143C                                    u1837 13AC  
                                  u1847 13C0                                    u1857 1798  
                                  u1797 0FD8                   _INTERRUPT_INTx_Config 17E6  
                                  _WPUB 000F85                       ?_Lcd_Write_String 0005  
                                  _dbuf 0065                                    _atoi 0CD0  
                                  _main 0F0A                                    _prec 0062  
                                  pad@i 0019                                    pad@p 0016  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001B                                    fsr2l 000FD9  
                                  btemp 005F                                    _utoa 0AD8  
              USART_WriteString@pString 0002                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0076  
                    ??_Lcd_Write_String 0007                         __end_of_Lcd_Cmd 17A6  
                          ___param_bank 000000                 __end_of_USART_WriteByte 17D2  
      ??_RutinaServicioInterrupcion_ISR 0001         ?_RutinaServicioInterrupcion_ISR 0001  
                                 ??_pad 0018                                   ?_atoi 0007  
                                 ?_main 0001                         __end_of___awmod 1236  
                       __end_of___lldiv 1384                                   ?_utoa 001D  
                       __end_of___lodiv 0F0A                         __end_of___lomod 10BC  
                                 i2l434 0072                            vfpfcnvrt@fmt 003F  
                                 _PORTB 000F81                                   _PORTD 000F83  
                                 _TRISB 000F93                                   _TRISD 000F95  
                                 _flags 005D                                   _fputc 10BC  
                                 _fputs 160A                         __end_of_isdigit 1760  
                                 atoi@n 000E                                   pad@fp 0012  
                                 atoi@s 0007                                   _width 0060  
                                 _putch 17A6                         __end_of_isspace 160A  
                                 tablat 000FF5                                   ttemp5 0060  
                                 ttemp6 0063                                   ttemp7 0067  
                                 utoa@d 001F                                   utoa@i 003B  
                                 utoa@n 0033                                   utoa@p 002F  
                                 utoa@w 0031                                   status 000FD8  
                                 wtemp8 0060                         __end_of_sprintf 1576  
                      ___lodiv@dividend 0001                        __end_of_Lcd_Init 13FC  
                      __end_of_Lcd_Port 1524                         __initialization 168E  
                          __end_of_atoi 0E1A                            __end_of_main 0FEC  
                          __end_of_utoa 0CD0                                  ??_atoi 0009  
                                ??_main 005B                                  ??_utoa 0027  
                         __activetblptr 000002                        ___lodiv@quotient 0011  
                      ??_OSCILADOR_Init 0001                                  ?_fputc 0002  
                                ?_fputs 000B                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                  ?_INTERRUPT_INTx_Config 0001  
                                ?_putch 0001                                  _ANSELD 000F5E  
                                i2l2731 002C                                  i2l2741 0050  
                                i2l2733 002E                                  i2l2725 000A  
                                i2l2743 005E                                  i2l2735 003C  
                                i2l2727 0018                                  i2l2745 006C  
                                i2l2737 004A                                  i2l2729 0026  
                                i2l2747 0070                                  i2l2739 004E  
                                _RCREG1 000FAE                                  _RCSTA1 000FAB  
                             ??_Lcd_Cmd 0002                           vfpfcnvrt@done 004F  
                                _SPBRG1 000FAF                                  _TXREG1 000FAD  
                                _TXSTA1 000FAC                            vfprintf@cfmt 0059  
                                ___wmul 1760                               ??___awmod 0005  
                                _datoRx 005E                               ??___lldiv 0009  
                             ??___lodiv 0011                        ?_USART_WriteByte 0001  
                             ??___lomod 0011                       __end_of_PORT_Init 17E6  
                                clear_0 16B4                         ___awmod@divisor 0003  
                                isa$std 000001                         ___awmod@counter 0005  
                                pad@buf 0014                                  fputc@c 0002  
                                fputs@c 000F                                  fputs@i 0010  
                                fputs@s 000B                               ??_isdigit 0003  
                          __mediumconst 0000                               ??_isspace 0003  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                                  putch@c 0001  
                      __end_of_vfprintf 15C4                                  utoa@fp 001D  
                             ??_sprintf 005B                         Lcd_Set_Cursor@a 0005  
                       Lcd_Set_Cursor@b 0004                         Lcd_Set_Cursor@y 0007  
                       Lcd_Set_Cursor@z 0006                              __accesstop 0060  
               __end_of__initialization 16BE                       __end_of_Lcd_Clear 182A  
                         ___rparam_used 000001                          __pcstackCOMRAM 0001  
                          __pidataBANK0 180C                           __end_of_fputc 1186  
                         __end_of_fputs 164E                           __end_of_putch 17BC  
                        _Lcd_Set_Cursor 1462                               ?_Lcd_Init 0001  
                             ?_Lcd_Port 0001                                 ??_fputc 0006  
                               ??_fputs 000F                      USART_SerialBegin@n 0012  
                               ??_putch 0001                              __pbssBANK0 0060  
                               ?___wmul 0001                  __end_of_Lcd_Set_Cursor 14C8  
                               _SPBRGH1 000FB0                              ??_Lcd_Init 0004  
__end_of_RutinaServicioInterrupcion_ISR 0076          _RutinaServicioInterrupcion_ISR 0008  
                               _SSP1ADD 000FC8                                 _SSP1BUF 000FC9  
                            ??_Lcd_Port 0001                        ___lomod@dividend 0001  
                        _Lcd_Write_Char 16CC                                 _Lcd_Cmd 1786  
               _INTERRUPT_Global_Config 182A                                 __Hparam 0000  
                               __Lparam 0000                                 ___awmod 1186  
                               ___lldiv 12E0                                 ___lodiv 0E1A  
                               ___lomod 0FEC                               ?_vfprintf 0053  
                          __psmallconst 0800                                 __pcinit 168E  
                               __ramtop 0800                         ?_Lcd_Set_Cursor 0004  
                               __ptext0 0F0A                                 __ptext1 1524  
                               __ptext2 1576                                 __ptext3 0824  
                               __ptext4 0AD8                                 __ptext5 1236  
                               __ptext6 160A                                 __ptext7 10BC  
                               __ptext8 17A6                                 __ptext9 0FEC  
                               _counter 0064                                 _isdigit 1734  
                      ___awmod@dividend 0001                 ??_INTERRUPT_INTx_Config 0001  
                               _isspace 15C4                                 atoi@neg 000C  
                               _sprintf 1524                  __end_of_Lcd_Write_Char 1704  
                  end_of_initialization 16BE                                 fputc@fp 0004  
                         __Lmediumconst 0000                                 fputs@fp 000D  
                       ___lldiv@divisor 0005                         ___lldiv@counter 000D  
                     __end_of_vfpfcnvrt 0AD8                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                      vfpfcnvrt@convarg 0047                               Lcd_Port@a 0001  
                            ??_vfprintf 0059                               _PORT_Init 17D2  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                             _TRISEbits 000F96                              _strCounter 0085  
                       ?_Lcd_Write_Char 0001                       Lcd_Write_String@a 0005  
                     Lcd_Write_String@i 0007               ??_INTERRUPT_Global_Config 0001  
                             _Lcd_Clear 181C                             vfpfcnvrt@ap 0041  
                           vfpfcnvrt@cp 0051                             vfpfcnvrt@fp 003D  
                        __end_of___wmul 1786                        _Lcd_Write_String 164E  
                            ?_PORT_Init 0001                     start_initialization 168E  
                       ___lodiv@divisor 0009                         ___lodiv@counter 0019  
                           __end_of_pad 12E0                               _Keypad4x4 00AC  
                           vfprintf@fmt 0055                              ?_Lcd_Clear 0001  
                              ??___wmul 0005                             __pdataBANK0 00AC  
                       Lcd_Write_Char@a 0004                         Lcd_Write_Char@y 0003  
                           __pbssCOMRAM 005D                           __pcstackBANK0 0099  
                              ?_Lcd_Cmd 0001                       _USART_SerialBegin 13FC  
                      ??_Lcd_Set_Cursor 0005                               __pintcode 0008  
                              ?___awmod 0001                      ?_USART_SerialBegin 000E  
                              ?___lldiv 0001                                ?___lodiv 0001  
                              ?___lomod 0001                             ??_PORT_Init 0001  
                       ___lomod@divisor 0009                     ??_USART_SerialBegin 0012  
                           __smallconst 0800                         ___lomod@counter 0011  
                              _BAUDCON1 000FB8                                ?_isdigit 0001  
                              ?_isspace 0001           __end_of_INTERRUPT_INTx_Config 17FA  
                              ?_sprintf 0099                       ??_USART_WriteByte 0001  
                        ___wmul@product 0005                                _LATEbits 000F8D  
                              _PIE1bits 000F9D               __end_of_USART_SerialBegin 1462  
                              Lcd_Cmd@a 0003                                i2u173_40 0018  
                              i2u173_41 0014                                i2u174_40 0026  
                              i2u174_41 0022                                i2u175_40 003C  
                              i2u175_41 0038                                i2u176_40 004A  
                              i2u176_41 0046                                i2u177_40 005E  
                              i2u177_41 005A                                _PIR1bits 000F9E  
                              i2u178_40 006C                                i2u178_41 0068  
                           ??_Lcd_Clear 0004                                _RCONbits 000FD0  
                              _SSP1CON1 000FC6                                _SSP1STAT 000FC7  
                             _vfpfcnvrt 0824                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0001                        ??_Lcd_Write_Char 0002  
                          _isspace$2172 0005                                _Lcd_Init 1384  
              USART_SerialBegin@baudios 000E                                _Lcd_Port 14C8  
                           _INTCON2bits 000FF1                             _INTCON3bits 000FF0  
                             copy_data0 16A2                __end_of_Lcd_Write_String 168E  
                        _OSCILADOR_Init 17FA                                __Hrparam 0000  
                            vfprintf@ap 0057                                __Lrparam 0000  
                            vfprintf@fp 0053                              ?_vfpfcnvrt 003D  
                            _ANSELBbits 000F5C                              _ANSELCbits 000F5D  
                            _ANSELEbits 000F5F                              sprintf@fmt 009B  
                     _USART_WriteString 1704                                __ptext10 0E1A  
                              __ptext11 0CD0                                __ptext20 17D2  
                              __ptext12 15C4                                __ptext21 17FA  
                              __ptext13 1734                                __ptext30 182A  
                              __ptext22 164E                                __ptext14 1760  
                              __ptext23 16CC                                __ptext15 1186  
                              __ptext24 1462                                __ptext16 1704  
                              __ptext25 1384                                __ptext17 17BC  
                              __ptext26 181C                                __ptext18 13FC  
                              __ptext27 1786                                __ptext19 12E0  
                              __ptext28 14C8                                __ptext29 17E6  
                          _SSP1CON1bits 000FC6                            _SSP1CON2bits 000FC5  
                    ?_USART_WriteString 0002                  __end_of_OSCILADOR_Init 180C  
                   ??_USART_WriteString 0004                                isa$xinst 000000  
                              int$flags 005F                                _vfprintf 1576  
                          _SSP1STATbits 000FC7                              _INTCONbits 000FF2  
             __end_of_USART_WriteString 1734                     USART_WriteByte@data 0001  
                              isdigit@c 0001                ?_INTERRUPT_Global_Config 0001  
                    Lcd_Write_Char@temp 0002                                intlevel2 0000  
                             sprintf@ap 009F                         ?_OSCILADOR_Init 0001  
                              isspace@c 0001                        ___lldiv@dividend 0001  
                            _RCSTA1bits 000FAB                              _OSCCONbits 000FD3  
                           ??_vfpfcnvrt 0043                      Lcd_Set_Cursor@temp 0008  
                              sprintf@f 00A1                                sprintf@s 0099  
                       _USART_WriteByte 17BC                        ___lldiv@quotient 0009  
                           _SSPCON2bits 000FC5  
