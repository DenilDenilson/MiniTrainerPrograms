

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 20 16:53:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 09/02/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F45K50 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97                           	psect	idataBANK0
    98   003312                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _Keypad4x4
   102   003312  31                 	db	49
   103   003313  32                 	db	50
   104   003314  33                 	db	51
   105   003315  41                 	db	65
   106   003316  34                 	db	52
   107   003317  35                 	db	53
   108   003318  36                 	db	54
   109   003319  42                 	db	66
   110   00331A  37                 	db	55
   111   00331B  38                 	db	56
   112   00331C  39                 	db	57
   113   00331D  43                 	db	67
   114   00331E  2A                 	db	42
   115   00331F  30                 	db	48
   116   003320  23                 	db	35
   117   003321  44                 	db	68
   118   000000                     _RCREG1	set	4014
   119   000000                     _TXREG1	set	4013
   120   000000                     _SPBRG1	set	4015
   121   000000                     _BAUDCON1	set	4024
   122   000000                     _TRISCbits	set	3988
   123   000000                     _TRISD	set	3989
   124   000000                     _SSP1CON2bits	set	4037
   125   000000                     _SSP1CON1bits	set	4038
   126   000000                     _SSP1STATbits	set	4039
   127   000000                     _OSCCONbits	set	4051
   128   000000                     _ADRESL	set	4035
   129   000000                     _ADRESH	set	4036
   130   000000                     _ADCON0bits	set	4034
   131   000000                     _RCSTA1bits	set	4011
   132   000000                     _TXSTA1bits	set	4012
   133   000000                     _SSP1CON1	set	4038
   134   000000                     _SSP1STAT	set	4039
   135   000000                     _TRISB	set	3987
   136   000000                     _SSPCON2bits	set	4037
   137   000000                     _ANSELAbits	set	3931
   138   000000                     _ANSELBbits	set	3932
   139   000000                     _TRISBbits	set	3987
   140   000000                     _ADCON2bits	set	4032
   141   000000                     _ADCON1bits	set	4033
   142   000000                     _INTCON2bits	set	4081
   143   000000                     _ANSELEbits	set	3935
   144   000000                     _ANSELD	set	3934
   145   000000                     _ANSELCbits	set	3933
   146   000000                     _PORTB	set	3969
   147   000000                     _LATB	set	3978
   148   000000                     _SSP1BUF	set	4041
   149   000000                     _SSP1ADD	set	4040
   150   000000                     _LATD	set	3980
   151   000000                     _PORTD	set	3971
   152   000000                     _LATEbits	set	3981
   153   000000                     _WPUB	set	3973
   154   000000                     _TRISEbits	set	3990
   155   000000                     _PIE1bits	set	3997
   156   000000                     _PIR1bits	set	3998
   157   000000                     _RCSTA1	set	4011
   158   000000                     _TXSTA1	set	4012
   159   000000                     _SPBRGH1	set	4016
   160                           
   161                           	psect	smallconst
   162   000800                     __psmallconst:
   163                           	callstack 0
   164   000800  00                 	db	0
   165   000801                     STR_2:
   166   000801  3E                 	db	62	;'>'
   167   000802  54                 	db	84	;'T'
   168   000803  65                 	db	101	;'e'
   169   000804  6D                 	db	109	;'m'
   170   000805  70                 	db	112	;'p'
   171   000806  2E                 	db	46
   172   000807  20                 	db	32
   173   000808  41                 	db	65	;'A'
   174   000809  6D                 	db	109	;'m'
   175   00080A  62                 	db	98	;'b'
   176   00080B  69                 	db	105	;'i'
   177   00080C  65                 	db	101	;'e'
   178   00080D  6E                 	db	110	;'n'
   179   00080E  74                 	db	116	;'t'
   180   00080F  65                 	db	101	;'e'
   181   000810  3C                 	db	60	;'<'
   182   000811  00                 	db	0
   183   000812                     STR_1:
   184   000812  54                 	db	84	;'T'
   185   000813  20                 	db	32
   186   000814  3D                 	db	61	;'='
   187   000815  20                 	db	32
   188   000816  25                 	db	37
   189   000817  2E                 	db	46
   190   000818  32                 	db	50	;'2'
   191   000819  66                 	db	102	;'f'
   192   00081A  20                 	db	32
   193   00081B  43                 	db	67	;'C'
   194   00081C  00                 	db	0
   195   00081D                     STR_3:
   196   00081D  69                 	db	105	;'i'
   197   00081E  6E                 	db	110	;'n'
   198   00081F  66                 	db	102	;'f'
   199   000820  00                 	db	0
   200   000821                     STR_6:
   201   000821  6E                 	db	110	;'n'
   202   000822  61                 	db	97	;'a'
   203   000823  6E                 	db	110	;'n'
   204   000824  00                 	db	0
   205   000825  00                 	db	0	; dummy byte at the end
   206   000000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210   0030BE                     __pcinit:
   211                           	callstack 0
   212   0030BE                     start_initialization:
   213                           	callstack 0
   214   0030BE                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to BANK0 (16 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219   0030BE  0E12               	movlw	low __pidataBANK0
   220   0030C0  6EF6               	movwf	tblptrl,c
   221   0030C2  0E33               	movlw	high __pidataBANK0
   222   0030C4  6EF7               	movwf	tblptrh,c
   223   0030C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224   0030C8  6EF8               	movwf	tblptru,c
   225   0030CA  EE00  F0CB         	lfsr	0,__pdataBANK0
   226   0030CE  EE10 F010          	lfsr	1,16
   227   0030D2                     copy_data0:
   228   0030D2  0009               	tblrd		*+
   229   0030D4  CFF5 FFEE          	movff	tablat,postinc0
   230   0030D8  50E5               	movf	postdec1,w,c
   231   0030DA  50E1               	movf	fsr1l,w,c
   232   0030DC  E1FA               	bnz	copy_data0
   233                           
   234                           ; Clear objects allocated to BANK1 (80 bytes)
   235   0030DE  EE01  F000         	lfsr	0,__pbssBANK1
   236   0030E2  0E50               	movlw	80
   237   0030E4                     clear_0:
   238   0030E4  6AEE               	clrf	postinc0,c
   239   0030E6  06E8               	decf	wreg,f,c
   240   0030E8  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK0 (36 bytes)
   243   0030EA  EE00  F0A7         	lfsr	0,__pbssBANK0
   244   0030EE  0E24               	movlw	36
   245   0030F0                     clear_1:
   246   0030F0  6AEE               	clrf	postinc0,c
   247   0030F2  06E8               	decf	wreg,f,c
   248   0030F4  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to COMRAM (1 bytes)
   251   0030F6  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   252   0030F8                     end_of_initialization:
   253                           	callstack 0
   254   0030F8                     __end_of__initialization:
   255                           	callstack 0
   256   0030F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257   0030FA  6EF8               	movwf	tblptru,c
   258   0030FC  0100               	movlb	0
   259   0030FE  EFC0  F012         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262   00005F                     __pbssCOMRAM:
   263                           	callstack 0
   264   00005F                     _flags:
   265                           	callstack 0
   266   00005F                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   0000A7                     __pbssBANK0:
   270                           	callstack 0
   271   0000A7                     floorf@F526:
   272                           	callstack 0
   273   0000A7                     	ds	4
   274   0000AB                     ___fpclassifyf@F465:
   275                           	callstack 0
   276   0000AB                     	ds	4
   277   0000AF                     _temp:
   278                           	callstack 0
   279   0000AF                     	ds	4
   280   0000B3                     _width:
   281                           	callstack 0
   282   0000B3                     	ds	2
   283   0000B5                     _prec:
   284                           	callstack 0
   285   0000B5                     	ds	2
   286   0000B7                     _strTemp:
   287                           	callstack 0
   288   0000B7                     	ds	20
   289                           
   290                           	psect	dataBANK0
   291   0000CB                     __pdataBANK0:
   292                           	callstack 0
   293   0000CB                     _Keypad4x4:
   294                           	callstack 0
   295   0000CB                     	ds	16
   296                           
   297                           	psect	bssBANK1
   298   000100                     __pbssBANK1:
   299                           	callstack 0
   300   000100                     _dbuf:
   301                           	callstack 0
   302   000100                     	ds	80
   303                           
   304                           	psect	cstackBANK0
   305   000060                     __pcstackBANK0:
   306                           	callstack 0
   307   000060                     efgtoa@ne:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x0
   311   000060                     	ds	2
   312   000062                     efgtoa@p:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x2
   316   000062                     	ds	2
   317   000064                     efgtoa@t:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x4
   321   000064                     	ds	2
   322   000066                     _efgtoa$1936:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x6
   326   000066                     	ds	2
   327   000068                     efgtoa@pp:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x8
   331   000068                     	ds	1
   332   000069                     efgtoa@mode:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x9
   336   000069                     	ds	1
   337   00006A                     efgtoa@nmode:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0xA
   341   00006A                     	ds	1
   342   00006B                     efgtoa@d:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0xB
   346   00006B                     	ds	2
   347   00006D                     efgtoa@m:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xD
   351   00006D                     	ds	2
   352   00006F                     efgtoa@e:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0xF
   356   00006F                     	ds	2
   357   000071                     efgtoa@w:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x11
   361   000071                     	ds	2
   362   000073                     efgtoa@ou:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x13
   366   000073                     	ds	4
   367   000077                     efgtoa@i:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x17
   371   000077                     	ds	2
   372   000079                     efgtoa@h:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0x19
   376   000079                     	ds	4
   377   00007D                     efgtoa@l:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x1D
   381   00007D                     	ds	4
   382   000081                     efgtoa@sign:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x21
   386   000081                     	ds	1
   387   000082                     efgtoa@n:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x22
   391   000082                     	ds	2
   392   000084                     efgtoa@g:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x24
   396   000084                     	ds	4
   397   000088                     efgtoa@u:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x28
   401   000088                     	ds	4
   402   00008C                     ?_vfprintf:
   403                           	callstack 0
   404   00008C                     vfprintf@fp:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x2C
   408   00008C                     	ds	2
   409   00008E                     vfprintf@fmt:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x2E
   413   00008E                     	ds	2
   414   000090                     vfprintf@ap:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x30
   418   000090                     	ds	2
   419   000092                     ?_sprintf:
   420                           	callstack 0
   421   000092                     sprintf@s:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x32
   425   000092                     	ds	2
   426   000094                     sprintf@fmt:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x34
   430   000094                     	ds	6
   431   00009A                     sprintf@ap:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x3A
   435   00009A                     	ds	2
   436   00009C                     sprintf@f:
   437                           	callstack 0
   438                           
   439                           ; 11 bytes @ 0x3C
   440   00009C                     	ds	11
   441                           
   442                           	psect	cstackCOMRAM
   443   000001                     __pcstackCOMRAM:
   444                           	callstack 0
   445   000001                     ??_ADC_SelectChannel:
   446   000001                     ?___fpclassifyf:
   447                           	callstack 0
   448   000001                     ?_isdigit:
   449                           	callstack 0
   450   000001                     ?_isspace:
   451                           	callstack 0
   452   000001                     ?___wmul:
   453                           	callstack 0
   454   000001                     ?___fladd:
   455                           	callstack 0
   456   000001                     ?_labs:
   457                           	callstack 0
   458   000001                     ?___flneg:
   459                           	callstack 0
   460   000001                     ?___fltol:
   461                           	callstack 0
   462   000001                     Lcd_Port@a:
   463                           	callstack 0
   464   000001                     putch@c:
   465                           	callstack 0
   466   000001                     ___wmul@multiplier:
   467                           	callstack 0
   468   000001                     isdigit@c:
   469                           	callstack 0
   470   000001                     isspace@c:
   471                           	callstack 0
   472   000001                     memcpy@d1:
   473                           	callstack 0
   474   000001                     strcpy@dest:
   475                           	callstack 0
   476   000001                     ___fleq@ff1:
   477                           	callstack 0
   478   000001                     ___flneg@f1:
   479                           	callstack 0
   480   000001                     ___fltol@f1:
   481                           	callstack 0
   482   000001                     ___fladd@b:
   483                           	callstack 0
   484   000001                     ___fpclassifyf@x:
   485                           	callstack 0
   486   000001                     labs@a:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x0
   490   000001                     	ds	1
   491   000002                     ??_Lcd_Cmd:
   492   000002                     ADC_SelectChannel@channel:
   493                           	callstack 0
   494   000002                     Lcd_Write_Char@temp:
   495                           	callstack 0
   496   000002                     fputc@c:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1
   500   000002                     	ds	1
   501   000003                     ??_isdigit:
   502   000003                     ??_isspace:
   503   000003                     ?_ADC_GetConversion:
   504                           	callstack 0
   505   000003                     Lcd_Cmd@a:
   506                           	callstack 0
   507   000003                     Lcd_Write_Char@y:
   508                           	callstack 0
   509   000003                     ___wmul@multiplicand:
   510                           	callstack 0
   511   000003                     memcpy@s1:
   512                           	callstack 0
   513   000003                     strcpy@src:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x2
   517   000003                     	ds	1
   518   000004                     ??_Lcd_Init:
   519   000004                     Lcd_Set_Cursor@b:
   520                           	callstack 0
   521   000004                     Lcd_Write_Char@a:
   522                           	callstack 0
   523   000004                     fputc@fp:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x3
   527   000004                     	ds	1
   528   000005                     ??___fpclassifyf:
   529   000005                     ??_labs:
   530   000005                     ??_ADC_GetConversion:
   531   000005                     ??___fltol:
   532   000005                     Lcd_Set_Cursor@a:
   533                           	callstack 0
   534   000005                     _isspace$2014:
   535                           	callstack 0
   536   000005                     Lcd_Write_String@a:
   537                           	callstack 0
   538   000005                     ___wmul@product:
   539                           	callstack 0
   540   000005                     memcpy@n:
   541                           	callstack 0
   542   000005                     strcpy@s:
   543                           	callstack 0
   544   000005                     ___fleq@ff2:
   545                           	callstack 0
   546   000005                     ___fladd@a:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x4
   550   000005                     	ds	1
   551   000006                     ??_fputc:
   552   000006                     Lcd_Set_Cursor@z:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x5
   556   000006                     	ds	1
   557   000007                     ??_Lcd_Write_String:
   558   000007                     ?_atoi:
   559                           	callstack 0
   560   000007                     ADC_GetConversion@channel:
   561                           	callstack 0
   562   000007                     Lcd_Set_Cursor@y:
   563                           	callstack 0
   564   000007                     atoi@s:
   565                           	callstack 0
   566   000007                     memcpy@d:
   567                           	callstack 0
   568   000007                     strcpy@d:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x6
   572   000007                     	ds	1
   573   000008                     ?___xxtofl:
   574                           	callstack 0
   575   000008                     Lcd_Set_Cursor@temp:
   576                           	callstack 0
   577   000008                     ___xxtofl@val:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x7
   581   000008                     	ds	1
   582   000009                     ??___fladd:
   583   000009                     ??_atoi:
   584   000009                     ??___fleq:
   585   000009                     ___fltol@sign1:
   586                           	callstack 0
   587   000009                     Lcd_Write_String@i:
   588                           	callstack 0
   589   000009                     ___fpclassifyf@e:
   590                           	callstack 0
   591   000009                     memcpy@s:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x8
   595   000009                     	ds	1
   596   00000A                     ___fltol@exp1:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x9
   600   00000A                     	ds	1
   601   00000B                     memcpy@tmp:
   602                           	callstack 0
   603   00000B                     fputs@s:
   604                           	callstack 0
   605   00000B                     ___fpclassifyf@u:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0xA
   609   00000B                     	ds	1
   610   00000C                     ??___xxtofl:
   611   00000C                     atoi@neg:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0xB
   615   00000C                     	ds	1
   616   00000D                     ___fladd@signs:
   617                           	callstack 0
   618   00000D                     fputs@fp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0xC
   622   00000D                     	ds	1
   623   00000E                     ___fladd@aexp:
   624                           	callstack 0
   625   00000E                     atoi@n:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0xD
   629   00000E                     	ds	1
   630   00000F                     ___fladd@bexp:
   631                           	callstack 0
   632   00000F                     fputs@c:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0xE
   636   00000F                     	ds	1
   637   000010                     ___fladd@grs:
   638                           	callstack 0
   639   000010                     ___xxtofl@sign:
   640                           	callstack 0
   641   000010                     fputs@i:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0xF
   645   000010                     	ds	1
   646   000011                     ?___fldiv:
   647                           	callstack 0
   648   000011                     ___xxtofl@exp:
   649                           	callstack 0
   650   000011                     ___fldiv@b:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x10
   654   000011                     	ds	1
   655   000012                     pad@fp:
   656                           	callstack 0
   657   000012                     ___xxtofl@arg:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x11
   661   000012                     	ds	2
   662   000014                     pad@buf:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x13
   666   000014                     	ds	1
   667   000015                     ___fldiv@a:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x14
   671   000015                     	ds	1
   672   000016                     ?___flmul:
   673                           	callstack 0
   674   000016                     pad@p:
   675                           	callstack 0
   676   000016                     ___flmul@b:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x15
   680   000016                     	ds	2
   681   000018                     ??_pad:
   682                           
   683                           ; 1 bytes @ 0x17
   684   000018                     	ds	1
   685   000019                     ??___fldiv:
   686   000019                     pad@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x18
   690   000019                     	ds	1
   691   00001A                     ___flmul@a:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x19
   695   00001A                     	ds	1
   696   00001B                     pad@w:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x1A
   700   00001B                     	ds	2
   701   00001D                     ___fldiv@rem:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x1C
   705   00001D                     	ds	1
   706   00001E                     ??___flmul:
   707                           
   708                           ; 1 bytes @ 0x1D
   709   00001E                     	ds	3
   710   000021                     ___fldiv@sign:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x20
   714   000021                     	ds	1
   715   000022                     ___flmul@sign:
   716                           	callstack 0
   717   000022                     ___fldiv@new_exp:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x21
   721   000022                     	ds	1
   722   000023                     ___flmul@grs:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x22
   726   000023                     	ds	1
   727   000024                     ___fldiv@grs:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x23
   731   000024                     	ds	3
   732   000027                     ___flmul@aexp:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x26
   736   000027                     	ds	1
   737   000028                     ___fldiv@bexp:
   738                           	callstack 0
   739   000028                     ___flmul@bexp:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x27
   743   000028                     	ds	1
   744   000029                     ___fldiv@aexp:
   745                           	callstack 0
   746   000029                     ___flmul@prod:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x28
   750   000029                     	ds	1
   751   00002A                     ?_floorf:
   752                           	callstack 0
   753   00002A                     floorf@x:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x29
   757   00002A                     	ds	3
   758   00002D                     ___flmul@temp:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x2C
   762   00002D                     	ds	1
   763   00002E                     ??_floorf:
   764                           
   765                           ; 1 bytes @ 0x2D
   766   00002E                     	ds	1
   767   00002F                     ?___flsub:
   768                           	callstack 0
   769   00002F                     ___flge@ff1:
   770                           	callstack 0
   771   00002F                     ___flsub@b:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x2E
   775   00002F                     	ds	4
   776   000033                     ___flge@ff2:
   777                           	callstack 0
   778   000033                     ___flsub@a:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x32
   782   000033                     	ds	1
   783   000034                     floorf@m:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x33
   787   000034                     	ds	3
   788   000037                     ??___flge:
   789                           
   790                           ; 1 bytes @ 0x36
   791   000037                     	ds	1
   792   000038                     floorf@e:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x37
   796   000038                     	ds	2
   797   00003A                     floorf@u:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x39
   801   00003A                     	ds	4
   802   00003E                     efgtoa@fp:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x3D
   806   00003E                     	ds	2
   807   000040                     efgtoa@f:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x3F
   811   000040                     	ds	4
   812   000044                     efgtoa@c:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x43
   816   000044                     	ds	1
   817   000045                     ??_efgtoa:
   818                           
   819                           ; 1 bytes @ 0x44
   820   000045                     	ds	2
   821   000047                     vfpfcnvrt@fp:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x46
   825   000047                     	ds	2
   826   000049                     vfpfcnvrt@fmt:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x48
   830   000049                     	ds	2
   831   00004B                     vfpfcnvrt@ap:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x4A
   835   00004B                     	ds	2
   836   00004D                     ??_vfpfcnvrt:
   837                           
   838                           ; 1 bytes @ 0x4C
   839   00004D                     	ds	3
   840   000050                     vfpfcnvrt@convarg:
   841                           	callstack 0
   842                           
   843                           ; 8 bytes @ 0x4F
   844   000050                     	ds	8
   845   000058                     vfpfcnvrt@c:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x57
   849   000058                     	ds	1
   850   000059                     vfpfcnvrt@cp:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x58
   854   000059                     	ds	2
   855   00005B                     vfprintf@cfmt:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x5A
   859   00005B                     	ds	2
   860   00005D                     ??_main:
   861                           
   862                           ; 1 bytes @ 0x5C
   863   00005D                     	ds	2
   864                           
   865 ;;
   866 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   867 ;;
   868 ;; *************** function _main *****************
   869 ;; Defined at:
   870 ;;		line 19 in file "Lcd_Rele_temp.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  2  404[None  ] int 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   884 ;;      Params:         0       0       0       0       0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels required when called: 8
   890 ;; This function calls:
   891 ;;		_ADC_GetConversion
   892 ;;		_ADC_Init
   893 ;;		_Lcd_Clear
   894 ;;		_Lcd_Init
   895 ;;		_Lcd_Set_Cursor
   896 ;;		_Lcd_Write_String
   897 ;;		_OSCILADOR_Init
   898 ;;		_PORT_Init
   899 ;;		___fladd
   900 ;;		___fldiv
   901 ;;		___flge
   902 ;;		___flmul
   903 ;;		___xxtofl
   904 ;;		_sprintf
   905 ;; This function is called by:
   906 ;;		Startup code after reset
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text0
   911   002580                     __ptext0:
   912                           	callstack 0
   913   002580                     _main:
   914                           	callstack 23
   915   002580                     
   916                           ;Lcd_Rele_temp.c: 21:     OSCILADOR_Init();
   917   002580  EC80  F019         	call	_OSCILADOR_Init	;wreg free
   918                           
   919                           ;Lcd_Rele_temp.c: 22:     PORT_Init();
   920   002584  EC91  F019         	call	_PORT_Init	;wreg free
   921                           
   922                           ;Lcd_Rele_temp.c: 23:     ADC_Init();
   923   002588  EC52  F019         	call	_ADC_Init	;wreg free
   924   00258C                     
   925                           ;Lcd_Rele_temp.c: 25:     Lcd_Init();
   926   00258C  ECD0  F016         	call	_Lcd_Init	;wreg free
   927   002590                     
   928                           ;Lcd_Rele_temp.c: 26:     Lcd_Clear();
   929   002590  EC98  F019         	call	_Lcd_Clear	;wreg free
   930   002594                     l4298:
   931                           
   932                           ;Lcd_Rele_temp.c: 29:     {;Lcd_Rele_temp.c: 30:         temp = (((float)ADC_GetConversi
      +                          on(0))*(5.0/1023.0));
   933   002594  0E00               	movlw	0
   934   002596  ECC3  F018         	call	_ADC_GetConversion
   935   00259A  C003  F008         	movff	?_ADC_GetConversion,___xxtofl@val
   936   00259E  C004  F009         	movff	?_ADC_GetConversion+1,___xxtofl@val+1
   937   0025A2  6A0A               	clrf	(___xxtofl@val+2)^0,c
   938   0025A4  6A0B               	clrf	(___xxtofl@val+3)^0,c
   939   0025A6  0E00               	movlw	0
   940   0025A8  ECE6  F011         	call	___xxtofl
   941   0025AC  C008  F016         	movff	?___xxtofl,___flmul@b
   942   0025B0  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
   943   0025B4  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
   944   0025B8  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
   945   0025BC  0E0A               	movlw	10
   946   0025BE  6E1A               	movwf	___flmul@a^0,c
   947   0025C0  0E28               	movlw	40
   948   0025C2  6E1B               	movwf	(___flmul@a+1)^0,c
   949   0025C4  0EA0               	movlw	160
   950   0025C6  6E1C               	movwf	(___flmul@a+2)^0,c
   951   0025C8  0E3B               	movlw	59
   952   0025CA  6E1D               	movwf	(___flmul@a+3)^0,c
   953   0025CC  EC70  F00B         	call	___flmul	;wreg free
   954   0025D0  C016  F0AF         	movff	?___flmul,_temp
   955   0025D4  C017  F0B0         	movff	?___flmul+1,_temp+1
   956   0025D8  C018  F0B1         	movff	?___flmul+2,_temp+2
   957   0025DC  C019  F0B2         	movff	?___flmul+3,_temp+3
   958   0025E0                     
   959                           ;Lcd_Rele_temp.c: 31:         temp = ((temp - 0.5f)/0.01f);
   960   0025E0  0E00               	movlw	0
   961   0025E2  6E05               	movwf	___fladd@a^0,c
   962   0025E4  0E00               	movlw	0
   963   0025E6  6E06               	movwf	(___fladd@a+1)^0,c
   964   0025E8  0E00               	movlw	0
   965   0025EA  6E07               	movwf	(___fladd@a+2)^0,c
   966   0025EC  0EBF               	movlw	191
   967   0025EE  6E08               	movwf	(___fladd@a+3)^0,c
   968   0025F0  C0AF  F001         	movff	_temp,___fladd@b
   969   0025F4  C0B0  F002         	movff	_temp+1,___fladd@b+1
   970   0025F8  C0B1  F003         	movff	_temp+2,___fladd@b+2
   971   0025FC  C0B2  F004         	movff	_temp+3,___fladd@b+3
   972   002600  EC10  F009         	call	___fladd	;wreg free
   973   002604  C001  F011         	movff	?___fladd,___fldiv@b
   974   002608  C002  F012         	movff	?___fladd+1,___fldiv@b+1
   975   00260C  C003  F013         	movff	?___fladd+2,___fldiv@b+2
   976   002610  C004  F014         	movff	?___fladd+3,___fldiv@b+3
   977   002614  0E0A               	movlw	10
   978   002616  6E15               	movwf	___fldiv@a^0,c
   979   002618  0ED7               	movlw	215
   980   00261A  6E16               	movwf	(___fldiv@a+1)^0,c
   981   00261C  0E23               	movlw	35
   982   00261E  6E17               	movwf	(___fldiv@a+2)^0,c
   983   002620  0E3C               	movlw	60
   984   002622  6E18               	movwf	(___fldiv@a+3)^0,c
   985   002624  EC85  F00D         	call	___fldiv	;wreg free
   986   002628  C011  F0AF         	movff	?___fldiv,_temp
   987   00262C  C012  F0B0         	movff	?___fldiv+1,_temp+1
   988   002630  C013  F0B1         	movff	?___fldiv+2,_temp+2
   989   002634  C014  F0B2         	movff	?___fldiv+3,_temp+3
   990   002638                     
   991                           ;Lcd_Rele_temp.c: 33:         sprintf(strTemp, "T = %.2f C", temp);
   992   002638  0EB7               	movlw	low _strTemp
   993   00263A  0100               	movlb	0	; () banked
   994   00263C  6F92               	movwf	sprintf@s& (0+255),b
   995   00263E  0E00               	movlw	high _strTemp
   996   002640  6F93               	movwf	(sprintf@s+1)& (0+255),b
   997   002642  0E12               	movlw	low STR_1
   998   002644  6F94               	movwf	sprintf@fmt& (0+255),b
   999   002646  0E08               	movlw	high STR_1
  1000   002648  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1001   00264A  C0AF  F096         	movff	_temp,?_sprintf+4
  1002   00264E  C0B0  F097         	movff	_temp+1,?_sprintf+5
  1003   002652  C0B1  F098         	movff	_temp+2,?_sprintf+6
  1004   002656  C0B2  F099         	movff	_temp+3,?_sprintf+7
  1005   00265A  ECA0  F017         	call	_sprintf	;wreg free
  1006   00265E                     
  1007                           ;Lcd_Rele_temp.c: 34:         Lcd_Set_Cursor(1, 1);
  1008   00265E  0E01               	movlw	1
  1009   002660  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1010   002662  0E01               	movlw	1
  1011   002664  EC3F  F017         	call	_Lcd_Set_Cursor
  1012   002668                     
  1013                           ;Lcd_Rele_temp.c: 35:         Lcd_Write_String(">Temp. Ambiente<");
  1014   002668  0E01               	movlw	low STR_2
  1015   00266A  6E05               	movwf	Lcd_Write_String@a^0,c
  1016   00266C  0E08               	movlw	high STR_2
  1017   00266E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1018   002670  EC54  F016         	call	_Lcd_Write_String	;wreg free
  1019   002674                     
  1020                           ;Lcd_Rele_temp.c: 36:         Lcd_Set_Cursor(2, 3);
  1021   002674  0E03               	movlw	3
  1022   002676  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1023   002678  0E02               	movlw	2
  1024   00267A  EC3F  F017         	call	_Lcd_Set_Cursor
  1025   00267E                     
  1026                           ;Lcd_Rele_temp.c: 37:         Lcd_Write_String(strTemp);
  1027   00267E  0EB7               	movlw	low _strTemp
  1028   002680  6E05               	movwf	Lcd_Write_String@a^0,c
  1029   002682  0E00               	movlw	high _strTemp
  1030   002684  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1031   002686  EC54  F016         	call	_Lcd_Write_String	;wreg free
  1032   00268A                     
  1033                           ;Lcd_Rele_temp.c: 39:         if ( temp >= 30.0 ) {
  1034   00268A  C0AF  F02F         	movff	_temp,___flge@ff1
  1035   00268E  C0B0  F030         	movff	_temp+1,___flge@ff1+1
  1036   002692  C0B1  F031         	movff	_temp+2,___flge@ff1+2
  1037   002696  C0B2  F032         	movff	_temp+3,___flge@ff1+3
  1038   00269A  0E00               	movlw	0
  1039   00269C  6E33               	movwf	___flge@ff2^0,c
  1040   00269E  0E00               	movlw	0
  1041   0026A0  6E34               	movwf	(___flge@ff2+1)^0,c
  1042   0026A2  0EF0               	movlw	240
  1043   0026A4  6E35               	movwf	(___flge@ff2+2)^0,c
  1044   0026A6  0E41               	movlw	65
  1045   0026A8  6E36               	movwf	(___flge@ff2+3)^0,c
  1046   0026AA  EC99  F014         	call	___flge	;wreg free
  1047   0026AE  A0D8               	btfss	status,0,c
  1048   0026B0  EF5C  F013         	goto	u4331
  1049   0026B4  EF5E  F013         	goto	u4330
  1050   0026B8                     u4331:
  1051   0026B8  EF61  F013         	goto	l406
  1052   0026BC                     u4330:
  1053   0026BC                     
  1054                           ;Lcd_Rele_temp.c: 40:             LATEbits.LATE0 = 1;
  1055   0026BC  808D               	bsf	141,0,c	;volatile
  1056                           
  1057                           ;Lcd_Rele_temp.c: 41:         }
  1058   0026BE  EF62  F013         	goto	l4316
  1059   0026C2                     l406:
  1060                           
  1061                           ;Lcd_Rele_temp.c: 43:             LATEbits.LATE0 = 0;
  1062   0026C2  908D               	bcf	141,0,c	;volatile
  1063   0026C4                     l4316:
  1064                           
  1065                           ;Lcd_Rele_temp.c: 46:         _delay((unsigned long)((250)*(8000000UL/4000.0)));
  1066   0026C4  0E03               	movlw	3
  1067   0026C6  6E5E               	movwf	(??_main+1)^0,c
  1068   0026C8  0E8A               	movlw	138
  1069   0026CA  6E5D               	movwf	??_main^0,c
  1070   0026CC  0E56               	movlw	86
  1071   0026CE                     u4347:
  1072   0026CE  2EE8               	decfsz	wreg,f,c
  1073   0026D0  D7FE               	bra	u4347
  1074   0026D2  2E5D               	decfsz	??_main^0,f,c
  1075   0026D4  D7FC               	bra	u4347
  1076   0026D6  2E5E               	decfsz	(??_main+1)^0,f,c
  1077   0026D8  D7FA               	bra	u4347
  1078   0026DA  EFCA  F012         	goto	l4298
  1079   0026DE  EF00  F000         	goto	start
  1080   0026E2                     __end_of_main:
  1081                           	callstack 0
  1082                           
  1083 ;; *************** function _sprintf *****************
  1084 ;; Defined at:
  1085 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  s               2   50[BANK0 ] PTR unsigned char 
  1088 ;;		 -> strTemp(20), 
  1089 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1090 ;;		 -> STR_1(11), 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  f              11   60[BANK0 ] struct _IO_FILE
  1093 ;;  ap              2   58[BANK0 ] PTR void [1]
  1094 ;;		 -> ?_sprintf(2), 
  1095 ;;  ret             2    0        int 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2   50[BANK0 ] int 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         0       8       0       0       0       0       0       0       0
  1106 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1108 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1109 ;;Total ram usage:       21 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 7
  1112 ;; This function calls:
  1113 ;;		_vfprintf
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text1
  1120   002F40                     __ptext1:
  1121                           	callstack 0
  1122   002F40                     _sprintf:
  1123                           	callstack 23
  1124   002F40  0E96               	movlw	low (?_sprintf+4)
  1125   002F42  0100               	movlb	0	; () banked
  1126   002F44  6F9A               	movwf	sprintf@ap& (0+255),b
  1127   002F46  0E00               	movlw	high (?_sprintf+4)
  1128   002F48  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  1129   002F4A  C092  F09C         	movff	sprintf@s,sprintf@f
  1130   002F4E  C093  F09D         	movff	sprintf@s+1,sprintf@f+1
  1131   002F52                     
  1132                           ; BSR set to: 0
  1133   002F52  0E00               	movlw	0
  1134   002F54  6FA0               	movwf	(sprintf@f+4)& (0+255),b
  1135   002F56  0E00               	movlw	0
  1136   002F58  6F9F               	movwf	(sprintf@f+3)& (0+255),b
  1137   002F5A                     
  1138                           ; BSR set to: 0
  1139   002F5A  0E00               	movlw	0
  1140   002F5C  6FA6               	movwf	(sprintf@f+10)& (0+255),b
  1141   002F5E  0E00               	movlw	0
  1142   002F60  6FA5               	movwf	(sprintf@f+9)& (0+255),b
  1143   002F62                     
  1144                           ; BSR set to: 0
  1145   002F62  0E9C               	movlw	low sprintf@f
  1146   002F64  6F8C               	movwf	vfprintf@fp& (0+255),b
  1147   002F66  0E00               	movlw	high sprintf@f
  1148   002F68  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1149   002F6A  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1150   002F6E  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1151   002F72  0E9A               	movlw	low sprintf@ap
  1152   002F74  6F90               	movwf	vfprintf@ap& (0+255),b
  1153   002F76  0E00               	movlw	high sprintf@ap
  1154   002F78  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1155   002F7A  ECC9  F017         	call	_vfprintf	;wreg free
  1156   002F7E  0100               	movlb	0	; () banked
  1157   002F80  519F               	movf	(sprintf@f+3)& (0+255),w,b
  1158   002F82  2592               	addwf	sprintf@s& (0+255),w,b
  1159   002F84  6ED9               	movwf	fsr2l,c
  1160   002F86  51A0               	movf	(sprintf@f+4)& (0+255),w,b
  1161   002F88  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  1162   002F8A  6EDA               	movwf	fsr2h,c
  1163   002F8C  0E00               	movlw	0
  1164   002F8E  6EDF               	movwf	indf2,c
  1165   002F90                     
  1166                           ; BSR set to: 0
  1167   002F90  0012               	return		;funcret
  1168   002F92                     __end_of_sprintf:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _vfprintf *****************
  1172 ;; Defined at:
  1173 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1176 ;;		 -> sprintf@f(11), 
  1177 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1178 ;;		 -> STR_1(11), 
  1179 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1180 ;;		 -> sprintf@ap(2), 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  1183 ;;		 -> STR_1(11), 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2   44[BANK0 ] int 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1193 ;;      Params:         0       6       0       0       0       0       0       0       0
  1194 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1196 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1197 ;;Total ram usage:        8 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 6
  1200 ;; This function calls:
  1201 ;;		_vfpfcnvrt
  1202 ;; This function is called by:
  1203 ;;		_sprintf
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text2
  1208   002F92                     __ptext2:
  1209                           	callstack 0
  1210   002F92                     _vfprintf:
  1211                           	callstack 23
  1212   002F92                     
  1213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1214   002F92  C08E  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  1215   002F96  C08F  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1216                           
  1217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1218   002F9A  EFDD  F017         	goto	l4028
  1219   002F9E                     l4026:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1222   002F9E  C08C  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  1223   002FA2  C08D  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1224   002FA6  0E5B               	movlw	low vfprintf@cfmt
  1225   002FA8  6E49               	movwf	vfpfcnvrt@fmt^0,c
  1226   002FAA  0E00               	movlw	high vfprintf@cfmt
  1227   002FAC  6E4A               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1228   002FAE  C090  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1229   002FB2  C091  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1230   002FB6  EC52  F00F         	call	_vfpfcnvrt	;wreg free
  1231   002FBA                     l4028:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1234   002FBA  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1235   002FBE  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1236   002FC2                     	if	0	;tblptru may be non-zero
  1237   002FC2                     	endif
  1238   002FC2                     	if	0	;tblptru may be non-zero
  1239   002FC2                     	endif
  1240   002FC2  0008               	tblrd		*
  1241   002FC4  50F5               	movf	tablat,w,c
  1242   002FC6  0900               	iorlw	0
  1243   002FC8  A4D8               	btfss	status,2,c
  1244   002FCA  EFE9  F017         	goto	u4041
  1245   002FCE  EFEB  F017         	goto	u4040
  1246   002FD2                     u4041:
  1247   002FD2  EFCF  F017         	goto	l4026
  1248   002FD6                     u4040:
  1249   002FD6                     
  1250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1251   002FD6  0E00               	movlw	0
  1252   002FD8  0100               	movlb	0	; () banked
  1253   002FDA  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1254   002FDC  0E00               	movlw	0
  1255   002FDE  6F8C               	movwf	?_vfprintf& (0+255),b
  1256   002FE0                     
  1257                           ; BSR set to: 0
  1258   002FE0  0012               	return		;funcret
  1259   002FE2                     __end_of_vfprintf:
  1260                           	callstack 0
  1261                           
  1262 ;; *************** function _vfpfcnvrt *****************
  1263 ;; Defined at:
  1264 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  1267 ;;		 -> sprintf@f(11), 
  1268 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  1269 ;;		 -> vfprintf@cfmt(2), 
  1270 ;;  ap              2   74[COMRAM] PTR PTR void 
  1271 ;;		 -> sprintf@ap(2), 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  convarg         8   79[COMRAM] struct .
  1274 ;;  cp              2   88[COMRAM] PTR unsigned char 
  1275 ;;		 -> STR_1(11), 
  1276 ;;  i               2    0        int 
  1277 ;;  done            2    0        int 
  1278 ;;  c               1   87[COMRAM] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         6       0       0       0       0       0       0       0       0
  1289 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1291 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:       20 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 5
  1295 ;; This function calls:
  1296 ;;		_atoi
  1297 ;;		_efgtoa
  1298 ;;		_fputc
  1299 ;;		_isdigit
  1300 ;; This function is called by:
  1301 ;;		_vfprintf
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text3
  1306   001EA4                     __ptext3:
  1307                           	callstack 0
  1308   001EA4                     _vfpfcnvrt:
  1309                           	callstack 23
  1310   001EA4                     
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1312   001EA4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313   001EA8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314   001EAC  CFDE FFF6          	movff	postinc2,tblptrl
  1315   001EB0  CFDD FFF7          	movff	postdec2,tblptrh
  1316   001EB4                     	if	0	;tblptru may be non-zero
  1317   001EB4                     	endif
  1318   001EB4                     	if	0	;tblptru may be non-zero
  1319   001EB4                     	endif
  1320   001EB4  0008               	tblrd		*
  1321   001EB6  50F5               	movf	tablat,w,c
  1322   001EB8  0A25               	xorlw	37
  1323   001EBA  A4D8               	btfss	status,2,c
  1324   001EBC  EF62  F00F         	goto	u3981
  1325   001EC0  EF64  F00F         	goto	u3980
  1326   001EC4                     u3981:
  1327   001EC4  EFC8  F010         	goto	l3966
  1328   001EC8                     u3980:
  1329   001EC8                     
  1330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1331   001EC8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1332   001ECC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1333   001ED0  2ADE               	incf	postinc2,f,c
  1334   001ED2  0E00               	movlw	0
  1335   001ED4  22DD               	addwfc	postdec2,f,c
  1336   001ED6                     
  1337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1338   001ED6  0E00               	movlw	0
  1339   001ED8  0100               	movlb	0	; () banked
  1340   001EDA  6FB4               	movwf	(_width+1)& (0+255),b
  1341   001EDC  0E00               	movlw	0
  1342   001EDE  6FB3               	movwf	_width& (0+255),b
  1343   001EE0  C0B3  F05F         	movff	_width,_flags
  1344   001EE4                     
  1345                           ; BSR set to: 0
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1347   001EE4  69B5               	setf	_prec& (0+255),b
  1348   001EE6  69B6               	setf	(_prec+1)& (0+255),b
  1349   001EE8                     
  1350                           ; BSR set to: 0
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1352   001EE8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353   001EEC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354   001EF0  CFDE FFF6          	movff	postinc2,tblptrl
  1355   001EF4  CFDD FFF7          	movff	postdec2,tblptrh
  1356   001EF8                     	if	0	;tblptru may be non-zero
  1357   001EF8                     	endif
  1358   001EF8                     	if	0	;tblptru may be non-zero
  1359   001EF8                     	endif
  1360   001EF8  0008               	tblrd		*
  1361   001EFA  50F5               	movf	tablat,w,c
  1362   001EFC  0A2E               	xorlw	46
  1363   001EFE  A4D8               	btfss	status,2,c
  1364   001F00  EF84  F00F         	goto	u3991
  1365   001F04  EF86  F00F         	goto	u3990
  1366   001F08                     u3991:
  1367   001F08  EFF3  F00F         	goto	l3928
  1368   001F0C                     u3990:
  1369   001F0C                     
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1372   001F0C  0E00               	movlw	0
  1373   001F0E  6FB6               	movwf	(_prec+1)& (0+255),b
  1374   001F10  0E00               	movlw	0
  1375   001F12  6FB5               	movwf	_prec& (0+255),b
  1376   001F14                     
  1377                           ; BSR set to: 0
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1379   001F14  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1380   001F18  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1381   001F1C  2ADE               	incf	postinc2,f,c
  1382   001F1E  0E00               	movlw	0
  1383   001F20  22DD               	addwfc	postdec2,f,c
  1384   001F22                     
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1387   001F22  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1388   001F26  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1389   001F2A  CFDE FFF6          	movff	postinc2,tblptrl
  1390   001F2E  CFDD FFF7          	movff	postdec2,tblptrh
  1391   001F32                     	if	0	;tblptru may be non-zero
  1392   001F32                     	endif
  1393   001F32                     	if	0	;tblptru may be non-zero
  1394   001F32                     	endif
  1395   001F32  0008               	tblrd		*
  1396   001F34  50F5               	movf	tablat,w,c
  1397   001F36  0A2A               	xorlw	42
  1398   001F38  A4D8               	btfss	status,2,c
  1399   001F3A  EFA1  F00F         	goto	u4001
  1400   001F3E  EFA3  F00F         	goto	u4000
  1401   001F42                     u4001:
  1402   001F42  EFC0  F00F         	goto	l3920
  1403   001F46                     u4000:
  1404   001F46                     
  1405                           ; BSR set to: 0
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1407   001F46  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1408   001F4A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1409   001F4E  2ADE               	incf	postinc2,f,c
  1410   001F50  0E00               	movlw	0
  1411   001F52  22DD               	addwfc	postdec2,f,c
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1414   001F54  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1415   001F58  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1416   001F5C  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1417   001F60  0E02               	movlw	2
  1418   001F62  26DE               	addwf	postinc2,f,c
  1419   001F64  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1420   001F68  0E00               	movlw	0
  1421   001F6A  22DD               	addwfc	postdec2,f,c
  1422   001F6C  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1423   001F70  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1424   001F74  CFDE F0B5          	movff	postinc2,_prec
  1425   001F78  CFDD F0B6          	movff	postdec2,_prec+1
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1428   001F7C  EFF3  F00F         	goto	l3928
  1429   001F80                     l3920:
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1433   001F80  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1434   001F84  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1435   001F88  CFDE F007          	movff	postinc2,atoi@s
  1436   001F8C  CFDD F008          	movff	postdec2,atoi@s+1
  1437   001F90  EC71  F013         	call	_atoi	;wreg free
  1438   001F94  C007  F0B5         	movff	?_atoi,_prec
  1439   001F98  C008  F0B6         	movff	?_atoi+1,_prec+1
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1442   001F9C  EFD7  F00F         	goto	l3926
  1443   001FA0                     l3922:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1446   001FA0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1447   001FA4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1448   001FA8  2ADE               	incf	postinc2,f,c
  1449   001FAA  0E00               	movlw	0
  1450   001FAC  22DD               	addwfc	postdec2,f,c
  1451   001FAE                     l3926:
  1452   001FAE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1453   001FB2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1454   001FB6  CFDE FFF6          	movff	postinc2,tblptrl
  1455   001FBA  CFDD FFF7          	movff	postdec2,tblptrh
  1456   001FBE                     	if	0	;tblptru may be non-zero
  1457   001FBE                     	endif
  1458   001FBE                     	if	0	;tblptru may be non-zero
  1459   001FBE                     	endif
  1460   001FBE  0008               	tblrd		*
  1461   001FC0  CFF5 F04D          	movff	tablat,??_vfpfcnvrt
  1462   001FC4  0ED0               	movlw	208
  1463   001FC6  244D               	addwf	??_vfpfcnvrt^0,w,c
  1464   001FC8  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  1465   001FCA  6A4F               	clrf	(??_vfpfcnvrt+2)^0,c
  1466   001FCC  0EFF               	movlw	255
  1467   001FCE  224F               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1468   001FD0  504F               	movf	(??_vfpfcnvrt+2)^0,w,c
  1469   001FD2  E109               	bnz	u4010
  1470   001FD4  0E0A               	movlw	10
  1471   001FD6  5C4E               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1472   001FD8  A0D8               	btfss	status,0,c
  1473   001FDA  EFF1  F00F         	goto	u4011
  1474   001FDE  EFF3  F00F         	goto	u4010
  1475   001FE2                     u4011:
  1476   001FE2  EFD0  F00F         	goto	l3922
  1477   001FE6                     u4010:
  1478   001FE6                     l3928:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1481   001FE6  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1482   001FEA  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1483   001FEE  CFDE F059          	movff	postinc2,vfpfcnvrt@cp
  1484   001FF2  CFDD F05A          	movff	postdec2,vfpfcnvrt@cp+1
  1485   001FF6                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1487   001FF6  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1488   001FFA  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1489   001FFE                     	if	0	;tblptru may be non-zero
  1490   001FFE                     	endif
  1491   001FFE                     	if	0	;tblptru may be non-zero
  1492   001FFE                     	endif
  1493   001FFE  0008               	tblrd		*
  1494   002000  CFF5 F058          	movff	tablat,vfpfcnvrt@c
  1495                           
  1496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1497   002004  EF10  F010         	goto	l3940
  1498   002008                     l3932:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1501   002008  4A59               	infsnz	vfpfcnvrt@cp^0,f,c
  1502   00200A  2A5A               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1505   00200C  EF29  F010         	goto	l3942
  1506   002010                     l3934:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1509   002010  0E6C               	movlw	108
  1510   002012  6E58               	movwf	vfpfcnvrt@c^0,c
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1513   002014  EF29  F010         	goto	l3942
  1514   002018                     l3936:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1517   002018  0E00               	movlw	0
  1518   00201A  6E58               	movwf	vfpfcnvrt@c^0,c
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1521   00201C  EF29  F010         	goto	l3942
  1522   002020                     l3940:
  1523   002020  5058               	movf	vfpfcnvrt@c^0,w,c
  1524   002022  6E4D               	movwf	??_vfpfcnvrt^0,c
  1525   002024  6A4E               	clrf	(??_vfpfcnvrt+1)^0,c
  1526                           
  1527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1528                           ; Switch size 1, requested type "simple"
  1529                           ; Number of cases is 1, Range of values is 0 to 0
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte            4     3 (average)
  1533                           ;	Chosen strategy is simple_byte
  1534   002026  504E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1535   002028  0A00               	xorlw	0	; case 0
  1536   00202A  B4D8               	btfsc	status,2,c
  1537   00202C  EF1A  F010         	goto	l4398
  1538   002030  EF0C  F010         	goto	l3936
  1539   002034                     l4398:
  1540                           
  1541                           ; Switch size 1, requested type "simple"
  1542                           ; Number of cases is 3, Range of values is 76 to 108
  1543                           ; switch strategies available:
  1544                           ; Name         Instructions Cycles
  1545                           ; simple_byte           10     6 (average)
  1546                           ;	Chosen strategy is simple_byte
  1547   002034  504D               	movf	??_vfpfcnvrt^0,w,c
  1548   002036  0A4C               	xorlw	76	; case 76
  1549   002038  B4D8               	btfsc	status,2,c
  1550   00203A  EF04  F010         	goto	l3932
  1551   00203E  0A2A               	xorlw	42	; case 102
  1552   002040  B4D8               	btfsc	status,2,c
  1553   002042  EF08  F010         	goto	l3934
  1554   002046  0A0A               	xorlw	10	; case 108
  1555   002048  B4D8               	btfsc	status,2,c
  1556   00204A  EF04  F010         	goto	l3932
  1557   00204E  EF0C  F010         	goto	l3936
  1558   002052                     l3942:
  1559   002052  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1560   002056  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1561   00205A                     	if	0	;tblptru may be non-zero
  1562   00205A                     	endif
  1563   00205A                     	if	0	;tblptru may be non-zero
  1564   00205A                     	endif
  1565   00205A  0008               	tblrd		*
  1566   00205C  50F5               	movf	tablat,w,c
  1567   00205E  0A66               	xorlw	102
  1568   002060  A4D8               	btfss	status,2,c
  1569   002062  EF35  F010         	goto	u4021
  1570   002066  EF37  F010         	goto	u4020
  1571   00206A                     u4021:
  1572   00206A  EFBF  F010         	goto	l3962
  1573   00206E                     u4020:
  1574   00206E  EF6D  F010         	goto	l3950
  1575   002072                     l3944:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1578   002072  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1579   002076  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1580   00207A  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1581   00207E  0E04               	movlw	4
  1582   002080  26DE               	addwf	postinc2,f,c
  1583   002082  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1584   002086  0E00               	movlw	0
  1585   002088  22DD               	addwfc	postdec2,f,c
  1586   00208A  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1587   00208E  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1588   002092  CFDE F050          	movff	postinc2,vfpfcnvrt@convarg
  1589   002096  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg+1
  1590   00209A  CFDE F052          	movff	postinc2,vfpfcnvrt@convarg+2
  1591   00209E  CFDE F053          	movff	postinc2,vfpfcnvrt@convarg+3
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1594   0020A2  EF82  F010         	goto	l3952
  1595   0020A6                     l3946:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1598   0020A6  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1599   0020AA  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1600   0020AE  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1601   0020B2  0E04               	movlw	4
  1602   0020B4  26DE               	addwf	postinc2,f,c
  1603   0020B6  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1604   0020BA  0E00               	movlw	0
  1605   0020BC  22DD               	addwfc	postdec2,f,c
  1606   0020BE  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1607   0020C2  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1608   0020C6  CFDE F050          	movff	postinc2,vfpfcnvrt@convarg
  1609   0020CA  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg+1
  1610   0020CE  CFDE F052          	movff	postinc2,vfpfcnvrt@convarg+2
  1611   0020D2  CFDE F053          	movff	postinc2,vfpfcnvrt@convarg+3
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1614   0020D6  EF82  F010         	goto	l3952
  1615   0020DA                     l3950:
  1616   0020DA  5058               	movf	vfpfcnvrt@c^0,w,c
  1617   0020DC  6E4D               	movwf	??_vfpfcnvrt^0,c
  1618   0020DE  6A4E               	clrf	(??_vfpfcnvrt+1)^0,c
  1619                           
  1620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1621                           ; Switch size 1, requested type "simple"
  1622                           ; Number of cases is 1, Range of values is 0 to 0
  1623                           ; switch strategies available:
  1624                           ; Name         Instructions Cycles
  1625                           ; simple_byte            4     3 (average)
  1626                           ;	Chosen strategy is simple_byte
  1627   0020E0  504E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1628   0020E2  0A00               	xorlw	0	; case 0
  1629   0020E4  B4D8               	btfsc	status,2,c
  1630   0020E6  EF77  F010         	goto	l4400
  1631   0020EA  EF82  F010         	goto	l3952
  1632   0020EE                     l4400:
  1633                           
  1634                           ; Switch size 1, requested type "simple"
  1635                           ; Number of cases is 2, Range of values is 76 to 108
  1636                           ; switch strategies available:
  1637                           ; Name         Instructions Cycles
  1638                           ; simple_byte            7     4 (average)
  1639                           ;	Chosen strategy is simple_byte
  1640   0020EE  504D               	movf	??_vfpfcnvrt^0,w,c
  1641   0020F0  0A4C               	xorlw	76	; case 76
  1642   0020F2  B4D8               	btfsc	status,2,c
  1643   0020F4  EF53  F010         	goto	l3946
  1644   0020F8  0A20               	xorlw	32	; case 108
  1645   0020FA  B4D8               	btfsc	status,2,c
  1646   0020FC  EF39  F010         	goto	l3944
  1647   002100  EF82  F010         	goto	l3952
  1648   002104                     l3952:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1651   002104  0E01               	movlw	1
  1652   002106  2459               	addwf	vfpfcnvrt@cp^0,w,c
  1653   002108  6E4D               	movwf	??_vfpfcnvrt^0,c
  1654   00210A  0E00               	movlw	0
  1655   00210C  205A               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1656   00210E  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  1657   002110  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1658   002114  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1659   002118  C04D  FFDE         	movff	??_vfpfcnvrt,postinc2
  1660   00211C  C04E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1663   002120  EFA9  F010         	goto	l3960
  1664   002124                     l3954:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1667   002124  C047  F03E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1668   002128  C048  F03F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1669   00212C  C050  F040         	movff	vfpfcnvrt@convarg,efgtoa@f
  1670   002130  C051  F041         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1671   002134  C052  F042         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1672   002138  C053  F043         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1673   00213C  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1674   002140  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1675   002144                     	if	0	;tblptru may be non-zero
  1676   002144                     	endif
  1677   002144                     	if	0	;tblptru may be non-zero
  1678   002144                     	endif
  1679   002144  0008               	tblrd		*
  1680   002146  CFF5 F044          	movff	tablat,efgtoa@c
  1681   00214A  EC13  F004         	call	_efgtoa	;wreg free
  1682   00214E  EFDC  F010         	goto	l1211
  1683   002152                     l3960:
  1684   002152  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1685   002156  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1686   00215A                     	if	0	;tblptru may be non-zero
  1687   00215A                     	endif
  1688   00215A                     	if	0	;tblptru may be non-zero
  1689   00215A                     	endif
  1690   00215A  0008               	tblrd		*
  1691   00215C  50F5               	movf	tablat,w,c
  1692   00215E  6E4D               	movwf	??_vfpfcnvrt^0,c
  1693   002160  6A4E               	clrf	(??_vfpfcnvrt+1)^0,c
  1694                           
  1695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1696                           ; Switch size 1, requested type "simple"
  1697                           ; Number of cases is 1, Range of values is 0 to 0
  1698                           ; switch strategies available:
  1699                           ; Name         Instructions Cycles
  1700                           ; simple_byte            4     3 (average)
  1701                           ;	Chosen strategy is simple_byte
  1702   002162  504E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1703   002164  0A00               	xorlw	0	; case 0
  1704   002166  B4D8               	btfsc	status,2,c
  1705   002168  EFB8  F010         	goto	l4402
  1706   00216C  EFBF  F010         	goto	l3962
  1707   002170                     l4402:
  1708                           
  1709                           ; Switch size 1, requested type "simple"
  1710                           ; Number of cases is 1, Range of values is 102 to 102
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; simple_byte            4     3 (average)
  1714                           ;	Chosen strategy is simple_byte
  1715   002170  504D               	movf	??_vfpfcnvrt^0,w,c
  1716   002172  0A66               	xorlw	102	; case 102
  1717   002174  B4D8               	btfsc	status,2,c
  1718   002176  EF92  F010         	goto	l3954
  1719   00217A  EFBF  F010         	goto	l3962
  1720   00217E                     l3962:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1723   00217E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1724   002182  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1725   002186  2ADE               	incf	postinc2,f,c
  1726   002188  0E00               	movlw	0
  1727   00218A  22DD               	addwfc	postdec2,f,c
  1728   00218C  EFDC  F010         	goto	l1211
  1729   002190                     l3966:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1732   002190  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1733   002194  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1734   002198  CFDE FFF6          	movff	postinc2,tblptrl
  1735   00219C  CFDD FFF7          	movff	postdec2,tblptrh
  1736   0021A0                     	if	0	;tblptru may be non-zero
  1737   0021A0                     	endif
  1738   0021A0                     	if	0	;tblptru may be non-zero
  1739   0021A0                     	endif
  1740   0021A0  0008               	tblrd		*
  1741   0021A2  50F5               	movf	tablat,w,c
  1742   0021A4  6E02               	movwf	fputc@c^0,c
  1743   0021A6  6A03               	clrf	(fputc@c+1)^0,c
  1744   0021A8  C047  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1745   0021AC  C048  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1746   0021B0  EC9A  F015         	call	_fputc	;wreg free
  1747   0021B4  EFBF  F010         	goto	l3962
  1748   0021B8                     l1211:
  1749   0021B8  0012               	return		;funcret
  1750   0021BA                     __end_of_vfpfcnvrt:
  1751                           	callstack 0
  1752                           
  1753 ;; *************** function _efgtoa *****************
  1754 ;; Defined at:
  1755 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1758 ;;		 -> sprintf@f(11), 
  1759 ;;  f               4   63[COMRAM] PTR struct _IO_FILE
  1760 ;;  c               1   67[COMRAM] unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  u               4   40[BANK0 ] struct flui
  1763 ;;  g               4   36[BANK0 ] struct flui
  1764 ;;  l               4   29[BANK0 ] struct flui
  1765 ;;  h               4   25[BANK0 ] struct flui
  1766 ;;  ou              4   19[BANK0 ] struct flui
  1767 ;;  n               2   34[BANK0 ] int 
  1768 ;;  i               2   23[BANK0 ] int 
  1769 ;;  w               2   17[BANK0 ] int 
  1770 ;;  e               2   15[BANK0 ] int 
  1771 ;;  m               2   13[BANK0 ] int 
  1772 ;;  d               2   11[BANK0 ] int 
  1773 ;;  t               2    4[BANK0 ] int 
  1774 ;;  p               2    2[BANK0 ] int 
  1775 ;;  ne              2    0[BANK0 ] int 
  1776 ;;  sign            1   33[BANK0 ] unsigned char 
  1777 ;;  nmode           1   10[BANK0 ] unsigned char 
  1778 ;;  mode            1    9[BANK0 ] unsigned char 
  1779 ;;  pp              1    8[BANK0 ] unsigned char 
  1780 ;;  esign           1    0        unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1790 ;;      Params:         7       0       0       0       0       0       0       0       0
  1791 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1792 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1793 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1794 ;;Total ram usage:       53 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 4
  1797 ;; This function calls:
  1798 ;;		___fladd
  1799 ;;		___fldiv
  1800 ;;		___fleq
  1801 ;;		___flge
  1802 ;;		___flmul
  1803 ;;		___flneg
  1804 ;;		___flsub
  1805 ;;		___fltol
  1806 ;;		___fpclassifyf
  1807 ;;		_floorf
  1808 ;;		_labs
  1809 ;;		_memcpy
  1810 ;;		_pad
  1811 ;;		_strcpy
  1812 ;; This function is called by:
  1813 ;;		_vfpfcnvrt
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text4
  1818   000826                     __ptext4:
  1819                           	callstack 0
  1820   000826                     _efgtoa:
  1821                           	callstack 23
  1822   000826                     
  1823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1824   000826  0E00               	movlw	0
  1825   000828  0100               	movlb	0	; () banked
  1826   00082A  6F81               	movwf	efgtoa@sign& (0+255),b
  1827   00082C                     
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1830   00082C  C040  F084         	movff	efgtoa@f,efgtoa@g
  1831   000830  C041  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1832   000834  C042  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1833   000838  C043  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1834   00083C                     
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1837   00083C  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1838   00083E  EF25  F004         	goto	u3580
  1839   000842  EF23  F004         	goto	u3581
  1840   000846                     u3581:
  1841   000846  EF39  F004         	goto	l3634
  1842   00084A                     u3580:
  1843   00084A                     
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1846   00084A  0E01               	movlw	1
  1847   00084C  6F81               	movwf	efgtoa@sign& (0+255),b
  1848   00084E                     
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1851   00084E  C084  F001         	movff	efgtoa@g,___flneg@f1
  1852   000852  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1853   000856  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1854   00085A  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1855   00085E  ECE1  F018         	call	___flneg	;wreg free
  1856   000862  C001  F084         	movff	?___flneg,efgtoa@g
  1857   000866  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1858   00086A  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1859   00086E  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1860   000872                     l3634:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1863   000872  0E00               	movlw	0
  1864   000874  0100               	movlb	0	; () banked
  1865   000876  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1866   000878  0E00               	movlw	0
  1867   00087A  6F82               	movwf	efgtoa@n& (0+255),b
  1868   00087C                     
  1869                           ; BSR set to: 0
  1870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1871   00087C  C0B3  F071         	movff	_width,efgtoa@w
  1872   000880  C0B4  F072         	movff	_width+1,efgtoa@w+1
  1873   000884                     
  1874                           ; BSR set to: 0
  1875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1876   000884  5181               	movf	efgtoa@sign& (0+255),w,b
  1877   000886  B4D8               	btfsc	status,2,c
  1878   000888  EF48  F004         	goto	u3591
  1879   00088C  EF4A  F004         	goto	u3590
  1880   000890                     u3591:
  1881   000890  EF5E  F004         	goto	l3648
  1882   000894                     u3590:
  1883   000894                     
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1886   000894  5181               	movf	efgtoa@sign& (0+255),w,b
  1887   000896  A4D8               	btfss	status,2,c
  1888   000898  EF50  F004         	goto	u3601
  1889   00089C  EF52  F004         	goto	u3600
  1890   0008A0                     u3601:
  1891   0008A0  EF58  F004         	goto	l3644
  1892   0008A4                     u3600:
  1893   0008A4                     
  1894                           ; BSR set to: 0
  1895   0008A4  0E00               	movlw	0
  1896   0008A6  6F67               	movwf	(_efgtoa$1936+1)& (0+255),b
  1897   0008A8  0E2B               	movlw	43
  1898   0008AA  6F66               	movwf	_efgtoa$1936& (0+255),b
  1899   0008AC  EF5C  F004         	goto	l3646
  1900   0008B0                     l3644:
  1901                           
  1902                           ; BSR set to: 0
  1903   0008B0  0E00               	movlw	0
  1904   0008B2  6F67               	movwf	(_efgtoa$1936+1)& (0+255),b
  1905   0008B4  0E2D               	movlw	45
  1906   0008B6  6F66               	movwf	_efgtoa$1936& (0+255),b
  1907   0008B8                     l3646:
  1908                           
  1909                           ; BSR set to: 0
  1910   0008B8  C066  F081         	movff	_efgtoa$1936,efgtoa@sign
  1911   0008BC                     l3648:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1915   0008BC  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1916   0008C0  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1917   0008C4  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1918   0008C8  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1919   0008CC  EC1B  F015         	call	___fpclassifyf	;wreg free
  1920   0008D0  0401               	decf	?___fpclassifyf^0,w,c
  1921   0008D2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1922   0008D4  A4D8               	btfss	status,2,c
  1923   0008D6  EF6F  F004         	goto	u3611
  1924   0008DA  EF71  F004         	goto	u3610
  1925   0008DE                     u3611:
  1926   0008DE  EFA4  F004         	goto	l3666
  1927   0008E2                     u3610:
  1928   0008E2                     
  1929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1930   0008E2  0100               	movlb	0	; () banked
  1931   0008E4  5181               	movf	efgtoa@sign& (0+255),w,b
  1932   0008E6  B4D8               	btfsc	status,2,c
  1933   0008E8  EF78  F004         	goto	u3621
  1934   0008EC  EF7A  F004         	goto	u3620
  1935   0008F0                     u3621:
  1936   0008F0  EF83  F004         	goto	l3658
  1937   0008F4                     u3620:
  1938   0008F4                     
  1939                           ; BSR set to: 0
  1940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1941   0008F4  C081  F100         	movff	efgtoa@sign,_dbuf
  1942   0008F8                     
  1943                           ; BSR set to: 0
  1944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1945   0008F8  0771               	decf	efgtoa@w& (0+255),f,b
  1946   0008FA  A0D8               	btfss	status,0,c
  1947   0008FC  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1948   0008FE                     
  1949                           ; BSR set to: 0
  1950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1951   0008FE  0E00               	movlw	0
  1952   000900  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1953   000902  0E01               	movlw	1
  1954   000904  6F82               	movwf	efgtoa@n& (0+255),b
  1955   000906                     l3658:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1959   000906  0E00               	movlw	low _dbuf
  1960   000908  2582               	addwf	efgtoa@n& (0+255),w,b
  1961   00090A  6E01               	movwf	strcpy@dest^0,c
  1962   00090C  0E01               	movlw	high _dbuf
  1963   00090E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1964   000910  6E02               	movwf	(strcpy@dest+1)^0,c
  1965   000912  0E1D               	movlw	low STR_3
  1966   000914  6E03               	movwf	strcpy@src^0,c
  1967   000916  0E08               	movlw	high STR_3
  1968   000918  6E04               	movwf	(strcpy@src+1)^0,c
  1969   00091A  ECA3  F018         	call	_strcpy	;wreg free
  1970   00091E                     l3660:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1973   00091E  0100               	movlb	0	; () banked
  1974   000920  0EFD               	movlw	253
  1975   000922  2771               	addwf	efgtoa@w& (0+255),f,b
  1976   000924  0EFF               	movlw	255
  1977   000926  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1978   000928                     
  1979                           ; BSR set to: 0
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1981   000928  C03E  F012         	movff	efgtoa@fp,pad@fp
  1982   00092C  C03F  F013         	movff	efgtoa@fp+1,pad@fp+1
  1983   000930  0E00               	movlw	low _dbuf
  1984   000932  6E14               	movwf	pad@buf^0,c
  1985   000934  0E01               	movlw	high _dbuf
  1986   000936  6E15               	movwf	(pad@buf+1)^0,c
  1987   000938  C071  F016         	movff	efgtoa@w,pad@p
  1988   00093C  C072  F017         	movff	efgtoa@w+1,pad@p+1
  1989   000940  EC93  F016         	call	_pad	;wreg free
  1990   000944  EF0F  F009         	goto	l1143
  1991   000948                     l3666:
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1994   000948  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1995   00094C  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1996   000950  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1997   000954  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1998   000958  EC1B  F015         	call	___fpclassifyf	;wreg free
  1999   00095C  5001               	movf	?___fpclassifyf^0,w,c
  2000   00095E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2001   000960  A4D8               	btfss	status,2,c
  2002   000962  EFB5  F004         	goto	u3631
  2003   000966  EFB7  F004         	goto	u3630
  2004   00096A                     u3631:
  2005   00096A  EFD7  F004         	goto	l3684
  2006   00096E                     u3630:
  2007   00096E                     
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2009   00096E  0100               	movlb	0	; () banked
  2010   000970  5181               	movf	efgtoa@sign& (0+255),w,b
  2011   000972  B4D8               	btfsc	status,2,c
  2012   000974  EFBE  F004         	goto	u3641
  2013   000978  EFC0  F004         	goto	u3640
  2014   00097C                     u3641:
  2015   00097C  EFC9  F004         	goto	l3676
  2016   000980                     u3640:
  2017   000980                     
  2018                           ; BSR set to: 0
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2020   000980  C081  F100         	movff	efgtoa@sign,_dbuf
  2021   000984                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2024   000984  0771               	decf	efgtoa@w& (0+255),f,b
  2025   000986  A0D8               	btfss	status,0,c
  2026   000988  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2027   00098A                     
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2030   00098A  0E00               	movlw	0
  2031   00098C  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2032   00098E  0E01               	movlw	1
  2033   000990  6F82               	movwf	efgtoa@n& (0+255),b
  2034   000992                     l3676:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2038   000992  0E00               	movlw	low _dbuf
  2039   000994  2582               	addwf	efgtoa@n& (0+255),w,b
  2040   000996  6E01               	movwf	strcpy@dest^0,c
  2041   000998  0E01               	movlw	high _dbuf
  2042   00099A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2043   00099C  6E02               	movwf	(strcpy@dest+1)^0,c
  2044   00099E  0E21               	movlw	low STR_6
  2045   0009A0  6E03               	movwf	strcpy@src^0,c
  2046   0009A2  0E08               	movlw	high STR_6
  2047   0009A4  6E04               	movwf	(strcpy@src+1)^0,c
  2048   0009A6  ECA3  F018         	call	_strcpy	;wreg free
  2049   0009AA  EF8F  F004         	goto	l3660
  2050   0009AE                     l3684:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2053   0009AE  0E00               	movlw	0
  2054   0009B0  0100               	movlb	0	; () banked
  2055   0009B2  6F88               	movwf	efgtoa@u& (0+255),b
  2056   0009B4  0E00               	movlw	0
  2057   0009B6  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2058   0009B8  0E80               	movlw	128
  2059   0009BA  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2060   0009BC  0E3F               	movlw	63
  2061   0009BE  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2064   0009C0  0E00               	movlw	0
  2065   0009C2  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2066   0009C4  0E00               	movlw	0
  2067   0009C6  6F6F               	movwf	efgtoa@e& (0+255),b
  2068   0009C8                     
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2071   0009C8  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2072   0009CC  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2073   0009D0  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2074   0009D4  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2075   0009D8  0E00               	movlw	0
  2076   0009DA  6E05               	movwf	___fleq@ff2^0,c
  2077   0009DC  0E00               	movlw	0
  2078   0009DE  6E06               	movwf	(___fleq@ff2+1)^0,c
  2079   0009E0  0E00               	movlw	0
  2080   0009E2  6E07               	movwf	(___fleq@ff2+2)^0,c
  2081   0009E4  0E00               	movlw	0
  2082   0009E6  6E08               	movwf	(___fleq@ff2+3)^0,c
  2083   0009E8  ECFF  F015         	call	___fleq	;wreg free
  2084   0009EC  B0D8               	btfsc	status,0,c
  2085   0009EE  EFFB  F004         	goto	u3651
  2086   0009F2  EFFD  F004         	goto	u3650
  2087   0009F6                     u3651:
  2088   0009F6  EFDC  F005         	goto	l1146
  2089   0009FA                     u3650:
  2090   0009FA  EF0A  F005         	goto	l3692
  2091   0009FE                     l1148:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2094   0009FE  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2095   000A02  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2096   000A06  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2097   000A0A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2098   000A0E                     
  2099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2100   000A0E  0100               	movlb	0	; () banked
  2101   000A10  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2102   000A12  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2103   000A14                     l3692:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2106   000A14  C088  F016         	movff	efgtoa@u,___flmul@b
  2107   000A18  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2108   000A1C  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2109   000A20  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2110   000A24  0E00               	movlw	0
  2111   000A26  6E1A               	movwf	___flmul@a^0,c
  2112   000A28  0E00               	movlw	0
  2113   000A2A  6E1B               	movwf	(___flmul@a+1)^0,c
  2114   000A2C  0E20               	movlw	32
  2115   000A2E  6E1C               	movwf	(___flmul@a+2)^0,c
  2116   000A30  0E41               	movlw	65
  2117   000A32  6E1D               	movwf	(___flmul@a+3)^0,c
  2118   000A34  EC70  F00B         	call	___flmul	;wreg free
  2119   000A38  C016  F073         	movff	?___flmul,efgtoa@ou
  2120   000A3C  C017  F074         	movff	?___flmul+1,efgtoa@ou+1
  2121   000A40  C018  F075         	movff	?___flmul+2,efgtoa@ou+2
  2122   000A44  C019  F076         	movff	?___flmul+3,efgtoa@ou+3
  2123   000A48  0100               	movlb	0	; () banked
  2124   000A4A  5173               	movf	efgtoa@ou& (0+255),w,b
  2125   000A4C  5D84               	subwf	efgtoa@g& (0+255),w,b
  2126   000A4E  6E01               	movwf	labs@a^0,c
  2127   000A50  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2128   000A52  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2129   000A54  6E02               	movwf	(labs@a+1)^0,c
  2130   000A56  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2131   000A58  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2132   000A5A  6E03               	movwf	(labs@a+2)^0,c
  2133   000A5C  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2134   000A5E  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2135   000A60  6E04               	movwf	(labs@a+3)^0,c
  2136   000A62  EC0C  F017         	call	_labs	;wreg free
  2137   000A66  BE04               	btfsc	(?_labs+3)^0,7,c
  2138   000A68  EF41  F005         	goto	u3661
  2139   000A6C  5004               	movf	(?_labs+3)^0,w,c
  2140   000A6E  1003               	iorwf	(?_labs+2)^0,w,c
  2141   000A70  1002               	iorwf	(?_labs+1)^0,w,c
  2142   000A72  E109               	bnz	u3660
  2143   000A74  0E02               	movlw	2
  2144   000A76  5C01               	subwf	?_labs^0,w,c
  2145   000A78  A0D8               	btfss	status,0,c
  2146   000A7A  EF41  F005         	goto	u3661
  2147   000A7E  EF43  F005         	goto	u3660
  2148   000A82                     u3661:
  2149   000A82  EFFF  F004         	goto	l1148
  2150   000A86                     u3660:
  2151   000A86  C073  F02F         	movff	efgtoa@ou,___flge@ff1
  2152   000A8A  C074  F030         	movff	efgtoa@ou+1,___flge@ff1+1
  2153   000A8E  C075  F031         	movff	efgtoa@ou+2,___flge@ff1+2
  2154   000A92  C076  F032         	movff	efgtoa@ou+3,___flge@ff1+3
  2155   000A96  C084  F033         	movff	efgtoa@g,___flge@ff2
  2156   000A9A  C085  F034         	movff	efgtoa@g+1,___flge@ff2+1
  2157   000A9E  C086  F035         	movff	efgtoa@g+2,___flge@ff2+2
  2158   000AA2  C087  F036         	movff	efgtoa@g+3,___flge@ff2+3
  2159   000AA6  EC99  F014         	call	___flge	;wreg free
  2160   000AAA  A0D8               	btfss	status,0,c
  2161   000AAC  EF5A  F005         	goto	u3671
  2162   000AB0  EF5C  F005         	goto	u3670
  2163   000AB4                     u3671:
  2164   000AB4  EFFF  F004         	goto	l1148
  2165   000AB8                     u3670:
  2166   000AB8                     
  2167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2168   000AB8  0100               	movlb	0	; () banked
  2169   000ABA  5188               	movf	efgtoa@u& (0+255),w,b
  2170   000ABC  5D84               	subwf	efgtoa@g& (0+255),w,b
  2171   000ABE  6E01               	movwf	labs@a^0,c
  2172   000AC0  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2173   000AC2  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2174   000AC4  6E02               	movwf	(labs@a+1)^0,c
  2175   000AC6  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2176   000AC8  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2177   000ACA  6E03               	movwf	(labs@a+2)^0,c
  2178   000ACC  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2179   000ACE  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2180   000AD0  6E04               	movwf	(labs@a+3)^0,c
  2181   000AD2  EC0C  F017         	call	_labs	;wreg free
  2182   000AD6  BE04               	btfsc	(?_labs+3)^0,7,c
  2183   000AD8  EF7B  F005         	goto	u3680
  2184   000ADC  5004               	movf	(?_labs+3)^0,w,c
  2185   000ADE  1003               	iorwf	(?_labs+2)^0,w,c
  2186   000AE0  1002               	iorwf	(?_labs+1)^0,w,c
  2187   000AE2  E107               	bnz	u3681
  2188   000AE4  0E02               	movlw	2
  2189   000AE6  5C01               	subwf	?_labs^0,w,c
  2190   000AE8  B0D8               	btfsc	status,0,c
  2191   000AEA  EF79  F005         	goto	u3681
  2192   000AEE  EF7B  F005         	goto	u3680
  2193   000AF2                     u3681:
  2194   000AF2  EFC3  F005         	goto	l3710
  2195   000AF6                     u3680:
  2196   000AF6                     l3700:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2199   000AF6  C088  F084         	movff	efgtoa@u,efgtoa@g
  2200   000AFA  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2201   000AFE  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2202   000B02  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2205   000B06  EFDC  F005         	goto	l1146
  2206   000B0A                     l3702:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2209   000B0A  C088  F011         	movff	efgtoa@u,___fldiv@b
  2210   000B0E  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  2211   000B12  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  2212   000B16  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  2213   000B1A  0E00               	movlw	0
  2214   000B1C  6E15               	movwf	___fldiv@a^0,c
  2215   000B1E  0E00               	movlw	0
  2216   000B20  6E16               	movwf	(___fldiv@a+1)^0,c
  2217   000B22  0E20               	movlw	32
  2218   000B24  6E17               	movwf	(___fldiv@a+2)^0,c
  2219   000B26  0E41               	movlw	65
  2220   000B28  6E18               	movwf	(___fldiv@a+3)^0,c
  2221   000B2A  EC85  F00D         	call	___fldiv	;wreg free
  2222   000B2E  C011  F088         	movff	?___fldiv,efgtoa@u
  2223   000B32  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  2224   000B36  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2225   000B3A  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2226   000B3E                     
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2228   000B3E  0100               	movlb	0	; () banked
  2229   000B40  076F               	decf	efgtoa@e& (0+255),f,b
  2230   000B42  A0D8               	btfss	status,0,c
  2231   000B44  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2232   000B46                     
  2233                           ; BSR set to: 0
  2234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2235   000B46  5188               	movf	efgtoa@u& (0+255),w,b
  2236   000B48  5D84               	subwf	efgtoa@g& (0+255),w,b
  2237   000B4A  6E01               	movwf	labs@a^0,c
  2238   000B4C  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2239   000B4E  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2240   000B50  6E02               	movwf	(labs@a+1)^0,c
  2241   000B52  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2242   000B54  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2243   000B56  6E03               	movwf	(labs@a+2)^0,c
  2244   000B58  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2245   000B5A  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2246   000B5C  6E04               	movwf	(labs@a+3)^0,c
  2247   000B5E  EC0C  F017         	call	_labs	;wreg free
  2248   000B62  BE04               	btfsc	(?_labs+3)^0,7,c
  2249   000B64  EFC1  F005         	goto	u3690
  2250   000B68  5004               	movf	(?_labs+3)^0,w,c
  2251   000B6A  1003               	iorwf	(?_labs+2)^0,w,c
  2252   000B6C  1002               	iorwf	(?_labs+1)^0,w,c
  2253   000B6E  E107               	bnz	u3691
  2254   000B70  0E02               	movlw	2
  2255   000B72  5C01               	subwf	?_labs^0,w,c
  2256   000B74  B0D8               	btfsc	status,0,c
  2257   000B76  EFBF  F005         	goto	u3691
  2258   000B7A  EFC1  F005         	goto	u3690
  2259   000B7E                     u3691:
  2260   000B7E  EFC3  F005         	goto	l3710
  2261   000B82                     u3690:
  2262   000B82  EF7B  F005         	goto	l3700
  2263   000B86                     l3710:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2266   000B86  C084  F02F         	movff	efgtoa@g,___flge@ff1
  2267   000B8A  C085  F030         	movff	efgtoa@g+1,___flge@ff1+1
  2268   000B8E  C086  F031         	movff	efgtoa@g+2,___flge@ff1+2
  2269   000B92  C087  F032         	movff	efgtoa@g+3,___flge@ff1+3
  2270   000B96  C088  F033         	movff	efgtoa@u,___flge@ff2
  2271   000B9A  C089  F034         	movff	efgtoa@u+1,___flge@ff2+1
  2272   000B9E  C08A  F035         	movff	efgtoa@u+2,___flge@ff2+2
  2273   000BA2  C08B  F036         	movff	efgtoa@u+3,___flge@ff2+3
  2274   000BA6  EC99  F014         	call	___flge	;wreg free
  2275   000BAA  A0D8               	btfss	status,0,c
  2276   000BAC  EFDA  F005         	goto	u3701
  2277   000BB0  EFDC  F005         	goto	u3700
  2278   000BB4                     u3701:
  2279   000BB4  EF85  F005         	goto	l3702
  2280   000BB8                     u3700:
  2281   000BB8                     l1146:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2284   000BB8  C044  F069         	movff	efgtoa@c,efgtoa@mode
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2287   000BBC  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2288   000BC0                     
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2290   000BC0  0100               	movlb	0	; () banked
  2291   000BC2  BFB6               	btfsc	(_prec+1)& (0+255),7,b
  2292   000BC4  EFE6  F005         	goto	u3711
  2293   000BC8  EFE8  F005         	goto	u3710
  2294   000BCC                     u3711:
  2295   000BCC  EFEE  F005         	goto	l3716
  2296   000BD0                     u3710:
  2297   000BD0                     
  2298                           ; BSR set to: 0
  2299   000BD0  C0B5  F062         	movff	_prec,efgtoa@p
  2300   000BD4  C0B6  F063         	movff	_prec+1,efgtoa@p+1
  2301   000BD8  EFF2  F005         	goto	l3718
  2302   000BDC                     l3716:
  2303                           
  2304                           ; BSR set to: 0
  2305   000BDC  0E00               	movlw	0
  2306   000BDE  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2307   000BE0  0E06               	movlw	6
  2308   000BE2  6F62               	movwf	efgtoa@p& (0+255),b
  2309   000BE4                     l3718:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2313   000BE4  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2314   000BE8  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2315   000BEC                     
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2318   000BEC  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2319   000BEE  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2320   000BF0                     
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2323   000BF0  0E66               	movlw	102
  2324   000BF2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2325   000BF4  A4D8               	btfss	status,2,c
  2326   000BF6  EFFF  F005         	goto	u3721
  2327   000BFA  EF01  F006         	goto	u3720
  2328   000BFE                     u3721:
  2329   000BFE  EF21  F006         	goto	l3732
  2330   000C02                     u3720:
  2331   000C02                     
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2334   000C02  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2335   000C04  EF08  F006         	goto	u3730
  2336   000C08  EF06  F006         	goto	u3731
  2337   000C0C                     u3731:
  2338   000C0C  EF14  F006         	goto	l3728
  2339   000C10                     u3730:
  2340   000C10                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2343   000C10  0E00               	movlw	0
  2344   000C12  6F88               	movwf	efgtoa@u& (0+255),b
  2345   000C14  0E00               	movlw	0
  2346   000C16  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2347   000C18  0E80               	movlw	128
  2348   000C1A  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2349   000C1C  0E3F               	movlw	63
  2350   000C1E  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2353   000C20  0E00               	movlw	0
  2354   000C22  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2355   000C24  0E00               	movlw	0
  2356   000C26  6F6F               	movwf	efgtoa@e& (0+255),b
  2357   000C28                     l3728:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2361   000C28  0E67               	movlw	103
  2362   000C2A  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2363   000C2C  B4D8               	btfsc	status,2,c
  2364   000C2E  EF1B  F006         	goto	u3741
  2365   000C32  EF1D  F006         	goto	u3740
  2366   000C36                     u3741:
  2367   000C36  EF21  F006         	goto	l3732
  2368   000C3A                     u3740:
  2369   000C3A                     
  2370                           ; BSR set to: 0
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2372   000C3A  516F               	movf	efgtoa@e& (0+255),w,b
  2373   000C3C  276D               	addwf	efgtoa@m& (0+255),f,b
  2374   000C3E  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2375   000C40  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2376   000C42                     l3732:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2380   000C42  0E00               	movlw	0
  2381   000C44  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2382   000C46  0E00               	movlw	0
  2383   000C48  6F77               	movwf	efgtoa@i& (0+255),b
  2384   000C4A                     
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2387   000C4A  C084  F079         	movff	efgtoa@g,efgtoa@h
  2388   000C4E  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2389   000C52  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2390   000C56  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2391   000C5A                     
  2392                           ; BSR set to: 0
  2393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2394   000C5A  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2395   000C5E  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2396   000C62  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2397   000C66  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2400   000C6A  EFB2  F006         	goto	l3746
  2401   000C6E                     l3738:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2405   000C6E  C079  F011         	movff	efgtoa@h,___fldiv@b
  2406   000C72  C07A  F012         	movff	efgtoa@h+1,___fldiv@b+1
  2407   000C76  C07B  F013         	movff	efgtoa@h+2,___fldiv@b+2
  2408   000C7A  C07C  F014         	movff	efgtoa@h+3,___fldiv@b+3
  2409   000C7E  C088  F015         	movff	efgtoa@u,___fldiv@a
  2410   000C82  C089  F016         	movff	efgtoa@u+1,___fldiv@a+1
  2411   000C86  C08A  F017         	movff	efgtoa@u+2,___fldiv@a+2
  2412   000C8A  C08B  F018         	movff	efgtoa@u+3,___fldiv@a+3
  2413   000C8E  EC85  F00D         	call	___fldiv	;wreg free
  2414   000C92  C011  F02A         	movff	?___fldiv,floorf@x
  2415   000C96  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  2416   000C9A  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  2417   000C9E  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  2418   000CA2  ECDD  F010         	call	_floorf	;wreg free
  2419   000CA6  C02A  F07D         	movff	?_floorf,efgtoa@l
  2420   000CAA  C02B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2421   000CAE  C02C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2422   000CB2  C02D  F080         	movff	?_floorf+3,efgtoa@l+3
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2425   000CB6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2426   000CBA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2427   000CBE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2428   000CC2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2429   000CC6  EC16  F014         	call	___fltol	;wreg free
  2430   000CCA  C001  F06B         	movff	?___fltol,efgtoa@d
  2431   000CCE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2432   000CD2                     
  2433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2434   000CD2  C079  F02F         	movff	efgtoa@h,___flsub@b
  2435   000CD6  C07A  F030         	movff	efgtoa@h+1,___flsub@b+1
  2436   000CDA  C07B  F031         	movff	efgtoa@h+2,___flsub@b+2
  2437   000CDE  C07C  F032         	movff	efgtoa@h+3,___flsub@b+3
  2438   000CE2  C07D  F01A         	movff	efgtoa@l,___flmul@a
  2439   000CE6  C07E  F01B         	movff	efgtoa@l+1,___flmul@a+1
  2440   000CEA  C07F  F01C         	movff	efgtoa@l+2,___flmul@a+2
  2441   000CEE  C080  F01D         	movff	efgtoa@l+3,___flmul@a+3
  2442   000CF2  C088  F016         	movff	efgtoa@u,___flmul@b
  2443   000CF6  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2444   000CFA  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2445   000CFE  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2446   000D02  EC70  F00B         	call	___flmul	;wreg free
  2447   000D06  C016  F033         	movff	?___flmul,___flsub@a
  2448   000D0A  C017  F034         	movff	?___flmul+1,___flsub@a+1
  2449   000D0E  C018  F035         	movff	?___flmul+2,___flsub@a+2
  2450   000D12  C019  F036         	movff	?___flmul+3,___flsub@a+3
  2451   000D16  EC19  F018         	call	___flsub	;wreg free
  2452   000D1A  C02F  F079         	movff	?___flsub,efgtoa@h
  2453   000D1E  C030  F07A         	movff	?___flsub+1,efgtoa@h+1
  2454   000D22  C031  F07B         	movff	?___flsub+2,efgtoa@h+2
  2455   000D26  C032  F07C         	movff	?___flsub+3,efgtoa@h+3
  2456   000D2A                     
  2457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2458   000D2A  C088  F011         	movff	efgtoa@u,___fldiv@b
  2459   000D2E  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  2460   000D32  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  2461   000D36  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  2462   000D3A  0E00               	movlw	0
  2463   000D3C  6E15               	movwf	___fldiv@a^0,c
  2464   000D3E  0E00               	movlw	0
  2465   000D40  6E16               	movwf	(___fldiv@a+1)^0,c
  2466   000D42  0E20               	movlw	32
  2467   000D44  6E17               	movwf	(___fldiv@a+2)^0,c
  2468   000D46  0E41               	movlw	65
  2469   000D48  6E18               	movwf	(___fldiv@a+3)^0,c
  2470   000D4A  EC85  F00D         	call	___fldiv	;wreg free
  2471   000D4E  C011  F088         	movff	?___fldiv,efgtoa@u
  2472   000D52  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  2473   000D56  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2474   000D5A  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2475   000D5E                     
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2477   000D5E  0100               	movlb	0	; () banked
  2478   000D60  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2479   000D62  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2480   000D64                     l3746:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2484   000D64  516D               	movf	efgtoa@m& (0+255),w,b
  2485   000D66  5D77               	subwf	efgtoa@i& (0+255),w,b
  2486   000D68  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2487   000D6A  0A80               	xorlw	128
  2488   000D6C  6E45               	movwf	??_efgtoa^0,c
  2489   000D6E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2490   000D70  0A80               	xorlw	128
  2491   000D72  5845               	subwfb	??_efgtoa^0,w,c
  2492   000D74  A0D8               	btfss	status,0,c
  2493   000D76  EFBF  F006         	goto	u3751
  2494   000D7A  EFC1  F006         	goto	u3750
  2495   000D7E                     u3751:
  2496   000D7E  EF37  F006         	goto	l3738
  2497   000D82                     u3750:
  2498   000D82                     
  2499                           ; BSR set to: 0
  2500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2501   000D82  C088  F016         	movff	efgtoa@u,___flmul@b
  2502   000D86  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2503   000D8A  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2504   000D8E  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2505   000D92  0E00               	movlw	0
  2506   000D94  6E1A               	movwf	___flmul@a^0,c
  2507   000D96  0E00               	movlw	0
  2508   000D98  6E1B               	movwf	(___flmul@a+1)^0,c
  2509   000D9A  0EA0               	movlw	160
  2510   000D9C  6E1C               	movwf	(___flmul@a+2)^0,c
  2511   000D9E  0E40               	movlw	64
  2512   000DA0  6E1D               	movwf	(___flmul@a+3)^0,c
  2513   000DA2  EC70  F00B         	call	___flmul	;wreg free
  2514   000DA6  C016  F07D         	movff	?___flmul,efgtoa@l
  2515   000DAA  C017  F07E         	movff	?___flmul+1,efgtoa@l+1
  2516   000DAE  C018  F07F         	movff	?___flmul+2,efgtoa@l+2
  2517   000DB2  C019  F080         	movff	?___flmul+3,efgtoa@l+3
  2518   000DB6                     
  2519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2520   000DB6  C079  F02F         	movff	efgtoa@h,___flge@ff1
  2521   000DBA  C07A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  2522   000DBE  C07B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  2523   000DC2  C07C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  2524   000DC6  C07D  F033         	movff	efgtoa@l,___flge@ff2
  2525   000DCA  C07E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  2526   000DCE  C07F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  2527   000DD2  C080  F036         	movff	efgtoa@l+3,___flge@ff2+3
  2528   000DD6  EC99  F014         	call	___flge	;wreg free
  2529   000DDA  B0D8               	btfsc	status,0,c
  2530   000DDC  EFF2  F006         	goto	u3761
  2531   000DE0  EFF4  F006         	goto	u3760
  2532   000DE4                     u3761:
  2533   000DE4  EFFF  F006         	goto	l3754
  2534   000DE8                     u3760:
  2535   000DE8                     
  2536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2537   000DE8  0E00               	movlw	0
  2538   000DEA  0100               	movlb	0	; () banked
  2539   000DEC  6F7D               	movwf	efgtoa@l& (0+255),b
  2540   000DEE  0E00               	movlw	0
  2541   000DF0  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2542   000DF2  0E00               	movlw	0
  2543   000DF4  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2544   000DF6  0E00               	movlw	0
  2545   000DF8  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2548   000DFA  EF28  F007         	goto	l3760
  2549   000DFE                     l3754:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2552   000DFE  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2553   000E02  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2554   000E06  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2555   000E0A  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2556   000E0E  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2557   000E12  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2558   000E16  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2559   000E1A  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2560   000E1E  ECFF  F015         	call	___fleq	;wreg free
  2561   000E22  A0D8               	btfss	status,0,c
  2562   000E24  EF16  F007         	goto	u3771
  2563   000E28  EF18  F007         	goto	u3770
  2564   000E2C                     u3771:
  2565   000E2C  EF28  F007         	goto	l3760
  2566   000E30                     u3770:
  2567   000E30  0100               	movlb	0	; () banked
  2568   000E32  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2569   000E34  EF1E  F007         	goto	u3781
  2570   000E38  EF20  F007         	goto	u3780
  2571   000E3C                     u3781:
  2572   000E3C  EF28  F007         	goto	l3760
  2573   000E40                     u3780:
  2574   000E40                     
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2577   000E40  0E00               	movlw	0
  2578   000E42  6F7D               	movwf	efgtoa@l& (0+255),b
  2579   000E44  0E00               	movlw	0
  2580   000E46  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2581   000E48  0E00               	movlw	0
  2582   000E4A  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2583   000E4C  0E00               	movlw	0
  2584   000E4E  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2585   000E50                     l3760:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2588   000E50  C084  F001         	movff	efgtoa@g,___fladd@b
  2589   000E54  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2590   000E58  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2591   000E5C  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2592   000E60  C07D  F005         	movff	efgtoa@l,___fladd@a
  2593   000E64  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2594   000E68  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2595   000E6C  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2596   000E70  EC10  F009         	call	___fladd	;wreg free
  2597   000E74  C001  F079         	movff	?___fladd,efgtoa@h
  2598   000E78  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2599   000E7C  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2600   000E80  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2601   000E84                     
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2603   000E84  C079  F02F         	movff	efgtoa@h,___flge@ff1
  2604   000E88  C07A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  2605   000E8C  C07B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  2606   000E90  C07C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  2607   000E94  0E00               	movlw	0
  2608   000E96  6E1A               	movwf	___flmul@a^0,c
  2609   000E98  0E00               	movlw	0
  2610   000E9A  6E1B               	movwf	(___flmul@a+1)^0,c
  2611   000E9C  0E20               	movlw	32
  2612   000E9E  6E1C               	movwf	(___flmul@a+2)^0,c
  2613   000EA0  0E41               	movlw	65
  2614   000EA2  6E1D               	movwf	(___flmul@a+3)^0,c
  2615   000EA4  C073  F016         	movff	efgtoa@ou,___flmul@b
  2616   000EA8  C074  F017         	movff	efgtoa@ou+1,___flmul@b+1
  2617   000EAC  C075  F018         	movff	efgtoa@ou+2,___flmul@b+2
  2618   000EB0  C076  F019         	movff	efgtoa@ou+3,___flmul@b+3
  2619   000EB4  EC70  F00B         	call	___flmul	;wreg free
  2620   000EB8  C016  F033         	movff	?___flmul,___flge@ff2
  2621   000EBC  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  2622   000EC0  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  2623   000EC4  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  2624   000EC8  EC99  F014         	call	___flge	;wreg free
  2625   000ECC  A0D8               	btfss	status,0,c
  2626   000ECE  EF6B  F007         	goto	u3791
  2627   000ED2  EF6D  F007         	goto	u3790
  2628   000ED6                     u3791:
  2629   000ED6  EF96  F007         	goto	l3772
  2630   000EDA                     u3790:
  2631   000EDA                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2633   000EDA  0100               	movlb	0	; () banked
  2634   000EDC  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2635   000EDE  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2636   000EE0                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2639   000EE0  C073  F016         	movff	efgtoa@ou,___flmul@b
  2640   000EE4  C074  F017         	movff	efgtoa@ou+1,___flmul@b+1
  2641   000EE8  C075  F018         	movff	efgtoa@ou+2,___flmul@b+2
  2642   000EEC  C076  F019         	movff	efgtoa@ou+3,___flmul@b+3
  2643   000EF0  0E00               	movlw	0
  2644   000EF2  6E1A               	movwf	___flmul@a^0,c
  2645   000EF4  0E00               	movlw	0
  2646   000EF6  6E1B               	movwf	(___flmul@a+1)^0,c
  2647   000EF8  0E20               	movlw	32
  2648   000EFA  6E1C               	movwf	(___flmul@a+2)^0,c
  2649   000EFC  0E41               	movlw	65
  2650   000EFE  6E1D               	movwf	(___flmul@a+3)^0,c
  2651   000F00  EC70  F00B         	call	___flmul	;wreg free
  2652   000F04  C016  F073         	movff	?___flmul,efgtoa@ou
  2653   000F08  C017  F074         	movff	?___flmul+1,efgtoa@ou+1
  2654   000F0C  C018  F075         	movff	?___flmul+2,efgtoa@ou+2
  2655   000F10  C019  F076         	movff	?___flmul+3,efgtoa@ou+3
  2656   000F14                     
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2658   000F14  0E66               	movlw	102
  2659   000F16  0100               	movlb	0	; () banked
  2660   000F18  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2661   000F1A  A4D8               	btfss	status,2,c
  2662   000F1C  EF92  F007         	goto	u3801
  2663   000F20  EF94  F007         	goto	u3800
  2664   000F24                     u3801:
  2665   000F24  EF96  F007         	goto	l3772
  2666   000F28                     u3800:
  2667   000F28                     
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2670   000F28  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2671   000F2A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2672   000F2C                     l3772:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2675   000F2C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2676   000F30  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2677   000F34  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2678   000F38  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2679   000F3C                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2681   000F3C  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2682   000F40  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2683   000F44                     
  2684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2685   000F44  0E00               	movlw	0
  2686   000F46  0100               	movlb	0	; () banked
  2687   000F48  6F68               	movwf	efgtoa@pp& (0+255),b
  2688   000F4A                     
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2691   000F4A  0E00               	movlw	0
  2692   000F4C  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2693   000F4E  0E00               	movlw	0
  2694   000F50  6F64               	movwf	efgtoa@t& (0+255),b
  2695   000F52                     
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2698   000F52  0E00               	movlw	0
  2699   000F54  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2700   000F56  0E00               	movlw	0
  2701   000F58  6F77               	movwf	efgtoa@i& (0+255),b
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2704   000F5A  EF94  F008         	goto	l3822
  2705   000F5E                     l3782:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2709   000F5E  C079  F011         	movff	efgtoa@h,___fldiv@b
  2710   000F62  C07A  F012         	movff	efgtoa@h+1,___fldiv@b+1
  2711   000F66  C07B  F013         	movff	efgtoa@h+2,___fldiv@b+2
  2712   000F6A  C07C  F014         	movff	efgtoa@h+3,___fldiv@b+3
  2713   000F6E  C088  F015         	movff	efgtoa@u,___fldiv@a
  2714   000F72  C089  F016         	movff	efgtoa@u+1,___fldiv@a+1
  2715   000F76  C08A  F017         	movff	efgtoa@u+2,___fldiv@a+2
  2716   000F7A  C08B  F018         	movff	efgtoa@u+3,___fldiv@a+3
  2717   000F7E  EC85  F00D         	call	___fldiv	;wreg free
  2718   000F82  C011  F02A         	movff	?___fldiv,floorf@x
  2719   000F86  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  2720   000F8A  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  2721   000F8E  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  2722   000F92  ECDD  F010         	call	_floorf	;wreg free
  2723   000F96  C02A  F07D         	movff	?_floorf,efgtoa@l
  2724   000F9A  C02B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2725   000F9E  C02C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2726   000FA2  C02D  F080         	movff	?_floorf+3,efgtoa@l+3
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2729   000FA6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2730   000FAA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2731   000FAE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2732   000FB2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2733   000FB6  EC16  F014         	call	___fltol	;wreg free
  2734   000FBA  BE02               	btfsc	(?___fltol+1)^0,7,c
  2735   000FBC  EFEB  F007         	goto	u3810
  2736   000FC0  5002               	movf	(?___fltol+1)^0,w,c
  2737   000FC2  E107               	bnz	u3811
  2738   000FC4  0E0A               	movlw	10
  2739   000FC6  5C01               	subwf	?___fltol^0,w,c
  2740   000FC8  B0D8               	btfsc	status,0,c
  2741   000FCA  EFE9  F007         	goto	u3811
  2742   000FCE  EFEB  F007         	goto	u3810
  2743   000FD2                     u3811:
  2744   000FD2  EFFB  F007         	goto	l3786
  2745   000FD6                     u3810:
  2746   000FD6  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2747   000FDA  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2748   000FDE  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2749   000FE2  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2750   000FE6  EC16  F014         	call	___fltol	;wreg free
  2751   000FEA  C001  F06B         	movff	?___fltol,efgtoa@d
  2752   000FEE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2753   000FF2  EF00  F008         	goto	l1176
  2754   000FF6                     l3786:
  2755   000FF6  0E00               	movlw	0
  2756   000FF8  0100               	movlb	0	; () banked
  2757   000FFA  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2758   000FFC  0E09               	movlw	9
  2759   000FFE  6F6B               	movwf	efgtoa@d& (0+255),b
  2760   001000                     l1176:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2763   001000  0100               	movlb	0	; () banked
  2764   001002  5168               	movf	efgtoa@pp& (0+255),w,b
  2765   001004  A4D8               	btfss	status,2,c
  2766   001006  EF07  F008         	goto	u3821
  2767   00100A  EF09  F008         	goto	u3820
  2768   00100E                     u3821:
  2769   00100E  EF31  F008         	goto	l3806
  2770   001012                     u3820:
  2771   001012                     
  2772                           ; BSR set to: 0
  2773   001012  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2774   001014  EF10  F008         	goto	u3830
  2775   001018  EF0E  F008         	goto	u3831
  2776   00101C                     u3831:
  2777   00101C  EF31  F008         	goto	l3806
  2778   001020                     u3830:
  2779   001020                     
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2782   001020  0E00               	movlw	low _dbuf
  2783   001022  2582               	addwf	efgtoa@n& (0+255),w,b
  2784   001024  6ED9               	movwf	fsr2l,c
  2785   001026  0E01               	movlw	high _dbuf
  2786   001028  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2787   00102A  6EDA               	movwf	fsr2h,c
  2788   00102C  0E2E               	movlw	46
  2789   00102E  6EDF               	movwf	indf2,c
  2790   001030                     
  2791                           ; BSR set to: 0
  2792   001030  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2793   001032  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2794   001034                     
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2797   001034  0771               	decf	efgtoa@w& (0+255),f,b
  2798   001036  A0D8               	btfss	status,0,c
  2799   001038  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2800   00103A                     
  2801                           ; BSR set to: 0
  2802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2803   00103A  0E01               	movlw	1
  2804   00103C  6F68               	movwf	efgtoa@pp& (0+255),b
  2805   00103E  EF31  F008         	goto	l3806
  2806   001042                     l3798:
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2810   001042  0E00               	movlw	low _dbuf
  2811   001044  2582               	addwf	efgtoa@n& (0+255),w,b
  2812   001046  6ED9               	movwf	fsr2l,c
  2813   001048  0E01               	movlw	high _dbuf
  2814   00104A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2815   00104C  6EDA               	movwf	fsr2h,c
  2816   00104E  0E30               	movlw	48
  2817   001050  6EDF               	movwf	indf2,c
  2818   001052                     
  2819                           ; BSR set to: 0
  2820   001052  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2821   001054  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2822   001056                     
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2825   001056  0771               	decf	efgtoa@w& (0+255),f,b
  2826   001058  A0D8               	btfss	status,0,c
  2827   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2828   00105C                     
  2829                           ; BSR set to: 0
  2830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2831   00105C  0764               	decf	efgtoa@t& (0+255),f,b
  2832   00105E  A0D8               	btfss	status,0,c
  2833   001060  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2834   001062                     l3806:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2838   001062  5164               	movf	efgtoa@t& (0+255),w,b
  2839   001064  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2840   001066  A4D8               	btfss	status,2,c
  2841   001068  EF38  F008         	goto	u3841
  2842   00106C  EF3A  F008         	goto	u3840
  2843   001070                     u3841:
  2844   001070  EF21  F008         	goto	l3798
  2845   001074                     u3840:
  2846   001074                     
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2849   001074  0E00               	movlw	low _dbuf
  2850   001076  2582               	addwf	efgtoa@n& (0+255),w,b
  2851   001078  6ED9               	movwf	fsr2l,c
  2852   00107A  0E01               	movlw	high _dbuf
  2853   00107C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2854   00107E  6EDA               	movwf	fsr2h,c
  2855   001080  516B               	movf	efgtoa@d& (0+255),w,b
  2856   001082  0F30               	addlw	48
  2857   001084  6EDF               	movwf	indf2,c
  2858   001086                     
  2859                           ; BSR set to: 0
  2860   001086  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2861   001088  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2862   00108A                     
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2865   00108A  0771               	decf	efgtoa@w& (0+255),f,b
  2866   00108C  A0D8               	btfss	status,0,c
  2867   00108E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2868   001090                     
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2871   001090  C079  F02F         	movff	efgtoa@h,___flsub@b
  2872   001094  C07A  F030         	movff	efgtoa@h+1,___flsub@b+1
  2873   001098  C07B  F031         	movff	efgtoa@h+2,___flsub@b+2
  2874   00109C  C07C  F032         	movff	efgtoa@h+3,___flsub@b+3
  2875   0010A0  C07D  F01A         	movff	efgtoa@l,___flmul@a
  2876   0010A4  C07E  F01B         	movff	efgtoa@l+1,___flmul@a+1
  2877   0010A8  C07F  F01C         	movff	efgtoa@l+2,___flmul@a+2
  2878   0010AC  C080  F01D         	movff	efgtoa@l+3,___flmul@a+3
  2879   0010B0  C088  F016         	movff	efgtoa@u,___flmul@b
  2880   0010B4  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2881   0010B8  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2882   0010BC  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2883   0010C0  EC70  F00B         	call	___flmul	;wreg free
  2884   0010C4  C016  F033         	movff	?___flmul,___flsub@a
  2885   0010C8  C017  F034         	movff	?___flmul+1,___flsub@a+1
  2886   0010CC  C018  F035         	movff	?___flmul+2,___flsub@a+2
  2887   0010D0  C019  F036         	movff	?___flmul+3,___flsub@a+3
  2888   0010D4  EC19  F018         	call	___flsub	;wreg free
  2889   0010D8  C02F  F079         	movff	?___flsub,efgtoa@h
  2890   0010DC  C030  F07A         	movff	?___flsub+1,efgtoa@h+1
  2891   0010E0  C031  F07B         	movff	?___flsub+2,efgtoa@h+2
  2892   0010E4  C032  F07C         	movff	?___flsub+3,efgtoa@h+3
  2893   0010E8                     
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2895   0010E8  C088  F011         	movff	efgtoa@u,___fldiv@b
  2896   0010EC  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  2897   0010F0  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  2898   0010F4  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  2899   0010F8  0E00               	movlw	0
  2900   0010FA  6E15               	movwf	___fldiv@a^0,c
  2901   0010FC  0E00               	movlw	0
  2902   0010FE  6E16               	movwf	(___fldiv@a+1)^0,c
  2903   001100  0E20               	movlw	32
  2904   001102  6E17               	movwf	(___fldiv@a+2)^0,c
  2905   001104  0E41               	movlw	65
  2906   001106  6E18               	movwf	(___fldiv@a+3)^0,c
  2907   001108  EC85  F00D         	call	___fldiv	;wreg free
  2908   00110C  C011  F088         	movff	?___fldiv,efgtoa@u
  2909   001110  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  2910   001114  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2911   001118  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2912   00111C                     
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2914   00111C  0100               	movlb	0	; () banked
  2915   00111E  0760               	decf	efgtoa@ne& (0+255),f,b
  2916   001120  A0D8               	btfss	status,0,c
  2917   001122  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2918   001124                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2921   001124  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2922   001126  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2923   001128                     l3822:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2927   001128  516D               	movf	efgtoa@m& (0+255),w,b
  2928   00112A  5D77               	subwf	efgtoa@i& (0+255),w,b
  2929   00112C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2930   00112E  0A80               	xorlw	128
  2931   001130  6E45               	movwf	??_efgtoa^0,c
  2932   001132  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2933   001134  0A80               	xorlw	128
  2934   001136  5845               	subwfb	??_efgtoa^0,w,c
  2935   001138  B0D8               	btfsc	status,0,c
  2936   00113A  EFA1  F008         	goto	u3851
  2937   00113E  EFA3  F008         	goto	u3850
  2938   001142                     u3851:
  2939   001142  EFB1  F008         	goto	l3826
  2940   001146                     u3850:
  2941   001146                     
  2942                           ; BSR set to: 0
  2943   001146  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2944   001148  EFAF  F008         	goto	u3861
  2945   00114C  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2946   00114E  E109               	bnz	u3860
  2947   001150  0E4B               	movlw	75
  2948   001152  5D82               	subwf	efgtoa@n& (0+255),w,b
  2949   001154  A0D8               	btfss	status,0,c
  2950   001156  EFAF  F008         	goto	u3861
  2951   00115A  EFB1  F008         	goto	u3860
  2952   00115E                     u3861:
  2953   00115E  EFAF  F007         	goto	l3782
  2954   001162                     u3860:
  2955   001162                     l3826:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2959   001162  0E00               	movlw	0
  2960   001164  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2961   001166  0E4F               	movlw	79
  2962   001168  6F77               	movwf	efgtoa@i& (0+255),b
  2963   00116A                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2966   00116A  0E00               	movlw	low _dbuf
  2967   00116C  2577               	addwf	efgtoa@i& (0+255),w,b
  2968   00116E  6ED9               	movwf	fsr2l,c
  2969   001170  0E01               	movlw	high _dbuf
  2970   001172  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2971   001174  6EDA               	movwf	fsr2h,c
  2972   001176  0E00               	movlw	0
  2973   001178  6EDF               	movwf	indf2,c
  2974   00117A                     
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2977   00117A  0E00               	movlw	low _dbuf
  2978   00117C  6E45               	movwf	??_efgtoa^0,c
  2979   00117E  0E01               	movlw	high _dbuf
  2980   001180  6E46               	movwf	(??_efgtoa+1)^0,c
  2981   001182  5182               	movf	efgtoa@n& (0+255),w,b
  2982   001184  5E45               	subwf	??_efgtoa^0,f,c
  2983   001186  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2984   001188  5A46               	subwfb	(??_efgtoa+1)^0,f,c
  2985   00118A  5177               	movf	efgtoa@i& (0+255),w,b
  2986   00118C  2445               	addwf	??_efgtoa^0,w,c
  2987   00118E  6E01               	movwf	memcpy@d1^0,c
  2988   001190  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2989   001192  2046               	addwfc	(??_efgtoa+1)^0,w,c
  2990   001194  6E02               	movwf	(memcpy@d1+1)^0,c
  2991   001196  0E00               	movlw	low _dbuf
  2992   001198  6E03               	movwf	memcpy@s1^0,c
  2993   00119A  0E01               	movlw	high _dbuf
  2994   00119C  6E04               	movwf	(memcpy@s1+1)^0,c
  2995   00119E  C082  F005         	movff	efgtoa@n,memcpy@n
  2996   0011A2  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  2997   0011A6  ECF1  F017         	call	_memcpy	;wreg free
  2998   0011AA                     
  2999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3000   0011AA  0100               	movlb	0	; () banked
  3001   0011AC  5182               	movf	efgtoa@n& (0+255),w,b
  3002   0011AE  5D77               	subwf	efgtoa@i& (0+255),w,b
  3003   0011B0  6F82               	movwf	efgtoa@n& (0+255),b
  3004   0011B2  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3005   0011B4  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3006   0011B6  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3007   0011B8                     
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3010   0011B8  5181               	movf	efgtoa@sign& (0+255),w,b
  3011   0011BA  A4D8               	btfss	status,2,c
  3012   0011BC  EFE2  F008         	goto	u3871
  3013   0011C0  EFE5  F008         	goto	u3870
  3014   0011C4                     u3871:
  3015   0011C4  0E01               	movlw	1
  3016   0011C6  EFE6  F008         	goto	u3880
  3017   0011CA                     u3870:
  3018   0011CA  0E00               	movlw	0
  3019   0011CC                     u3880:
  3020   0011CC  6F77               	movwf	efgtoa@i& (0+255),b
  3021   0011CE  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3022   0011D0                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3025   0011D0  5181               	movf	efgtoa@sign& (0+255),w,b
  3026   0011D2  B4D8               	btfsc	status,2,c
  3027   0011D4  EFEE  F008         	goto	u3891
  3028   0011D8  EFF0  F008         	goto	u3890
  3029   0011DC                     u3891:
  3030   0011DC  EFFB  F008         	goto	l3840
  3031   0011E0                     u3890:
  3032   0011E0                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3035   0011E0  0782               	decf	efgtoa@n& (0+255),f,b
  3036   0011E2  A0D8               	btfss	status,0,c
  3037   0011E4  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3038   0011E6  0E00               	movlw	low _dbuf
  3039   0011E8  2582               	addwf	efgtoa@n& (0+255),w,b
  3040   0011EA  6ED9               	movwf	fsr2l,c
  3041   0011EC  0E01               	movlw	high _dbuf
  3042   0011EE  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3043   0011F0  6EDA               	movwf	fsr2h,c
  3044   0011F2  C081  FFDF         	movff	efgtoa@sign,indf2
  3045   0011F6                     l3840:
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3049   0011F6  5177               	movf	efgtoa@i& (0+255),w,b
  3050   0011F8  5F71               	subwf	efgtoa@w& (0+255),f,b
  3051   0011FA  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3052   0011FC  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3053   0011FE                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3056   0011FE  C03E  F012         	movff	efgtoa@fp,pad@fp
  3057   001202  C03F  F013         	movff	efgtoa@fp+1,pad@fp+1
  3058   001206  0E00               	movlw	low _dbuf
  3059   001208  2582               	addwf	efgtoa@n& (0+255),w,b
  3060   00120A  6E14               	movwf	pad@buf^0,c
  3061   00120C  0E01               	movlw	high _dbuf
  3062   00120E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3063   001210  6E15               	movwf	(pad@buf+1)^0,c
  3064   001212  C071  F016         	movff	efgtoa@w,pad@p
  3065   001216  C072  F017         	movff	efgtoa@w+1,pad@p+1
  3066   00121A  EC93  F016         	call	_pad	;wreg free
  3067   00121E                     l1143:
  3068   00121E  0012               	return		;funcret
  3069   001220                     __end_of_efgtoa:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _strcpy *****************
  3073 ;; Defined at:
  3074 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3077 ;;		 -> dbuf(80), 
  3078 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3079 ;;		 -> STR_6(4), STR_3(4), 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  d               2    6[COMRAM] PTR unsigned char 
  3082 ;;		 -> dbuf(80), 
  3083 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3084 ;;		 -> STR_6(4), STR_3(4), 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  2    0[COMRAM] PTR unsigned char 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         4       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        8 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_efgtoa
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text5
  3108   003146                     __ptext5:
  3109                           	callstack 0
  3110   003146                     _strcpy:
  3111                           	callstack 26
  3112   003146  C003  F005         	movff	strcpy@src,strcpy@s
  3113   00314A  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3114   00314E  C001  F007         	movff	strcpy@dest,strcpy@d
  3115   003152  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3116   003156                     l3562:
  3117   003156  C005  FFF6         	movff	strcpy@s,tblptrl
  3118   00315A  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3119   00315E  4A05               	infsnz	strcpy@s^0,f,c
  3120   003160  2A06               	incf	(strcpy@s+1)^0,f,c
  3121   003162                     	if	0	;tblptru may be non-zero
  3122   003162                     	endif
  3123   003162                     	if	0	;tblptru may be non-zero
  3124   003162                     	endif
  3125   003162  C007  FFD9         	movff	strcpy@d,fsr2l
  3126   003166  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3127   00316A  4A07               	infsnz	strcpy@d^0,f,c
  3128   00316C  2A08               	incf	(strcpy@d+1)^0,f,c
  3129   00316E  0008               	tblrd		*
  3130   003170  CFF5 FFDF          	movff	tablat,indf2
  3131   003174  50DF               	movf	indf2,w,c
  3132   003176  A4D8               	btfss	status,2,c
  3133   003178  EFC0  F018         	goto	u3411
  3134   00317C  EFC2  F018         	goto	u3410
  3135   003180                     u3411:
  3136   003180  EFAB  F018         	goto	l3562
  3137   003184                     u3410:
  3138   003184  0012               	return		;funcret
  3139   003186                     __end_of_strcpy:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _pad *****************
  3143 ;; Defined at:
  3144 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3147 ;;		 -> sprintf@f(11), 
  3148 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3149 ;;		 -> dbuf(80), 
  3150 ;;  p               2   21[COMRAM] int 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  w               2   26[COMRAM] int 
  3153 ;;  i               2   24[COMRAM] int 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3163 ;;      Params:         6       0       0       0       0       0       0       0       0
  3164 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3165 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3166 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3167 ;;Total ram usage:       11 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 3
  3170 ;; This function calls:
  3171 ;;		_fputc
  3172 ;;		_fputs
  3173 ;; This function is called by:
  3174 ;;		_efgtoa
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text6
  3179   002D26                     __ptext6:
  3180                           	callstack 0
  3181   002D26                     _pad:
  3182                           	callstack 23
  3183   002D26                     
  3184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3185   002D26  BE17               	btfsc	(pad@p+1)^0,7,c
  3186   002D28  EF98  F016         	goto	u3321
  3187   002D2C  EF9A  F016         	goto	u3320
  3188   002D30                     u3321:
  3189   002D30  EFA0  F016         	goto	l3528
  3190   002D34                     u3320:
  3191   002D34  C016  F01B         	movff	pad@p,pad@w
  3192   002D38  C017  F01C         	movff	pad@p+1,pad@w+1
  3193   002D3C  EFA4  F016         	goto	l1128
  3194   002D40                     l3528:
  3195   002D40  0E00               	movlw	0
  3196   002D42  6E1C               	movwf	(pad@w+1)^0,c
  3197   002D44  0E00               	movlw	0
  3198   002D46  6E1B               	movwf	pad@w^0,c
  3199   002D48                     l1128:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3202   002D48  0E00               	movlw	0
  3203   002D4A  6E1A               	movwf	(pad@i+1)^0,c
  3204   002D4C  0E00               	movlw	0
  3205   002D4E  6E19               	movwf	pad@i^0,c
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3208   002D50  EFB6  F016         	goto	l3534
  3209   002D54                     l3530:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3212   002D54  0E00               	movlw	0
  3213   002D56  6E03               	movwf	(fputc@c+1)^0,c
  3214   002D58  0E20               	movlw	32
  3215   002D5A  6E02               	movwf	fputc@c^0,c
  3216   002D5C  C012  F004         	movff	pad@fp,fputc@fp
  3217   002D60  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3218   002D64  EC9A  F015         	call	_fputc	;wreg free
  3219   002D68                     
  3220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3221   002D68  4A19               	infsnz	pad@i^0,f,c
  3222   002D6A  2A1A               	incf	(pad@i+1)^0,f,c
  3223   002D6C                     l3534:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3226   002D6C  501B               	movf	pad@w^0,w,c
  3227   002D6E  5C19               	subwf	pad@i^0,w,c
  3228   002D70  501A               	movf	(pad@i+1)^0,w,c
  3229   002D72  0A80               	xorlw	128
  3230   002D74  6E18               	movwf	??_pad^0,c
  3231   002D76  501C               	movf	(pad@w+1)^0,w,c
  3232   002D78  0A80               	xorlw	128
  3233   002D7A  5818               	subwfb	??_pad^0,w,c
  3234   002D7C  A0D8               	btfss	status,0,c
  3235   002D7E  EFC3  F016         	goto	u3331
  3236   002D82  EFC5  F016         	goto	u3330
  3237   002D86                     u3331:
  3238   002D86  EFAA  F016         	goto	l3530
  3239   002D8A                     u3330:
  3240   002D8A                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3242   002D8A  C014  F00B         	movff	pad@buf,fputs@s
  3243   002D8E  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3244   002D92  C012  F00D         	movff	pad@fp,fputs@fp
  3245   002D96  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3246   002D9A  EC81  F018         	call	_fputs	;wreg free
  3247   002D9E  0012               	return		;funcret
  3248   002DA0                     __end_of_pad:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _fputs *****************
  3252 ;; Defined at:
  3253 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3256 ;;		 -> dbuf(80), 
  3257 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3258 ;;		 -> sprintf@f(11), 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  i               2   15[COMRAM] int 
  3261 ;;  c               1   14[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  2   10[COMRAM] int 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3271 ;;      Params:         4       0       0       0       0       0       0       0       0
  3272 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3274 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3275 ;;Total ram usage:        7 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 2
  3278 ;; This function calls:
  3279 ;;		_fputc
  3280 ;; This function is called by:
  3281 ;;		_pad
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text7
  3286   003102                     __ptext7:
  3287                           	callstack 0
  3288   003102                     _fputs:
  3289                           	callstack 23
  3290   003102  0E00               	movlw	0
  3291   003104  6E11               	movwf	(fputs@i+1)^0,c
  3292   003106  0E00               	movlw	0
  3293   003108  6E10               	movwf	fputs@i^0,c
  3294   00310A  EF92  F018         	goto	l3152
  3295   00310E                     l3148:
  3296   00310E  C00F  F002         	movff	fputs@c,fputc@c
  3297   003112  6A03               	clrf	(fputc@c+1)^0,c
  3298   003114  C00D  F004         	movff	fputs@fp,fputc@fp
  3299   003118  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3300   00311C  EC9A  F015         	call	_fputc	;wreg free
  3301   003120  4A10               	infsnz	fputs@i^0,f,c
  3302   003122  2A11               	incf	(fputs@i+1)^0,f,c
  3303   003124                     l3152:
  3304   003124  5010               	movf	fputs@i^0,w,c
  3305   003126  240B               	addwf	fputs@s^0,w,c
  3306   003128  6ED9               	movwf	fsr2l,c
  3307   00312A  5011               	movf	(fputs@i+1)^0,w,c
  3308   00312C  200C               	addwfc	(fputs@s+1)^0,w,c
  3309   00312E  6EDA               	movwf	fsr2h,c
  3310   003130  50DF               	movf	indf2,w,c
  3311   003132  6E0F               	movwf	fputs@c^0,c
  3312   003134  500F               	movf	fputs@c^0,w,c
  3313   003136  A4D8               	btfss	status,2,c
  3314   003138  EFA0  F018         	goto	u2731
  3315   00313C  EFA2  F018         	goto	u2730
  3316   003140                     u2731:
  3317   003140  EF87  F018         	goto	l3148
  3318   003144                     u2730:
  3319   003144  0012               	return		;funcret
  3320   003146                     __end_of_fputs:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _fputc *****************
  3324 ;; Defined at:
  3325 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  c               2    1[COMRAM] int 
  3328 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3329 ;;		 -> sprintf@f(11), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2    1[COMRAM] int 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3341 ;;      Params:         4       0       0       0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3343 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3344 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3345 ;;Total ram usage:        9 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; Hardware stack levels required when called: 1
  3348 ;; This function calls:
  3349 ;;		_putch
  3350 ;; This function is called by:
  3351 ;;		_pad
  3352 ;;		_vfpfcnvrt
  3353 ;;		_fputs
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text8
  3358   002B34                     __ptext8:
  3359                           	callstack 0
  3360   002B34                     _fputc:
  3361                           	callstack 26
  3362   002B34  5004               	movf	fputc@fp^0,w,c
  3363   002B36  1005               	iorwf	(fputc@fp+1)^0,w,c
  3364   002B38  B4D8               	btfsc	status,2,c
  3365   002B3A  EFA1  F015         	goto	u2301
  3366   002B3E  EFA3  F015         	goto	u2300
  3367   002B42                     u2301:
  3368   002B42  EFAC  F015         	goto	l2934
  3369   002B46                     u2300:
  3370   002B46  5004               	movf	fputc@fp^0,w,c
  3371   002B48  1005               	iorwf	(fputc@fp+1)^0,w,c
  3372   002B4A  A4D8               	btfss	status,2,c
  3373   002B4C  EFAA  F015         	goto	u2311
  3374   002B50  EFAC  F015         	goto	u2310
  3375   002B54                     u2311:
  3376   002B54  EFB1  F015         	goto	l2936
  3377   002B58                     u2310:
  3378   002B58                     l2934:
  3379   002B58  5002               	movf	fputc@c^0,w,c
  3380   002B5A  EC60  F019         	call	_putch
  3381   002B5E  EFFE  F015         	goto	l1306
  3382   002B62                     l2936:
  3383   002B62  EE20 F009          	lfsr	2,9
  3384   002B66  5004               	movf	fputc@fp^0,w,c
  3385   002B68  26D9               	addwf	fsr2l,f,c
  3386   002B6A  5005               	movf	(fputc@fp+1)^0,w,c
  3387   002B6C  22DA               	addwfc	fsr2h,f,c
  3388   002B6E  50DE               	movf	postinc2,w,c
  3389   002B70  10DE               	iorwf	postinc2,w,c
  3390   002B72  B4D8               	btfsc	status,2,c
  3391   002B74  EFBE  F015         	goto	u2321
  3392   002B78  EFC0  F015         	goto	u2320
  3393   002B7C                     u2321:
  3394   002B7C  EFDB  F015         	goto	l2940
  3395   002B80                     u2320:
  3396   002B80  EE20 F009          	lfsr	2,9
  3397   002B84  5004               	movf	fputc@fp^0,w,c
  3398   002B86  26D9               	addwf	fsr2l,f,c
  3399   002B88  5005               	movf	(fputc@fp+1)^0,w,c
  3400   002B8A  22DA               	addwfc	fsr2h,f,c
  3401   002B8C  EE10 F003          	lfsr	1,3
  3402   002B90  5004               	movf	fputc@fp^0,w,c
  3403   002B92  26E1               	addwf	fsr1l,f,c
  3404   002B94  5005               	movf	(fputc@fp+1)^0,w,c
  3405   002B96  22E2               	addwfc	fsr1h,f,c
  3406   002B98  50DE               	movf	postinc2,w,c
  3407   002B9A  5CE6               	subwf	postinc1,w,c
  3408   002B9C  50E6               	movf	postinc1,w,c
  3409   002B9E  0A80               	xorlw	128
  3410   002BA0  6E0A               	movwf	(??_fputc+4)^0,c
  3411   002BA2  50DE               	movf	postinc2,w,c
  3412   002BA4  0A80               	xorlw	128
  3413   002BA6  580A               	subwfb	(??_fputc+4)^0,w,c
  3414   002BA8  B0D8               	btfsc	status,0,c
  3415   002BAA  EFD9  F015         	goto	u2331
  3416   002BAE  EFDB  F015         	goto	u2330
  3417   002BB2                     u2331:
  3418   002BB2  EFFE  F015         	goto	l1306
  3419   002BB6                     u2330:
  3420   002BB6                     l2940:
  3421   002BB6  EE20 F003          	lfsr	2,3
  3422   002BBA  5004               	movf	fputc@fp^0,w,c
  3423   002BBC  26D9               	addwf	fsr2l,f,c
  3424   002BBE  5005               	movf	(fputc@fp+1)^0,w,c
  3425   002BC0  22DA               	addwfc	fsr2h,f,c
  3426   002BC2  CFDE F006          	movff	postinc2,??_fputc
  3427   002BC6  CFDD F007          	movff	postdec2,??_fputc+1
  3428   002BCA  C004  FFD9         	movff	fputc@fp,fsr2l
  3429   002BCE  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3430   002BD2  CFDE F008          	movff	postinc2,??_fputc+2
  3431   002BD6  CFDD F009          	movff	postdec2,??_fputc+3
  3432   002BDA  5006               	movf	??_fputc^0,w,c
  3433   002BDC  2408               	addwf	(??_fputc+2)^0,w,c
  3434   002BDE  6ED9               	movwf	fsr2l,c
  3435   002BE0  5007               	movf	(??_fputc+1)^0,w,c
  3436   002BE2  2009               	addwfc	(??_fputc+3)^0,w,c
  3437   002BE4  6EDA               	movwf	fsr2h,c
  3438   002BE6  C002  FFDF         	movff	fputc@c,indf2
  3439   002BEA  EE20 F003          	lfsr	2,3
  3440   002BEE  5004               	movf	fputc@fp^0,w,c
  3441   002BF0  26D9               	addwf	fsr2l,f,c
  3442   002BF2  5005               	movf	(fputc@fp+1)^0,w,c
  3443   002BF4  22DA               	addwfc	fsr2h,f,c
  3444   002BF6  2ADE               	incf	postinc2,f,c
  3445   002BF8  0E00               	movlw	0
  3446   002BFA  22DD               	addwfc	postdec2,f,c
  3447   002BFC                     l1306:
  3448   002BFC  0012               	return		;funcret
  3449   002BFE                     __end_of_fputc:
  3450                           	callstack 0
  3451                           
  3452 ;; *************** function _putch *****************
  3453 ;; Defined at:
  3454 ;;		line 93 in file "lib_pic/usart.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  c               1    wreg     unsigned char 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  c               1    0[COMRAM] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0
  3469 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3471 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3472 ;;Total ram usage:        1 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_fputc
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text9
  3482   0032C0                     __ptext9:
  3483                           	callstack 0
  3484   0032C0                     _putch:
  3485                           	callstack 26
  3486                           
  3487                           ;incstack = 0
  3488                           ;putch@c stored from wreg
  3489   0032C0  6E01               	movwf	putch@c^0,c
  3490   0032C2                     l363:
  3491   0032C2  A2AC               	btfss	172,1,c	;volatile
  3492   0032C4  EF66  F019         	goto	u2291
  3493   0032C8  EF68  F019         	goto	u2290
  3494   0032CC                     u2291:
  3495   0032CC  EF61  F019         	goto	l363
  3496   0032D0                     u2290:
  3497   0032D0                     
  3498                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  3499   0032D0  C001  FFAD         	movff	putch@c,4013	;volatile
  3500   0032D4  0012               	return		;funcret
  3501   0032D6                     __end_of_putch:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _memcpy *****************
  3505 ;; Defined at:
  3506 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  d1              2    0[COMRAM] PTR void 
  3509 ;;		 -> dbuf(80), 
  3510 ;;  s1              2    2[COMRAM] PTR const void 
  3511 ;;		 -> dbuf(80), 
  3512 ;;  n               2    4[COMRAM] unsigned int 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3515 ;;		 -> dbuf(80), 
  3516 ;;  d               2    6[COMRAM] PTR unsigned char 
  3517 ;;		 -> dbuf(80), 
  3518 ;;  tmp             1   10[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  2    0[COMRAM] PTR void 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3528 ;;      Params:         6       0       0       0       0       0       0       0       0
  3529 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3531 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3532 ;;Total ram usage:       11 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_efgtoa
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text10
  3542   002FE2                     __ptext10:
  3543                           	callstack 0
  3544   002FE2                     _memcpy:
  3545                           	callstack 26
  3546   002FE2  C003  F009         	movff	memcpy@s1,memcpy@s
  3547   002FE6  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3548   002FEA  C001  F007         	movff	memcpy@d1,memcpy@d
  3549   002FEE  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3550   002FF2  EF0B  F018         	goto	l3606
  3551   002FF6                     l3598:
  3552   002FF6  C009  FFD9         	movff	memcpy@s,fsr2l
  3553   002FFA  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3554   002FFE  50DF               	movf	indf2,w,c
  3555   003000  6E0B               	movwf	memcpy@tmp^0,c
  3556   003002  4A09               	infsnz	memcpy@s^0,f,c
  3557   003004  2A0A               	incf	(memcpy@s+1)^0,f,c
  3558   003006  C007  FFD9         	movff	memcpy@d,fsr2l
  3559   00300A  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3560   00300E  C00B  FFDF         	movff	memcpy@tmp,indf2
  3561   003012  4A07               	infsnz	memcpy@d^0,f,c
  3562   003014  2A08               	incf	(memcpy@d+1)^0,f,c
  3563   003016                     l3606:
  3564   003016  0605               	decf	memcpy@n^0,f,c
  3565   003018  A0D8               	btfss	status,0,c
  3566   00301A  0606               	decf	(memcpy@n+1)^0,f,c
  3567   00301C  2805               	incf	memcpy@n^0,w,c
  3568   00301E  E106               	bnz	u3531
  3569   003020  2806               	incf	(memcpy@n+1)^0,w,c
  3570   003022  A4D8               	btfss	status,2,c
  3571   003024  EF16  F018         	goto	u3531
  3572   003028  EF18  F018         	goto	u3530
  3573   00302C                     u3531:
  3574   00302C  EFFB  F017         	goto	l3598
  3575   003030                     u3530:
  3576   003030  0012               	return		;funcret
  3577   003032                     __end_of_memcpy:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _labs *****************
  3581 ;; Defined at:
  3582 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  a               4    0[COMRAM] long 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  4    0[COMRAM] long 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3596 ;;      Params:         4       0       0       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3598 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3599 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3600 ;;Total ram usage:        8 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_efgtoa
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text11
  3610   002E18                     __ptext11:
  3611                           	callstack 0
  3612   002E18                     _labs:
  3613                           	callstack 26
  3614   002E18  BE04               	btfsc	(labs@a+3)^0,7,c
  3615   002E1A  EF1B  F017         	goto	u3420
  3616   002E1E  5004               	movf	(labs@a+3)^0,w,c
  3617   002E20  1003               	iorwf	(labs@a+2)^0,w,c
  3618   002E22  1002               	iorwf	(labs@a+1)^0,w,c
  3619   002E24  E106               	bnz	u3421
  3620   002E26  0401               	decf	labs@a^0,w,c
  3621   002E28  B0D8               	btfsc	status,0,c
  3622   002E2A  EF19  F017         	goto	u3421
  3623   002E2E  EF1B  F017         	goto	u3420
  3624   002E32                     u3421:
  3625   002E32  EF36  F017         	goto	l1285
  3626   002E36                     u3420:
  3627   002E36  C001  F005         	movff	labs@a,??_labs
  3628   002E3A  C002  F006         	movff	labs@a+1,??_labs+1
  3629   002E3E  C003  F007         	movff	labs@a+2,??_labs+2
  3630   002E42  C004  F008         	movff	labs@a+3,??_labs+3
  3631   002E46  1E05               	comf	??_labs^0,f,c
  3632   002E48  1E06               	comf	(??_labs+1)^0,f,c
  3633   002E4A  1E07               	comf	(??_labs+2)^0,f,c
  3634   002E4C  1E08               	comf	(??_labs+3)^0,f,c
  3635   002E4E  2A05               	incf	??_labs^0,f,c
  3636   002E50  0E00               	movlw	0
  3637   002E52  2206               	addwfc	(??_labs+1)^0,f,c
  3638   002E54  2207               	addwfc	(??_labs+2)^0,f,c
  3639   002E56  2208               	addwfc	(??_labs+3)^0,f,c
  3640   002E58  C005  F001         	movff	??_labs,?_labs
  3641   002E5C  C006  F002         	movff	??_labs+1,?_labs+1
  3642   002E60  C007  F003         	movff	??_labs+2,?_labs+2
  3643   002E64  C008  F004         	movff	??_labs+3,?_labs+3
  3644   002E68  EF3E  F017         	goto	l1288
  3645   002E6C                     l1285:
  3646   002E6C  C001  F001         	movff	labs@a,?_labs
  3647   002E70  C002  F002         	movff	labs@a+1,?_labs+1
  3648   002E74  C003  F003         	movff	labs@a+2,?_labs+2
  3649   002E78  C004  F004         	movff	labs@a+3,?_labs+3
  3650   002E7C                     l1288:
  3651   002E7C  0012               	return		;funcret
  3652   002E7E                     __end_of_labs:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _floorf *****************
  3656 ;; Defined at:
  3657 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  x               4   41[COMRAM] float 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  u               4   57[COMRAM] struct .
  3662 ;;  m               4   51[COMRAM] unsigned long 
  3663 ;;  e               2   55[COMRAM] int 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  4   41[COMRAM] float 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3673 ;;      Params:         4       0       0       0       0       0       0       0       0
  3674 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3675 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3676 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3677 ;;Total ram usage:       20 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_efgtoa
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text12
  3687   0021BA                     __ptext12:
  3688                           	callstack 0
  3689   0021BA                     _floorf:
  3690                           	callstack 26
  3691   0021BA  C0A7  F03A         	movff	floorf@F526,floorf@u
  3692   0021BE  C0A8  F03B         	movff	floorf@F526+1,floorf@u+1
  3693   0021C2  C0A9  F03C         	movff	floorf@F526+2,floorf@u+2
  3694   0021C6  C0AA  F03D         	movff	floorf@F526+3,floorf@u+3
  3695   0021CA  C02A  F03A         	movff	floorf@x,floorf@u
  3696   0021CE  C02B  F03B         	movff	floorf@x+1,floorf@u+1
  3697   0021D2  C02C  F03C         	movff	floorf@x+2,floorf@u+2
  3698   0021D6  C02D  F03D         	movff	floorf@x+3,floorf@u+3
  3699   0021DA  0E81               	movlw	129
  3700   0021DC  6E2E               	movwf	??_floorf^0,c
  3701   0021DE  0EFF               	movlw	255
  3702   0021E0  6E2F               	movwf	(??_floorf+1)^0,c
  3703   0021E2  C03A  F030         	movff	floorf@u,??_floorf+2
  3704   0021E6  C03B  F031         	movff	floorf@u+1,??_floorf+3
  3705   0021EA  C03C  F032         	movff	floorf@u+2,??_floorf+4
  3706   0021EE  C03D  F033         	movff	floorf@u+3,??_floorf+5
  3707   0021F2  0E18               	movlw	24
  3708   0021F4  EF01  F011         	goto	u3430
  3709   0021F8                     u3435:
  3710   0021F8  90D8               	bcf	status,0,c
  3711   0021FA  3233               	rrcf	(??_floorf+5)^0,f,c
  3712   0021FC  3232               	rrcf	(??_floorf+4)^0,f,c
  3713   0021FE  3231               	rrcf	(??_floorf+3)^0,f,c
  3714   002200  3230               	rrcf	(??_floorf+2)^0,f,c
  3715   002202                     u3430:
  3716   002202  2EE8               	decfsz	wreg,f,c
  3717   002204  EFFC  F010         	goto	u3435
  3718   002208  5030               	movf	(??_floorf+2)^0,w,c
  3719   00220A  242E               	addwf	??_floorf^0,w,c
  3720   00220C  6E38               	movwf	floorf@e^0,c
  3721   00220E  0E00               	movlw	0
  3722   002210  202F               	addwfc	(??_floorf+1)^0,w,c
  3723   002212  6E39               	movwf	(floorf@e+1)^0,c
  3724   002214  BE39               	btfsc	(floorf@e+1)^0,7,c
  3725   002216  EF16  F011         	goto	u3441
  3726   00221A  5039               	movf	(floorf@e+1)^0,w,c
  3727   00221C  E109               	bnz	u3440
  3728   00221E  0E17               	movlw	23
  3729   002220  5C38               	subwf	floorf@e^0,w,c
  3730   002222  A0D8               	btfss	status,0,c
  3731   002224  EF16  F011         	goto	u3441
  3732   002228  EF18  F011         	goto	u3440
  3733   00222C                     u3441:
  3734   00222C  EF22  F011         	goto	l3574
  3735   002230                     u3440:
  3736   002230                     l3572:
  3737   002230  C02A  F02A         	movff	floorf@x,?_floorf
  3738   002234  C02B  F02B         	movff	floorf@x+1,?_floorf+1
  3739   002238  C02C  F02C         	movff	floorf@x+2,?_floorf+2
  3740   00223C  C02D  F02D         	movff	floorf@x+3,?_floorf+3
  3741   002240  EFE5  F011         	goto	l1260
  3742   002244                     l3574:
  3743   002244  BE39               	btfsc	(floorf@e+1)^0,7,c
  3744   002246  EF27  F011         	goto	u3451
  3745   00224A  EF29  F011         	goto	u3450
  3746   00224E                     u3451:
  3747   00224E  EF99  F011         	goto	l3584
  3748   002252                     u3450:
  3749   002252  C038  F02E         	movff	floorf@e,??_floorf
  3750   002256  0EFF               	movlw	255
  3751   002258  6E2F               	movwf	(??_floorf+1)^0,c
  3752   00225A  0EFF               	movlw	255
  3753   00225C  6E30               	movwf	(??_floorf+2)^0,c
  3754   00225E  0E7F               	movlw	127
  3755   002260  6E31               	movwf	(??_floorf+3)^0,c
  3756   002262  0E00               	movlw	0
  3757   002264  6E32               	movwf	(??_floorf+4)^0,c
  3758   002266                     u3465:
  3759   002266  662E               	tstfsz	??_floorf^0,c
  3760   002268  EF38  F011         	goto	u3466
  3761   00226C  EF40  F011         	goto	u3467
  3762   002270                     u3466:
  3763   002270  3432               	rlcf	(??_floorf+4)^0,w,c
  3764   002272  3232               	rrcf	(??_floorf+4)^0,f,c
  3765   002274  3231               	rrcf	(??_floorf+3)^0,f,c
  3766   002276  3230               	rrcf	(??_floorf+2)^0,f,c
  3767   002278  322F               	rrcf	(??_floorf+1)^0,f,c
  3768   00227A  2E2E               	decfsz	??_floorf^0,f,c
  3769   00227C  EF33  F011         	goto	u3465
  3770   002280                     u3467:
  3771   002280  C02F  F034         	movff	??_floorf+1,floorf@m
  3772   002284  C030  F035         	movff	??_floorf+2,floorf@m+1
  3773   002288  C031  F036         	movff	??_floorf+3,floorf@m+2
  3774   00228C  C032  F037         	movff	??_floorf+4,floorf@m+3
  3775   002290  5034               	movf	floorf@m^0,w,c
  3776   002292  143A               	andwf	floorf@u^0,w,c
  3777   002294  6E2E               	movwf	??_floorf^0,c
  3778   002296  5035               	movf	(floorf@m+1)^0,w,c
  3779   002298  143B               	andwf	(floorf@u+1)^0,w,c
  3780   00229A  6E2F               	movwf	(??_floorf+1)^0,c
  3781   00229C  5036               	movf	(floorf@m+2)^0,w,c
  3782   00229E  143C               	andwf	(floorf@u+2)^0,w,c
  3783   0022A0  6E30               	movwf	(??_floorf+2)^0,c
  3784   0022A2  5037               	movf	(floorf@m+3)^0,w,c
  3785   0022A4  143D               	andwf	(floorf@u+3)^0,w,c
  3786   0022A6  6E31               	movwf	(??_floorf+3)^0,c
  3787   0022A8  502E               	movf	??_floorf^0,w,c
  3788   0022AA  102F               	iorwf	(??_floorf+1)^0,w,c
  3789   0022AC  1030               	iorwf	(??_floorf+2)^0,w,c
  3790   0022AE  1031               	iorwf	(??_floorf+3)^0,w,c
  3791   0022B0  A4D8               	btfss	status,2,c
  3792   0022B2  EF5D  F011         	goto	u3471
  3793   0022B6  EF5F  F011         	goto	u3470
  3794   0022BA                     u3471:
  3795   0022BA  EF61  F011         	goto	l3580
  3796   0022BE                     u3470:
  3797   0022BE  EF18  F011         	goto	l3572
  3798   0022C2                     l3580:
  3799   0022C2  C03A  F02E         	movff	floorf@u,??_floorf
  3800   0022C6  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  3801   0022CA  C03C  F030         	movff	floorf@u+2,??_floorf+2
  3802   0022CE  C03D  F031         	movff	floorf@u+3,??_floorf+3
  3803   0022D2  0E20               	movlw	32
  3804   0022D4  EF71  F011         	goto	u3480
  3805   0022D8                     u3485:
  3806   0022D8  90D8               	bcf	status,0,c
  3807   0022DA  3231               	rrcf	(??_floorf+3)^0,f,c
  3808   0022DC  3230               	rrcf	(??_floorf+2)^0,f,c
  3809   0022DE  322F               	rrcf	(??_floorf+1)^0,f,c
  3810   0022E0  322E               	rrcf	??_floorf^0,f,c
  3811   0022E2                     u3480:
  3812   0022E2  2EE8               	decfsz	wreg,f,c
  3813   0022E4  EF6C  F011         	goto	u3485
  3814   0022E8  502E               	movf	??_floorf^0,w,c
  3815   0022EA  102F               	iorwf	(??_floorf+1)^0,w,c
  3816   0022EC  1030               	iorwf	(??_floorf+2)^0,w,c
  3817   0022EE  1031               	iorwf	(??_floorf+3)^0,w,c
  3818   0022F0  B4D8               	btfsc	status,2,c
  3819   0022F2  EF7D  F011         	goto	u3491
  3820   0022F6  EF7F  F011         	goto	u3490
  3821   0022FA                     u3491:
  3822   0022FA  EF87  F011         	goto	l1263
  3823   0022FE                     u3490:
  3824   0022FE  5034               	movf	floorf@m^0,w,c
  3825   002300  263A               	addwf	floorf@u^0,f,c
  3826   002302  5035               	movf	(floorf@m+1)^0,w,c
  3827   002304  223B               	addwfc	(floorf@u+1)^0,f,c
  3828   002306  5036               	movf	(floorf@m+2)^0,w,c
  3829   002308  223C               	addwfc	(floorf@u+2)^0,f,c
  3830   00230A  5037               	movf	(floorf@m+3)^0,w,c
  3831   00230C  223D               	addwfc	(floorf@u+3)^0,f,c
  3832   00230E                     l1263:
  3833   00230E  1C34               	comf	floorf@m^0,w,c
  3834   002310  6E2E               	movwf	??_floorf^0,c
  3835   002312  1C35               	comf	(floorf@m+1)^0,w,c
  3836   002314  6E2F               	movwf	(??_floorf+1)^0,c
  3837   002316  1C36               	comf	(floorf@m+2)^0,w,c
  3838   002318  6E30               	movwf	(??_floorf+2)^0,c
  3839   00231A  1C37               	comf	(floorf@m+3)^0,w,c
  3840   00231C  6E31               	movwf	(??_floorf+3)^0,c
  3841   00231E  502E               	movf	??_floorf^0,w,c
  3842   002320  163A               	andwf	floorf@u^0,f,c
  3843   002322  502F               	movf	(??_floorf+1)^0,w,c
  3844   002324  163B               	andwf	(floorf@u+1)^0,f,c
  3845   002326  5030               	movf	(??_floorf+2)^0,w,c
  3846   002328  163C               	andwf	(floorf@u+2)^0,f,c
  3847   00232A  5031               	movf	(??_floorf+3)^0,w,c
  3848   00232C  163D               	andwf	(floorf@u+3)^0,f,c
  3849   00232E  EFDD  F011         	goto	l3592
  3850   002332                     l3584:
  3851   002332  C03A  F02E         	movff	floorf@u,??_floorf
  3852   002336  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  3853   00233A  C03C  F030         	movff	floorf@u+2,??_floorf+2
  3854   00233E  C03D  F031         	movff	floorf@u+3,??_floorf+3
  3855   002342  0E20               	movlw	32
  3856   002344  EFA9  F011         	goto	u3500
  3857   002348                     u3505:
  3858   002348  90D8               	bcf	status,0,c
  3859   00234A  3231               	rrcf	(??_floorf+3)^0,f,c
  3860   00234C  3230               	rrcf	(??_floorf+2)^0,f,c
  3861   00234E  322F               	rrcf	(??_floorf+1)^0,f,c
  3862   002350  322E               	rrcf	??_floorf^0,f,c
  3863   002352                     u3500:
  3864   002352  2EE8               	decfsz	wreg,f,c
  3865   002354  EFA4  F011         	goto	u3505
  3866   002358  502E               	movf	??_floorf^0,w,c
  3867   00235A  102F               	iorwf	(??_floorf+1)^0,w,c
  3868   00235C  1030               	iorwf	(??_floorf+2)^0,w,c
  3869   00235E  1031               	iorwf	(??_floorf+3)^0,w,c
  3870   002360  A4D8               	btfss	status,2,c
  3871   002362  EFB5  F011         	goto	u3511
  3872   002366  EFB7  F011         	goto	u3510
  3873   00236A                     u3511:
  3874   00236A  EFC1  F011         	goto	l3588
  3875   00236E                     u3510:
  3876   00236E  0E00               	movlw	0
  3877   002370  6E3A               	movwf	floorf@u^0,c
  3878   002372  0E00               	movlw	0
  3879   002374  6E3B               	movwf	(floorf@u+1)^0,c
  3880   002376  0E00               	movlw	0
  3881   002378  6E3C               	movwf	(floorf@u+2)^0,c
  3882   00237A  0E00               	movlw	0
  3883   00237C  6E3D               	movwf	(floorf@u+3)^0,c
  3884   00237E  EFDD  F011         	goto	l3592
  3885   002382                     l3588:
  3886   002382  90D8               	bcf	status,0,c
  3887   002384  343A               	rlcf	floorf@u^0,w,c
  3888   002386  6E2E               	movwf	??_floorf^0,c
  3889   002388  343B               	rlcf	(floorf@u+1)^0,w,c
  3890   00238A  6E2F               	movwf	(??_floorf+1)^0,c
  3891   00238C  343C               	rlcf	(floorf@u+2)^0,w,c
  3892   00238E  6E30               	movwf	(??_floorf+2)^0,c
  3893   002390  343D               	rlcf	(floorf@u+3)^0,w,c
  3894   002392  6E31               	movwf	(??_floorf+3)^0,c
  3895   002394  502E               	movf	??_floorf^0,w,c
  3896   002396  102F               	iorwf	(??_floorf+1)^0,w,c
  3897   002398  1030               	iorwf	(??_floorf+2)^0,w,c
  3898   00239A  1031               	iorwf	(??_floorf+3)^0,w,c
  3899   00239C  B4D8               	btfsc	status,2,c
  3900   00239E  EFD3  F011         	goto	u3521
  3901   0023A2  EFD5  F011         	goto	u3520
  3902   0023A6                     u3521:
  3903   0023A6  EFDD  F011         	goto	l3592
  3904   0023AA                     u3520:
  3905   0023AA  0E00               	movlw	0
  3906   0023AC  6E3A               	movwf	floorf@u^0,c
  3907   0023AE  0E00               	movlw	0
  3908   0023B0  6E3B               	movwf	(floorf@u+1)^0,c
  3909   0023B2  0E80               	movlw	128
  3910   0023B4  6E3C               	movwf	(floorf@u+2)^0,c
  3911   0023B6  0EBF               	movlw	191
  3912   0023B8  6E3D               	movwf	(floorf@u+3)^0,c
  3913   0023BA                     l3592:
  3914   0023BA  C03A  F02A         	movff	floorf@u,?_floorf
  3915   0023BE  C03B  F02B         	movff	floorf@u+1,?_floorf+1
  3916   0023C2  C03C  F02C         	movff	floorf@u+2,?_floorf+2
  3917   0023C6  C03D  F02D         	movff	floorf@u+3,?_floorf+3
  3918   0023CA                     l1260:
  3919   0023CA  0012               	return		;funcret
  3920   0023CC                     __end_of_floorf:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function ___fpclassifyf *****************
  3924 ;; Defined at:
  3925 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  x               4    0[COMRAM] float 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  u               4   10[COMRAM] struct .
  3930 ;;  e               2    8[COMRAM] int 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2    0[COMRAM] int 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3940 ;;      Params:         4       0       0       0       0       0       0       0       0
  3941 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3942 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3943 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3944 ;;Total ram usage:       14 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_efgtoa
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text13
  3954   002A36                     __ptext13:
  3955                           	callstack 0
  3956   002A36                     ___fpclassifyf:
  3957                           	callstack 26
  3958   002A36  C0AB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3959   002A3A  C0AC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3960   002A3E  C0AD  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3961   002A42  C0AE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3962   002A46  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3963   002A4A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3964   002A4E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3965   002A52  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3966   002A56  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3967   002A5A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3968   002A5E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3969   002A62  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3970   002A66  0E18               	movlw	24
  3971   002A68  EF3B  F015         	goto	u3340
  3972   002A6C                     u3345:
  3973   002A6C  90D8               	bcf	status,0,c
  3974   002A6E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3975   002A70  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3976   002A72  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3977   002A74  3205               	rrcf	??___fpclassifyf^0,f,c
  3978   002A76                     u3340:
  3979   002A76  2EE8               	decfsz	wreg,f,c
  3980   002A78  EF36  F015         	goto	u3345
  3981   002A7C  5005               	movf	??___fpclassifyf^0,w,c
  3982   002A7E  6E09               	movwf	___fpclassifyf@e^0,c
  3983   002A80  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3984   002A82  5009               	movf	___fpclassifyf@e^0,w,c
  3985   002A84  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3986   002A86  A4D8               	btfss	status,2,c
  3987   002A88  EF48  F015         	goto	u3351
  3988   002A8C  EF4A  F015         	goto	u3350
  3989   002A90                     u3351:
  3990   002A90  EF6A  F015         	goto	l3550
  3991   002A94                     u3350:
  3992   002A94  90D8               	bcf	status,0,c
  3993   002A96  340B               	rlcf	___fpclassifyf@u^0,w,c
  3994   002A98  6E05               	movwf	??___fpclassifyf^0,c
  3995   002A9A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3996   002A9C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3997   002A9E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3998   002AA0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3999   002AA2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4000   002AA4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4001   002AA6  5005               	movf	??___fpclassifyf^0,w,c
  4002   002AA8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4003   002AAA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4004   002AAC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4005   002AAE  A4D8               	btfss	status,2,c
  4006   002AB0  EF5C  F015         	goto	u3361
  4007   002AB4  EF5E  F015         	goto	u3360
  4008   002AB8                     u3361:
  4009   002AB8  EF64  F015         	goto	l3546
  4010   002ABC                     u3360:
  4011   002ABC  0E00               	movlw	0
  4012   002ABE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4013   002AC0  0E02               	movlw	2
  4014   002AC2  6E01               	movwf	?___fpclassifyf^0,c
  4015   002AC4  EF99  F015         	goto	l1228
  4016   002AC8                     l3546:
  4017   002AC8  0E00               	movlw	0
  4018   002ACA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4019   002ACC  0E03               	movlw	3
  4020   002ACE  6E01               	movwf	?___fpclassifyf^0,c
  4021   002AD0  EF99  F015         	goto	l1228
  4022   002AD4                     l3550:
  4023   002AD4  2809               	incf	___fpclassifyf@e^0,w,c
  4024   002AD6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4025   002AD8  A4D8               	btfss	status,2,c
  4026   002ADA  EF71  F015         	goto	u3371
  4027   002ADE  EF73  F015         	goto	u3370
  4028   002AE2                     u3371:
  4029   002AE2  EF95  F015         	goto	l3556
  4030   002AE6                     u3370:
  4031   002AE6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4032   002AEA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4033   002AEE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4034   002AF2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4035   002AF6  0E09               	movlw	9
  4036   002AF8                     u3385:
  4037   002AF8  90D8               	bcf	status,0,c
  4038   002AFA  3605               	rlcf	??___fpclassifyf^0,f,c
  4039   002AFC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4040   002AFE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4041   002B00  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4042   002B02  2EE8               	decfsz	wreg,f,c
  4043   002B04  EF7C  F015         	goto	u3385
  4044   002B08  5005               	movf	??___fpclassifyf^0,w,c
  4045   002B0A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4046   002B0C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4047   002B0E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4048   002B10  B4D8               	btfsc	status,2,c
  4049   002B12  EF8D  F015         	goto	u3391
  4050   002B16  EF90  F015         	goto	u3390
  4051   002B1A                     u3391:
  4052   002B1A  0E01               	movlw	1
  4053   002B1C  EF91  F015         	goto	u3400
  4054   002B20                     u3390:
  4055   002B20  0E00               	movlw	0
  4056   002B22                     u3400:
  4057   002B22  6E01               	movwf	?___fpclassifyf^0,c
  4058   002B24  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4059   002B26  EF99  F015         	goto	l1228
  4060   002B2A                     l3556:
  4061   002B2A  0E00               	movlw	0
  4062   002B2C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4063   002B2E  0E04               	movlw	4
  4064   002B30  6E01               	movwf	?___fpclassifyf^0,c
  4065   002B32                     l1228:
  4066   002B32  0012               	return		;funcret
  4067   002B34                     __end_of___fpclassifyf:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function ___fltol *****************
  4071 ;; Defined at:
  4072 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  f1              4    0[COMRAM] int 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  exp1            1    9[COMRAM] unsigned char 
  4077 ;;  sign1           1    8[COMRAM] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  4    0[COMRAM] long 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4087 ;;      Params:         4       0       0       0       0       0       0       0       0
  4088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4089 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4090 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4091 ;;Total ram usage:       10 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_efgtoa
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text14
  4101   00282C                     __ptext14:
  4102                           	callstack 0
  4103   00282C                     ___fltol:
  4104                           	callstack 26
  4105   00282C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4106   00282E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4107   002830  6E0A               	movwf	___fltol@exp1^0,c
  4108   002832  500A               	movf	___fltol@exp1^0,w,c
  4109   002834  A4D8               	btfss	status,2,c
  4110   002836  EF1F  F014         	goto	u3251
  4111   00283A  EF21  F014         	goto	u3250
  4112   00283E                     u3251:
  4113   00283E  EF2B  F014         	goto	l3486
  4114   002842                     u3250:
  4115   002842                     l3482:
  4116   002842  0E00               	movlw	0
  4117   002844  6E01               	movwf	?___fltol^0,c
  4118   002846  0E00               	movlw	0
  4119   002848  6E02               	movwf	(?___fltol+1)^0,c
  4120   00284A  0E00               	movlw	0
  4121   00284C  6E03               	movwf	(?___fltol+2)^0,c
  4122   00284E  0E00               	movlw	0
  4123   002850  6E04               	movwf	(?___fltol+3)^0,c
  4124   002852  EF98  F014         	goto	l713
  4125   002856                     l3486:
  4126   002856  C001  F005         	movff	___fltol@f1,??___fltol
  4127   00285A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4128   00285E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4129   002862  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4130   002866  0E20               	movlw	32
  4131   002868  EF3B  F014         	goto	u3260
  4132   00286C                     u3265:
  4133   00286C  90D8               	bcf	status,0,c
  4134   00286E  3208               	rrcf	(??___fltol+3)^0,f,c
  4135   002870  3207               	rrcf	(??___fltol+2)^0,f,c
  4136   002872  3206               	rrcf	(??___fltol+1)^0,f,c
  4137   002874  3205               	rrcf	??___fltol^0,f,c
  4138   002876                     u3260:
  4139   002876  2EE8               	decfsz	wreg,f,c
  4140   002878  EF36  F014         	goto	u3265
  4141   00287C  5005               	movf	??___fltol^0,w,c
  4142   00287E  6E09               	movwf	___fltol@sign1^0,c
  4143   002880  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4144   002882  0EFF               	movlw	255
  4145   002884  1601               	andwf	___fltol@f1^0,f,c
  4146   002886  0EFF               	movlw	255
  4147   002888  1602               	andwf	(___fltol@f1+1)^0,f,c
  4148   00288A  0EFF               	movlw	255
  4149   00288C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4150   00288E  0E00               	movlw	0
  4151   002890  1604               	andwf	(___fltol@f1+3)^0,f,c
  4152   002892  0E96               	movlw	150
  4153   002894  5E0A               	subwf	___fltol@exp1^0,f,c
  4154   002896  BE0A               	btfsc	___fltol@exp1^0,7,c
  4155   002898  EF52  F014         	goto	u3270
  4156   00289C  EF50  F014         	goto	u3271
  4157   0028A0                     u3271:
  4158   0028A0  EF68  F014         	goto	l3506
  4159   0028A4                     u3270:
  4160   0028A4  500A               	movf	___fltol@exp1^0,w,c
  4161   0028A6  0A80               	xorlw	128
  4162   0028A8  0F97               	addlw	151
  4163   0028AA  B0D8               	btfsc	status,0,c
  4164   0028AC  EF5A  F014         	goto	u3281
  4165   0028B0  EF5C  F014         	goto	u3280
  4166   0028B4                     u3281:
  4167   0028B4  EF5E  F014         	goto	l3502
  4168   0028B8                     u3280:
  4169   0028B8  EF21  F014         	goto	l3482
  4170   0028BC                     l3502:
  4171   0028BC  90D8               	bcf	status,0,c
  4172   0028BE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4173   0028C0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4174   0028C2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4175   0028C4  3201               	rrcf	___fltol@f1^0,f,c
  4176   0028C6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4177   0028C8  EF5E  F014         	goto	l3502
  4178   0028CC  EF80  F014         	goto	l3516
  4179   0028D0                     l3506:
  4180   0028D0  0E1F               	movlw	31
  4181   0028D2  640A               	cpfsgt	___fltol@exp1^0,c
  4182   0028D4  EF6E  F014         	goto	u3291
  4183   0028D8  EF70  F014         	goto	u3290
  4184   0028DC                     u3291:
  4185   0028DC  EF78  F014         	goto	l3514
  4186   0028E0                     u3290:
  4187   0028E0  EF21  F014         	goto	l3482
  4188   0028E4                     l3512:
  4189   0028E4  90D8               	bcf	status,0,c
  4190   0028E6  3601               	rlcf	___fltol@f1^0,f,c
  4191   0028E8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4192   0028EA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4193   0028EC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4194   0028EE  060A               	decf	___fltol@exp1^0,f,c
  4195   0028F0                     l3514:
  4196   0028F0  500A               	movf	___fltol@exp1^0,w,c
  4197   0028F2  A4D8               	btfss	status,2,c
  4198   0028F4  EF7E  F014         	goto	u3301
  4199   0028F8  EF80  F014         	goto	u3300
  4200   0028FC                     u3301:
  4201   0028FC  EF72  F014         	goto	l3512
  4202   002900                     u3300:
  4203   002900                     l3516:
  4204   002900  5009               	movf	___fltol@sign1^0,w,c
  4205   002902  B4D8               	btfsc	status,2,c
  4206   002904  EF86  F014         	goto	u3311
  4207   002908  EF88  F014         	goto	u3310
  4208   00290C                     u3311:
  4209   00290C  EF90  F014         	goto	l3520
  4210   002910                     u3310:
  4211   002910  1E04               	comf	(___fltol@f1+3)^0,f,c
  4212   002912  1E03               	comf	(___fltol@f1+2)^0,f,c
  4213   002914  1E02               	comf	(___fltol@f1+1)^0,f,c
  4214   002916  6C01               	negf	___fltol@f1^0,c
  4215   002918  0E00               	movlw	0
  4216   00291A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4217   00291C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4218   00291E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4219   002920                     l3520:
  4220   002920  C001  F001         	movff	___fltol@f1,?___fltol
  4221   002924  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4222   002928  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4223   00292C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4224   002930                     l713:
  4225   002930  0012               	return		;funcret
  4226   002932                     __end_of___fltol:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function ___flsub *****************
  4230 ;; Defined at:
  4231 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  b               4   46[COMRAM] long 
  4234 ;;  a               4   50[COMRAM] long 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  4   46[COMRAM] long 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4246 ;;      Params:         8       0       0       0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4249 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4250 ;;Total ram usage:        8 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 1
  4253 ;; This function calls:
  4254 ;;		___fladd
  4255 ;; This function is called by:
  4256 ;;		_efgtoa
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text15
  4261   003032                     __ptext15:
  4262                           	callstack 0
  4263   003032                     ___flsub:
  4264                           	callstack 25
  4265   003032  0E00               	movlw	0
  4266   003034  1A33               	xorwf	___flsub@a^0,f,c
  4267   003036  0E00               	movlw	0
  4268   003038  1A34               	xorwf	(___flsub@a+1)^0,f,c
  4269   00303A  0E00               	movlw	0
  4270   00303C  1A35               	xorwf	(___flsub@a+2)^0,f,c
  4271   00303E  0E80               	movlw	128
  4272   003040  1A36               	xorwf	(___flsub@a+3)^0,f,c
  4273   003042  C02F  F001         	movff	___flsub@b,___fladd@b
  4274   003046  C030  F002         	movff	___flsub@b+1,___fladd@b+1
  4275   00304A  C031  F003         	movff	___flsub@b+2,___fladd@b+2
  4276   00304E  C032  F004         	movff	___flsub@b+3,___fladd@b+3
  4277   003052  C033  F005         	movff	___flsub@a,___fladd@a
  4278   003056  C034  F006         	movff	___flsub@a+1,___fladd@a+1
  4279   00305A  C035  F007         	movff	___flsub@a+2,___fladd@a+2
  4280   00305E  C036  F008         	movff	___flsub@a+3,___fladd@a+3
  4281   003062  EC10  F009         	call	___fladd	;wreg free
  4282   003066  C001  F02F         	movff	?___fladd,?___flsub
  4283   00306A  C002  F030         	movff	?___fladd+1,?___flsub+1
  4284   00306E  C003  F031         	movff	?___fladd+2,?___flsub+2
  4285   003072  C004  F032         	movff	?___fladd+3,?___flsub+3
  4286   003076  0012               	return		;funcret
  4287   003078                     __end_of___flsub:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function ___fladd *****************
  4291 ;; Defined at:
  4292 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  b               4    0[COMRAM] long 
  4295 ;;  a               4    4[COMRAM] long 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  grs             1   15[COMRAM] unsigned char 
  4298 ;;  bexp            1   14[COMRAM] unsigned char 
  4299 ;;  aexp            1   13[COMRAM] unsigned char 
  4300 ;;  signs           1   12[COMRAM] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  4    0[COMRAM] unsigned char 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4310 ;;      Params:         8       0       0       0       0       0       0       0       0
  4311 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4312 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4313 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4314 ;;Total ram usage:       16 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;;		___flsub
  4321 ;;		_efgtoa
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text16
  4326   001220                     __ptext16:
  4327                           	callstack 0
  4328   001220                     ___fladd:
  4329                           	callstack 25
  4330   001220  5004               	movf	(___fladd@b+3)^0,w,c
  4331   001222  0B80               	andlw	128
  4332   001224  6E0D               	movwf	___fladd@signs^0,c
  4333   001226  5004               	movf	(___fladd@b+3)^0,w,c
  4334   001228  2404               	addwf	(___fladd@b+3)^0,w,c
  4335   00122A  6E0F               	movwf	___fladd@bexp^0,c
  4336   00122C  AE03               	btfss	(___fladd@b+2)^0,7,c
  4337   00122E  EF1B  F009         	goto	u2341
  4338   001232  EF1D  F009         	goto	u2340
  4339   001236                     u2341:
  4340   001236  EF1E  F009         	goto	l2950
  4341   00123A                     u2340:
  4342   00123A  800F               	bsf	___fladd@bexp^0,0,c
  4343   00123C                     l2950:
  4344   00123C  500F               	movf	___fladd@bexp^0,w,c
  4345   00123E  B4D8               	btfsc	status,2,c
  4346   001240  EF24  F009         	goto	u2351
  4347   001244  EF26  F009         	goto	u2350
  4348   001248                     u2351:
  4349   001248  EF3B  F009         	goto	l2960
  4350   00124C                     u2350:
  4351   00124C  280F               	incf	___fladd@bexp^0,w,c
  4352   00124E  A4D8               	btfss	status,2,c
  4353   001250  EF2C  F009         	goto	u2361
  4354   001254  EF2E  F009         	goto	u2360
  4355   001258                     u2361:
  4356   001258  EF36  F009         	goto	l2956
  4357   00125C                     u2360:
  4358   00125C  0E00               	movlw	0
  4359   00125E  6E01               	movwf	___fladd@b^0,c
  4360   001260  0E00               	movlw	0
  4361   001262  6E02               	movwf	(___fladd@b+1)^0,c
  4362   001264  0E00               	movlw	0
  4363   001266  6E03               	movwf	(___fladd@b+2)^0,c
  4364   001268  0E00               	movlw	0
  4365   00126A  6E04               	movwf	(___fladd@b+3)^0,c
  4366   00126C                     l2956:
  4367   00126C  8E03               	bsf	(___fladd@b+2)^0,7,c
  4368   00126E  0E00               	movlw	0
  4369   001270  6E04               	movwf	(___fladd@b+3)^0,c
  4370   001272  EF43  F009         	goto	l2962
  4371   001276                     l2960:
  4372   001276  0E00               	movlw	0
  4373   001278  6E01               	movwf	___fladd@b^0,c
  4374   00127A  0E00               	movlw	0
  4375   00127C  6E02               	movwf	(___fladd@b+1)^0,c
  4376   00127E  0E00               	movlw	0
  4377   001280  6E03               	movwf	(___fladd@b+2)^0,c
  4378   001282  0E00               	movlw	0
  4379   001284  6E04               	movwf	(___fladd@b+3)^0,c
  4380   001286                     l2962:
  4381   001286  5008               	movf	(___fladd@a+3)^0,w,c
  4382   001288  0B80               	andlw	128
  4383   00128A  6E0E               	movwf	___fladd@aexp^0,c
  4384   00128C  500D               	movf	___fladd@signs^0,w,c
  4385   00128E  180E               	xorwf	___fladd@aexp^0,w,c
  4386   001290  B4D8               	btfsc	status,2,c
  4387   001292  EF4D  F009         	goto	u2371
  4388   001296  EF4F  F009         	goto	u2370
  4389   00129A                     u2371:
  4390   00129A  EF50  F009         	goto	l2968
  4391   00129E                     u2370:
  4392   00129E  8C0D               	bsf	___fladd@signs^0,6,c
  4393   0012A0                     l2968:
  4394   0012A0  5008               	movf	(___fladd@a+3)^0,w,c
  4395   0012A2  2408               	addwf	(___fladd@a+3)^0,w,c
  4396   0012A4  6E0E               	movwf	___fladd@aexp^0,c
  4397   0012A6  AE07               	btfss	(___fladd@a+2)^0,7,c
  4398   0012A8  EF58  F009         	goto	u2381
  4399   0012AC  EF5A  F009         	goto	u2380
  4400   0012B0                     u2381:
  4401   0012B0  EF5B  F009         	goto	l2974
  4402   0012B4                     u2380:
  4403   0012B4  800E               	bsf	___fladd@aexp^0,0,c
  4404   0012B6                     l2974:
  4405   0012B6  500E               	movf	___fladd@aexp^0,w,c
  4406   0012B8  B4D8               	btfsc	status,2,c
  4407   0012BA  EF61  F009         	goto	u2391
  4408   0012BE  EF63  F009         	goto	u2390
  4409   0012C2                     u2391:
  4410   0012C2  EF78  F009         	goto	l2984
  4411   0012C6                     u2390:
  4412   0012C6  280E               	incf	___fladd@aexp^0,w,c
  4413   0012C8  A4D8               	btfss	status,2,c
  4414   0012CA  EF69  F009         	goto	u2401
  4415   0012CE  EF6B  F009         	goto	u2400
  4416   0012D2                     u2401:
  4417   0012D2  EF73  F009         	goto	l2980
  4418   0012D6                     u2400:
  4419   0012D6  0E00               	movlw	0
  4420   0012D8  6E05               	movwf	___fladd@a^0,c
  4421   0012DA  0E00               	movlw	0
  4422   0012DC  6E06               	movwf	(___fladd@a+1)^0,c
  4423   0012DE  0E00               	movlw	0
  4424   0012E0  6E07               	movwf	(___fladd@a+2)^0,c
  4425   0012E2  0E00               	movlw	0
  4426   0012E4  6E08               	movwf	(___fladd@a+3)^0,c
  4427   0012E6                     l2980:
  4428   0012E6  8E07               	bsf	(___fladd@a+2)^0,7,c
  4429   0012E8  0E00               	movlw	0
  4430   0012EA  6E08               	movwf	(___fladd@a+3)^0,c
  4431   0012EC  EF80  F009         	goto	l2986
  4432   0012F0                     l2984:
  4433   0012F0  0E00               	movlw	0
  4434   0012F2  6E05               	movwf	___fladd@a^0,c
  4435   0012F4  0E00               	movlw	0
  4436   0012F6  6E06               	movwf	(___fladd@a+1)^0,c
  4437   0012F8  0E00               	movlw	0
  4438   0012FA  6E07               	movwf	(___fladd@a+2)^0,c
  4439   0012FC  0E00               	movlw	0
  4440   0012FE  6E08               	movwf	(___fladd@a+3)^0,c
  4441   001300                     l2986:
  4442   001300  500F               	movf	___fladd@bexp^0,w,c
  4443   001302  5C0E               	subwf	___fladd@aexp^0,w,c
  4444   001304  B0D8               	btfsc	status,0,c
  4445   001306  EF87  F009         	goto	u2411
  4446   00130A  EF89  F009         	goto	u2410
  4447   00130E                     u2411:
  4448   00130E  EFB0  F009         	goto	l3022
  4449   001312                     u2410:
  4450   001312  AC0D               	btfss	___fladd@signs^0,6,c
  4451   001314  EF8E  F009         	goto	u2421
  4452   001318  EF90  F009         	goto	u2420
  4453   00131C                     u2421:
  4454   00131C  EF92  F009         	goto	l2992
  4455   001320                     u2420:
  4456   001320  0E80               	movlw	128
  4457   001322  1A0D               	xorwf	___fladd@signs^0,f,c
  4458   001324                     l2992:
  4459   001324  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4460   001328  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4461   00132C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4462   001330  C001  F010         	movff	___fladd@b,___fladd@grs
  4463   001334  C005  F001         	movff	___fladd@a,___fladd@b
  4464   001338  C010  F005         	movff	___fladd@grs,___fladd@a
  4465   00133C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4466   001340  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4467   001344  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4468   001348  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4469   00134C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4470   001350  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4471   001354  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4472   001358  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4473   00135C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4474   001360                     l3022:
  4475   001360  0E00               	movlw	0
  4476   001362  6E10               	movwf	___fladd@grs^0,c
  4477   001364  500F               	movf	___fladd@bexp^0,w,c
  4478   001366  C00E  F009         	movff	___fladd@aexp,??___fladd
  4479   00136A  6A0A               	clrf	(??___fladd+1)^0,c
  4480   00136C  5E09               	subwf	??___fladd^0,f,c
  4481   00136E  0E00               	movlw	0
  4482   001370  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4483   001372  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4484   001374  EFC5  F009         	goto	u2431
  4485   001378  500A               	movf	(??___fladd+1)^0,w,c
  4486   00137A  E109               	bnz	u2430
  4487   00137C  0E1A               	movlw	26
  4488   00137E  5C09               	subwf	??___fladd^0,w,c
  4489   001380  A0D8               	btfss	status,0,c
  4490   001382  EFC5  F009         	goto	u2431
  4491   001386  EFC7  F009         	goto	u2430
  4492   00138A                     u2431:
  4493   00138A  EFFE  F009         	goto	l945
  4494   00138E                     u2430:
  4495   00138E  5001               	movf	___fladd@b^0,w,c
  4496   001390  1002               	iorwf	(___fladd@b+1)^0,w,c
  4497   001392  1003               	iorwf	(___fladd@b+2)^0,w,c
  4498   001394  1004               	iorwf	(___fladd@b+3)^0,w,c
  4499   001396  A4D8               	btfss	status,2,c
  4500   001398  EFD0  F009         	goto	u2441
  4501   00139C  EFD3  F009         	goto	u2440
  4502   0013A0                     u2441:
  4503   0013A0  0E01               	movlw	1
  4504   0013A2  EFD4  F009         	goto	u2450
  4505   0013A6                     u2440:
  4506   0013A6  0E00               	movlw	0
  4507   0013A8                     u2450:
  4508   0013A8  6E10               	movwf	___fladd@grs^0,c
  4509   0013AA  0E00               	movlw	0
  4510   0013AC  6E01               	movwf	___fladd@b^0,c
  4511   0013AE  0E00               	movlw	0
  4512   0013B0  6E02               	movwf	(___fladd@b+1)^0,c
  4513   0013B2  0E00               	movlw	0
  4514   0013B4  6E03               	movwf	(___fladd@b+2)^0,c
  4515   0013B6  0E00               	movlw	0
  4516   0013B8  6E04               	movwf	(___fladd@b+3)^0,c
  4517   0013BA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4518   0013BE  EF07  F00A         	goto	l944
  4519   0013C2                     l946:
  4520   0013C2  A010               	btfss	___fladd@grs^0,0,c
  4521   0013C4  EFE6  F009         	goto	u2461
  4522   0013C8  EFE8  F009         	goto	u2460
  4523   0013CC                     u2461:
  4524   0013CC  EFEE  F009         	goto	l3034
  4525   0013D0                     u2460:
  4526   0013D0  90D8               	bcf	status,0,c
  4527   0013D2  3010               	rrcf	___fladd@grs^0,w,c
  4528   0013D4  0901               	iorlw	1
  4529   0013D6  6E10               	movwf	___fladd@grs^0,c
  4530   0013D8  EFF0  F009         	goto	l3036
  4531   0013DC                     l3034:
  4532   0013DC  90D8               	bcf	status,0,c
  4533   0013DE  3210               	rrcf	___fladd@grs^0,f,c
  4534   0013E0                     l3036:
  4535   0013E0  A001               	btfss	___fladd@b^0,0,c
  4536   0013E2  EFF5  F009         	goto	u2471
  4537   0013E6  EFF7  F009         	goto	u2470
  4538   0013EA                     u2471:
  4539   0013EA  EFF8  F009         	goto	l3040
  4540   0013EE                     u2470:
  4541   0013EE  8E10               	bsf	___fladd@grs^0,7,c
  4542   0013F0                     l3040:
  4543   0013F0  3404               	rlcf	(___fladd@b+3)^0,w,c
  4544   0013F2  3204               	rrcf	(___fladd@b+3)^0,f,c
  4545   0013F4  3203               	rrcf	(___fladd@b+2)^0,f,c
  4546   0013F6  3202               	rrcf	(___fladd@b+1)^0,f,c
  4547   0013F8  3201               	rrcf	___fladd@b^0,f,c
  4548   0013FA  2A0F               	incf	___fladd@bexp^0,f,c
  4549   0013FC                     l945:
  4550   0013FC  500E               	movf	___fladd@aexp^0,w,c
  4551   0013FE  5C0F               	subwf	___fladd@bexp^0,w,c
  4552   001400  A0D8               	btfss	status,0,c
  4553   001402  EF05  F00A         	goto	u2481
  4554   001406  EF07  F00A         	goto	u2480
  4555   00140A                     u2481:
  4556   00140A  EFE1  F009         	goto	l946
  4557   00140E                     u2480:
  4558   00140E                     l944:
  4559   00140E  BC0D               	btfsc	___fladd@signs^0,6,c
  4560   001410  EF0C  F00A         	goto	u2491
  4561   001414  EF0E  F00A         	goto	u2490
  4562   001418                     u2491:
  4563   001418  EF4E  F00A         	goto	l3068
  4564   00141C                     u2490:
  4565   00141C  500F               	movf	___fladd@bexp^0,w,c
  4566   00141E  A4D8               	btfss	status,2,c
  4567   001420  EF14  F00A         	goto	u2501
  4568   001424  EF16  F00A         	goto	u2500
  4569   001428                     u2501:
  4570   001428  EF20  F00A         	goto	l3050
  4571   00142C                     u2500:
  4572   00142C  0E00               	movlw	0
  4573   00142E  6E01               	movwf	?___fladd^0,c
  4574   001430  0E00               	movlw	0
  4575   001432  6E02               	movwf	(?___fladd+1)^0,c
  4576   001434  0E00               	movlw	0
  4577   001436  6E03               	movwf	(?___fladd+2)^0,c
  4578   001438  0E00               	movlw	0
  4579   00143A  6E04               	movwf	(?___fladd+3)^0,c
  4580   00143C  EF6F  F00B         	goto	l953
  4581   001440                     l3050:
  4582   001440  5005               	movf	___fladd@a^0,w,c
  4583   001442  2601               	addwf	___fladd@b^0,f,c
  4584   001444  5006               	movf	(___fladd@a+1)^0,w,c
  4585   001446  2202               	addwfc	(___fladd@b+1)^0,f,c
  4586   001448  5007               	movf	(___fladd@a+2)^0,w,c
  4587   00144A  2203               	addwfc	(___fladd@b+2)^0,f,c
  4588   00144C  5008               	movf	(___fladd@a+3)^0,w,c
  4589   00144E  2204               	addwfc	(___fladd@b+3)^0,f,c
  4590   001450  A004               	btfss	(___fladd@b+3)^0,0,c
  4591   001452  EF2D  F00A         	goto	u2511
  4592   001456  EF2F  F00A         	goto	u2510
  4593   00145A                     u2511:
  4594   00145A  EFDB  F00A         	goto	l3104
  4595   00145E                     u2510:
  4596   00145E  A010               	btfss	___fladd@grs^0,0,c
  4597   001460  EF34  F00A         	goto	u2521
  4598   001464  EF36  F00A         	goto	u2520
  4599   001468                     u2521:
  4600   001468  EF3C  F00A         	goto	l3058
  4601   00146C                     u2520:
  4602   00146C  90D8               	bcf	status,0,c
  4603   00146E  3010               	rrcf	___fladd@grs^0,w,c
  4604   001470  0901               	iorlw	1
  4605   001472  6E10               	movwf	___fladd@grs^0,c
  4606   001474  EF3E  F00A         	goto	l3060
  4607   001478                     l3058:
  4608   001478  90D8               	bcf	status,0,c
  4609   00147A  3210               	rrcf	___fladd@grs^0,f,c
  4610   00147C                     l3060:
  4611   00147C  A001               	btfss	___fladd@b^0,0,c
  4612   00147E  EF43  F00A         	goto	u2531
  4613   001482  EF45  F00A         	goto	u2530
  4614   001486                     u2531:
  4615   001486  EF46  F00A         	goto	l3064
  4616   00148A                     u2530:
  4617   00148A  8E10               	bsf	___fladd@grs^0,7,c
  4618   00148C                     l3064:
  4619   00148C  3404               	rlcf	(___fladd@b+3)^0,w,c
  4620   00148E  3204               	rrcf	(___fladd@b+3)^0,f,c
  4621   001490  3203               	rrcf	(___fladd@b+2)^0,f,c
  4622   001492  3202               	rrcf	(___fladd@b+1)^0,f,c
  4623   001494  3201               	rrcf	___fladd@b^0,f,c
  4624   001496  2A0F               	incf	___fladd@bexp^0,f,c
  4625   001498  EFDB  F00A         	goto	l3104
  4626   00149C                     l3068:
  4627   00149C  5005               	movf	___fladd@a^0,w,c
  4628   00149E  5C01               	subwf	___fladd@b^0,w,c
  4629   0014A0  5006               	movf	(___fladd@a+1)^0,w,c
  4630   0014A2  5802               	subwfb	(___fladd@b+1)^0,w,c
  4631   0014A4  5007               	movf	(___fladd@a+2)^0,w,c
  4632   0014A6  5803               	subwfb	(___fladd@b+2)^0,w,c
  4633   0014A8  5004               	movf	(___fladd@b+3)^0,w,c
  4634   0014AA  0A80               	xorlw	128
  4635   0014AC  6E09               	movwf	??___fladd^0,c
  4636   0014AE  5008               	movf	(___fladd@a+3)^0,w,c
  4637   0014B0  0A80               	xorlw	128
  4638   0014B2  5809               	subwfb	??___fladd^0,w,c
  4639   0014B4  B0D8               	btfsc	status,0,c
  4640   0014B6  EF5F  F00A         	goto	u2541
  4641   0014BA  EF61  F00A         	goto	u2540
  4642   0014BE                     u2541:
  4643   0014BE  EF8C  F00A         	goto	l3078
  4644   0014C2                     u2540:
  4645   0014C2  5001               	movf	___fladd@b^0,w,c
  4646   0014C4  5C05               	subwf	___fladd@a^0,w,c
  4647   0014C6  6E09               	movwf	??___fladd^0,c
  4648   0014C8  5002               	movf	(___fladd@b+1)^0,w,c
  4649   0014CA  5806               	subwfb	(___fladd@a+1)^0,w,c
  4650   0014CC  6E0A               	movwf	(??___fladd+1)^0,c
  4651   0014CE  5003               	movf	(___fladd@b+2)^0,w,c
  4652   0014D0  5807               	subwfb	(___fladd@a+2)^0,w,c
  4653   0014D2  6E0B               	movwf	(??___fladd+2)^0,c
  4654   0014D4  5004               	movf	(___fladd@b+3)^0,w,c
  4655   0014D6  5808               	subwfb	(___fladd@a+3)^0,w,c
  4656   0014D8  6E0C               	movwf	(??___fladd+3)^0,c
  4657   0014DA  0EFF               	movlw	255
  4658   0014DC  2409               	addwf	??___fladd^0,w,c
  4659   0014DE  6E01               	movwf	___fladd@b^0,c
  4660   0014E0  0EFF               	movlw	255
  4661   0014E2  200A               	addwfc	(??___fladd+1)^0,w,c
  4662   0014E4  6E02               	movwf	(___fladd@b+1)^0,c
  4663   0014E6  0EFF               	movlw	255
  4664   0014E8  200B               	addwfc	(??___fladd+2)^0,w,c
  4665   0014EA  6E03               	movwf	(___fladd@b+2)^0,c
  4666   0014EC  0EFF               	movlw	255
  4667   0014EE  200C               	addwfc	(??___fladd+3)^0,w,c
  4668   0014F0  6E04               	movwf	(___fladd@b+3)^0,c
  4669   0014F2  0E80               	movlw	128
  4670   0014F4  1A0D               	xorwf	___fladd@signs^0,f,c
  4671   0014F6  6C10               	negf	___fladd@grs^0,c
  4672   0014F8  5010               	movf	___fladd@grs^0,w,c
  4673   0014FA  A4D8               	btfss	status,2,c
  4674   0014FC  EF82  F00A         	goto	u2551
  4675   001500  EF84  F00A         	goto	u2550
  4676   001504                     u2551:
  4677   001504  EF94  F00A         	goto	l961
  4678   001508                     u2550:
  4679   001508  0E01               	movlw	1
  4680   00150A  2601               	addwf	___fladd@b^0,f,c
  4681   00150C  0E00               	movlw	0
  4682   00150E  2202               	addwfc	(___fladd@b+1)^0,f,c
  4683   001510  2203               	addwfc	(___fladd@b+2)^0,f,c
  4684   001512  2204               	addwfc	(___fladd@b+3)^0,f,c
  4685   001514  EF94  F00A         	goto	l961
  4686   001518                     l3078:
  4687   001518  5005               	movf	___fladd@a^0,w,c
  4688   00151A  5E01               	subwf	___fladd@b^0,f,c
  4689   00151C  5006               	movf	(___fladd@a+1)^0,w,c
  4690   00151E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4691   001520  5007               	movf	(___fladd@a+2)^0,w,c
  4692   001522  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4693   001524  5008               	movf	(___fladd@a+3)^0,w,c
  4694   001526  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4695   001528                     l961:
  4696   001528  5001               	movf	___fladd@b^0,w,c
  4697   00152A  1002               	iorwf	(___fladd@b+1)^0,w,c
  4698   00152C  1003               	iorwf	(___fladd@b+2)^0,w,c
  4699   00152E  1004               	iorwf	(___fladd@b+3)^0,w,c
  4700   001530  A4D8               	btfss	status,2,c
  4701   001532  EF9D  F00A         	goto	u2561
  4702   001536  EF9F  F00A         	goto	u2560
  4703   00153A                     u2561:
  4704   00153A  EFD4  F00A         	goto	l3102
  4705   00153E                     u2560:
  4706   00153E  5010               	movf	___fladd@grs^0,w,c
  4707   001540  A4D8               	btfss	status,2,c
  4708   001542  EFA5  F00A         	goto	u2571
  4709   001546  EFA7  F00A         	goto	u2570
  4710   00154A                     u2571:
  4711   00154A  EFD4  F00A         	goto	l3102
  4712   00154E                     u2570:
  4713   00154E  0E00               	movlw	0
  4714   001550  6E01               	movwf	?___fladd^0,c
  4715   001552  0E00               	movlw	0
  4716   001554  6E02               	movwf	(?___fladd+1)^0,c
  4717   001556  0E00               	movlw	0
  4718   001558  6E03               	movwf	(?___fladd+2)^0,c
  4719   00155A  0E00               	movlw	0
  4720   00155C  6E04               	movwf	(?___fladd+3)^0,c
  4721   00155E  EF6F  F00B         	goto	l953
  4722   001562                     l3086:
  4723   001562  90D8               	bcf	status,0,c
  4724   001564  3601               	rlcf	___fladd@b^0,f,c
  4725   001566  3602               	rlcf	(___fladd@b+1)^0,f,c
  4726   001568  3603               	rlcf	(___fladd@b+2)^0,f,c
  4727   00156A  3604               	rlcf	(___fladd@b+3)^0,f,c
  4728   00156C  AE10               	btfss	___fladd@grs^0,7,c
  4729   00156E  EFBB  F00A         	goto	u2581
  4730   001572  EFBD  F00A         	goto	u2580
  4731   001576                     u2581:
  4732   001576  EFBE  F00A         	goto	l3092
  4733   00157A                     u2580:
  4734   00157A  8001               	bsf	___fladd@b^0,0,c
  4735   00157C                     l3092:
  4736   00157C  A010               	btfss	___fladd@grs^0,0,c
  4737   00157E  EFC3  F00A         	goto	u2591
  4738   001582  EFC5  F00A         	goto	u2590
  4739   001586                     u2591:
  4740   001586  EFC9  F00A         	goto	l3096
  4741   00158A                     u2590:
  4742   00158A  80D8               	bsf	status,0,c
  4743   00158C  3610               	rlcf	___fladd@grs^0,f,c
  4744   00158E  EFCB  F00A         	goto	l3098
  4745   001592                     l3096:
  4746   001592  90D8               	bcf	status,0,c
  4747   001594  3610               	rlcf	___fladd@grs^0,f,c
  4748   001596                     l3098:
  4749   001596  500F               	movf	___fladd@bexp^0,w,c
  4750   001598  B4D8               	btfsc	status,2,c
  4751   00159A  EFD1  F00A         	goto	u2601
  4752   00159E  EFD3  F00A         	goto	u2600
  4753   0015A2                     u2601:
  4754   0015A2  EFD4  F00A         	goto	l3102
  4755   0015A6                     u2600:
  4756   0015A6  060F               	decf	___fladd@bexp^0,f,c
  4757   0015A8                     l3102:
  4758   0015A8  AE03               	btfss	(___fladd@b+2)^0,7,c
  4759   0015AA  EFD9  F00A         	goto	u2611
  4760   0015AE  EFDB  F00A         	goto	u2610
  4761   0015B2                     u2611:
  4762   0015B2  EFB1  F00A         	goto	l3086
  4763   0015B6                     u2610:
  4764   0015B6                     l3104:
  4765   0015B6  0E00               	movlw	0
  4766   0015B8  6E0E               	movwf	___fladd@aexp^0,c
  4767   0015BA  AE10               	btfss	___fladd@grs^0,7,c
  4768   0015BC  EFE2  F00A         	goto	u2621
  4769   0015C0  EFE4  F00A         	goto	u2620
  4770   0015C4                     u2621:
  4771   0015C4  EFFC  F00A         	goto	l970
  4772   0015C8                     u2620:
  4773   0015C8  C010  F009         	movff	___fladd@grs,??___fladd
  4774   0015CC  0E7F               	movlw	127
  4775   0015CE  1609               	andwf	??___fladd^0,f,c
  4776   0015D0  B4D8               	btfsc	status,2,c
  4777   0015D2  EFED  F00A         	goto	u2631
  4778   0015D6  EFEF  F00A         	goto	u2630
  4779   0015DA                     u2631:
  4780   0015DA  EFF3  F00A         	goto	l971
  4781   0015DE                     u2630:
  4782   0015DE                     l3110:
  4783   0015DE  0E01               	movlw	1
  4784   0015E0  6E0E               	movwf	___fladd@aexp^0,c
  4785   0015E2  EFFC  F00A         	goto	l970
  4786   0015E6                     l971:
  4787   0015E6  A001               	btfss	___fladd@b^0,0,c
  4788   0015E8  EFF8  F00A         	goto	u2641
  4789   0015EC  EFFA  F00A         	goto	u2640
  4790   0015F0                     u2641:
  4791   0015F0  EFFC  F00A         	goto	l970
  4792   0015F4                     u2640:
  4793   0015F4  EFEF  F00A         	goto	l3110
  4794   0015F8                     l970:
  4795   0015F8  500E               	movf	___fladd@aexp^0,w,c
  4796   0015FA  B4D8               	btfsc	status,2,c
  4797   0015FC  EF02  F00B         	goto	u2651
  4798   001600  EF04  F00B         	goto	u2650
  4799   001604                     u2651:
  4800   001604  EF2F  F00B         	goto	l3122
  4801   001608                     u2650:
  4802   001608  0E01               	movlw	1
  4803   00160A  2601               	addwf	___fladd@b^0,f,c
  4804   00160C  0E00               	movlw	0
  4805   00160E  2202               	addwfc	(___fladd@b+1)^0,f,c
  4806   001610  2203               	addwfc	(___fladd@b+2)^0,f,c
  4807   001612  2204               	addwfc	(___fladd@b+3)^0,f,c
  4808   001614  A004               	btfss	(___fladd@b+3)^0,0,c
  4809   001616  EF0F  F00B         	goto	u2661
  4810   00161A  EF11  F00B         	goto	u2660
  4811   00161E                     u2661:
  4812   00161E  EF2F  F00B         	goto	l3122
  4813   001622                     u2660:
  4814   001622  C001  F009         	movff	___fladd@b,??___fladd
  4815   001626  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4816   00162A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4817   00162E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4818   001632  340C               	rlcf	(??___fladd+3)^0,w,c
  4819   001634  320C               	rrcf	(??___fladd+3)^0,f,c
  4820   001636  320B               	rrcf	(??___fladd+2)^0,f,c
  4821   001638  320A               	rrcf	(??___fladd+1)^0,f,c
  4822   00163A  3209               	rrcf	??___fladd^0,f,c
  4823   00163C  C009  F001         	movff	??___fladd,___fladd@b
  4824   001640  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4825   001644  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4826   001648  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4827   00164C  280F               	incf	___fladd@bexp^0,w,c
  4828   00164E  B4D8               	btfsc	status,2,c
  4829   001650  EF2C  F00B         	goto	u2671
  4830   001654  EF2E  F00B         	goto	u2670
  4831   001658                     u2671:
  4832   001658  EF2F  F00B         	goto	l3122
  4833   00165C                     u2670:
  4834   00165C  2A0F               	incf	___fladd@bexp^0,f,c
  4835   00165E                     l3122:
  4836   00165E  280F               	incf	___fladd@bexp^0,w,c
  4837   001660  B4D8               	btfsc	status,2,c
  4838   001662  EF35  F00B         	goto	u2681
  4839   001666  EF37  F00B         	goto	u2680
  4840   00166A                     u2681:
  4841   00166A  EF3F  F00B         	goto	l3126
  4842   00166E                     u2680:
  4843   00166E  500F               	movf	___fladd@bexp^0,w,c
  4844   001670  A4D8               	btfss	status,2,c
  4845   001672  EF3D  F00B         	goto	u2691
  4846   001676  EF3F  F00B         	goto	u2690
  4847   00167A                     u2691:
  4848   00167A  EF51  F00B         	goto	l3130
  4849   00167E                     u2690:
  4850   00167E                     l3126:
  4851   00167E  0E00               	movlw	0
  4852   001680  6E01               	movwf	___fladd@b^0,c
  4853   001682  0E00               	movlw	0
  4854   001684  6E02               	movwf	(___fladd@b+1)^0,c
  4855   001686  0E00               	movlw	0
  4856   001688  6E03               	movwf	(___fladd@b+2)^0,c
  4857   00168A  0E00               	movlw	0
  4858   00168C  6E04               	movwf	(___fladd@b+3)^0,c
  4859   00168E  500F               	movf	___fladd@bexp^0,w,c
  4860   001690  A4D8               	btfss	status,2,c
  4861   001692  EF4D  F00B         	goto	u2701
  4862   001696  EF4F  F00B         	goto	u2700
  4863   00169A                     u2701:
  4864   00169A  EF51  F00B         	goto	l3130
  4865   00169E                     u2700:
  4866   00169E  0E00               	movlw	0
  4867   0016A0  6E0D               	movwf	___fladd@signs^0,c
  4868   0016A2                     l3130:
  4869   0016A2  A00F               	btfss	___fladd@bexp^0,0,c
  4870   0016A4  EF56  F00B         	goto	u2711
  4871   0016A8  EF58  F00B         	goto	u2710
  4872   0016AC                     u2711:
  4873   0016AC  EF5B  F00B         	goto	l3134
  4874   0016B0                     u2710:
  4875   0016B0  8E03               	bsf	(___fladd@b+2)^0,7,c
  4876   0016B2  EF5C  F00B         	goto	l3136
  4877   0016B6                     l3134:
  4878   0016B6  9E03               	bcf	(___fladd@b+2)^0,7,c
  4879   0016B8                     l3136:
  4880   0016B8  90D8               	bcf	status,0,c
  4881   0016BA  300F               	rrcf	___fladd@bexp^0,w,c
  4882   0016BC  6E04               	movwf	(___fladd@b+3)^0,c
  4883   0016BE  AE0D               	btfss	___fladd@signs^0,7,c
  4884   0016C0  EF64  F00B         	goto	u2721
  4885   0016C4  EF66  F00B         	goto	u2720
  4886   0016C8                     u2721:
  4887   0016C8  EF67  F00B         	goto	l3142
  4888   0016CC                     u2720:
  4889   0016CC  8E04               	bsf	(___fladd@b+3)^0,7,c
  4890   0016CE                     l3142:
  4891   0016CE  C001  F001         	movff	___fladd@b,?___fladd
  4892   0016D2  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4893   0016D6  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4894   0016DA  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4895   0016DE                     l953:
  4896   0016DE  0012               	return		;funcret
  4897   0016E0                     __end_of___fladd:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function ___flneg *****************
  4901 ;; Defined at:
  4902 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  f1              4    0[COMRAM] unsigned char 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  4    0[COMRAM] unsigned char 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4916 ;;      Params:         4       0       0       0       0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4919 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4920 ;;Total ram usage:        4 bytes
  4921 ;; Hardware stack levels used: 1
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_efgtoa
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text17
  4930   0031C2                     __ptext17:
  4931                           	callstack 0
  4932   0031C2                     ___flneg:
  4933                           	callstack 26
  4934   0031C2  5001               	movf	___flneg@f1^0,w,c
  4935   0031C4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4936   0031C6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4937   0031C8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4938   0031CA  B4D8               	btfsc	status,2,c
  4939   0031CC  EFEA  F018         	goto	u3241
  4940   0031D0  EFEC  F018         	goto	u3240
  4941   0031D4                     u3241:
  4942   0031D4  EFF4  F018         	goto	l3476
  4943   0031D8                     u3240:
  4944   0031D8  0E00               	movlw	0
  4945   0031DA  1A01               	xorwf	___flneg@f1^0,f,c
  4946   0031DC  0E00               	movlw	0
  4947   0031DE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4948   0031E0  0E00               	movlw	0
  4949   0031E2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4950   0031E4  0E80               	movlw	128
  4951   0031E6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4952   0031E8                     l3476:
  4953   0031E8  C001  F001         	movff	___flneg@f1,?___flneg
  4954   0031EC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4955   0031F0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4956   0031F4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4957   0031F8  0012               	return		;funcret
  4958   0031FA                     __end_of___flneg:
  4959                           	callstack 0
  4960                           
  4961 ;; *************** function ___flmul *****************
  4962 ;; Defined at:
  4963 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  b               4   21[COMRAM] unsigned char 
  4966 ;;  a               4   25[COMRAM] unsigned char 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  prod            4   40[COMRAM] struct .
  4969 ;;  grs             4   34[COMRAM] unsigned long 
  4970 ;;  temp            2   44[COMRAM] struct .
  4971 ;;  bexp            1   39[COMRAM] unsigned char 
  4972 ;;  aexp            1   38[COMRAM] unsigned char 
  4973 ;;  sign            1   33[COMRAM] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  4   21[COMRAM] unsigned char 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0, prodl, prodh
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4983 ;;      Params:         8       0       0       0       0       0       0       0       0
  4984 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4985 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4986 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4987 ;;Total ram usage:       25 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_main
  4993 ;;		_efgtoa
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text18
  4998   0016E0                     __ptext18:
  4999                           	callstack 0
  5000   0016E0                     ___flmul:
  5001                           	callstack 26
  5002   0016E0  5019               	movf	(___flmul@b+3)^0,w,c
  5003   0016E2  0B80               	andlw	128
  5004   0016E4  6E22               	movwf	___flmul@sign^0,c
  5005   0016E6  5019               	movf	(___flmul@b+3)^0,w,c
  5006   0016E8  2419               	addwf	(___flmul@b+3)^0,w,c
  5007   0016EA  6E28               	movwf	___flmul@bexp^0,c
  5008   0016EC  AE18               	btfss	(___flmul@b+2)^0,7,c
  5009   0016EE  EF7B  F00B         	goto	u2971
  5010   0016F2  EF7D  F00B         	goto	u2970
  5011   0016F6                     u2971:
  5012   0016F6  EF7E  F00B         	goto	l3304
  5013   0016FA                     u2970:
  5014   0016FA  8028               	bsf	___flmul@bexp^0,0,c
  5015   0016FC                     l3304:
  5016   0016FC  5028               	movf	___flmul@bexp^0,w,c
  5017   0016FE  B4D8               	btfsc	status,2,c
  5018   001700  EF84  F00B         	goto	u2981
  5019   001704  EF86  F00B         	goto	u2980
  5020   001708                     u2981:
  5021   001708  EF99  F00B         	goto	l3312
  5022   00170C                     u2980:
  5023   00170C  2828               	incf	___flmul@bexp^0,w,c
  5024   00170E  A4D8               	btfss	status,2,c
  5025   001710  EF8C  F00B         	goto	u2991
  5026   001714  EF8E  F00B         	goto	u2990
  5027   001718                     u2991:
  5028   001718  EF96  F00B         	goto	l3310
  5029   00171C                     u2990:
  5030   00171C  0E00               	movlw	0
  5031   00171E  6E16               	movwf	___flmul@b^0,c
  5032   001720  0E00               	movlw	0
  5033   001722  6E17               	movwf	(___flmul@b+1)^0,c
  5034   001724  0E00               	movlw	0
  5035   001726  6E18               	movwf	(___flmul@b+2)^0,c
  5036   001728  0E00               	movlw	0
  5037   00172A  6E19               	movwf	(___flmul@b+3)^0,c
  5038   00172C                     l3310:
  5039   00172C  8E18               	bsf	(___flmul@b+2)^0,7,c
  5040   00172E  EFA1  F00B         	goto	l3314
  5041   001732                     l3312:
  5042   001732  0E00               	movlw	0
  5043   001734  6E16               	movwf	___flmul@b^0,c
  5044   001736  0E00               	movlw	0
  5045   001738  6E17               	movwf	(___flmul@b+1)^0,c
  5046   00173A  0E00               	movlw	0
  5047   00173C  6E18               	movwf	(___flmul@b+2)^0,c
  5048   00173E  0E00               	movlw	0
  5049   001740  6E19               	movwf	(___flmul@b+3)^0,c
  5050   001742                     l3314:
  5051   001742  501D               	movf	(___flmul@a+3)^0,w,c
  5052   001744  0B80               	andlw	128
  5053   001746  1A22               	xorwf	___flmul@sign^0,f,c
  5054   001748  501D               	movf	(___flmul@a+3)^0,w,c
  5055   00174A  241D               	addwf	(___flmul@a+3)^0,w,c
  5056   00174C  6E27               	movwf	___flmul@aexp^0,c
  5057   00174E  AE1C               	btfss	(___flmul@a+2)^0,7,c
  5058   001750  EFAC  F00B         	goto	u3001
  5059   001754  EFAE  F00B         	goto	u3000
  5060   001758                     u3001:
  5061   001758  EFAF  F00B         	goto	l3322
  5062   00175C                     u3000:
  5063   00175C  8027               	bsf	___flmul@aexp^0,0,c
  5064   00175E                     l3322:
  5065   00175E  5027               	movf	___flmul@aexp^0,w,c
  5066   001760  B4D8               	btfsc	status,2,c
  5067   001762  EFB5  F00B         	goto	u3011
  5068   001766  EFB7  F00B         	goto	u3010
  5069   00176A                     u3011:
  5070   00176A  EFCA  F00B         	goto	l3330
  5071   00176E                     u3010:
  5072   00176E  2827               	incf	___flmul@aexp^0,w,c
  5073   001770  A4D8               	btfss	status,2,c
  5074   001772  EFBD  F00B         	goto	u3021
  5075   001776  EFBF  F00B         	goto	u3020
  5076   00177A                     u3021:
  5077   00177A  EFC7  F00B         	goto	l3328
  5078   00177E                     u3020:
  5079   00177E  0E00               	movlw	0
  5080   001780  6E1A               	movwf	___flmul@a^0,c
  5081   001782  0E00               	movlw	0
  5082   001784  6E1B               	movwf	(___flmul@a+1)^0,c
  5083   001786  0E00               	movlw	0
  5084   001788  6E1C               	movwf	(___flmul@a+2)^0,c
  5085   00178A  0E00               	movlw	0
  5086   00178C  6E1D               	movwf	(___flmul@a+3)^0,c
  5087   00178E                     l3328:
  5088   00178E  8E1C               	bsf	(___flmul@a+2)^0,7,c
  5089   001790  EFD2  F00B         	goto	l1030
  5090   001794                     l3330:
  5091   001794  0E00               	movlw	0
  5092   001796  6E1A               	movwf	___flmul@a^0,c
  5093   001798  0E00               	movlw	0
  5094   00179A  6E1B               	movwf	(___flmul@a+1)^0,c
  5095   00179C  0E00               	movlw	0
  5096   00179E  6E1C               	movwf	(___flmul@a+2)^0,c
  5097   0017A0  0E00               	movlw	0
  5098   0017A2  6E1D               	movwf	(___flmul@a+3)^0,c
  5099   0017A4                     l1030:
  5100   0017A4  5027               	movf	___flmul@aexp^0,w,c
  5101   0017A6  B4D8               	btfsc	status,2,c
  5102   0017A8  EFD8  F00B         	goto	u3031
  5103   0017AC  EFDA  F00B         	goto	u3030
  5104   0017B0                     u3031:
  5105   0017B0  EFE2  F00B         	goto	l3334
  5106   0017B4                     u3030:
  5107   0017B4  5028               	movf	___flmul@bexp^0,w,c
  5108   0017B6  A4D8               	btfss	status,2,c
  5109   0017B8  EFE0  F00B         	goto	u3041
  5110   0017BC  EFE2  F00B         	goto	u3040
  5111   0017C0                     u3041:
  5112   0017C0  EFEC  F00B         	goto	l3338
  5113   0017C4                     u3040:
  5114   0017C4                     l3334:
  5115   0017C4  0E00               	movlw	0
  5116   0017C6  6E16               	movwf	?___flmul^0,c
  5117   0017C8  0E00               	movlw	0
  5118   0017CA  6E17               	movwf	(?___flmul+1)^0,c
  5119   0017CC  0E00               	movlw	0
  5120   0017CE  6E18               	movwf	(?___flmul+2)^0,c
  5121   0017D0  0E00               	movlw	0
  5122   0017D2  6E19               	movwf	(?___flmul+3)^0,c
  5123   0017D4  EF84  F00D         	goto	l1034
  5124   0017D8                     l3338:
  5125   0017D8  501C               	movf	(___flmul@a+2)^0,w,c
  5126   0017DA  0216               	mulwf	___flmul@b^0,c
  5127   0017DC  CFF3 F02D          	movff	prodl,___flmul@temp
  5128   0017E0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5129   0017E4  502D               	movf	___flmul@temp^0,w,c
  5130   0017E6  6E23               	movwf	___flmul@grs^0,c
  5131   0017E8  6A24               	clrf	(___flmul@grs+1)^0,c
  5132   0017EA  6A25               	clrf	(___flmul@grs+2)^0,c
  5133   0017EC  6A26               	clrf	(___flmul@grs+3)^0,c
  5134   0017EE  502E               	movf	(___flmul@temp+1)^0,w,c
  5135   0017F0  6E29               	movwf	___flmul@prod^0,c
  5136   0017F2  6A2A               	clrf	(___flmul@prod+1)^0,c
  5137   0017F4  6A2B               	clrf	(___flmul@prod+2)^0,c
  5138   0017F6  6A2C               	clrf	(___flmul@prod+3)^0,c
  5139   0017F8  501B               	movf	(___flmul@a+1)^0,w,c
  5140   0017FA  0217               	mulwf	(___flmul@b+1)^0,c
  5141   0017FC  CFF3 F02D          	movff	prodl,___flmul@temp
  5142   001800  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5143   001804  502D               	movf	___flmul@temp^0,w,c
  5144   001806  2623               	addwf	___flmul@grs^0,f,c
  5145   001808  0E00               	movlw	0
  5146   00180A  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5147   00180C  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5148   00180E  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5149   001810  502E               	movf	(___flmul@temp+1)^0,w,c
  5150   001812  2629               	addwf	___flmul@prod^0,f,c
  5151   001814  0E00               	movlw	0
  5152   001816  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5153   001818  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5154   00181A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5155   00181C  501A               	movf	___flmul@a^0,w,c
  5156   00181E  0218               	mulwf	(___flmul@b+2)^0,c
  5157   001820  CFF3 F02D          	movff	prodl,___flmul@temp
  5158   001824  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5159   001828  502D               	movf	___flmul@temp^0,w,c
  5160   00182A  2623               	addwf	___flmul@grs^0,f,c
  5161   00182C  0E00               	movlw	0
  5162   00182E  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5163   001830  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5164   001832  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5165   001834  502E               	movf	(___flmul@temp+1)^0,w,c
  5166   001836  2629               	addwf	___flmul@prod^0,f,c
  5167   001838  0E00               	movlw	0
  5168   00183A  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5169   00183C  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5170   00183E  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5171   001840  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  5172   001844  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  5173   001848  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  5174   00184C  6A23               	clrf	___flmul@grs^0,c
  5175   00184E  501A               	movf	___flmul@a^0,w,c
  5176   001850  0217               	mulwf	(___flmul@b+1)^0,c
  5177   001852  CFF3 F02D          	movff	prodl,___flmul@temp
  5178   001856  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5179   00185A  502D               	movf	___flmul@temp^0,w,c
  5180   00185C  2623               	addwf	___flmul@grs^0,f,c
  5181   00185E  502E               	movf	(___flmul@temp+1)^0,w,c
  5182   001860  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5183   001862  0E00               	movlw	0
  5184   001864  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5185   001866  0E00               	movlw	0
  5186   001868  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5187   00186A  501B               	movf	(___flmul@a+1)^0,w,c
  5188   00186C  0216               	mulwf	___flmul@b^0,c
  5189   00186E  CFF3 F02D          	movff	prodl,___flmul@temp
  5190   001872  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5191   001876  502D               	movf	___flmul@temp^0,w,c
  5192   001878  2623               	addwf	___flmul@grs^0,f,c
  5193   00187A  502E               	movf	(___flmul@temp+1)^0,w,c
  5194   00187C  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5195   00187E  0E00               	movlw	0
  5196   001880  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5197   001882  0E00               	movlw	0
  5198   001884  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5199   001886  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  5200   00188A  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  5201   00188E  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  5202   001892  6A23               	clrf	___flmul@grs^0,c
  5203   001894  501A               	movf	___flmul@a^0,w,c
  5204   001896  0216               	mulwf	___flmul@b^0,c
  5205   001898  CFF3 F02D          	movff	prodl,___flmul@temp
  5206   00189C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5207   0018A0  502D               	movf	___flmul@temp^0,w,c
  5208   0018A2  2623               	addwf	___flmul@grs^0,f,c
  5209   0018A4  502E               	movf	(___flmul@temp+1)^0,w,c
  5210   0018A6  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5211   0018A8  0E00               	movlw	0
  5212   0018AA  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5213   0018AC  0E00               	movlw	0
  5214   0018AE  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5215   0018B0  501C               	movf	(___flmul@a+2)^0,w,c
  5216   0018B2  0217               	mulwf	(___flmul@b+1)^0,c
  5217   0018B4  CFF3 F02D          	movff	prodl,___flmul@temp
  5218   0018B8  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5219   0018BC  502D               	movf	___flmul@temp^0,w,c
  5220   0018BE  2629               	addwf	___flmul@prod^0,f,c
  5221   0018C0  502E               	movf	(___flmul@temp+1)^0,w,c
  5222   0018C2  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5223   0018C4  0E00               	movlw	0
  5224   0018C6  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5225   0018C8  0E00               	movlw	0
  5226   0018CA  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5227   0018CC  501B               	movf	(___flmul@a+1)^0,w,c
  5228   0018CE  0218               	mulwf	(___flmul@b+2)^0,c
  5229   0018D0  CFF3 F02D          	movff	prodl,___flmul@temp
  5230   0018D4  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5231   0018D8  502D               	movf	___flmul@temp^0,w,c
  5232   0018DA  2629               	addwf	___flmul@prod^0,f,c
  5233   0018DC  502E               	movf	(___flmul@temp+1)^0,w,c
  5234   0018DE  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5235   0018E0  0E00               	movlw	0
  5236   0018E2  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5237   0018E4  0E00               	movlw	0
  5238   0018E6  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5239   0018E8  501C               	movf	(___flmul@a+2)^0,w,c
  5240   0018EA  0218               	mulwf	(___flmul@b+2)^0,c
  5241   0018EC  CFF3 F02D          	movff	prodl,___flmul@temp
  5242   0018F0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5243   0018F4  502D               	movf	___flmul@temp^0,w,c
  5244   0018F6  6E1E               	movwf	??___flmul^0,c
  5245   0018F8  502E               	movf	(___flmul@temp+1)^0,w,c
  5246   0018FA  6E1F               	movwf	(??___flmul+1)^0,c
  5247   0018FC  6A20               	clrf	(??___flmul+2)^0,c
  5248   0018FE  6A21               	clrf	(??___flmul+3)^0,c
  5249   001900  C020  F021         	movff	??___flmul+2,??___flmul+3
  5250   001904  C01F  F020         	movff	??___flmul+1,??___flmul+2
  5251   001908  C01E  F01F         	movff	??___flmul,??___flmul+1
  5252   00190C  6A1E               	clrf	??___flmul^0,c
  5253   00190E  501E               	movf	??___flmul^0,w,c
  5254   001910  2629               	addwf	___flmul@prod^0,f,c
  5255   001912  501F               	movf	(??___flmul+1)^0,w,c
  5256   001914  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5257   001916  5020               	movf	(??___flmul+2)^0,w,c
  5258   001918  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5259   00191A  5021               	movf	(??___flmul+3)^0,w,c
  5260   00191C  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5261   00191E  C023  F01E         	movff	___flmul@grs,??___flmul
  5262   001922  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  5263   001926  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  5264   00192A  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  5265   00192E  0E19               	movlw	25
  5266   001930  EF9F  F00C         	goto	u3050
  5267   001934                     u3055:
  5268   001934  90D8               	bcf	status,0,c
  5269   001936  3221               	rrcf	(??___flmul+3)^0,f,c
  5270   001938  3220               	rrcf	(??___flmul+2)^0,f,c
  5271   00193A  321F               	rrcf	(??___flmul+1)^0,f,c
  5272   00193C  321E               	rrcf	??___flmul^0,f,c
  5273   00193E                     u3050:
  5274   00193E  2EE8               	decfsz	wreg,f,c
  5275   001940  EF9A  F00C         	goto	u3055
  5276   001944  501E               	movf	??___flmul^0,w,c
  5277   001946  2629               	addwf	___flmul@prod^0,f,c
  5278   001948  501F               	movf	(??___flmul+1)^0,w,c
  5279   00194A  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5280   00194C  5020               	movf	(??___flmul+2)^0,w,c
  5281   00194E  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5282   001950  5021               	movf	(??___flmul+3)^0,w,c
  5283   001952  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5284   001954  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  5285   001958  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  5286   00195C  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  5287   001960  6A23               	clrf	___flmul@grs^0,c
  5288   001962  5027               	movf	___flmul@aexp^0,w,c
  5289   001964  C028  F01E         	movff	___flmul@bexp,??___flmul
  5290   001968  6A1F               	clrf	(??___flmul+1)^0,c
  5291   00196A  261E               	addwf	??___flmul^0,f,c
  5292   00196C  0E00               	movlw	0
  5293   00196E  221F               	addwfc	(??___flmul+1)^0,f,c
  5294   001970  0E82               	movlw	130
  5295   001972  241E               	addwf	??___flmul^0,w,c
  5296   001974  6E2D               	movwf	___flmul@temp^0,c
  5297   001976  0EFF               	movlw	255
  5298   001978  201F               	addwfc	(??___flmul+1)^0,w,c
  5299   00197A  6E2E               	movwf	(___flmul@temp+1)^0,c
  5300   00197C  EFD5  F00C         	goto	l3386
  5301   001980                     l3380:
  5302   001980  90D8               	bcf	status,0,c
  5303   001982  3629               	rlcf	___flmul@prod^0,f,c
  5304   001984  362A               	rlcf	(___flmul@prod+1)^0,f,c
  5305   001986  362B               	rlcf	(___flmul@prod+2)^0,f,c
  5306   001988  362C               	rlcf	(___flmul@prod+3)^0,f,c
  5307   00198A  AE26               	btfss	(___flmul@grs+3)^0,7,c
  5308   00198C  EFCA  F00C         	goto	u3061
  5309   001990  EFCC  F00C         	goto	u3060
  5310   001994                     u3061:
  5311   001994  EFCD  F00C         	goto	l1037
  5312   001998                     u3060:
  5313   001998  8029               	bsf	___flmul@prod^0,0,c
  5314   00199A                     l1037:
  5315   00199A  90D8               	bcf	status,0,c
  5316   00199C  3623               	rlcf	___flmul@grs^0,f,c
  5317   00199E  3624               	rlcf	(___flmul@grs+1)^0,f,c
  5318   0019A0  3625               	rlcf	(___flmul@grs+2)^0,f,c
  5319   0019A2  3626               	rlcf	(___flmul@grs+3)^0,f,c
  5320   0019A4  062D               	decf	___flmul@temp^0,f,c
  5321   0019A6  A0D8               	btfss	status,0,c
  5322   0019A8  062E               	decf	(___flmul@temp+1)^0,f,c
  5323   0019AA                     l3386:
  5324   0019AA  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  5325   0019AC  EFDA  F00C         	goto	u3071
  5326   0019B0  EFDC  F00C         	goto	u3070
  5327   0019B4                     u3071:
  5328   0019B4  EFC0  F00C         	goto	l3380
  5329   0019B8                     u3070:
  5330   0019B8  0E00               	movlw	0
  5331   0019BA  6E27               	movwf	___flmul@aexp^0,c
  5332   0019BC  AE26               	btfss	(___flmul@grs+3)^0,7,c
  5333   0019BE  EFE3  F00C         	goto	u3081
  5334   0019C2  EFE5  F00C         	goto	u3080
  5335   0019C6                     u3081:
  5336   0019C6  EF09  F00D         	goto	l1039
  5337   0019CA                     u3080:
  5338   0019CA  0EFF               	movlw	255
  5339   0019CC  1423               	andwf	___flmul@grs^0,w,c
  5340   0019CE  6E1E               	movwf	??___flmul^0,c
  5341   0019D0  0EFF               	movlw	255
  5342   0019D2  1424               	andwf	(___flmul@grs+1)^0,w,c
  5343   0019D4  6E1F               	movwf	(??___flmul+1)^0,c
  5344   0019D6  0EFF               	movlw	255
  5345   0019D8  1425               	andwf	(___flmul@grs+2)^0,w,c
  5346   0019DA  6E20               	movwf	(??___flmul+2)^0,c
  5347   0019DC  0E7F               	movlw	127
  5348   0019DE  1426               	andwf	(___flmul@grs+3)^0,w,c
  5349   0019E0  6E21               	movwf	(??___flmul+3)^0,c
  5350   0019E2  501E               	movf	??___flmul^0,w,c
  5351   0019E4  101F               	iorwf	(??___flmul+1)^0,w,c
  5352   0019E6  1020               	iorwf	(??___flmul+2)^0,w,c
  5353   0019E8  1021               	iorwf	(??___flmul+3)^0,w,c
  5354   0019EA  B4D8               	btfsc	status,2,c
  5355   0019EC  EFFA  F00C         	goto	u3091
  5356   0019F0  EFFC  F00C         	goto	u3090
  5357   0019F4                     u3091:
  5358   0019F4  EF00  F00D         	goto	l1040
  5359   0019F8                     u3090:
  5360   0019F8                     l3394:
  5361   0019F8  0E01               	movlw	1
  5362   0019FA  6E27               	movwf	___flmul@aexp^0,c
  5363   0019FC  EF09  F00D         	goto	l1039
  5364   001A00                     l1040:
  5365   001A00  A029               	btfss	___flmul@prod^0,0,c
  5366   001A02  EF05  F00D         	goto	u3101
  5367   001A06  EF07  F00D         	goto	u3100
  5368   001A0A                     u3101:
  5369   001A0A  EF09  F00D         	goto	l1039
  5370   001A0E                     u3100:
  5371   001A0E  EFFC  F00C         	goto	l3394
  5372   001A12                     l1039:
  5373   001A12  5027               	movf	___flmul@aexp^0,w,c
  5374   001A14  B4D8               	btfsc	status,2,c
  5375   001A16  EF0F  F00D         	goto	u3111
  5376   001A1A  EF11  F00D         	goto	u3110
  5377   001A1E                     u3111:
  5378   001A1E  EF35  F00D         	goto	l3406
  5379   001A22                     u3110:
  5380   001A22  0E01               	movlw	1
  5381   001A24  2629               	addwf	___flmul@prod^0,f,c
  5382   001A26  0E00               	movlw	0
  5383   001A28  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5384   001A2A  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5385   001A2C  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5386   001A2E  A02C               	btfss	(___flmul@prod+3)^0,0,c
  5387   001A30  EF1C  F00D         	goto	u3121
  5388   001A34  EF1E  F00D         	goto	u3120
  5389   001A38                     u3121:
  5390   001A38  EF35  F00D         	goto	l3406
  5391   001A3C                     u3120:
  5392   001A3C  C029  F01E         	movff	___flmul@prod,??___flmul
  5393   001A40  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  5394   001A44  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  5395   001A48  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  5396   001A4C  3421               	rlcf	(??___flmul+3)^0,w,c
  5397   001A4E  3221               	rrcf	(??___flmul+3)^0,f,c
  5398   001A50  3220               	rrcf	(??___flmul+2)^0,f,c
  5399   001A52  321F               	rrcf	(??___flmul+1)^0,f,c
  5400   001A54  321E               	rrcf	??___flmul^0,f,c
  5401   001A56  C01E  F029         	movff	??___flmul,___flmul@prod
  5402   001A5A  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  5403   001A5E  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  5404   001A62  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  5405   001A66  4A2D               	infsnz	___flmul@temp^0,f,c
  5406   001A68  2A2E               	incf	(___flmul@temp+1)^0,f,c
  5407   001A6A                     l3406:
  5408   001A6A  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  5409   001A6C  EF40  F00D         	goto	u3131
  5410   001A70  502E               	movf	(___flmul@temp+1)^0,w,c
  5411   001A72  E108               	bnz	u3130
  5412   001A74  282D               	incf	___flmul@temp^0,w,c
  5413   001A76  A0D8               	btfss	status,0,c
  5414   001A78  EF40  F00D         	goto	u3131
  5415   001A7C  EF42  F00D         	goto	u3130
  5416   001A80                     u3131:
  5417   001A80  EF4C  F00D         	goto	l3410
  5418   001A84                     u3130:
  5419   001A84  0E00               	movlw	0
  5420   001A86  6E29               	movwf	___flmul@prod^0,c
  5421   001A88  0E00               	movlw	0
  5422   001A8A  6E2A               	movwf	(___flmul@prod+1)^0,c
  5423   001A8C  0E80               	movlw	128
  5424   001A8E  6E2B               	movwf	(___flmul@prod+2)^0,c
  5425   001A90  0E7F               	movlw	127
  5426   001A92  6E2C               	movwf	(___flmul@prod+3)^0,c
  5427   001A94  EF7A  F00D         	goto	l3422
  5428   001A98                     l3410:
  5429   001A98  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  5430   001A9A  EF59  F00D         	goto	u3140
  5431   001A9E  502E               	movf	(___flmul@temp+1)^0,w,c
  5432   001AA0  E106               	bnz	u3141
  5433   001AA2  042D               	decf	___flmul@temp^0,w,c
  5434   001AA4  B0D8               	btfsc	status,0,c
  5435   001AA6  EF57  F00D         	goto	u3141
  5436   001AAA  EF59  F00D         	goto	u3140
  5437   001AAE                     u3141:
  5438   001AAE  EF65  F00D         	goto	l1047
  5439   001AB2                     u3140:
  5440   001AB2  0E00               	movlw	0
  5441   001AB4  6E29               	movwf	___flmul@prod^0,c
  5442   001AB6  0E00               	movlw	0
  5443   001AB8  6E2A               	movwf	(___flmul@prod+1)^0,c
  5444   001ABA  0E00               	movlw	0
  5445   001ABC  6E2B               	movwf	(___flmul@prod+2)^0,c
  5446   001ABE  0E00               	movlw	0
  5447   001AC0  6E2C               	movwf	(___flmul@prod+3)^0,c
  5448   001AC2  0E00               	movlw	0
  5449   001AC4  6E22               	movwf	___flmul@sign^0,c
  5450   001AC6  EF7A  F00D         	goto	l3422
  5451   001ACA                     l1047:
  5452   001ACA  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  5453   001ACE  0EFF               	movlw	255
  5454   001AD0  1629               	andwf	___flmul@prod^0,f,c
  5455   001AD2  0EFF               	movlw	255
  5456   001AD4  162A               	andwf	(___flmul@prod+1)^0,f,c
  5457   001AD6  0E7F               	movlw	127
  5458   001AD8  162B               	andwf	(___flmul@prod+2)^0,f,c
  5459   001ADA  0E00               	movlw	0
  5460   001ADC  162C               	andwf	(___flmul@prod+3)^0,f,c
  5461   001ADE  A028               	btfss	___flmul@bexp^0,0,c
  5462   001AE0  EF74  F00D         	goto	u3151
  5463   001AE4  EF76  F00D         	goto	u3150
  5464   001AE8                     u3151:
  5465   001AE8  EF77  F00D         	goto	l3420
  5466   001AEC                     u3150:
  5467   001AEC  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  5468   001AEE                     l3420:
  5469   001AEE  90D8               	bcf	status,0,c
  5470   001AF0  3028               	rrcf	___flmul@bexp^0,w,c
  5471   001AF2  6E2C               	movwf	(___flmul@prod+3)^0,c
  5472   001AF4                     l3422:
  5473   001AF4  5022               	movf	___flmul@sign^0,w,c
  5474   001AF6  122C               	iorwf	(___flmul@prod+3)^0,f,c
  5475   001AF8  C029  F016         	movff	___flmul@prod,?___flmul
  5476   001AFC  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  5477   001B00  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  5478   001B04  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  5479   001B08                     l1034:
  5480   001B08  0012               	return		;funcret
  5481   001B0A                     __end_of___flmul:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function ___flge *****************
  5485 ;; Defined at:
  5486 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  ff1             4   46[COMRAM] unsigned char 
  5489 ;;  ff2             4   50[COMRAM] unsigned char 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;		None               void
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5501 ;;      Params:         8       0       0       0       0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5503 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5504 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5505 ;;Total ram usage:       12 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_main
  5511 ;;		_efgtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text19
  5516   002932                     __ptext19:
  5517                           	callstack 0
  5518   002932                     ___flge:
  5519                           	callstack 26
  5520   002932  0E00               	movlw	0
  5521   002934  142F               	andwf	___flge@ff1^0,w,c
  5522   002936  6E37               	movwf	??___flge^0,c
  5523   002938  0E00               	movlw	0
  5524   00293A  1430               	andwf	(___flge@ff1+1)^0,w,c
  5525   00293C  6E38               	movwf	(??___flge+1)^0,c
  5526   00293E  0E80               	movlw	128
  5527   002940  1431               	andwf	(___flge@ff1+2)^0,w,c
  5528   002942  6E39               	movwf	(??___flge+2)^0,c
  5529   002944  0E7F               	movlw	127
  5530   002946  1432               	andwf	(___flge@ff1+3)^0,w,c
  5531   002948  6E3A               	movwf	(??___flge+3)^0,c
  5532   00294A  5037               	movf	??___flge^0,w,c
  5533   00294C  1038               	iorwf	(??___flge+1)^0,w,c
  5534   00294E  1039               	iorwf	(??___flge+2)^0,w,c
  5535   002950  103A               	iorwf	(??___flge+3)^0,w,c
  5536   002952  A4D8               	btfss	status,2,c
  5537   002954  EFAE  F014         	goto	u3191
  5538   002958  EFB0  F014         	goto	u3190
  5539   00295C                     u3191:
  5540   00295C  EFB8  F014         	goto	l3454
  5541   002960                     u3190:
  5542   002960  0E00               	movlw	0
  5543   002962  6E2F               	movwf	___flge@ff1^0,c
  5544   002964  0E00               	movlw	0
  5545   002966  6E30               	movwf	(___flge@ff1+1)^0,c
  5546   002968  0E00               	movlw	0
  5547   00296A  6E31               	movwf	(___flge@ff1+2)^0,c
  5548   00296C  0E00               	movlw	0
  5549   00296E  6E32               	movwf	(___flge@ff1+3)^0,c
  5550   002970                     l3454:
  5551   002970  0E00               	movlw	0
  5552   002972  1433               	andwf	___flge@ff2^0,w,c
  5553   002974  6E37               	movwf	??___flge^0,c
  5554   002976  0E00               	movlw	0
  5555   002978  1434               	andwf	(___flge@ff2+1)^0,w,c
  5556   00297A  6E38               	movwf	(??___flge+1)^0,c
  5557   00297C  0E80               	movlw	128
  5558   00297E  1435               	andwf	(___flge@ff2+2)^0,w,c
  5559   002980  6E39               	movwf	(??___flge+2)^0,c
  5560   002982  0E7F               	movlw	127
  5561   002984  1436               	andwf	(___flge@ff2+3)^0,w,c
  5562   002986  6E3A               	movwf	(??___flge+3)^0,c
  5563   002988  5037               	movf	??___flge^0,w,c
  5564   00298A  1038               	iorwf	(??___flge+1)^0,w,c
  5565   00298C  1039               	iorwf	(??___flge+2)^0,w,c
  5566   00298E  103A               	iorwf	(??___flge+3)^0,w,c
  5567   002990  A4D8               	btfss	status,2,c
  5568   002992  EFCD  F014         	goto	u3201
  5569   002996  EFCF  F014         	goto	u3200
  5570   00299A                     u3201:
  5571   00299A  EFD7  F014         	goto	l3458
  5572   00299E                     u3200:
  5573   00299E  0E00               	movlw	0
  5574   0029A0  6E33               	movwf	___flge@ff2^0,c
  5575   0029A2  0E00               	movlw	0
  5576   0029A4  6E34               	movwf	(___flge@ff2+1)^0,c
  5577   0029A6  0E00               	movlw	0
  5578   0029A8  6E35               	movwf	(___flge@ff2+2)^0,c
  5579   0029AA  0E00               	movlw	0
  5580   0029AC  6E36               	movwf	(___flge@ff2+3)^0,c
  5581   0029AE                     l3458:
  5582   0029AE  AE32               	btfss	(___flge@ff1+3)^0,7,c
  5583   0029B0  EFDC  F014         	goto	u3211
  5584   0029B4  EFDE  F014         	goto	u3210
  5585   0029B8                     u3211:
  5586   0029B8  EFE7  F014         	goto	l3462
  5587   0029BC                     u3210:
  5588   0029BC  6C2F               	negf	___flge@ff1^0,c
  5589   0029BE  1E30               	comf	(___flge@ff1+1)^0,f,c
  5590   0029C0  B0D8               	btfsc	status,0,c
  5591   0029C2  2A30               	incf	(___flge@ff1+1)^0,f,c
  5592   0029C4  1E31               	comf	(___flge@ff1+2)^0,f,c
  5593   0029C6  B0D8               	btfsc	status,0,c
  5594   0029C8  2A31               	incf	(___flge@ff1+2)^0,f,c
  5595   0029CA  0E80               	movlw	128
  5596   0029CC  5632               	subfwb	(___flge@ff1+3)^0,f,c
  5597   0029CE                     l3462:
  5598   0029CE  AE36               	btfss	(___flge@ff2+3)^0,7,c
  5599   0029D0  EFEC  F014         	goto	u3221
  5600   0029D4  EFEE  F014         	goto	u3220
  5601   0029D8                     u3221:
  5602   0029D8  EFF7  F014         	goto	l681
  5603   0029DC                     u3220:
  5604   0029DC  6C33               	negf	___flge@ff2^0,c
  5605   0029DE  1E34               	comf	(___flge@ff2+1)^0,f,c
  5606   0029E0  B0D8               	btfsc	status,0,c
  5607   0029E2  2A34               	incf	(___flge@ff2+1)^0,f,c
  5608   0029E4  1E35               	comf	(___flge@ff2+2)^0,f,c
  5609   0029E6  B0D8               	btfsc	status,0,c
  5610   0029E8  2A35               	incf	(___flge@ff2+2)^0,f,c
  5611   0029EA  0E80               	movlw	128
  5612   0029EC  5636               	subfwb	(___flge@ff2+3)^0,f,c
  5613   0029EE                     l681:
  5614   0029EE  0E00               	movlw	0
  5615   0029F0  1A2F               	xorwf	___flge@ff1^0,f,c
  5616   0029F2  0E00               	movlw	0
  5617   0029F4  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  5618   0029F6  0E00               	movlw	0
  5619   0029F8  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  5620   0029FA  0E80               	movlw	128
  5621   0029FC  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  5622   0029FE  0E00               	movlw	0
  5623   002A00  1A33               	xorwf	___flge@ff2^0,f,c
  5624   002A02  0E00               	movlw	0
  5625   002A04  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  5626   002A06  0E00               	movlw	0
  5627   002A08  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  5628   002A0A  0E80               	movlw	128
  5629   002A0C  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  5630   002A0E  5033               	movf	___flge@ff2^0,w,c
  5631   002A10  5C2F               	subwf	___flge@ff1^0,w,c
  5632   002A12  5034               	movf	(___flge@ff2+1)^0,w,c
  5633   002A14  5830               	subwfb	(___flge@ff1+1)^0,w,c
  5634   002A16  5035               	movf	(___flge@ff2+2)^0,w,c
  5635   002A18  5831               	subwfb	(___flge@ff1+2)^0,w,c
  5636   002A1A  5036               	movf	(___flge@ff2+3)^0,w,c
  5637   002A1C  5832               	subwfb	(___flge@ff1+3)^0,w,c
  5638   002A1E  B0D8               	btfsc	status,0,c
  5639   002A20  EF14  F015         	goto	u3231
  5640   002A24  EF16  F015         	goto	u3230
  5641   002A28                     u3231:
  5642   002A28  EF19  F015         	goto	l3468
  5643   002A2C                     u3230:
  5644   002A2C  90D8               	bcf	status,0,c
  5645   002A2E  EF1A  F015         	goto	l686
  5646   002A32                     l3468:
  5647   002A32  80D8               	bsf	status,0,c
  5648   002A34                     l686:
  5649   002A34  0012               	return		;funcret
  5650   002A36                     __end_of___flge:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function ___fleq *****************
  5654 ;; Defined at:
  5655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  ff1             4    0[COMRAM] unsigned char 
  5658 ;;  ff2             4    4[COMRAM] unsigned char 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;		None               void
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5670 ;;      Params:         8       0       0       0       0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5672 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5673 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5674 ;;Total ram usage:       12 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_efgtoa
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text20
  5684   002BFE                     __ptext20:
  5685                           	callstack 0
  5686   002BFE                     ___fleq:
  5687                           	callstack 26
  5688   002BFE  0E00               	movlw	0
  5689   002C00  1401               	andwf	___fleq@ff1^0,w,c
  5690   002C02  6E09               	movwf	??___fleq^0,c
  5691   002C04  0E00               	movlw	0
  5692   002C06  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5693   002C08  6E0A               	movwf	(??___fleq+1)^0,c
  5694   002C0A  0E80               	movlw	128
  5695   002C0C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5696   002C0E  6E0B               	movwf	(??___fleq+2)^0,c
  5697   002C10  0E7F               	movlw	127
  5698   002C12  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5699   002C14  6E0C               	movwf	(??___fleq+3)^0,c
  5700   002C16  5009               	movf	??___fleq^0,w,c
  5701   002C18  100A               	iorwf	(??___fleq+1)^0,w,c
  5702   002C1A  100B               	iorwf	(??___fleq+2)^0,w,c
  5703   002C1C  100C               	iorwf	(??___fleq+3)^0,w,c
  5704   002C1E  A4D8               	btfss	status,2,c
  5705   002C20  EF14  F016         	goto	u3161
  5706   002C24  EF16  F016         	goto	u3160
  5707   002C28                     u3161:
  5708   002C28  EF1E  F016         	goto	l3438
  5709   002C2C                     u3160:
  5710   002C2C  0E00               	movlw	0
  5711   002C2E  6E01               	movwf	___fleq@ff1^0,c
  5712   002C30  0E00               	movlw	0
  5713   002C32  6E02               	movwf	(___fleq@ff1+1)^0,c
  5714   002C34  0E00               	movlw	0
  5715   002C36  6E03               	movwf	(___fleq@ff1+2)^0,c
  5716   002C38  0E00               	movlw	0
  5717   002C3A  6E04               	movwf	(___fleq@ff1+3)^0,c
  5718   002C3C                     l3438:
  5719   002C3C  0E00               	movlw	0
  5720   002C3E  1405               	andwf	___fleq@ff2^0,w,c
  5721   002C40  6E09               	movwf	??___fleq^0,c
  5722   002C42  0E00               	movlw	0
  5723   002C44  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5724   002C46  6E0A               	movwf	(??___fleq+1)^0,c
  5725   002C48  0E80               	movlw	128
  5726   002C4A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5727   002C4C  6E0B               	movwf	(??___fleq+2)^0,c
  5728   002C4E  0E7F               	movlw	127
  5729   002C50  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5730   002C52  6E0C               	movwf	(??___fleq+3)^0,c
  5731   002C54  5009               	movf	??___fleq^0,w,c
  5732   002C56  100A               	iorwf	(??___fleq+1)^0,w,c
  5733   002C58  100B               	iorwf	(??___fleq+2)^0,w,c
  5734   002C5A  100C               	iorwf	(??___fleq+3)^0,w,c
  5735   002C5C  A4D8               	btfss	status,2,c
  5736   002C5E  EF33  F016         	goto	u3171
  5737   002C62  EF35  F016         	goto	u3170
  5738   002C66                     u3171:
  5739   002C66  EF3D  F016         	goto	l3442
  5740   002C6A                     u3170:
  5741   002C6A  0E00               	movlw	0
  5742   002C6C  6E05               	movwf	___fleq@ff2^0,c
  5743   002C6E  0E00               	movlw	0
  5744   002C70  6E06               	movwf	(___fleq@ff2+1)^0,c
  5745   002C72  0E00               	movlw	0
  5746   002C74  6E07               	movwf	(___fleq@ff2+2)^0,c
  5747   002C76  0E00               	movlw	0
  5748   002C78  6E08               	movwf	(___fleq@ff2+3)^0,c
  5749   002C7A                     l3442:
  5750   002C7A  5005               	movf	___fleq@ff2^0,w,c
  5751   002C7C  1801               	xorwf	___fleq@ff1^0,w,c
  5752   002C7E  E10F               	bnz	u3180
  5753   002C80  5006               	movf	(___fleq@ff2+1)^0,w,c
  5754   002C82  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5755   002C84  E10C               	bnz	u3180
  5756   002C86  5007               	movf	(___fleq@ff2+2)^0,w,c
  5757   002C88  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5758   002C8A  E109               	bnz	u3180
  5759   002C8C  5008               	movf	(___fleq@ff2+3)^0,w,c
  5760   002C8E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5761   002C90  B4D8               	btfsc	status,2,c
  5762   002C92  EF4D  F016         	goto	u3181
  5763   002C96  EF4F  F016         	goto	u3180
  5764   002C9A                     u3181:
  5765   002C9A  EF52  F016         	goto	l3446
  5766   002C9E                     u3180:
  5767   002C9E  90D8               	bcf	status,0,c
  5768   002CA0  EF53  F016         	goto	l675
  5769   002CA4                     l3446:
  5770   002CA4  80D8               	bsf	status,0,c
  5771   002CA6                     l675:
  5772   002CA6  0012               	return		;funcret
  5773   002CA8                     __end_of___fleq:
  5774                           	callstack 0
  5775                           
  5776 ;; *************** function ___fldiv *****************
  5777 ;; Defined at:
  5778 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  b               4   16[COMRAM] unsigned char 
  5781 ;;  a               4   20[COMRAM] unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  grs             4   35[COMRAM] unsigned long 
  5784 ;;  rem             4   28[COMRAM] unsigned long 
  5785 ;;  new_exp         2   33[COMRAM] short 
  5786 ;;  aexp            1   40[COMRAM] unsigned char 
  5787 ;;  bexp            1   39[COMRAM] unsigned char 
  5788 ;;  sign            1   32[COMRAM] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4   16[COMRAM] unsigned char 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5798 ;;      Params:         8       0       0       0       0       0       0       0       0
  5799 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5800 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5801 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5802 ;;Total ram usage:       25 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;;		_efgtoa
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text21
  5813   001B0A                     __ptext21:
  5814                           	callstack 0
  5815   001B0A                     ___fldiv:
  5816                           	callstack 26
  5817   001B0A  5014               	movf	(___fldiv@b+3)^0,w,c
  5818   001B0C  0B80               	andlw	128
  5819   001B0E  6E21               	movwf	___fldiv@sign^0,c
  5820   001B10  5014               	movf	(___fldiv@b+3)^0,w,c
  5821   001B12  2414               	addwf	(___fldiv@b+3)^0,w,c
  5822   001B14  6E28               	movwf	___fldiv@bexp^0,c
  5823   001B16  AE13               	btfss	(___fldiv@b+2)^0,7,c
  5824   001B18  EF90  F00D         	goto	u2741
  5825   001B1C  EF92  F00D         	goto	u2740
  5826   001B20                     u2741:
  5827   001B20  EF93  F00D         	goto	l3166
  5828   001B24                     u2740:
  5829   001B24  8028               	bsf	___fldiv@bexp^0,0,c
  5830   001B26                     l3166:
  5831   001B26  5028               	movf	___fldiv@bexp^0,w,c
  5832   001B28  B4D8               	btfsc	status,2,c
  5833   001B2A  EF99  F00D         	goto	u2751
  5834   001B2E  EF9B  F00D         	goto	u2750
  5835   001B32                     u2751:
  5836   001B32  EFB0  F00D         	goto	l3176
  5837   001B36                     u2750:
  5838   001B36  2828               	incf	___fldiv@bexp^0,w,c
  5839   001B38  A4D8               	btfss	status,2,c
  5840   001B3A  EFA1  F00D         	goto	u2761
  5841   001B3E  EFA3  F00D         	goto	u2760
  5842   001B42                     u2761:
  5843   001B42  EFAB  F00D         	goto	l3172
  5844   001B46                     u2760:
  5845   001B46  0E00               	movlw	0
  5846   001B48  6E11               	movwf	___fldiv@b^0,c
  5847   001B4A  0E00               	movlw	0
  5848   001B4C  6E12               	movwf	(___fldiv@b+1)^0,c
  5849   001B4E  0E00               	movlw	0
  5850   001B50  6E13               	movwf	(___fldiv@b+2)^0,c
  5851   001B52  0E00               	movlw	0
  5852   001B54  6E14               	movwf	(___fldiv@b+3)^0,c
  5853   001B56                     l3172:
  5854   001B56  8E13               	bsf	(___fldiv@b+2)^0,7,c
  5855   001B58  0E00               	movlw	0
  5856   001B5A  6E14               	movwf	(___fldiv@b+3)^0,c
  5857   001B5C  EFB8  F00D         	goto	l3178
  5858   001B60                     l3176:
  5859   001B60  0E00               	movlw	0
  5860   001B62  6E11               	movwf	___fldiv@b^0,c
  5861   001B64  0E00               	movlw	0
  5862   001B66  6E12               	movwf	(___fldiv@b+1)^0,c
  5863   001B68  0E00               	movlw	0
  5864   001B6A  6E13               	movwf	(___fldiv@b+2)^0,c
  5865   001B6C  0E00               	movlw	0
  5866   001B6E  6E14               	movwf	(___fldiv@b+3)^0,c
  5867   001B70                     l3178:
  5868   001B70  5018               	movf	(___fldiv@a+3)^0,w,c
  5869   001B72  0B80               	andlw	128
  5870   001B74  1A21               	xorwf	___fldiv@sign^0,f,c
  5871   001B76  5018               	movf	(___fldiv@a+3)^0,w,c
  5872   001B78  2418               	addwf	(___fldiv@a+3)^0,w,c
  5873   001B7A  6E29               	movwf	___fldiv@aexp^0,c
  5874   001B7C  AE17               	btfss	(___fldiv@a+2)^0,7,c
  5875   001B7E  EFC3  F00D         	goto	u2771
  5876   001B82  EFC5  F00D         	goto	u2770
  5877   001B86                     u2771:
  5878   001B86  EFC6  F00D         	goto	l3186
  5879   001B8A                     u2770:
  5880   001B8A  8029               	bsf	___fldiv@aexp^0,0,c
  5881   001B8C                     l3186:
  5882   001B8C  5029               	movf	___fldiv@aexp^0,w,c
  5883   001B8E  B4D8               	btfsc	status,2,c
  5884   001B90  EFCC  F00D         	goto	u2781
  5885   001B94  EFCE  F00D         	goto	u2780
  5886   001B98                     u2781:
  5887   001B98  EFE3  F00D         	goto	l3196
  5888   001B9C                     u2780:
  5889   001B9C  2829               	incf	___fldiv@aexp^0,w,c
  5890   001B9E  A4D8               	btfss	status,2,c
  5891   001BA0  EFD4  F00D         	goto	u2791
  5892   001BA4  EFD6  F00D         	goto	u2790
  5893   001BA8                     u2791:
  5894   001BA8  EFDE  F00D         	goto	l3192
  5895   001BAC                     u2790:
  5896   001BAC  0E00               	movlw	0
  5897   001BAE  6E15               	movwf	___fldiv@a^0,c
  5898   001BB0  0E00               	movlw	0
  5899   001BB2  6E16               	movwf	(___fldiv@a+1)^0,c
  5900   001BB4  0E00               	movlw	0
  5901   001BB6  6E17               	movwf	(___fldiv@a+2)^0,c
  5902   001BB8  0E00               	movlw	0
  5903   001BBA  6E18               	movwf	(___fldiv@a+3)^0,c
  5904   001BBC                     l3192:
  5905   001BBC  8E17               	bsf	(___fldiv@a+2)^0,7,c
  5906   001BBE  0E00               	movlw	0
  5907   001BC0  6E18               	movwf	(___fldiv@a+3)^0,c
  5908   001BC2  EFEB  F00D         	goto	l3198
  5909   001BC6                     l3196:
  5910   001BC6  0E00               	movlw	0
  5911   001BC8  6E15               	movwf	___fldiv@a^0,c
  5912   001BCA  0E00               	movlw	0
  5913   001BCC  6E16               	movwf	(___fldiv@a+1)^0,c
  5914   001BCE  0E00               	movlw	0
  5915   001BD0  6E17               	movwf	(___fldiv@a+2)^0,c
  5916   001BD2  0E00               	movlw	0
  5917   001BD4  6E18               	movwf	(___fldiv@a+3)^0,c
  5918   001BD6                     l3198:
  5919   001BD6  5015               	movf	___fldiv@a^0,w,c
  5920   001BD8  1016               	iorwf	(___fldiv@a+1)^0,w,c
  5921   001BDA  1017               	iorwf	(___fldiv@a+2)^0,w,c
  5922   001BDC  1018               	iorwf	(___fldiv@a+3)^0,w,c
  5923   001BDE  A4D8               	btfss	status,2,c
  5924   001BE0  EFF4  F00D         	goto	u2801
  5925   001BE4  EFF6  F00D         	goto	u2800
  5926   001BE8                     u2801:
  5927   001BE8  EF0E  F00E         	goto	l3210
  5928   001BEC                     u2800:
  5929   001BEC  0E00               	movlw	0
  5930   001BEE  6E11               	movwf	___fldiv@b^0,c
  5931   001BF0  0E00               	movlw	0
  5932   001BF2  6E12               	movwf	(___fldiv@b+1)^0,c
  5933   001BF4  0E00               	movlw	0
  5934   001BF6  6E13               	movwf	(___fldiv@b+2)^0,c
  5935   001BF8  0E00               	movlw	0
  5936   001BFA  6E14               	movwf	(___fldiv@b+3)^0,c
  5937   001BFC  0E80               	movlw	128
  5938   001BFE  1213               	iorwf	(___fldiv@b+2)^0,f,c
  5939   001C00  0E7F               	movlw	127
  5940   001C02  1214               	iorwf	(___fldiv@b+3)^0,f,c
  5941   001C04                     l3204:
  5942   001C04  5021               	movf	___fldiv@sign^0,w,c
  5943   001C06  1214               	iorwf	(___fldiv@b+3)^0,f,c
  5944   001C08  C011  F011         	movff	___fldiv@b,?___fldiv
  5945   001C0C  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  5946   001C10  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  5947   001C14  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  5948   001C18  EF51  F00F         	goto	l998
  5949   001C1C                     l3210:
  5950   001C1C  5028               	movf	___fldiv@bexp^0,w,c
  5951   001C1E  A4D8               	btfss	status,2,c
  5952   001C20  EF14  F00E         	goto	u2811
  5953   001C24  EF16  F00E         	goto	u2810
  5954   001C28                     u2811:
  5955   001C28  EF20  F00E         	goto	l3218
  5956   001C2C                     u2810:
  5957   001C2C  0E00               	movlw	0
  5958   001C2E  6E11               	movwf	?___fldiv^0,c
  5959   001C30  0E00               	movlw	0
  5960   001C32  6E12               	movwf	(?___fldiv+1)^0,c
  5961   001C34  0E00               	movlw	0
  5962   001C36  6E13               	movwf	(?___fldiv+2)^0,c
  5963   001C38  0E00               	movlw	0
  5964   001C3A  6E14               	movwf	(?___fldiv+3)^0,c
  5965   001C3C  EF51  F00F         	goto	l998
  5966   001C40                     l3218:
  5967   001C40  5029               	movf	___fldiv@aexp^0,w,c
  5968   001C42  C028  F019         	movff	___fldiv@bexp,??___fldiv
  5969   001C46  6A1A               	clrf	(??___fldiv+1)^0,c
  5970   001C48  5E19               	subwf	??___fldiv^0,f,c
  5971   001C4A  0E00               	movlw	0
  5972   001C4C  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  5973   001C4E  0E7F               	movlw	127
  5974   001C50  2419               	addwf	??___fldiv^0,w,c
  5975   001C52  6E22               	movwf	___fldiv@new_exp^0,c
  5976   001C54  0E00               	movlw	0
  5977   001C56  201A               	addwfc	(??___fldiv+1)^0,w,c
  5978   001C58  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  5979   001C5A  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  5980   001C5E  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  5981   001C62  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  5982   001C66  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  5983   001C6A  0E00               	movlw	0
  5984   001C6C  6E11               	movwf	___fldiv@b^0,c
  5985   001C6E  0E00               	movlw	0
  5986   001C70  6E12               	movwf	(___fldiv@b+1)^0,c
  5987   001C72  0E00               	movlw	0
  5988   001C74  6E13               	movwf	(___fldiv@b+2)^0,c
  5989   001C76  0E00               	movlw	0
  5990   001C78  6E14               	movwf	(___fldiv@b+3)^0,c
  5991   001C7A  0E00               	movlw	0
  5992   001C7C  6E24               	movwf	___fldiv@grs^0,c
  5993   001C7E  0E00               	movlw	0
  5994   001C80  6E25               	movwf	(___fldiv@grs+1)^0,c
  5995   001C82  0E00               	movlw	0
  5996   001C84  6E26               	movwf	(___fldiv@grs+2)^0,c
  5997   001C86  0E00               	movlw	0
  5998   001C88  6E27               	movwf	(___fldiv@grs+3)^0,c
  5999   001C8A  0E00               	movlw	0
  6000   001C8C  6E29               	movwf	___fldiv@aexp^0,c
  6001   001C8E  EF81  F00E         	goto	l1000
  6002   001C92                     l3228:
  6003   001C92  5029               	movf	___fldiv@aexp^0,w,c
  6004   001C94  B4D8               	btfsc	status,2,c
  6005   001C96  EF4F  F00E         	goto	u2821
  6006   001C9A  EF51  F00E         	goto	u2820
  6007   001C9E                     u2821:
  6008   001C9E  EF68  F00E         	goto	l3236
  6009   001CA2                     u2820:
  6010   001CA2  90D8               	bcf	status,0,c
  6011   001CA4  361D               	rlcf	___fldiv@rem^0,f,c
  6012   001CA6  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  6013   001CA8  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  6014   001CAA  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  6015   001CAC  90D8               	bcf	status,0,c
  6016   001CAE  3611               	rlcf	___fldiv@b^0,f,c
  6017   001CB0  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6018   001CB2  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6019   001CB4  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6020   001CB6  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6021   001CB8  EF60  F00E         	goto	u2831
  6022   001CBC  EF62  F00E         	goto	u2830
  6023   001CC0                     u2831:
  6024   001CC0  EF63  F00E         	goto	l1003
  6025   001CC4                     u2830:
  6026   001CC4  8011               	bsf	___fldiv@b^0,0,c
  6027   001CC6                     l1003:
  6028   001CC6  90D8               	bcf	status,0,c
  6029   001CC8  3624               	rlcf	___fldiv@grs^0,f,c
  6030   001CCA  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6031   001CCC  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6032   001CCE  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6033   001CD0                     l3236:
  6034   001CD0  5015               	movf	___fldiv@a^0,w,c
  6035   001CD2  5C1D               	subwf	___fldiv@rem^0,w,c
  6036   001CD4  5016               	movf	(___fldiv@a+1)^0,w,c
  6037   001CD6  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  6038   001CD8  5017               	movf	(___fldiv@a+2)^0,w,c
  6039   001CDA  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  6040   001CDC  5018               	movf	(___fldiv@a+3)^0,w,c
  6041   001CDE  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  6042   001CE0  A0D8               	btfss	status,0,c
  6043   001CE2  EF75  F00E         	goto	u2841
  6044   001CE6  EF77  F00E         	goto	u2840
  6045   001CEA                     u2841:
  6046   001CEA  EF80  F00E         	goto	l3242
  6047   001CEE                     u2840:
  6048   001CEE  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  6049   001CF0  5015               	movf	___fldiv@a^0,w,c
  6050   001CF2  5E1D               	subwf	___fldiv@rem^0,f,c
  6051   001CF4  5016               	movf	(___fldiv@a+1)^0,w,c
  6052   001CF6  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  6053   001CF8  5017               	movf	(___fldiv@a+2)^0,w,c
  6054   001CFA  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  6055   001CFC  5018               	movf	(___fldiv@a+3)^0,w,c
  6056   001CFE  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  6057   001D00                     l3242:
  6058   001D00  2A29               	incf	___fldiv@aexp^0,f,c
  6059   001D02                     l1000:
  6060   001D02  0E19               	movlw	25
  6061   001D04  6429               	cpfsgt	___fldiv@aexp^0,c
  6062   001D06  EF87  F00E         	goto	u2851
  6063   001D0A  EF89  F00E         	goto	u2850
  6064   001D0E                     u2851:
  6065   001D0E  EF49  F00E         	goto	l3228
  6066   001D12                     u2850:
  6067   001D12  501D               	movf	___fldiv@rem^0,w,c
  6068   001D14  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  6069   001D16  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  6070   001D18  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  6071   001D1A  B4D8               	btfsc	status,2,c
  6072   001D1C  EF92  F00E         	goto	u2861
  6073   001D20  EF94  F00E         	goto	u2860
  6074   001D24                     u2861:
  6075   001D24  EFAC  F00E         	goto	l3254
  6076   001D28                     u2860:
  6077   001D28  8024               	bsf	___fldiv@grs^0,0,c
  6078   001D2A  EFAC  F00E         	goto	l3254
  6079   001D2E                     l3248:
  6080   001D2E  90D8               	bcf	status,0,c
  6081   001D30  3611               	rlcf	___fldiv@b^0,f,c
  6082   001D32  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6083   001D34  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6084   001D36  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6085   001D38  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6086   001D3A  EFA1  F00E         	goto	u2871
  6087   001D3E  EFA3  F00E         	goto	u2870
  6088   001D42                     u2871:
  6089   001D42  EFA4  F00E         	goto	l1009
  6090   001D46                     u2870:
  6091   001D46  8011               	bsf	___fldiv@b^0,0,c
  6092   001D48                     l1009:
  6093   001D48  90D8               	bcf	status,0,c
  6094   001D4A  3624               	rlcf	___fldiv@grs^0,f,c
  6095   001D4C  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6096   001D4E  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6097   001D50  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6098   001D52  0622               	decf	___fldiv@new_exp^0,f,c
  6099   001D54  A0D8               	btfss	status,0,c
  6100   001D56  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  6101   001D58                     l3254:
  6102   001D58  AE13               	btfss	(___fldiv@b+2)^0,7,c
  6103   001D5A  EFB1  F00E         	goto	u2881
  6104   001D5E  EFB3  F00E         	goto	u2880
  6105   001D62                     u2881:
  6106   001D62  EF97  F00E         	goto	l3248
  6107   001D66                     u2880:
  6108   001D66  0E00               	movlw	0
  6109   001D68  6E29               	movwf	___fldiv@aexp^0,c
  6110   001D6A  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6111   001D6C  EFBA  F00E         	goto	u2891
  6112   001D70  EFBC  F00E         	goto	u2890
  6113   001D74                     u2891:
  6114   001D74  EFE0  F00E         	goto	l1011
  6115   001D78                     u2890:
  6116   001D78  0EFF               	movlw	255
  6117   001D7A  1424               	andwf	___fldiv@grs^0,w,c
  6118   001D7C  6E19               	movwf	??___fldiv^0,c
  6119   001D7E  0EFF               	movlw	255
  6120   001D80  1425               	andwf	(___fldiv@grs+1)^0,w,c
  6121   001D82  6E1A               	movwf	(??___fldiv+1)^0,c
  6122   001D84  0EFF               	movlw	255
  6123   001D86  1426               	andwf	(___fldiv@grs+2)^0,w,c
  6124   001D88  6E1B               	movwf	(??___fldiv+2)^0,c
  6125   001D8A  0E7F               	movlw	127
  6126   001D8C  1427               	andwf	(___fldiv@grs+3)^0,w,c
  6127   001D8E  6E1C               	movwf	(??___fldiv+3)^0,c
  6128   001D90  5019               	movf	??___fldiv^0,w,c
  6129   001D92  101A               	iorwf	(??___fldiv+1)^0,w,c
  6130   001D94  101B               	iorwf	(??___fldiv+2)^0,w,c
  6131   001D96  101C               	iorwf	(??___fldiv+3)^0,w,c
  6132   001D98  B4D8               	btfsc	status,2,c
  6133   001D9A  EFD1  F00E         	goto	u2901
  6134   001D9E  EFD3  F00E         	goto	u2900
  6135   001DA2                     u2901:
  6136   001DA2  EFD7  F00E         	goto	l1012
  6137   001DA6                     u2900:
  6138   001DA6                     l3262:
  6139   001DA6  0E01               	movlw	1
  6140   001DA8  6E29               	movwf	___fldiv@aexp^0,c
  6141   001DAA  EFE0  F00E         	goto	l1011
  6142   001DAE                     l1012:
  6143   001DAE  A011               	btfss	___fldiv@b^0,0,c
  6144   001DB0  EFDC  F00E         	goto	u2911
  6145   001DB4  EFDE  F00E         	goto	u2910
  6146   001DB8                     u2911:
  6147   001DB8  EFE0  F00E         	goto	l1011
  6148   001DBC                     u2910:
  6149   001DBC  EFD3  F00E         	goto	l3262
  6150   001DC0                     l1011:
  6151   001DC0  5029               	movf	___fldiv@aexp^0,w,c
  6152   001DC2  B4D8               	btfsc	status,2,c
  6153   001DC4  EFE6  F00E         	goto	u2921
  6154   001DC8  EFE8  F00E         	goto	u2920
  6155   001DCC                     u2921:
  6156   001DCC  EF0C  F00F         	goto	l3274
  6157   001DD0                     u2920:
  6158   001DD0  0E01               	movlw	1
  6159   001DD2  2611               	addwf	___fldiv@b^0,f,c
  6160   001DD4  0E00               	movlw	0
  6161   001DD6  2212               	addwfc	(___fldiv@b+1)^0,f,c
  6162   001DD8  2213               	addwfc	(___fldiv@b+2)^0,f,c
  6163   001DDA  2214               	addwfc	(___fldiv@b+3)^0,f,c
  6164   001DDC  A014               	btfss	(___fldiv@b+3)^0,0,c
  6165   001DDE  EFF3  F00E         	goto	u2931
  6166   001DE2  EFF5  F00E         	goto	u2930
  6167   001DE6                     u2931:
  6168   001DE6  EF0C  F00F         	goto	l3274
  6169   001DEA                     u2930:
  6170   001DEA  C011  F019         	movff	___fldiv@b,??___fldiv
  6171   001DEE  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  6172   001DF2  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  6173   001DF6  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  6174   001DFA  341C               	rlcf	(??___fldiv+3)^0,w,c
  6175   001DFC  321C               	rrcf	(??___fldiv+3)^0,f,c
  6176   001DFE  321B               	rrcf	(??___fldiv+2)^0,f,c
  6177   001E00  321A               	rrcf	(??___fldiv+1)^0,f,c
  6178   001E02  3219               	rrcf	??___fldiv^0,f,c
  6179   001E04  C019  F011         	movff	??___fldiv,___fldiv@b
  6180   001E08  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  6181   001E0C  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  6182   001E10  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  6183   001E14  4A22               	infsnz	___fldiv@new_exp^0,f,c
  6184   001E16  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
  6185   001E18                     l3274:
  6186   001E18  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6187   001E1A  EF17  F00F         	goto	u2941
  6188   001E1E  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6189   001E20  E108               	bnz	u2940
  6190   001E22  2822               	incf	___fldiv@new_exp^0,w,c
  6191   001E24  A0D8               	btfss	status,0,c
  6192   001E26  EF17  F00F         	goto	u2941
  6193   001E2A  EF19  F00F         	goto	u2940
  6194   001E2E                     u2941:
  6195   001E2E  EF24  F00F         	goto	l3278
  6196   001E32                     u2940:
  6197   001E32  0E00               	movlw	0
  6198   001E34  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6199   001E36  6822               	setf	___fldiv@new_exp^0,c
  6200   001E38  0E00               	movlw	0
  6201   001E3A  6E11               	movwf	___fldiv@b^0,c
  6202   001E3C  0E00               	movlw	0
  6203   001E3E  6E12               	movwf	(___fldiv@b+1)^0,c
  6204   001E40  0E00               	movlw	0
  6205   001E42  6E13               	movwf	(___fldiv@b+2)^0,c
  6206   001E44  0E00               	movlw	0
  6207   001E46  6E14               	movwf	(___fldiv@b+3)^0,c
  6208   001E48                     l3278:
  6209   001E48  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6210   001E4A  EF31  F00F         	goto	u2950
  6211   001E4E  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6212   001E50  E106               	bnz	u2951
  6213   001E52  0422               	decf	___fldiv@new_exp^0,w,c
  6214   001E54  B0D8               	btfsc	status,0,c
  6215   001E56  EF2F  F00F         	goto	u2951
  6216   001E5A  EF31  F00F         	goto	u2950
  6217   001E5E                     u2951:
  6218   001E5E  EF3F  F00F         	goto	l3282
  6219   001E62                     u2950:
  6220   001E62  0E00               	movlw	0
  6221   001E64  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6222   001E66  0E00               	movlw	0
  6223   001E68  6E22               	movwf	___fldiv@new_exp^0,c
  6224   001E6A  0E00               	movlw	0
  6225   001E6C  6E11               	movwf	___fldiv@b^0,c
  6226   001E6E  0E00               	movlw	0
  6227   001E70  6E12               	movwf	(___fldiv@b+1)^0,c
  6228   001E72  0E00               	movlw	0
  6229   001E74  6E13               	movwf	(___fldiv@b+2)^0,c
  6230   001E76  0E00               	movlw	0
  6231   001E78  6E14               	movwf	(___fldiv@b+3)^0,c
  6232   001E7A  0E00               	movlw	0
  6233   001E7C  6E21               	movwf	___fldiv@sign^0,c
  6234   001E7E                     l3282:
  6235   001E7E  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  6236   001E82  A028               	btfss	___fldiv@bexp^0,0,c
  6237   001E84  EF46  F00F         	goto	u2961
  6238   001E88  EF48  F00F         	goto	u2960
  6239   001E8C                     u2961:
  6240   001E8C  EF4B  F00F         	goto	l3288
  6241   001E90                     u2960:
  6242   001E90  8E13               	bsf	(___fldiv@b+2)^0,7,c
  6243   001E92  EF4C  F00F         	goto	l3290
  6244   001E96                     l3288:
  6245   001E96  9E13               	bcf	(___fldiv@b+2)^0,7,c
  6246   001E98                     l3290:
  6247   001E98  90D8               	bcf	status,0,c
  6248   001E9A  3028               	rrcf	___fldiv@bexp^0,w,c
  6249   001E9C  6E14               	movwf	(___fldiv@b+3)^0,c
  6250   001E9E  EF02  F00E         	goto	l3204
  6251   001EA2                     l998:
  6252   001EA2  0012               	return		;funcret
  6253   001EA4                     __end_of___fldiv:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _atoi *****************
  6257 ;; Defined at:
  6258 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6261 ;;		 -> STR_1(11), 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  n               2   13[COMRAM] int 
  6264 ;;  neg             2   11[COMRAM] int 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  2    6[COMRAM] int 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6274 ;;      Params:         2       0       0       0       0       0       0       0       0
  6275 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6276 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6277 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6278 ;;Total ram usage:        9 bytes
  6279 ;; Hardware stack levels used: 1
  6280 ;; Hardware stack levels required when called: 1
  6281 ;; This function calls:
  6282 ;;		___wmul
  6283 ;;		_isdigit
  6284 ;;		_isspace
  6285 ;; This function is called by:
  6286 ;;		_vfpfcnvrt
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text22
  6291   0026E2                     __ptext22:
  6292                           	callstack 0
  6293   0026E2                     _atoi:
  6294                           	callstack 26
  6295   0026E2  0E00               	movlw	0
  6296   0026E4  6E0F               	movwf	(atoi@n+1)^0,c
  6297   0026E6  0E00               	movlw	0
  6298   0026E8  6E0E               	movwf	atoi@n^0,c
  6299   0026EA  0E00               	movlw	0
  6300   0026EC  6E0D               	movwf	(atoi@neg+1)^0,c
  6301   0026EE  0E00               	movlw	0
  6302   0026F0  6E0C               	movwf	atoi@neg^0,c
  6303   0026F2  EF7D  F013         	goto	l3852
  6304   0026F6                     l3848:
  6305   0026F6  4A07               	infsnz	atoi@s^0,f,c
  6306   0026F8  2A08               	incf	(atoi@s+1)^0,f,c
  6307   0026FA                     l3852:
  6308   0026FA  C007  FFF6         	movff	atoi@s,tblptrl
  6309   0026FE  C008  FFF7         	movff	atoi@s+1,tblptrh
  6310   002702                     	if	0	;tblptru may be non-zero
  6311   002702                     	endif
  6312   002702                     	if	0	;tblptru may be non-zero
  6313   002702                     	endif
  6314   002702  0008               	tblrd		*
  6315   002704  50F5               	movf	tablat,w,c
  6316   002706  0A20               	xorlw	32
  6317   002708  B4D8               	btfsc	status,2,c
  6318   00270A  EF89  F013         	goto	u3901
  6319   00270E  EF8B  F013         	goto	u3900
  6320   002712                     u3901:
  6321   002712  EF7B  F013         	goto	l3848
  6322   002716                     u3900:
  6323   002716  C007  FFF6         	movff	atoi@s,tblptrl
  6324   00271A  C008  FFF7         	movff	atoi@s+1,tblptrh
  6325   00271E                     	if	0	;tblptru may be non-zero
  6326   00271E                     	endif
  6327   00271E                     	if	0	;tblptru may be non-zero
  6328   00271E                     	endif
  6329   00271E  0008               	tblrd		*
  6330   002720  CFF5 F009          	movff	tablat,??_atoi
  6331   002724  0EF7               	movlw	247
  6332   002726  2409               	addwf	??_atoi^0,w,c
  6333   002728  6E0A               	movwf	(??_atoi+1)^0,c
  6334   00272A  6A0B               	clrf	(??_atoi+2)^0,c
  6335   00272C  0EFF               	movlw	255
  6336   00272E  220B               	addwfc	(??_atoi+2)^0,f,c
  6337   002730  500B               	movf	(??_atoi+2)^0,w,c
  6338   002732  E109               	bnz	u3910
  6339   002734  0E05               	movlw	5
  6340   002736  5C0A               	subwf	(??_atoi+1)^0,w,c
  6341   002738  A0D8               	btfss	status,0,c
  6342   00273A  EFA1  F013         	goto	u3911
  6343   00273E  EFA3  F013         	goto	u3910
  6344   002742                     u3911:
  6345   002742  EF7B  F013         	goto	l3848
  6346   002746                     u3910:
  6347   002746  EFAD  F013         	goto	l3860
  6348   00274A                     l3856:
  6349   00274A  0E00               	movlw	0
  6350   00274C  6E0D               	movwf	(atoi@neg+1)^0,c
  6351   00274E  0E01               	movlw	1
  6352   002750  6E0C               	movwf	atoi@neg^0,c
  6353   002752                     l3858:
  6354   002752  4A07               	infsnz	atoi@s^0,f,c
  6355   002754  2A08               	incf	(atoi@s+1)^0,f,c
  6356   002756  EFE2  F013         	goto	l3868
  6357   00275A                     l3860:
  6358   00275A  C007  FFF6         	movff	atoi@s,tblptrl
  6359   00275E  C008  FFF7         	movff	atoi@s+1,tblptrh
  6360   002762                     	if	0	;tblptru may be non-zero
  6361   002762                     	endif
  6362   002762                     	if	0	;tblptru may be non-zero
  6363   002762                     	endif
  6364   002762  0008               	tblrd		*
  6365   002764  50F5               	movf	tablat,w,c
  6366   002766  6E09               	movwf	??_atoi^0,c
  6367   002768  6A0A               	clrf	(??_atoi+1)^0,c
  6368                           
  6369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6370                           ; Switch size 1, requested type "simple"
  6371                           ; Number of cases is 1, Range of values is 0 to 0
  6372                           ; switch strategies available:
  6373                           ; Name         Instructions Cycles
  6374                           ; simple_byte            4     3 (average)
  6375                           ;	Chosen strategy is simple_byte
  6376   00276A  500A               	movf	(??_atoi+1)^0,w,c
  6377   00276C  0A00               	xorlw	0	; case 0
  6378   00276E  B4D8               	btfsc	status,2,c
  6379   002770  EFBC  F013         	goto	l4404
  6380   002774  EFE2  F013         	goto	l3868
  6381   002778                     l4404:
  6382                           
  6383                           ; Switch size 1, requested type "simple"
  6384                           ; Number of cases is 2, Range of values is 43 to 45
  6385                           ; switch strategies available:
  6386                           ; Name         Instructions Cycles
  6387                           ; simple_byte            7     4 (average)
  6388                           ;	Chosen strategy is simple_byte
  6389   002778  5009               	movf	??_atoi^0,w,c
  6390   00277A  0A2B               	xorlw	43	; case 43
  6391   00277C  B4D8               	btfsc	status,2,c
  6392   00277E  EFA9  F013         	goto	l3858
  6393   002782  0A06               	xorlw	6	; case 45
  6394   002784  B4D8               	btfsc	status,2,c
  6395   002786  EFA5  F013         	goto	l3856
  6396   00278A  EFE2  F013         	goto	l3868
  6397   00278E                     l3862:
  6398   00278E  C00E  F001         	movff	atoi@n,___wmul@multiplier
  6399   002792  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6400   002796  0E00               	movlw	0
  6401   002798  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6402   00279A  0E0A               	movlw	10
  6403   00279C  6E03               	movwf	___wmul@multiplicand^0,c
  6404   00279E  EC2F  F019         	call	___wmul	;wreg free
  6405   0027A2  C007  FFF6         	movff	atoi@s,tblptrl
  6406   0027A6  C008  FFF7         	movff	atoi@s+1,tblptrh
  6407   0027AA                     	if	0	;tblptru may be non-zero
  6408   0027AA                     	endif
  6409   0027AA                     	if	0	;tblptru may be non-zero
  6410   0027AA                     	endif
  6411   0027AA  0008               	tblrd		*
  6412   0027AC  50F5               	movf	tablat,w,c
  6413   0027AE  5E01               	subwf	?___wmul^0,f,c
  6414   0027B0  0E00               	movlw	0
  6415   0027B2  5A02               	subwfb	(?___wmul+1)^0,f,c
  6416   0027B4  0E30               	movlw	48
  6417   0027B6  2401               	addwf	?___wmul^0,w,c
  6418   0027B8  6E0E               	movwf	atoi@n^0,c
  6419   0027BA  0E00               	movlw	0
  6420   0027BC  2002               	addwfc	(?___wmul+1)^0,w,c
  6421   0027BE  6E0F               	movwf	(atoi@n+1)^0,c
  6422   0027C0  EFA9  F013         	goto	l3858
  6423   0027C4                     l3868:
  6424   0027C4  C007  FFF6         	movff	atoi@s,tblptrl
  6425   0027C8  C008  FFF7         	movff	atoi@s+1,tblptrh
  6426   0027CC                     	if	0	;tblptru may be non-zero
  6427   0027CC                     	endif
  6428   0027CC                     	if	0	;tblptru may be non-zero
  6429   0027CC                     	endif
  6430   0027CC  0008               	tblrd		*
  6431   0027CE  CFF5 F009          	movff	tablat,??_atoi
  6432   0027D2  0ED0               	movlw	208
  6433   0027D4  2409               	addwf	??_atoi^0,w,c
  6434   0027D6  6E0A               	movwf	(??_atoi+1)^0,c
  6435   0027D8  6A0B               	clrf	(??_atoi+2)^0,c
  6436   0027DA  0EFF               	movlw	255
  6437   0027DC  220B               	addwfc	(??_atoi+2)^0,f,c
  6438   0027DE  500B               	movf	(??_atoi+2)^0,w,c
  6439   0027E0  E109               	bnz	u3920
  6440   0027E2  0E0A               	movlw	10
  6441   0027E4  5C0A               	subwf	(??_atoi+1)^0,w,c
  6442   0027E6  A0D8               	btfss	status,0,c
  6443   0027E8  EFF8  F013         	goto	u3921
  6444   0027EC  EFFA  F013         	goto	u3920
  6445   0027F0                     u3921:
  6446   0027F0  EFC7  F013         	goto	l3862
  6447   0027F4                     u3920:
  6448   0027F4  500C               	movf	atoi@neg^0,w,c
  6449   0027F6  100D               	iorwf	(atoi@neg+1)^0,w,c
  6450   0027F8  A4D8               	btfss	status,2,c
  6451   0027FA  EF01  F014         	goto	u3931
  6452   0027FE  EF03  F014         	goto	u3930
  6453   002802                     u3931:
  6454   002802  EF11  F014         	goto	l1251
  6455   002806                     u3930:
  6456   002806  C00E  F009         	movff	atoi@n,??_atoi
  6457   00280A  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  6458   00280E  1E09               	comf	??_atoi^0,f,c
  6459   002810  1E0A               	comf	(??_atoi+1)^0,f,c
  6460   002812  4A09               	infsnz	??_atoi^0,f,c
  6461   002814  2A0A               	incf	(??_atoi+1)^0,f,c
  6462   002816  C009  F007         	movff	??_atoi,?_atoi
  6463   00281A  C00A  F008         	movff	??_atoi+1,?_atoi+1
  6464   00281E  EF15  F014         	goto	l1254
  6465   002822                     l1251:
  6466   002822  C00E  F007         	movff	atoi@n,?_atoi
  6467   002826  C00F  F008         	movff	atoi@n+1,?_atoi+1
  6468   00282A                     l1254:
  6469   00282A  0012               	return		;funcret
  6470   00282C                     __end_of_atoi:
  6471                           	callstack 0
  6472                           
  6473 ;; *************** function _isspace *****************
  6474 ;; Defined at:
  6475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  c               2    0[COMRAM] int 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  2    0[COMRAM] int 
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6489 ;;      Params:         2       0       0       0       0       0       0       0       0
  6490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6491 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6492 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6493 ;;Total ram usage:        5 bytes
  6494 ;; Hardware stack levels used: 1
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_atoi
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text23
  6503   003078                     __ptext23:
  6504                           	callstack 0
  6505   003078                     _isspace:
  6506                           	callstack 26
  6507   003078  0E01               	movlw	1
  6508   00307A  6E05               	movwf	_isspace$2014^0,c
  6509   00307C  0E20               	movlw	32
  6510   00307E  1801               	xorwf	isspace@c^0,w,c
  6511   003080  1002               	iorwf	(isspace@c+1)^0,w,c
  6512   003082  B4D8               	btfsc	status,2,c
  6513   003084  EF46  F018         	goto	u3561
  6514   003088  EF48  F018         	goto	u3560
  6515   00308C                     u3561:
  6516   00308C  EF5B  F018         	goto	l3620
  6517   003090                     u3560:
  6518   003090  0EF7               	movlw	247
  6519   003092  2401               	addwf	isspace@c^0,w,c
  6520   003094  6E03               	movwf	??_isspace^0,c
  6521   003096  0EFF               	movlw	255
  6522   003098  2002               	addwfc	(isspace@c+1)^0,w,c
  6523   00309A  6E04               	movwf	(??_isspace+1)^0,c
  6524   00309C  5004               	movf	(??_isspace+1)^0,w,c
  6525   00309E  E109               	bnz	u3570
  6526   0030A0  0E05               	movlw	5
  6527   0030A2  5C03               	subwf	??_isspace^0,w,c
  6528   0030A4  A0D8               	btfss	status,0,c
  6529   0030A6  EF57  F018         	goto	u3571
  6530   0030AA  EF59  F018         	goto	u3570
  6531   0030AE                     u3571:
  6532   0030AE  EF5B  F018         	goto	l3620
  6533   0030B2                     u3570:
  6534   0030B2  0E00               	movlw	0
  6535   0030B4  6E05               	movwf	_isspace$2014^0,c
  6536   0030B6                     l3620:
  6537   0030B6  C005  F001         	movff	_isspace$2014,?_isspace
  6538   0030BA  6A02               	clrf	(?_isspace+1)^0,c
  6539   0030BC  0012               	return		;funcret
  6540   0030BE                     __end_of_isspace:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _isdigit *****************
  6544 ;; Defined at:
  6545 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  c               2    0[COMRAM] int 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  2    0[COMRAM] int 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6559 ;;      Params:         2       0       0       0       0       0       0       0       0
  6560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6561 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6562 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6563 ;;Total ram usage:        4 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_vfpfcnvrt
  6569 ;;		_atoi
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text24
  6574   003232                     __ptext24:
  6575                           	callstack 0
  6576   003232                     _isdigit:
  6577                           	callstack 27
  6578   003232  0ED0               	movlw	208
  6579   003234  2401               	addwf	isdigit@c^0,w,c
  6580   003236  6E03               	movwf	??_isdigit^0,c
  6581   003238  0EFF               	movlw	255
  6582   00323A  2002               	addwfc	(isdigit@c+1)^0,w,c
  6583   00323C  6E04               	movwf	(??_isdigit+1)^0,c
  6584   00323E  5004               	movf	(??_isdigit+1)^0,w,c
  6585   003240  E10A               	bnz	u3540
  6586   003242  0E0A               	movlw	10
  6587   003244  5C03               	subwf	??_isdigit^0,w,c
  6588   003246  A0D8               	btfss	status,0,c
  6589   003248  EF28  F019         	goto	u3541
  6590   00324C  EF2B  F019         	goto	u3540
  6591   003250                     u3541:
  6592   003250  0E01               	movlw	1
  6593   003252  EF2C  F019         	goto	u3550
  6594   003256                     u3540:
  6595   003256  0E00               	movlw	0
  6596   003258                     u3550:
  6597   003258  6E01               	movwf	?_isdigit^0,c
  6598   00325A  6A02               	clrf	(?_isdigit+1)^0,c
  6599   00325C  0012               	return		;funcret
  6600   00325E                     __end_of_isdigit:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function ___wmul *****************
  6604 ;; Defined at:
  6605 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  multiplier      2    0[COMRAM] unsigned int 
  6608 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  product         2    4[COMRAM] unsigned int 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2    0[COMRAM] unsigned int 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0, prodl, prodh
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6620 ;;      Params:         4       0       0       0       0       0       0       0       0
  6621 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6623 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6624 ;;Total ram usage:        6 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; This function calls:
  6627 ;;		Nothing
  6628 ;; This function is called by:
  6629 ;;		_atoi
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text25
  6634   00325E                     __ptext25:
  6635                           	callstack 0
  6636   00325E                     ___wmul:
  6637                           	callstack 26
  6638   00325E  5001               	movf	___wmul@multiplier^0,w,c
  6639   003260  0203               	mulwf	___wmul@multiplicand^0,c
  6640   003262  CFF3 F005          	movff	prodl,___wmul@product
  6641   003266  CFF4 F006          	movff	prodh,___wmul@product+1
  6642   00326A  5001               	movf	___wmul@multiplier^0,w,c
  6643   00326C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6644   00326E  50F3               	movf	243,w,c
  6645   003270  2606               	addwf	(___wmul@product+1)^0,f,c
  6646   003272  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6647   003274  0203               	mulwf	___wmul@multiplicand^0,c
  6648   003276  50F3               	movf	243,w,c
  6649   003278  2606               	addwf	(___wmul@product+1)^0,f,c
  6650   00327A  C005  F001         	movff	___wmul@product,?___wmul
  6651   00327E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6652   003282  0012               	return		;funcret
  6653   003284                     __end_of___wmul:
  6654                           	callstack 0
  6655                           
  6656 ;; *************** function ___xxtofl *****************
  6657 ;; Defined at:
  6658 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  sign            1    wreg     unsigned char 
  6661 ;;  val             4    7[COMRAM] long 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  sign            1   15[COMRAM] unsigned char 
  6664 ;;  arg             4   17[COMRAM] unsigned long 
  6665 ;;  exp             1   16[COMRAM] unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  4    7[COMRAM] unsigned char 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6675 ;;      Params:         4       0       0       0       0       0       0       0       0
  6676 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6677 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6678 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6679 ;;Total ram usage:       14 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_main
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text26
  6689   0023CC                     __ptext26:
  6690                           	callstack 0
  6691   0023CC                     ___xxtofl:
  6692                           	callstack 30
  6693                           
  6694                           ;incstack = 0
  6695                           ;___xxtofl@sign stored from wreg
  6696   0023CC  6E10               	movwf	___xxtofl@sign^0,c
  6697   0023CE  5010               	movf	___xxtofl@sign^0,w,c
  6698   0023D0  B4D8               	btfsc	status,2,c
  6699   0023D2  EFED  F011         	goto	u4191
  6700   0023D6  EFEF  F011         	goto	u4190
  6701   0023DA                     u4191:
  6702   0023DA  EF11  F012         	goto	l1071
  6703   0023DE                     u4190:
  6704   0023DE  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6705   0023E0  EFF6  F011         	goto	u4200
  6706   0023E4  EFF4  F011         	goto	u4201
  6707   0023E8                     u4201:
  6708   0023E8  EF11  F012         	goto	l1071
  6709   0023EC                     u4200:
  6710   0023EC  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  6711   0023F0  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  6712   0023F4  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  6713   0023F8  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  6714   0023FC  1E0C               	comf	??___xxtofl^0,f,c
  6715   0023FE  1E0D               	comf	(??___xxtofl+1)^0,f,c
  6716   002400  1E0E               	comf	(??___xxtofl+2)^0,f,c
  6717   002402  1E0F               	comf	(??___xxtofl+3)^0,f,c
  6718   002404  2A0C               	incf	??___xxtofl^0,f,c
  6719   002406  0E00               	movlw	0
  6720   002408  220D               	addwfc	(??___xxtofl+1)^0,f,c
  6721   00240A  220E               	addwfc	(??___xxtofl+2)^0,f,c
  6722   00240C  220F               	addwfc	(??___xxtofl+3)^0,f,c
  6723   00240E  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  6724   002412  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  6725   002416  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  6726   00241A  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  6727   00241E  EF19  F012         	goto	l4184
  6728   002422                     l1071:
  6729   002422  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  6730   002426  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6731   00242A  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6732   00242E  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6733   002432                     l4184:
  6734   002432  5008               	movf	___xxtofl@val^0,w,c
  6735   002434  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  6736   002436  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  6737   002438  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  6738   00243A  A4D8               	btfss	status,2,c
  6739   00243C  EF22  F012         	goto	u4211
  6740   002440  EF24  F012         	goto	u4210
  6741   002444                     u4211:
  6742   002444  EF2E  F012         	goto	l4190
  6743   002448                     u4210:
  6744   002448  0E00               	movlw	0
  6745   00244A  6E08               	movwf	?___xxtofl^0,c
  6746   00244C  0E00               	movlw	0
  6747   00244E  6E09               	movwf	(?___xxtofl+1)^0,c
  6748   002450  0E00               	movlw	0
  6749   002452  6E0A               	movwf	(?___xxtofl+2)^0,c
  6750   002454  0E00               	movlw	0
  6751   002456  6E0B               	movwf	(?___xxtofl+3)^0,c
  6752   002458  EFBF  F012         	goto	l1074
  6753   00245C                     l4190:
  6754   00245C  0E96               	movlw	150
  6755   00245E  6E11               	movwf	___xxtofl@exp^0,c
  6756   002460  EF38  F012         	goto	l4194
  6757   002464                     l4192:
  6758   002464  2A11               	incf	___xxtofl@exp^0,f,c
  6759   002466  90D8               	bcf	status,0,c
  6760   002468  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6761   00246A  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6762   00246C  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6763   00246E  3212               	rrcf	___xxtofl@arg^0,f,c
  6764   002470                     l4194:
  6765   002470  0E00               	movlw	0
  6766   002472  1412               	andwf	___xxtofl@arg^0,w,c
  6767   002474  6E0C               	movwf	??___xxtofl^0,c
  6768   002476  0E00               	movlw	0
  6769   002478  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6770   00247A  6E0D               	movwf	(??___xxtofl+1)^0,c
  6771   00247C  0E00               	movlw	0
  6772   00247E  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6773   002480  6E0E               	movwf	(??___xxtofl+2)^0,c
  6774   002482  0EFE               	movlw	254
  6775   002484  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6776   002486  6E0F               	movwf	(??___xxtofl+3)^0,c
  6777   002488  500C               	movf	??___xxtofl^0,w,c
  6778   00248A  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6779   00248C  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6780   00248E  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6781   002490  A4D8               	btfss	status,2,c
  6782   002492  EF4D  F012         	goto	u4221
  6783   002496  EF4F  F012         	goto	u4220
  6784   00249A                     u4221:
  6785   00249A  EF32  F012         	goto	l4192
  6786   00249E                     u4220:
  6787   00249E  EF5D  F012         	goto	l1078
  6788   0024A2                     l4196:
  6789   0024A2  2A11               	incf	___xxtofl@exp^0,f,c
  6790   0024A4  0E01               	movlw	1
  6791   0024A6  2612               	addwf	___xxtofl@arg^0,f,c
  6792   0024A8  0E00               	movlw	0
  6793   0024AA  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  6794   0024AC  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  6795   0024AE  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  6796   0024B0  90D8               	bcf	status,0,c
  6797   0024B2  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6798   0024B4  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6799   0024B6  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6800   0024B8  3212               	rrcf	___xxtofl@arg^0,f,c
  6801   0024BA                     l1078:
  6802   0024BA  0E00               	movlw	0
  6803   0024BC  1412               	andwf	___xxtofl@arg^0,w,c
  6804   0024BE  6E0C               	movwf	??___xxtofl^0,c
  6805   0024C0  0E00               	movlw	0
  6806   0024C2  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6807   0024C4  6E0D               	movwf	(??___xxtofl+1)^0,c
  6808   0024C6  0E00               	movlw	0
  6809   0024C8  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6810   0024CA  6E0E               	movwf	(??___xxtofl+2)^0,c
  6811   0024CC  0EFF               	movlw	255
  6812   0024CE  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6813   0024D0  6E0F               	movwf	(??___xxtofl+3)^0,c
  6814   0024D2  500C               	movf	??___xxtofl^0,w,c
  6815   0024D4  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6816   0024D6  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6817   0024D8  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6818   0024DA  A4D8               	btfss	status,2,c
  6819   0024DC  EF72  F012         	goto	u4231
  6820   0024E0  EF74  F012         	goto	u4230
  6821   0024E4                     u4231:
  6822   0024E4  EF51  F012         	goto	l4196
  6823   0024E8                     u4230:
  6824   0024E8  EF7C  F012         	goto	l4204
  6825   0024EC                     l4202:
  6826   0024EC  0611               	decf	___xxtofl@exp^0,f,c
  6827   0024EE  90D8               	bcf	status,0,c
  6828   0024F0  3612               	rlcf	___xxtofl@arg^0,f,c
  6829   0024F2  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  6830   0024F4  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  6831   0024F6  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  6832   0024F8                     l4204:
  6833   0024F8  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  6834   0024FA  EF81  F012         	goto	u4241
  6835   0024FE  EF83  F012         	goto	u4240
  6836   002502                     u4241:
  6837   002502  EF8B  F012         	goto	l1085
  6838   002506                     u4240:
  6839   002506  0E02               	movlw	2
  6840   002508  6011               	cpfslt	___xxtofl@exp^0,c
  6841   00250A  EF89  F012         	goto	u4251
  6842   00250E  EF8B  F012         	goto	u4250
  6843   002512                     u4251:
  6844   002512  EF76  F012         	goto	l4202
  6845   002516                     u4250:
  6846   002516                     l1085:
  6847   002516  B011               	btfsc	___xxtofl@exp^0,0,c
  6848   002518  EF90  F012         	goto	u4261
  6849   00251C  EF92  F012         	goto	u4260
  6850   002520                     u4261:
  6851   002520  EF93  F012         	goto	l4210
  6852   002524                     u4260:
  6853   002524  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  6854   002526                     l4210:
  6855   002526  90D8               	bcf	status,0,c
  6856   002528  3211               	rrcf	___xxtofl@exp^0,f,c
  6857   00252A  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  6858   00252E  6A0D               	clrf	(??___xxtofl+1)^0,c
  6859   002530  6A0E               	clrf	(??___xxtofl+2)^0,c
  6860   002532  6A0F               	clrf	(??___xxtofl+3)^0,c
  6861   002534  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  6862   002538  6A0E               	clrf	(??___xxtofl+2)^0,c
  6863   00253A  6A0D               	clrf	(??___xxtofl+1)^0,c
  6864   00253C  6A0C               	clrf	??___xxtofl^0,c
  6865   00253E  500C               	movf	??___xxtofl^0,w,c
  6866   002540  1212               	iorwf	___xxtofl@arg^0,f,c
  6867   002542  500D               	movf	(??___xxtofl+1)^0,w,c
  6868   002544  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  6869   002546  500E               	movf	(??___xxtofl+2)^0,w,c
  6870   002548  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  6871   00254A  500F               	movf	(??___xxtofl+3)^0,w,c
  6872   00254C  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  6873   00254E  5010               	movf	___xxtofl@sign^0,w,c
  6874   002550  B4D8               	btfsc	status,2,c
  6875   002552  EFAD  F012         	goto	u4271
  6876   002556  EFAF  F012         	goto	u4270
  6877   00255A                     u4271:
  6878   00255A  EFB7  F012         	goto	l4220
  6879   00255E                     u4270:
  6880   00255E  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6881   002560  EFB6  F012         	goto	u4280
  6882   002564  EFB4  F012         	goto	u4281
  6883   002568                     u4281:
  6884   002568  EFB7  F012         	goto	l4220
  6885   00256C                     u4280:
  6886   00256C  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  6887   00256E                     l4220:
  6888   00256E  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  6889   002572  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  6890   002576  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  6891   00257A  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  6892   00257E                     l1074:
  6893   00257E  0012               	return		;funcret
  6894   002580                     __end_of___xxtofl:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _PORT_Init *****************
  6898 ;; Defined at:
  6899 ;;		line 51 in file "Lcd_Rele_temp.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;		None
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      void 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6913 ;;      Params:         0       0       0       0       0       0       0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6916 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6917 ;;Total ram usage:        0 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_main
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text27
  6927   003322                     __ptext27:
  6928                           	callstack 0
  6929   003322                     _PORT_Init:
  6930                           	callstack 30
  6931   003322                     
  6932                           ;Lcd_Rele_temp.c: 54:     ANSELAbits.ANSA0 = 1;
  6933   003322  010F               	movlb	15	; () banked
  6934   003324  815B               	bsf	91,0,b	;volatile
  6935   003326                     
  6936                           ; BSR set to: 15
  6937                           ;Lcd_Rele_temp.c: 57:     ANSELD = 0x00;
  6938   003326  0E00               	movlw	0
  6939   003328  6F5E               	movwf	94,b	;volatile
  6940   00332A                     
  6941                           ; BSR set to: 15
  6942                           ;Lcd_Rele_temp.c: 60:     ANSELEbits.ANSE0 = 0;
  6943   00332A  915F               	bcf	95,0,b	;volatile
  6944   00332C                     
  6945                           ; BSR set to: 15
  6946                           ;Lcd_Rele_temp.c: 61:     TRISEbits.RE0 = 0;
  6947   00332C  9096               	bcf	150,0,c	;volatile
  6948   00332E                     
  6949                           ; BSR set to: 15
  6950   00332E  0012               	return		;funcret
  6951   003330                     __end_of_PORT_Init:
  6952                           	callstack 0
  6953                           
  6954 ;; *************** function _OSCILADOR_Init *****************
  6955 ;; Defined at:
  6956 ;;		line 5 in file "lib_pic/configDevice.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;		None
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6970 ;;      Params:         0       0       0       0       0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6974 ;;Total ram usage:        0 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_main
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text28
  6984   003300                     __ptext28:
  6985                           	callstack 0
  6986   003300                     _OSCILADOR_Init:
  6987                           	callstack 30
  6988   003300                     
  6989                           ;lib_pic/configDevice.c: 9:     OSCCONbits.IRCF = 0b110;
  6990   003300  50D3               	movf	211,w,c	;volatile
  6991   003302  0B8F               	andlw	-113
  6992   003304  0960               	iorlw	96
  6993   003306  6ED3               	movwf	211,c	;volatile
  6994                           
  6995                           ;lib_pic/configDevice.c: 10:     OSCCONbits.SCS = 0b10;
  6996   003308  50D3               	movf	211,w,c	;volatile
  6997   00330A  0BFC               	andlw	-4
  6998   00330C  0902               	iorlw	2
  6999   00330E  6ED3               	movwf	211,c	;volatile
  7000   003310  0012               	return		;funcret
  7001   003312                     __end_of_OSCILADOR_Init:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function _Lcd_Write_String *****************
  7005 ;; Defined at:
  7006 ;;		line 113 in file "lib_pic/lcd_2x16.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  a               2    4[COMRAM] PTR unsigned char 
  7009 ;;		 -> STR_2(17), strTemp(20), 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  i               2    8[COMRAM] int 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      void 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7021 ;;      Params:         2       0       0       0       0       0       0       0       0
  7022 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7023 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7024 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7025 ;;Total ram usage:        6 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 2
  7028 ;; This function calls:
  7029 ;;		_Lcd_Write_Char
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text29
  7036   002CA8                     __ptext29:
  7037                           	callstack 0
  7038   002CA8                     _Lcd_Write_String:
  7039                           	callstack 28
  7040   002CA8                     
  7041                           ;lib_pic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);lib_pic/lcd_2x16.c: 11
      +                          4: {;lib_pic/lcd_2x16.c: 115:  int i;;lib_pic/lcd_2x16.c: 116:  for(i=0;a[i]!='\0';i++)
  7042   002CA8  0E00               	movlw	0
  7043   002CAA  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  7044   002CAC  0E00               	movlw	0
  7045   002CAE  6E09               	movwf	Lcd_Write_String@i^0,c
  7046   002CB0  EF74  F016         	goto	l4156
  7047   002CB4                     l4152:
  7048                           
  7049                           ;lib_pic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  7050   002CB4  5009               	movf	Lcd_Write_String@i^0,w,c
  7051   002CB6  2405               	addwf	Lcd_Write_String@a^0,w,c
  7052   002CB8  6E07               	movwf	??_Lcd_Write_String^0,c
  7053   002CBA  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7054   002CBC  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7055   002CBE  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7056   002CC0  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7057   002CC4  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7058   002CC8  6AF8               	clrf	tblptru,c
  7059   002CCA  0E07               	movlw	(high __ramtop+-1)
  7060   002CCC  64F7               	cpfsgt	tblptrh,c
  7061   002CCE  D003               	bra	u4167
  7062   002CD0  0008               	tblrd		*
  7063   002CD2  50F5               	movf	tablat,w,c
  7064   002CD4  D005               	bra	u4160
  7065   002CD6                     u4167:
  7066   002CD6  CFF6 FFE9          	movff	tblptrl,fsr0l
  7067   002CDA  CFF7 FFEA          	movff	tblptrh,fsr0h
  7068   002CDE  50EF               	movf	indf0,w,c
  7069   002CE0                     u4160:
  7070   002CE0  ECFD  F018         	call	_Lcd_Write_Char
  7071   002CE4  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  7072   002CE6  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  7073   002CE8                     l4156:
  7074   002CE8  5009               	movf	Lcd_Write_String@i^0,w,c
  7075   002CEA  2405               	addwf	Lcd_Write_String@a^0,w,c
  7076   002CEC  6E07               	movwf	??_Lcd_Write_String^0,c
  7077   002CEE  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7078   002CF0  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7079   002CF2  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7080   002CF4  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7081   002CF8  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7082   002CFC  6AF8               	clrf	tblptru,c
  7083   002CFE  0E07               	movlw	(high __ramtop+-1)
  7084   002D00  64F7               	cpfsgt	tblptrh,c
  7085   002D02  D003               	bra	u4177
  7086   002D04  0008               	tblrd		*
  7087   002D06  50F5               	movf	tablat,w,c
  7088   002D08  D005               	bra	u4170
  7089   002D0A                     u4177:
  7090   002D0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7091   002D0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7092   002D12  50EF               	movf	indf0,w,c
  7093   002D14                     u4170:
  7094   002D14  0900               	iorlw	0
  7095   002D16  A4D8               	btfss	status,2,c
  7096   002D18  EF90  F016         	goto	u4181
  7097   002D1C  EF92  F016         	goto	u4180
  7098   002D20                     u4181:
  7099   002D20  EF5A  F016         	goto	l4152
  7100   002D24                     u4180:
  7101   002D24  0012               	return		;funcret
  7102   002D26                     __end_of_Lcd_Write_String:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _Lcd_Write_Char *****************
  7106 ;; Defined at:
  7107 ;;		line 96 in file "lib_pic/lcd_2x16.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  a               1    wreg     unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  a               1    3[COMRAM] unsigned char 
  7112 ;;  y               1    2[COMRAM] unsigned char 
  7113 ;;  temp            1    1[COMRAM] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      void 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7123 ;;      Params:         0       0       0       0       0       0       0       0       0
  7124 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7126 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7127 ;;Total ram usage:        3 bytes
  7128 ;; Hardware stack levels used: 1
  7129 ;; Hardware stack levels required when called: 1
  7130 ;; This function calls:
  7131 ;;		_Lcd_Port
  7132 ;; This function is called by:
  7133 ;;		_Lcd_Write_String
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text30
  7138   0031FA                     __ptext30:
  7139                           	callstack 0
  7140   0031FA                     _Lcd_Write_Char:
  7141                           	callstack 28
  7142                           
  7143                           ;incstack = 0
  7144                           ;Lcd_Write_Char@a stored from wreg
  7145   0031FA  6E04               	movwf	Lcd_Write_Char@a^0,c
  7146   0031FC                     
  7147                           ;lib_pic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);lib_pic/lcd_2x16.c: 97: {;
      +                          lib_pic/lcd_2x16.c: 98:    char temp,y;;lib_pic/lcd_2x16.c: 99:    temp = a&0x0F;
  7148   0031FC  5004               	movf	Lcd_Write_Char@a^0,w,c
  7149   0031FE  0B0F               	andlw	15
  7150   003200  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7151                           
  7152                           ;lib_pic/lcd_2x16.c: 100:    y = a&0xF0;
  7153   003202  5004               	movf	Lcd_Write_Char@a^0,w,c
  7154   003204  0BF0               	andlw	240
  7155   003206  6E03               	movwf	Lcd_Write_Char@y^0,c
  7156   003208                     
  7157                           ;lib_pic/lcd_2x16.c: 101:    PORTD |= (1<<2);
  7158   003208  8483               	bsf	131,2,c	;volatile
  7159   00320A                     
  7160                           ;lib_pic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  7161   00320A  3803               	swapf	Lcd_Write_Char@y^0,w,c
  7162   00320C  0B0F               	andlw	15
  7163   00320E  EC72  F017         	call	_Lcd_Port
  7164   003212                     
  7165                           ;lib_pic/lcd_2x16.c: 103:    PORTD |= (1<<3);
  7166   003212  8683               	bsf	131,3,c	;volatile
  7167   003214                     
  7168                           ;lib_pic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  7169   003214  0E1A               	movlw	26
  7170   003216                     u4357:
  7171   003216  2EE8               	decfsz	wreg,f,c
  7172   003218  D7FE               	bra	u4357
  7173   00321A  D000               	nop2	
  7174   00321C                     
  7175                           ;lib_pic/lcd_2x16.c: 105:    PORTD &= ~(1<<3);
  7176   00321C  9683               	bcf	131,3,c	;volatile
  7177                           
  7178                           ;lib_pic/lcd_2x16.c: 106:    Lcd_Port(temp);
  7179   00321E  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7180   003220  EC72  F017         	call	_Lcd_Port
  7181   003224                     
  7182                           ;lib_pic/lcd_2x16.c: 107:    PORTD |= (1<<3);
  7183   003224  8683               	bsf	131,3,c	;volatile
  7184   003226                     
  7185                           ;lib_pic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  7186   003226  0E1A               	movlw	26
  7187   003228                     u4367:
  7188   003228  2EE8               	decfsz	wreg,f,c
  7189   00322A  D7FE               	bra	u4367
  7190   00322C  D000               	nop2	
  7191   00322E                     
  7192                           ;lib_pic/lcd_2x16.c: 109:    PORTD &= ~(1<<3);
  7193   00322E  9683               	bcf	131,3,c	;volatile
  7194   003230  0012               	return		;funcret
  7195   003232                     __end_of_Lcd_Write_Char:
  7196                           	callstack 0
  7197                           
  7198 ;; *************** function _Lcd_Set_Cursor *****************
  7199 ;; Defined at:
  7200 ;;		line 50 in file "lib_pic/lcd_2x16.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  a               1    wreg     unsigned char 
  7203 ;;  b               1    3[COMRAM] unsigned char 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  a               1    4[COMRAM] unsigned char 
  7206 ;;  temp            1    7[COMRAM] unsigned char 
  7207 ;;  y               1    6[COMRAM] unsigned char 
  7208 ;;  z               1    5[COMRAM] unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7218 ;;      Params:         1       0       0       0       0       0       0       0       0
  7219 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7221 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7222 ;;Total ram usage:        5 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 2
  7225 ;; This function calls:
  7226 ;;		_Lcd_Cmd
  7227 ;; This function is called by:
  7228 ;;		_main
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text31
  7233   002E7E                     __ptext31:
  7234                           	callstack 0
  7235   002E7E                     _Lcd_Set_Cursor:
  7236                           	callstack 28
  7237                           
  7238                           ;incstack = 0
  7239                           ;Lcd_Set_Cursor@a stored from wreg
  7240   002E7E  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7241   002E80                     
  7242                           ;lib_pic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/l
      +                          cd_2x16.c: 51: {;lib_pic/lcd_2x16.c: 52:  char temp,z,y;;lib_pic/lcd_2x16.c: 53:  if(a =
      +                          = 1)
  7243   002E80  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7244   002E82  A4D8               	btfss	status,2,c
  7245   002E84  EF46  F017         	goto	u4141
  7246   002E88  EF48  F017         	goto	u4140
  7247   002E8C                     u4141:
  7248   002E8C  EF59  F017         	goto	l4112
  7249   002E90                     u4140:
  7250   002E90                     
  7251                           ;lib_pic/lcd_2x16.c: 54:  {;lib_pic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  7252   002E90  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7253   002E92  0F7F               	addlw	127
  7254   002E94  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7255                           
  7256                           ;lib_pic/lcd_2x16.c: 56:   z = temp>>4;
  7257   002E96  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7258   002E98  0B0F               	andlw	15
  7259   002E9A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7260                           
  7261                           ;lib_pic/lcd_2x16.c: 57:   y = temp & 0x0F;
  7262   002E9C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7263   002E9E  0B0F               	andlw	15
  7264   002EA0  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7265   002EA2                     
  7266                           ;lib_pic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  7267   002EA2  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7268   002EA4  EC42  F019         	call	_Lcd_Cmd
  7269   002EA8                     
  7270                           ;lib_pic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  7271   002EA8  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7272   002EAA  EC42  F019         	call	_Lcd_Cmd
  7273                           
  7274                           ;lib_pic/lcd_2x16.c: 60:  }
  7275   002EAE  EF71  F017         	goto	l214
  7276   002EB2                     l4112:
  7277   002EB2  0E02               	movlw	2
  7278   002EB4  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7279   002EB6  A4D8               	btfss	status,2,c
  7280   002EB8  EF60  F017         	goto	u4151
  7281   002EBC  EF62  F017         	goto	u4150
  7282   002EC0                     u4151:
  7283   002EC0  EF71  F017         	goto	l214
  7284   002EC4                     u4150:
  7285   002EC4                     
  7286                           ;lib_pic/lcd_2x16.c: 62:  {;lib_pic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  7287   002EC4  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7288   002EC6  0FBF               	addlw	191
  7289   002EC8  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7290                           
  7291                           ;lib_pic/lcd_2x16.c: 64:   z = temp>>4;
  7292   002ECA  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7293   002ECC  0B0F               	andlw	15
  7294   002ECE  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7295                           
  7296                           ;lib_pic/lcd_2x16.c: 65:   y = temp & 0x0F;
  7297   002ED0  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7298   002ED2  0B0F               	andlw	15
  7299   002ED4  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7300   002ED6                     
  7301                           ;lib_pic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  7302   002ED6  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7303   002ED8  EC42  F019         	call	_Lcd_Cmd
  7304   002EDC                     
  7305                           ;lib_pic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  7306   002EDC  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7307   002EDE  EC42  F019         	call	_Lcd_Cmd
  7308   002EE2                     l214:
  7309   002EE2  0012               	return		;funcret
  7310   002EE4                     __end_of_Lcd_Set_Cursor:
  7311                           	callstack 0
  7312                           
  7313 ;; *************** function _Lcd_Init *****************
  7314 ;; Defined at:
  7315 ;;		line 72 in file "lib_pic/lcd_2x16.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;		None
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7329 ;;      Params:         0       0       0       0       0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7331 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7332 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7333 ;;Total ram usage:        1 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; Hardware stack levels required when called: 2
  7336 ;; This function calls:
  7337 ;;		_Lcd_Cmd
  7338 ;;		_Lcd_Port
  7339 ;; This function is called by:
  7340 ;;		_main
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text32
  7345   002DA0                     __ptext32:
  7346                           	callstack 0
  7347   002DA0                     _Lcd_Init:
  7348                           	callstack 28
  7349   002DA0                     
  7350                           ;lib_pic/lcd_2x16.c: 75:  TRISD &= ~(0xF0);
  7351   002DA0  0E0F               	movlw	15
  7352   002DA2  1695               	andwf	149,f,c	;volatile
  7353                           
  7354                           ;lib_pic/lcd_2x16.c: 76:  TRISD &= ~((1<<3)|(1<<2));
  7355   002DA4  0EF3               	movlw	243
  7356   002DA6  1695               	andwf	149,f,c	;volatile
  7357   002DA8                     
  7358                           ;lib_pic/lcd_2x16.c: 78:  Lcd_Port(0x00);
  7359   002DA8  0E00               	movlw	0
  7360   002DAA  EC72  F017         	call	_Lcd_Port
  7361   002DAE                     
  7362                           ;lib_pic/lcd_2x16.c: 79:  _delay((unsigned long)((20)*(8000000UL/4000.0)));
  7363   002DAE  0E34               	movlw	52
  7364   002DB0  6E04               	movwf	??_Lcd_Init^0,c
  7365   002DB2  0EF2               	movlw	242
  7366   002DB4                     u4377:
  7367   002DB4  2EE8               	decfsz	wreg,f,c
  7368   002DB6  D7FE               	bra	u4377
  7369   002DB8  2E04               	decfsz	??_Lcd_Init^0,f,c
  7370   002DBA  D7FC               	bra	u4377
  7371   002DBC                     
  7372                           ;lib_pic/lcd_2x16.c: 80:  Lcd_Cmd(0x03);
  7373   002DBC  0E03               	movlw	3
  7374   002DBE  EC42  F019         	call	_Lcd_Cmd
  7375   002DC2                     
  7376                           ;lib_pic/lcd_2x16.c: 81:  _delay((unsigned long)((5)*(8000000UL/4000.0)));
  7377   002DC2  0E0D               	movlw	13
  7378   002DC4  6E04               	movwf	??_Lcd_Init^0,c
  7379   002DC6  0EFC               	movlw	252
  7380   002DC8                     u4387:
  7381   002DC8  2EE8               	decfsz	wreg,f,c
  7382   002DCA  D7FE               	bra	u4387
  7383   002DCC  2E04               	decfsz	??_Lcd_Init^0,f,c
  7384   002DCE  D7FC               	bra	u4387
  7385   002DD0                     
  7386                           ;lib_pic/lcd_2x16.c: 82:  Lcd_Cmd(0x03);
  7387   002DD0  0E03               	movlw	3
  7388   002DD2  EC42  F019         	call	_Lcd_Cmd
  7389   002DD6                     
  7390                           ;lib_pic/lcd_2x16.c: 83:  _delay((unsigned long)((11)*(8000000UL/4000.0)));
  7391   002DD6  0E1D               	movlw	29
  7392   002DD8  6E04               	movwf	??_Lcd_Init^0,c
  7393   002DDA  0E91               	movlw	145
  7394   002DDC                     u4397:
  7395   002DDC  2EE8               	decfsz	wreg,f,c
  7396   002DDE  D7FE               	bra	u4397
  7397   002DE0  2E04               	decfsz	??_Lcd_Init^0,f,c
  7398   002DE2  D7FC               	bra	u4397
  7399   002DE4  F000               	nop	
  7400   002DE6                     
  7401                           ;lib_pic/lcd_2x16.c: 84:  Lcd_Cmd(0x03);
  7402   002DE6  0E03               	movlw	3
  7403   002DE8  EC42  F019         	call	_Lcd_Cmd
  7404   002DEC                     
  7405                           ;lib_pic/lcd_2x16.c: 86:  Lcd_Cmd(0x02);
  7406   002DEC  0E02               	movlw	2
  7407   002DEE  EC42  F019         	call	_Lcd_Cmd
  7408   002DF2                     
  7409                           ;lib_pic/lcd_2x16.c: 87:  Lcd_Cmd(0x02);
  7410   002DF2  0E02               	movlw	2
  7411   002DF4  EC42  F019         	call	_Lcd_Cmd
  7412   002DF8                     
  7413                           ;lib_pic/lcd_2x16.c: 88:  Lcd_Cmd(0x08);
  7414   002DF8  0E08               	movlw	8
  7415   002DFA  EC42  F019         	call	_Lcd_Cmd
  7416   002DFE                     
  7417                           ;lib_pic/lcd_2x16.c: 89:  Lcd_Cmd(0x00);
  7418   002DFE  0E00               	movlw	0
  7419   002E00  EC42  F019         	call	_Lcd_Cmd
  7420   002E04                     
  7421                           ;lib_pic/lcd_2x16.c: 90:  Lcd_Cmd(0x0C);
  7422   002E04  0E0C               	movlw	12
  7423   002E06  EC42  F019         	call	_Lcd_Cmd
  7424   002E0A                     
  7425                           ;lib_pic/lcd_2x16.c: 91:  Lcd_Cmd(0x00);
  7426   002E0A  0E00               	movlw	0
  7427   002E0C  EC42  F019         	call	_Lcd_Cmd
  7428   002E10                     
  7429                           ;lib_pic/lcd_2x16.c: 92:  Lcd_Cmd(0x06);
  7430   002E10  0E06               	movlw	6
  7431   002E12  EC42  F019         	call	_Lcd_Cmd
  7432   002E16  0012               	return		;funcret
  7433   002E18                     __end_of_Lcd_Init:
  7434                           	callstack 0
  7435                           
  7436 ;; *************** function _Lcd_Clear *****************
  7437 ;; Defined at:
  7438 ;;		line 43 in file "lib_pic/lcd_2x16.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;		None
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		wreg, status,2, status,0, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7452 ;;      Params:         0       0       0       0       0       0       0       0       0
  7453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7455 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7456 ;;Total ram usage:        0 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; Hardware stack levels required when called: 2
  7459 ;; This function calls:
  7460 ;;		_Lcd_Cmd
  7461 ;; This function is called by:
  7462 ;;		_main
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text33
  7467   003330                     __ptext33:
  7468                           	callstack 0
  7469   003330                     _Lcd_Clear:
  7470                           	callstack 28
  7471   003330                     
  7472                           ;lib_pic/lcd_2x16.c: 45:  Lcd_Cmd(0);
  7473   003330  0E00               	movlw	0
  7474   003332  EC42  F019         	call	_Lcd_Cmd
  7475                           
  7476                           ;lib_pic/lcd_2x16.c: 46:  Lcd_Cmd(1);
  7477   003336  0E01               	movlw	1
  7478   003338  EC42  F019         	call	_Lcd_Cmd
  7479   00333C  0012               	return		;funcret
  7480   00333E                     __end_of_Lcd_Clear:
  7481                           	callstack 0
  7482                           
  7483 ;; *************** function _Lcd_Cmd *****************
  7484 ;; Defined at:
  7485 ;;		line 33 in file "lib_pic/lcd_2x16.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  a               1    wreg     unsigned char 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  a               1    2[COMRAM] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0, cstack
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7499 ;;      Params:         0       0       0       0       0       0       0       0       0
  7500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7501 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7502 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7503 ;;Total ram usage:        2 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 1
  7506 ;; This function calls:
  7507 ;;		_Lcd_Port
  7508 ;; This function is called by:
  7509 ;;		_Lcd_Clear
  7510 ;;		_Lcd_Set_Cursor
  7511 ;;		_Lcd_Init
  7512 ;;		_Lcd_Shift_Right
  7513 ;;		_Lcd_Shift_Left
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text34
  7518   003284                     __ptext34:
  7519                           	callstack 0
  7520   003284                     _Lcd_Cmd:
  7521                           	callstack 28
  7522                           
  7523                           ;incstack = 0
  7524                           ;Lcd_Cmd@a stored from wreg
  7525   003284  6E03               	movwf	Lcd_Cmd@a^0,c
  7526   003286                     
  7527                           ;lib_pic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd_2x16.c: 34: {;lib_pic
      +                          /lcd_2x16.c: 35:  PORTD &= ~(1<<2);
  7528   003286  9483               	bcf	131,2,c	;volatile
  7529   003288                     
  7530                           ;lib_pic/lcd_2x16.c: 36:  Lcd_Port(a);
  7531   003288  5003               	movf	Lcd_Cmd@a^0,w,c
  7532   00328A  EC72  F017         	call	_Lcd_Port
  7533   00328E                     
  7534                           ;lib_pic/lcd_2x16.c: 37:  PORTD |= (1<<3);
  7535   00328E  8683               	bsf	131,3,c	;volatile
  7536   003290                     
  7537                           ;lib_pic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  7538   003290  0E0B               	movlw	11
  7539   003292  6E02               	movwf	??_Lcd_Cmd^0,c
  7540   003294  0E62               	movlw	98
  7541   003296                     u4407:
  7542   003296  2EE8               	decfsz	wreg,f,c
  7543   003298  D7FE               	bra	u4407
  7544   00329A  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7545   00329C  D7FC               	bra	u4407
  7546   00329E  D000               	nop2	
  7547   0032A0                     
  7548                           ;lib_pic/lcd_2x16.c: 39:  PORTD &= ~(1<<3);
  7549   0032A0  9683               	bcf	131,3,c	;volatile
  7550   0032A2  0012               	return		;funcret
  7551   0032A4                     __end_of_Lcd_Cmd:
  7552                           	callstack 0
  7553                           
  7554 ;; *************** function _Lcd_Port *****************
  7555 ;; Defined at:
  7556 ;;		line 5 in file "lib_pic/lcd_2x16.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  a               1    wreg     unsigned char 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;  a               1    0[COMRAM] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0
  7571 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7573 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7574 ;;Total ram usage:        1 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_Lcd_Cmd
  7580 ;;		_Lcd_Init
  7581 ;;		_Lcd_Write_Char
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text35
  7586   002EE4                     __ptext35:
  7587                           	callstack 0
  7588   002EE4                     _Lcd_Port:
  7589                           	callstack 28
  7590                           
  7591                           ;incstack = 0
  7592                           ;Lcd_Port@a stored from wreg
  7593   002EE4  6E01               	movwf	Lcd_Port@a^0,c
  7594   002EE6                     
  7595                           ;lib_pic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd_2x16.c: 6: {;lib_pic/
      +                          lcd_2x16.c: 7:  if(a & 1)
  7596   002EE6  A001               	btfss	Lcd_Port@a^0,0,c
  7597   002EE8  EF78  F017         	goto	u3941
  7598   002EEC  EF7A  F017         	goto	u3940
  7599   002EF0                     u3941:
  7600   002EF0  EF7D  F017         	goto	l3882
  7601   002EF4                     u3940:
  7602   002EF4                     
  7603                           ;lib_pic/lcd_2x16.c: 9:   LATD |= (1<<4);
  7604   002EF4  888C               	bsf	140,4,c	;volatile
  7605   002EF6  EF7E  F017         	goto	l3884
  7606   002EFA                     l3882:
  7607                           
  7608                           ;lib_pic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  7609   002EFA  988C               	bcf	140,4,c	;volatile
  7610   002EFC                     l3884:
  7611                           
  7612                           ;lib_pic/lcd_2x16.c: 13:  if(a & 2)
  7613   002EFC  A201               	btfss	Lcd_Port@a^0,1,c
  7614   002EFE  EF83  F017         	goto	u3951
  7615   002F02  EF85  F017         	goto	u3950
  7616   002F06                     u3951:
  7617   002F06  EF88  F017         	goto	l3888
  7618   002F0A                     u3950:
  7619   002F0A                     
  7620                           ;lib_pic/lcd_2x16.c: 15:   LATD |= (1<<5);
  7621   002F0A  8A8C               	bsf	140,5,c	;volatile
  7622   002F0C  EF89  F017         	goto	l3890
  7623   002F10                     l3888:
  7624                           
  7625                           ;lib_pic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  7626   002F10  9A8C               	bcf	140,5,c	;volatile
  7627   002F12                     l3890:
  7628                           
  7629                           ;lib_pic/lcd_2x16.c: 19:  if(a & 4)
  7630   002F12  A401               	btfss	Lcd_Port@a^0,2,c
  7631   002F14  EF8E  F017         	goto	u3961
  7632   002F18  EF90  F017         	goto	u3960
  7633   002F1C                     u3961:
  7634   002F1C  EF93  F017         	goto	l3894
  7635   002F20                     u3960:
  7636   002F20                     
  7637                           ;lib_pic/lcd_2x16.c: 21:   LATD |= (1<<6);
  7638   002F20  8C8C               	bsf	140,6,c	;volatile
  7639   002F22  EF94  F017         	goto	l3896
  7640   002F26                     l3894:
  7641                           
  7642                           ;lib_pic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  7643   002F26  9C8C               	bcf	140,6,c	;volatile
  7644   002F28                     l3896:
  7645                           
  7646                           ;lib_pic/lcd_2x16.c: 25:  if(a & 8)
  7647   002F28  A601               	btfss	Lcd_Port@a^0,3,c
  7648   002F2A  EF99  F017         	goto	u3971
  7649   002F2E  EF9B  F017         	goto	u3970
  7650   002F32                     u3971:
  7651   002F32  EF9E  F017         	goto	l3900
  7652   002F36                     u3970:
  7653   002F36                     
  7654                           ;lib_pic/lcd_2x16.c: 27:   LATD |= (1<<7);
  7655   002F36  8E8C               	bsf	140,7,c	;volatile
  7656   002F38  EF9F  F017         	goto	l202
  7657   002F3C                     l3900:
  7658                           
  7659                           ;lib_pic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  7660   002F3C  9E8C               	bcf	140,7,c	;volatile
  7661   002F3E                     l202:
  7662   002F3E  0012               	return		;funcret
  7663   002F40                     __end_of_Lcd_Port:
  7664                           	callstack 0
  7665                           
  7666 ;; *************** function _ADC_Init *****************
  7667 ;; Defined at:
  7668 ;;		line 5 in file "lib_pic/adc_10bits.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;		None
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  1    wreg      void 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7682 ;;      Params:         0       0       0       0       0       0       0       0       0
  7683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7685 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7686 ;;Total ram usage:        0 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_main
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text36
  7696   0032A4                     __ptext36:
  7697                           	callstack 0
  7698   0032A4                     _ADC_Init:
  7699                           	callstack 30
  7700   0032A4                     
  7701                           ;lib_pic/adc_10bits.c: 8:     ADCON1bits.PVCFG = 0b00;
  7702   0032A4  0EF3               	movlw	-13
  7703   0032A6  16C1               	andwf	193,f,c	;volatile
  7704                           
  7705                           ;lib_pic/adc_10bits.c: 9:     ADCON1bits.NVCFG = 0b00;
  7706   0032A8  0EFC               	movlw	-4
  7707   0032AA  16C1               	andwf	193,f,c	;volatile
  7708   0032AC                     
  7709                           ;lib_pic/adc_10bits.c: 11:     ADCON2bits.ADFM = 1;
  7710   0032AC  8EC0               	bsf	192,7,c	;volatile
  7711                           
  7712                           ;lib_pic/adc_10bits.c: 37:     ADCON2bits.ADCS = 0b010;
  7713   0032AE  50C0               	movf	192,w,c	;volatile
  7714   0032B0  0BF8               	andlw	-8
  7715   0032B2  0902               	iorlw	2
  7716   0032B4  6EC0               	movwf	192,c	;volatile
  7717                           
  7718                           ;lib_pic/adc_10bits.c: 38:     ADCON2bits.ACQT = 0b010;
  7719   0032B6  50C0               	movf	192,w,c	;volatile
  7720   0032B8  0BC7               	andlw	-57
  7721   0032BA  0910               	iorlw	16
  7722   0032BC  6EC0               	movwf	192,c	;volatile
  7723   0032BE  0012               	return		;funcret
  7724   0032C0                     __end_of_ADC_Init:
  7725                           	callstack 0
  7726                           
  7727 ;; *************** function _ADC_GetConversion *****************
  7728 ;; Defined at:
  7729 ;;		line 66 in file "lib_pic/adc_10bits.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  channel         1    wreg     unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  channel         1    6[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  2    2[COMRAM] unsigned short 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         2       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        5 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; Hardware stack levels required when called: 1
  7750 ;; This function calls:
  7751 ;;		_ADC_Disable
  7752 ;;		_ADC_Enable
  7753 ;;		_ADC_SelectChannel
  7754 ;;		_ADC_StartConversion
  7755 ;;		_ADC_StateConversion
  7756 ;; This function is called by:
  7757 ;;		_main
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text37
  7762   003186                     __ptext37:
  7763                           	callstack 0
  7764   003186                     _ADC_GetConversion:
  7765                           	callstack 29
  7766                           
  7767                           ;incstack = 0
  7768                           ;ADC_GetConversion@channel stored from wreg
  7769   003186  6E07               	movwf	ADC_GetConversion@channel^0,c
  7770   003188                     
  7771                           ;lib_pic/adc_10bits.c: 66: uint16_t ADC_GetConversion(uint8_t channel);lib_pic/adc_10bit
      +                          s.c: 67: {;lib_pic/adc_10bits.c: 68:     ADC_SelectChannel(channel);
  7772   003188  5007               	movf	ADC_GetConversion@channel^0,w,c
  7773   00318A  EC6B  F019         	call	_ADC_SelectChannel
  7774   00318E                     
  7775                           ;lib_pic/adc_10bits.c: 69:     ADC_Enable();
  7776   00318E  ECA1  F019         	call	_ADC_Enable	;wreg free
  7777   003192                     
  7778                           ;lib_pic/adc_10bits.c: 70:     ADC_StartConversion();
  7779   003192  EC9F  F019         	call	_ADC_StartConversion	;wreg free
  7780   003196                     l4044:
  7781   003196  EC76  F019         	call	_ADC_StateConversion	;wreg free
  7782   00319A  06E8               	decf	wreg,f,c
  7783   00319C  B4D8               	btfsc	status,2,c
  7784   00319E  EFD3  F018         	goto	u4051
  7785   0031A2  EFD5  F018         	goto	u4050
  7786   0031A6                     u4051:
  7787   0031A6  EFCB  F018         	goto	l4044
  7788   0031AA                     u4050:
  7789   0031AA                     
  7790                           ;lib_pic/adc_10bits.c: 72:     ADC_Disable();
  7791   0031AA  ECA3  F019         	call	_ADC_Disable	;wreg free
  7792   0031AE                     
  7793                           ;lib_pic/adc_10bits.c: 73:     return (uint16_t)((ADRESH << 8) + ADRESL);
  7794   0031AE  50C4               	movf	196,w,c	;volatile
  7795   0031B0  6E06               	movwf	(??_ADC_GetConversion+1)^0,c
  7796   0031B2  6A05               	clrf	??_ADC_GetConversion^0,c
  7797   0031B4  50C3               	movf	195,w,c	;volatile
  7798   0031B6  2405               	addwf	??_ADC_GetConversion^0,w,c
  7799   0031B8  6E03               	movwf	?_ADC_GetConversion^0,c
  7800   0031BA  0E00               	movlw	0
  7801   0031BC  2006               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  7802   0031BE  6E04               	movwf	(?_ADC_GetConversion+1)^0,c
  7803   0031C0  0012               	return		;funcret
  7804   0031C2                     __end_of_ADC_GetConversion:
  7805                           	callstack 0
  7806                           
  7807 ;; *************** function _ADC_StateConversion *****************
  7808 ;; Defined at:
  7809 ;;		line 56 in file "lib_pic/adc_10bits.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;		None
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;		None
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      _Bool 
  7816 ;; Registers used:
  7817 ;;		wreg
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7823 ;;      Params:         0       0       0       0       0       0       0       0       0
  7824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7826 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7827 ;;Total ram usage:        0 bytes
  7828 ;; Hardware stack levels used: 1
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_ADC_GetConversion
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text38
  7837   0032EC                     __ptext38:
  7838                           	callstack 0
  7839   0032EC                     _ADC_StateConversion:
  7840                           	callstack 29
  7841   0032EC                     
  7842                           ;lib_pic/adc_10bits.c: 58:     return (_Bool)ADCON0bits.GO_nDONE;
  7843   0032EC  B2C2               	btfsc	194,1,c	;volatile
  7844   0032EE  EF7B  F019         	goto	u4031
  7845   0032F2  EF7E  F019         	goto	u4030
  7846   0032F6                     u4031:
  7847   0032F6  0E01               	movlw	1
  7848   0032F8  EF7F  F019         	goto	u4036
  7849   0032FC                     u4030:
  7850   0032FC  0E00               	movlw	0
  7851   0032FE                     u4036:
  7852   0032FE  0012               	return		;funcret
  7853   003300                     __end_of_ADC_StateConversion:
  7854                           	callstack 0
  7855                           
  7856 ;; *************** function _ADC_StartConversion *****************
  7857 ;; Defined at:
  7858 ;;		line 51 in file "lib_pic/adc_10bits.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		None
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7876 ;;Total ram usage:        0 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_ADC_GetConversion
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text39
  7886   00333E                     __ptext39:
  7887                           	callstack 0
  7888   00333E                     _ADC_StartConversion:
  7889                           	callstack 29
  7890   00333E                     
  7891                           ;lib_pic/adc_10bits.c: 53:     ADCON0bits.GO_nDONE = 1;
  7892   00333E  82C2               	bsf	194,1,c	;volatile
  7893   003340  0012               	return		;funcret
  7894   003342                     __end_of_ADC_StartConversion:
  7895                           	callstack 0
  7896                           
  7897 ;; *************** function _ADC_SelectChannel *****************
  7898 ;; Defined at:
  7899 ;;		line 61 in file "lib_pic/adc_10bits.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  channel         1    wreg     unsigned char 
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;  channel         1    1[COMRAM] unsigned char 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1    wreg      void 
  7906 ;; Registers used:
  7907 ;;		wreg, status,2, status,0
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7913 ;;      Params:         0       0       0       0       0       0       0       0       0
  7914 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7915 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7916 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7917 ;;Total ram usage:        2 bytes
  7918 ;; Hardware stack levels used: 1
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_ADC_GetConversion
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text40
  7927   0032D6                     __ptext40:
  7928                           	callstack 0
  7929   0032D6                     _ADC_SelectChannel:
  7930                           	callstack 29
  7931                           
  7932                           ;incstack = 0
  7933                           ;ADC_SelectChannel@channel stored from wreg
  7934   0032D6  6E02               	movwf	ADC_SelectChannel@channel^0,c
  7935   0032D8                     
  7936                           ;lib_pic/adc_10bits.c: 61: void ADC_SelectChannel(uint8_t channel);lib_pic/adc_10bits.c:
      +                           62: {;lib_pic/adc_10bits.c: 63:     ADCON0bits.CHS = channel;
  7937   0032D8  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7938   0032DC  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7939   0032DE  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7940   0032E0  50C2               	movf	194,w,c	;volatile
  7941   0032E2  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7942   0032E4  0B83               	andlw	-125
  7943   0032E6  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7944   0032E8  6EC2               	movwf	194,c	;volatile
  7945   0032EA  0012               	return		;funcret
  7946   0032EC                     __end_of_ADC_SelectChannel:
  7947                           	callstack 0
  7948                           
  7949 ;; *************** function _ADC_Enable *****************
  7950 ;; Defined at:
  7951 ;;		line 41 in file "lib_pic/adc_10bits.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		None
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7968 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        0 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_ADC_GetConversion
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text41
  7979   003342                     __ptext41:
  7980                           	callstack 0
  7981   003342                     _ADC_Enable:
  7982                           	callstack 29
  7983   003342                     
  7984                           ;lib_pic/adc_10bits.c: 43:     ADCON0bits.ADON = 1;
  7985   003342  80C2               	bsf	194,0,c	;volatile
  7986   003344  0012               	return		;funcret
  7987   003346                     __end_of_ADC_Enable:
  7988                           	callstack 0
  7989                           
  7990 ;; *************** function _ADC_Disable *****************
  7991 ;; Defined at:
  7992 ;;		line 46 in file "lib_pic/adc_10bits.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;		None
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		None
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8006 ;;      Params:         0       0       0       0       0       0       0       0       0
  8007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8010 ;;Total ram usage:        0 bytes
  8011 ;; Hardware stack levels used: 1
  8012 ;; This function calls:
  8013 ;;		Nothing
  8014 ;; This function is called by:
  8015 ;;		_ADC_GetConversion
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text42
  8020   003346                     __ptext42:
  8021                           	callstack 0
  8022   003346                     _ADC_Disable:
  8023                           	callstack 29
  8024   003346                     
  8025                           ;lib_pic/adc_10bits.c: 48:     ADCON0bits.ADON = 0;
  8026   003346  90C2               	bcf	194,0,c	;volatile
  8027   003348  0012               	return		;funcret
  8028   00334A                     __end_of_ADC_Disable:
  8029                           	callstack 0
  8030                           
  8031                           	psect	rparam
  8032   000000                     
  8033                           	psect	idloc
  8034                           
  8035                           ;Config register IDLOC0 @ 0x200000
  8036                           ;	unspecified, using default values
  8037   200000                     	org	2097152
  8038   200000  FF                 	db	255
  8039                           
  8040                           ;Config register IDLOC1 @ 0x200001
  8041                           ;	unspecified, using default values
  8042   200001                     	org	2097153
  8043   200001  FF                 	db	255
  8044                           
  8045                           ;Config register IDLOC2 @ 0x200002
  8046                           ;	unspecified, using default values
  8047   200002                     	org	2097154
  8048   200002  FF                 	db	255
  8049                           
  8050                           ;Config register IDLOC3 @ 0x200003
  8051                           ;	unspecified, using default values
  8052   200003                     	org	2097155
  8053   200003  FF                 	db	255
  8054                           
  8055                           ;Config register IDLOC4 @ 0x200004
  8056                           ;	unspecified, using default values
  8057   200004                     	org	2097156
  8058   200004  FF                 	db	255
  8059                           
  8060                           ;Config register IDLOC5 @ 0x200005
  8061                           ;	unspecified, using default values
  8062   200005                     	org	2097157
  8063   200005  FF                 	db	255
  8064                           
  8065                           ;Config register IDLOC6 @ 0x200006
  8066                           ;	unspecified, using default values
  8067   200006                     	org	2097158
  8068   200006  FF                 	db	255
  8069                           
  8070                           ;Config register IDLOC7 @ 0x200007
  8071                           ;	unspecified, using default values
  8072   200007                     	org	2097159
  8073   200007  FF                 	db	255
  8074                           
  8075                           	psect	config
  8076                           
  8077                           ;Config register CONFIG1L @ 0x300000
  8078                           ;	PLL Selection
  8079                           ;	PLLSEL = PLL4X, 4x clock multiplier
  8080                           ;	PLL Enable Configuration bit
  8081                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  8082                           ;	CPU System Clock Postscaler
  8083                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  8084                           ;	Low Speed USB mode with 48 MHz system clock
  8085                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  8086   300000                     	org	3145728
  8087   300000  00                 	db	0
  8088                           
  8089                           ;Config register CONFIG1H @ 0x300001
  8090                           ;	Oscillator Selection
  8091                           ;	FOSC = INTOSCIO, Internal oscillator
  8092                           ;	Primary Oscillator Shutdown
  8093                           ;	PCLKEN = ON, Primary oscillator enabled
  8094                           ;	Fail-Safe Clock Monitor
  8095                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8096                           ;	Internal/External Oscillator Switchover
  8097                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8098   300001                     	org	3145729
  8099   300001  28                 	db	40
  8100                           
  8101                           ;Config register CONFIG2L @ 0x300002
  8102                           ;	Power-up Timer Enable
  8103                           ;	nPWRTEN = ON, Power up timer enabled
  8104                           ;	Brown-out Reset Enable
  8105                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  8106                           ;	Brown-out Reset Voltage
  8107                           ;	BORV = 190, BOR set to 1.9V nominal
  8108                           ;	Low-Power Brown-out Reset
  8109                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  8110   300002                     	org	3145730
  8111   300002  5E                 	db	94
  8112                           
  8113                           ;Config register CONFIG2H @ 0x300003
  8114                           ;	Watchdog Timer Enable bits
  8115                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  8116                           ;	Watchdog Timer Postscaler
  8117                           ;	WDTPS = 32768, 1:32768
  8118   300003                     	org	3145731
  8119   300003  3C                 	db	60
  8120                           
  8121                           ; Padding undefined space
  8122   300004                     	org	3145732
  8123   300004  FF                 	db	255
  8124                           
  8125                           ;Config register CONFIG3H @ 0x300005
  8126                           ;	CCP2 MUX bit
  8127                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  8128                           ;	PORTB A/D Enable bit
  8129                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  8130                           ;	Timer3 Clock Input MUX bit
  8131                           ;	T3CMX = RC0, T3CKI function is on RC0
  8132                           ;	SDO Output MUX bit
  8133                           ;	SDOMX = RB3, SDO function is on RB3
  8134                           ;	Master Clear Reset Pin Enable
  8135                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  8136   300005                     	org	3145733
  8137   300005  D1                 	db	209
  8138                           
  8139                           ;Config register CONFIG4L @ 0x300006
  8140                           ;	Stack Full/Underflow Reset
  8141                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8142                           ;	Single-Supply ICSP Enable bit
  8143                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  8144                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  8145                           ;	ICPRT = OFF, ICPORT disabled
  8146                           ;	Extended Instruction Set Enable bit
  8147                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  8148                           ;	Background Debugger Enable bit
  8149                           ;	DEBUG = 0x1, unprogrammed default
  8150   300006                     	org	3145734
  8151   300006  85                 	db	133
  8152                           
  8153                           ; Padding undefined space
  8154   300007                     	org	3145735
  8155   300007  FF                 	db	255
  8156                           
  8157                           ;Config register CONFIG5L @ 0x300008
  8158                           ;	Block 0 Code Protect
  8159                           ;	CP0 = OFF, Block 0 is not code-protected
  8160                           ;	Block 1 Code Protect
  8161                           ;	CP1 = OFF, Block 1 is not code-protected
  8162                           ;	Block 2 Code Protect
  8163                           ;	CP2 = OFF, Block 2 is not code-protected
  8164                           ;	Block 3 Code Protect
  8165                           ;	CP3 = OFF, Block 3 is not code-protected
  8166   300008                     	org	3145736
  8167   300008  0F                 	db	15
  8168                           
  8169                           ;Config register CONFIG5H @ 0x300009
  8170                           ;	Boot Block Code Protect
  8171                           ;	CPB = OFF, Boot block is not code-protected
  8172                           ;	Data EEPROM Code Protect
  8173                           ;	CPD = OFF, Data EEPROM is not code-protected
  8174   300009                     	org	3145737
  8175   300009  C0                 	db	192
  8176                           
  8177                           ;Config register CONFIG6L @ 0x30000A
  8178                           ;	Block 0 Write Protect
  8179                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  8180                           ;	Block 1 Write Protect
  8181                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  8182                           ;	Block 2 Write Protect
  8183                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  8184                           ;	Block 3 Write Protect
  8185                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  8186   30000A                     	org	3145738
  8187   30000A  0F                 	db	15
  8188                           
  8189                           ;Config register CONFIG6H @ 0x30000B
  8190                           ;	Configuration Registers Write Protect
  8191                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8192                           ;	Boot Block Write Protect
  8193                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  8194                           ;	Data EEPROM Write Protect
  8195                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8196   30000B                     	org	3145739
  8197   30000B  E0                 	db	224
  8198                           
  8199                           ;Config register CONFIG7L @ 0x30000C
  8200                           ;	Block 0 Table Read Protect
  8201                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  8202                           ;	Block 1 Table Read Protect
  8203                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  8204                           ;	Block 2 Table Read Protect
  8205                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  8206                           ;	Block 3 Table Read Protect
  8207                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  8208   30000C                     	org	3145740
  8209   30000C  0F                 	db	15
  8210                           
  8211                           ;Config register CONFIG7H @ 0x30000D
  8212                           ;	Boot Block Table Read Protect
  8213                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  8214   30000D                     	org	3145741
  8215   30000D  40                 	db	64
  8216                           tosu	equ	0xFFF
  8217                           tosh	equ	0xFFE
  8218                           tosl	equ	0xFFD
  8219                           stkptr	equ	0xFFC
  8220                           pclatu	equ	0xFFB
  8221                           pclath	equ	0xFFA
  8222                           pcl	equ	0xFF9
  8223                           tblptru	equ	0xFF8
  8224                           tblptrh	equ	0xFF7
  8225                           tblptrl	equ	0xFF6
  8226                           tablat	equ	0xFF5
  8227                           prodh	equ	0xFF4
  8228                           prodl	equ	0xFF3
  8229                           indf0	equ	0xFEF
  8230                           postinc0	equ	0xFEE
  8231                           postdec0	equ	0xFED
  8232                           preinc0	equ	0xFEC
  8233                           plusw0	equ	0xFEB
  8234                           fsr0h	equ	0xFEA
  8235                           fsr0l	equ	0xFE9
  8236                           wreg	equ	0xFE8
  8237                           indf1	equ	0xFE7
  8238                           postinc1	equ	0xFE6
  8239                           postdec1	equ	0xFE5
  8240                           preinc1	equ	0xFE4
  8241                           plusw1	equ	0xFE3
  8242                           fsr1h	equ	0xFE2
  8243                           fsr1l	equ	0xFE1
  8244                           bsr	equ	0xFE0
  8245                           indf2	equ	0xFDF
  8246                           postinc2	equ	0xFDE
  8247                           postdec2	equ	0xFDD
  8248                           preinc2	equ	0xFDC
  8249                           plusw2	equ	0xFDB
  8250                           fsr2h	equ	0xFDA
  8251                           fsr2l	equ	0xFD9
  8252                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        16
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     71     123
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1877$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strTemp(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1798$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1798$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), strTemp(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___fladd
    _atoi->___wmul
    ___xxtofl->_ADC_GetConversion
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_GetConversion->_ADC_SelectChannel

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32998
                                             92 COMRAM     2     2      0
                  _ADC_GetConversion
                           _ADC_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                     _OSCILADOR_Init
                          _PORT_Init
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   22973
                                             50 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22618
                                             90 COMRAM     2     2      0
                                             44 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   22257
                                             70 COMRAM    20    14      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19385
                                             61 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2499
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     953
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     704
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             41 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             21 COMRAM    25    17      8
                  _ADC_GetConversion (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             46 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     420
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      44
                                              2 COMRAM     5     3      2
                        _ADC_Disable
                         _ADC_Enable
                  _ADC_SelectChannel
                _ADC_StartConversion
                _ADC_StateConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StateConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Disable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
     _ADC_Disable
     _ADC_Enable
     _ADC_SelectChannel
     _ADC_StartConversion
     _ADC_StateConversion
   _ADC_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OSCILADOR_Init
   _PORT_Init
   ___fladd
   ___fldiv
     ___fladd (ARG)
   ___flge
     ___flmul (ARG)
       _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      7B       5       76.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhll      21      0       0      32        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhhh        E      0       0      20        0.0%
BITBIGSFRlhhhl       C      0       0      25        0.0%
BITBIGSFRhhlh        9      0       0      22        0.0%
BITBIGSFRlll         8      0       0      33        0.0%
BITBIGSFRlhhhhl      7      0       0      24        0.0%
BITBIGSFRlhhhhh      7      0       0      23        0.0%
BITBIGSFRlhhl        6      0       0      26        0.0%
BITBIGSFRllhhh       5      0       0      27        0.0%
BITBIGSFRllhlhh      4      0       0      29        0.0%
BITBIGSFRllhlhh      1      0       0      30        0.0%
BITBIGSFRllhlhl      1      0       0      31        0.0%
BITBIGSFRllhhl       1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A      34        0.0%
DATA                 0      0     12A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 20 16:53:25 2023

               ___fldiv@aexp 0029                 ___fldiv@bexp 0028                 ___fldiv@sign 0021  
                         l13 32BE                           l22 3340                           l16 3344  
                         l25 32FE                           l34 31C0                           l19 3348  
                         l28 32EA                           l39 3310          ___wmul@multiplicand 0003  
                        l202 2F3E                          l220 3230                          l205 32A2  
                        l214 2EE2                          l208 333C                          l217 2E16  
                        l226 2D24                          l413 332E                          l406 26C2  
                        l416 3282                          l363 32C2                          l366 32D4  
                        l713 2930                          l681 29EE                          l690 31F8  
                        l675 2CA6                          l686 2A34                          l944 140E  
                        l961 1528                          l953 16DE                          l945 13FC  
                        l970 15F8                          l946 13C2                          l971 15E6  
                        l986 3076                          l998 1EA2                          _pad 2D26  
                        wreg 000FE8                   _TXSTA1bits 000FAC                 ___flmul@aexp 0027  
               ___flmul@bexp 0028                 ___flmul@sign 0022                 ___flmul@temp 002D  
               ___flmul@prod 0029                 ___fltol@exp1 000A                         l1000 1D02  
                       l1011 1DC0                         l1003 1CC6                         l1012 1DAE  
                       l1030 17A4                         l1040 1A00                         l1009 1D48  
                       l1034 1B08                         l1211 21B8                         l1132 2D9E  
                       l1037 199A                         l1071 2422                         l1047 1ACA  
                       l1039 1A12                         l1143 121E                         l3000 1334  
                       l1128 2D48                         l1320 3184                         l1074 257E  
                       l3010 1348                         l3002 1338                         l1306 2BFC  
                       l1314 3144                         l1146 0BB8                         l1218 2FE0  
                       l1251 2822                         l3100 15A6                         l3020 135C  
                       l3012 134C                         l3004 133C                         l1228 2B32  
                       l1260 23CA                         l1148 09FE                         l1085 2516  
                       l1078 24BA                         l1270 325C                         l1254 282A  
                       l3110 15DE                         l3102 15A8                         l3030 13BA  
                       l3014 1350                         l3006 1340                         l3022 1360  
                       l1094 2F90                         l1263 230E                         l4000 328E  
                       l3200 1BEC                         l3120 165C                         l3104 15B6  
                       l3040 13F0                         l3032 13D0                         l3024 1364  
                       l3016 1354                         l3008 1344                         l1176 1000  
                       l4002 3290                         l4010 320A                         l3202 1BFC  
                       l3210 1C1C                         l3130 16A2                         l3114 1608  
                       l3122 165E                         l3106 15BA                         l3050 1440  
                       l3042 13FA                         l3034 13DC                         l3026 138E  
                       l3018 1358                         l4004 32A0                         l4020 3226  
                       l4012 3212                         l3220 1C5A                         l3212 1C2C  
                       l3204 1C04                         l3300 16EC                         l3140 16CC  
                       l3132 16B0                         l3124 166E                         l3116 1614  
                       l3108 15C8                         l3060 147C                         l3052 1450  
                       l3044 141C                         l3036 13E0                         l3028 13AA  
                       l1285 2E6C                         l4102 3330                         l4110 2EA8  
                       l4022 322E                         l4014 3214                         l4006 31FC  
                       l1278 30BC                         l3230 1CA2                         l3222 1C6A  
                       l3214 1C2C                         l3206 1C08                         l3310 172C  
                       l3302 16FA                         l3142 16CE                         l3134 16B6  
                       l3126 167E                         l3118 1622                         l3070 14C2  
                       l3062 148A                         l3054 145E                         l3046 142C  
                       l3038 13EE                         l1294 3030                         l3150 3120  
                       l4030 2FD6                         l4040 318E                         l4120 2DA0  
                       l4112 2EB2                         l4104 2E80                         l4016 321C  
                       l4008 3208                         l4200 24B0                         l3240 1CF0  
                       l3232 1CB6                         l3224 1C7A                         l3160 1B0A  
                       l3400 1A2E                         l3320 175C                         l3312 1732  
                       l3304 16FC                         l3136 16B8                         l3128 169E  
                       l3080 153E                         l3072 14F6                         l3064 148C  
                       l3056 146C                         l1288 2E7C                         l3152 3124  
                       l4024 2F92                         l4042 3192                         l4034 32A4  
                       l4130 2DD0                         l4122 2DA8                         l4114 2EC4  
                       l4106 2E90                         l4018 3224                         l4210 2526  
                       l4202 24EC                         l3154 325E                         l3250 1D38  
                       l3242 1D00                         l3234 1CC4                         l3226 1C8A  
                       l3218 1C40                         l3170 1B46                         l3162 1B16  
                       l3410 1A98                         l3402 1A3C                         l3330 1794  
                       l3322 175E                         l3314 1742                         l3306 170C  
                       l3138 16BE                         l3090 157A                         l3082 154E  
                       l3074 14F8                         l3066 1496                         l3058 1478  
                       l3146 3102                         l4026 2F9E                         l4044 3196  
                       l4036 32AC                         l4140 2DF8                         l4132 2DD6  
                       l4124 2DAE                         l4116 2ED6                         l4108 2EA2  
                       l4052 3300                         l4220 256E                         l4212 252A  
                       l4204 24F8                         l3156 327A                         l3260 1D78  
                       l3252 1D46                         l3244 1D12                         l3236 1CD0  
                       l3228 1C92                         l3180 1B76                         l3172 1B56  
                       l3164 1B24                         l3420 1AEE                         l3412 1AB2  
                       l3404 1A66                         l3340 17E4                         l3332 17B4  
                       l3324 176E                         l3316 1748                         l3308 171C  
                       l3092 157C                         l3076 1508                         l3068 149C  
                       l3148 310E                         l4028 2FBA                         l4300 25E0  
                       l4046 31AA                         l4038 3188                         l4142 2DFE  
                       l4134 2DE6                         l4126 2DBC                         l4118 2EDC  
                       l4150 2CA8                         l4214 254E                         l4206 2506  
                       l3270 1DEA                         l3262 1DA6                         l3246 1D28  
                       l3254 1D58                         l3238 1CEE                         l3190 1BAC  
                       l3182 1B7C                         l3174 1B58                         l3166 1B26  
                       l3414 1ACE                         l3422 1AF4                         l3406 1A6A  
                       l3350 1834                         l3342 17EE                         l3334 17C4  
                       l3326 177E                         l3318 174E                         l3094 158A  
                       l3086 1562                         l3078 1518                         l3430 3042  
                       l3502 28BC                         l4310 267E                         l4302 2638  
                       l4048 31AE                         l4144 2E04                         l4136 2DEC  
                       l4128 2DC2                         l4152 2CB4                         l4160 3326  
                       l4216 255E                         l4208 2524                         l3280 1E62  
                       l3272 1E14                         l3256 1D66                         l3248 1D2E  
                       l3192 1BBC                         l3184 1B8A                         l3168 1B36  
                       l3176 1B60                         l3440 2C6A                         l3424 1AF8  
                       l3416 1ADE                         l3408 1A84                         l3360 1876  
                       l3352 1840                         l3344 1804                         l3328 178E  
                       l3096 1592                         l3088 156C                         l3520 2920  
                       l3512 28E4                         l3504 28C6                         l3600 3002  
                       l4400 20EE                         l4312 268A                         l4304 265E  
                       l4146 2E0A                         l4138 2DF2                         l4154 2CE4  
                       l4162 332A                         l4218 256C                         l3290 1E98  
                       l3282 1E7E                         l3266 1DD0                         l3274 1E18  
                       l3258 1D6A                         l3194 1BBE                         l3186 1B8C  
                       l3178 1B70                         l3442 2C7A                         l3434 2BFE  
                       l3450 2932                         l3418 1AEC                         l3370 18D8  
                       l3362 1886                         l3354 184E                         l3346 1810  
                       l3338 17D8                         l3098 1596                         l3514 28F0  
                       l3506 28D0                         l3602 3006                         l3530 2D54  
                       l4402 2170                         l4170 2F5A                         l4314 26BC  
                       l4306 2668                         l4148 2E10                         l4156 2CE8  
                       l4164 332C                         l4180 23DE                         l3620 30B6  
                       l3612 3078                         l4404 2778                         l3284 1E82  
                       l3276 1E32                         l3268 1DDC                         l3188 1B9C  
                       l3196 1BC6                         l3444 2C9E                         l3436 2C2C  
                       l3460 29BC                         l3452 2960                         l3380 1980  
                       l3372 18F4                         l3364 18A0                         l3356 185A  
                       l3348 1828                         l3428 3032                         l3516 2900  
                       l3540 2A56                         l3604 3012                         l3532 2D68  
                       l3524 2D26                         l3700 0AF6                         l4172 2F62  
                       l4316 26C4                         l4308 2674                         l4158 3322  
                       l4190 245C                         l4182 23EC                         l3614 307C  
                       l3286 1E90                         l3278 1E48                         l3198 1BD6  
                       l3446 2CA4                         l3438 2C3C                         l3462 29CE  
                       l3454 2970                         l3390 19BC                         l3382 198A  
                       l3374 191E                         l3366 18B0                         l3358 186A  
                       l3518 2910                         l3542 2A94                         l3550 2AD4  
                       l3606 3016                         l3534 2D6C                         l3526 2D34  
                       l3702 0B0A                         l3710 0B86                         l3630 084A  
                       l4174 2F7E                         l4166 2F40                         l4192 2464  
                       l4184 2432                         l3608 3232                         l3616 3090  
                       l3288 1E96                         l3464 29DC                         l3456 299E  
                       l3392 19CA                         l3384 1998                         l3376 1954  
                       l3368 18CC                         l3472 31C2                         l3480 282C  
                       l3552 2AE6                         l3544 2ABC                         l3536 2D8A  
                       l3528 2D40                         l3560 3146                         l3800 1052  
                       l3720 0BEC                         l3712 0BC0                         l3704 0B3E  
                       l3640 0894                         l3632 084E                         l3624 0826  
                       l4168 2F52                         l4194 2470                         l4186 2448  
                       l4178 23CE                         l3618 30B2                         l3466 2A2C  
                       l3458 29AE                         l3394 19F8                         l3386 19AA  
                       l3378 1962                         l3298 16E0                         l3474 31D8  
                       l3490 2882                         l3482 2842                         l3546 2AC8  
                       l3538 2A36                         l3570 21DA                         l2930 2B34  
                       l3562 3156                         l3810 1086                         l3802 1056  
                       l3730 0C3A                         l3722 0BF0                         l3714 0BD0  
                       l3706 0B46                         l3650 08E2                         l3642 08A4  
                       l3634 0872                         l3626 082C                         l3900 2F3C  
                       l4196 24A2                         l3468 2A32                         l3388 19B8  
                       l3476 31E8                         l3492 2892                         l3556 2B2A  
                       l3580 22C2                         l3572 2230                         l3564 2E18  
                       l2940 2BB6                         l2932 2B46                         l3820 1124  
                       l3812 108A                         l3804 105C                         l3740 0CD2  
                       l3724 0C02                         l3732 0C42                         l3716 0BDC  
                       l3660 091E                         l3652 08F4                         l3644 08B0  
                       l3636 087C                         l3628 083C                         l4292 2580  
                       l4198 24A4                         l3398 1A22                         l2950 123C  
                       l3494 2896                         l3486 2856                         l3590 23AA  
                       l3582 22FE                         l3574 2244                         l3566 2E36  
                       l2926 32C2                         l2934 2B58                         l3830 117A  
                       l3814 1090                         l3806 1062                         l3822 1128  
                       l3750 0DB6                         l3742 0D2A                         l3734 0C4A  
                       l3726 0C10                         l3718 0BE4                         l3670 0980  
                       l3662 0928                         l3654 08F8                         l3646 08B8  
                       l3638 0884                         l3910 1EE8                         l3902 1EA4  
                       l4294 258C                         ?_pad 0012                         l2952 124C  
                       l2960 1276                         l2944 1220                         l3496 28A4  
                       l3488 2880                         l3592 23BA                         l3576 2252  
                       l3584 2332                         l3568 21BA                         l2928 32D0  
                       l2936 2B62                         l3840 11F6                         l3832 11AA  
                       l3824 1146                         l3816 10E8                         l3808 1074  
                       l3760 0E50                         l3752 0DE8                         l3744 0D5E  
                       l3736 0C5A                         l3728 0C28                         l3672 0984  
                       l3656 08FE                         l3648 08BC                         l3920 1F80  
                       l3912 1F0C                         l3904 1EC8                         l4296 2590  
                       l2970 12A6                         l2962 1286                         l2954 125C  
                       l2946 122C                         l3586 236E                         l2938 2B80  
                       l3842 11FE                         l3834 11B8                         l3826 1162  
                       l3818 111C                         l3770 0F28                         l3762 0E84  
                       l3754 0DFE                         l3738 0C6E                         l3746 0D64  
                       l3690 0A0E                         l3674 098A                         l3658 0906  
                       l3666 0948                         l3930 1FF6                         l3922 1FA0  
                       l3914 1F14                         l3906 1ED6                         l4298 2594  
                       l3860 275A                         l3852 26FA                         l2980 12E6  
                       l2972 12B4                         l2964 128C                         l2956 126C  
                       l2948 123A                         l3588 2382                         l3596 2FE2  
                       l3836 11D0                         l3828 116A                         l3780 0F52  
                       l3764 0EDA                         l3772 0F2C                         l3756 0E30  
                       l3748 0D82                         l3692 0A14                         l3676 0992  
                       l3668 096E                         l3684 09AE                         l3932 2008  
                       l3940 2020                         l3916 1F22                         l3908 1EE4  
                       l3870 27F4                         l3862 278E                         l3854 2716  
                       l3846 26E2                         l2990 1320                         l2982 12E8  
                       l2974 12B6                         l2966 129E                         l2958 126E  
                       l3598 2FF6                         l3838 11E0                         l3790 1020  
                       l3782 0F5E                         l3774 0F3C                         l3766 0EE0  
                       l3758 0E40                         l3694 0A48                         l3686 09C8  
                       l3950 20DA                         l4398 2034                         l3934 2010  
                       l3942 2052                         l3926 1FAE                         l3918 1F46  
                       l3880 2EF4                         l3872 2806                         l3856 274A  
                       l3848 26F6                         l2992 1324                         l2976 12C6  
                       l2984 12F0                         l2968 12A0                         l3792 1030  
                       l3784 0FD6                         l3776 0F44                         l3768 0F14  
                       l3696 0A86                         l3960 2152                         l3952 2104  
                       l3944 2072                         l3936 2018                         l3928 1FE6  
                       l3890 2F12                         l3882 2EFA                         l3858 2752  
                       l2994 1328                         l2986 1300                         l2978 12D6  
                       l3794 1034                         l3786 0FF6                         l3778 0F4A  
                       l3698 0AB8                         l3954 2124                         l3946 20A6  
                       l3962 217E                         l3892 2F20                         l3884 2EFC  
                       l3868 27C4                         l2996 132C                         l2988 1312  
                       l3796 103A                         l3788 1012                         l3990 32EC  
                       l3894 2F26                         l3886 2F0A                         l3878 2EE6  
                       l2998 1330                         l3798 1042                         l3966 2190  
                       l3984 3342                         l3896 2F28                         l3888 2F10  
                       l3986 3346                         l3994 32D8                         l3898 2F36  
                       l3988 333E                         l3996 3286                         l3998 3288  
                       STR_1 0812                         STR_2 0801                         STR_3 081D  
                       STR_6 0821                         u3000 175C                         u3001 1758  
                       u3010 176E                         u3011 176A                         u3100 1A0E  
                       u3020 177E                         u2300 2B46                         u3101 1A0A  
                       u3021 177A                         u2301 2B42                         u3110 1A22  
                       u3030 17B4                         u2310 2B58                         _LATB 000F8A  
                       u3111 1A1E                         u3031 17B0                         u2311 2B54  
                       u3200 299E                         u3120 1A3C                         u3040 17C4  
                       u2400 12D6                         u2320 2B80                         u4000 1F46  
                       _LATD 000F8C                         u3201 299A                         u3121 1A38  
                       u3041 17C0                         u2401 12D2                         u2321 2B7C  
                       u4001 1F42                         u3210 29BC                         u3130 1A84  
                       u3050 193E                         u2410 1312                         u2330 2BB6  
                       u4010 1FE6                         u3211 29B8                         u3131 1A80  
                       u2411 130E                         u2331 2BB2                         u4011 1FE2  
                       u3220 29DC                         u3140 1AB2                         u3060 1998  
                       u2500 142C                         u2420 1320                         u2340 123A  
                       u3300 2900                         u4020 206E                         u3221 29D8  
                       u3141 1AAE                         u3061 1994                         u2501 1428  
                       u2421 131C                         u2341 1236                         u3301 28FC  
                       u4021 206A                         u4030 32FC                         u3230 2A2C  
                       u3150 1AEC                         u3070 19B8                         u2510 145E  
                       u2430 138E                         u2350 124C                         u3310 2910  
                       u4031 32F6                         u3231 2A28                         u3151 1AE8  
                       u3071 19B4                         u3055 1934                         u2511 145A  
                       u2431 138A                         u2351 1248                         u3311 290C  
                       u4200 23EC                         u3160 2C2C                         u3080 19CA  
                       u3240 31D8                         u2600 15A6                         u2520 146C  
                       u2440 13A6                         u2360 125C                         u3400 2B22  
                       u3320 2D34                         u4040 2FD6                         u4201 23E8  
                       u3161 2C28                         u3081 19C6                         u3241 31D4  
                       u2601 15A2                         u2521 1468                         u2441 13A0  
                       u2361 1258                         u3321 2D30                         u4041 2FD2  
                       u4050 31AA                         u4210 2448                         u3170 2C6A  
                       u3090 19F8                         u2610 15B6                         u2530 148A  
                       u2450 13A8                         u2370 129E                         u3250 2842  
                       u2290 32D0                         u3330 2D8A                         u3410 3184  
                       u4051 31A6                         u4211 2444                         u3171 2C66  
                       u3091 19F4                         u2611 15B2                         u2531 1486  
                       u2371 129A                         u3251 283E                         u2291 32CC  
                       u3331 2D86                         u3411 3180                         u4036 32FE  
                       u4140 2E90                         u4220 249E                         u3180 2C9E  
                       u2700 169E                         u2620 15C8                         u2540 14C2  
                       u2460 13D0                         u2380 12B4                         u3260 2876  
                       u3340 2A76                         u3500 2352                         u3420 2E36  
                       u4141 2E8C                         u4221 249A                         u3181 2C9A  
                       u2701 169A                         u2621 15C4                         u2541 14BE  
                       u2461 13CC                         u2381 12B0                         u3421 2E32  
                       u4150 2EC4                         u4230 24E8                         u3190 2960  
                       u2710 16B0                         u2630 15DE                         u2550 1508  
                       u2470 13EE                         u2390 12C6                         u3270 28A4  
                       u3350 2A94                         u3510 236E                         u3430 2202  
                       u4151 2EC0                         u4231 24E4                         u3191 295C  
                       u2711 16AC                         u2631 15DA                         u2551 1504  
                       u2471 13EA                         u2391 12C2                         u3271 28A0  
                       u3351 2A90                         u3511 236A                         u4160 2CE0  
                       u4240 2506                         u2800 1BEC                         u2720 16CC  
                       u2640 15F4                         u2560 153E                         u2480 140E  
                       u3280 28B8                         u3360 2ABC                         u3520 23AA  
                       u3440 2230                         u3600 08A4                         u4241 2502  
                       u2801 1BE8                         u2721 16C8                         u2641 15F0  
                       u2561 153A                         u2481 140A                         u3281 28B4  
                       u3265 286C                         u3361 2AB8                         u3345 2A6C  
                       u3521 23A6                         u3505 2348                         u3441 222C  
                       u3601 08A0                         u4170 2D14                         u4250 2516  
                       u2810 1C2C                         u2650 1608                         u2570 154E  
                       u2490 141C                         u3290 28E0                         u3370 2AE6  
                       u3450 2252                         u3530 3030                         u2730 3144  
                       u3610 08E2                         u4330 26BC                         u4251 2512  
                       u2811 1C28                         u2651 1604                         u2571 154A  
                       u2491 1418                         u3291 28DC                         u3371 2AE2  
                       u3451 224E                         u3435 21F8                         u3531 302C  
                       u2731 3140                         u3611 08DE                         u4331 26B8  
                       u4180 2D24                         u4260 2524                         u3540 3256  
                       u2900 1DA6                         u2820 1CA2                         u2740 1B24  
                       u2660 1622                         u2580 157A                         u3700 0BB8  
                       u3620 08F4                         u4181 2D20                         u4261 2520  
                       u3541 3250                         u2901 1DA2                         u2821 1C9E  
                       u2741 1B20                         u2661 161E                         u2581 1576  
                       u3701 0BB4                         u3621 08F0                         u4270 255E  
                       u4190 23DE                         u3550 3258                         u2910 1DBC  
                       u2830 1CC4                         u2750 1B36                         u2670 165C  
                       u2590 158A                         u3390 2B20                         u3470 22BE  
                       u3710 0BD0                         u3630 096E                         u4407 3296  
                       u4167 2CD6                         u4271 255A                         u4191 23DA  
                       u2911 1DB8                         u2831 1CC0                         u2751 1B32  
                       u2671 1658                         u2591 1586                         u3391 2B1A  
                       u3471 22BA                         u3711 0BCC                         u3631 096A  
                       u4280 256C                         u3560 3090                         u2920 1DD0  
                       u2840 1CEE                         u2760 1B46                         u2680 166E  
                       u3480 22E2                         u3800 0F28                         u3720 0C02  
                       u3640 0980                         u4177 2D0A                         u4281 2568  
                       u3561 308C                         u2921 1DCC                         u2841 1CEA  
                       u2761 1B42                         u2681 166A                         u3385 2AF8  
                       u3465 2266                         u3801 0F24                         u3721 0BFE  
                       u3641 097C                         u3570 30B2                         u2930 1DEA  
                       u2850 1D12                         u2770 1B8A                         u2690 167E  
                       u3490 22FE                         u3466 2270                         u3810 0FD6  
                       u3730 0C10                         u3650 09FA                         u3571 30AE  
                       u2931 1DE6                         u2851 1D0E                         u2771 1B86  
                       u2691 167A                         u3491 22FA                         u3467 2280  
                       u3811 0FD2                         u3731 0C0C                         u3651 09F6  
                       u4347 26CE                         u3900 2716                         u2940 1E32  
                       u2860 1D28                         u2780 1B9C                         u3820 1012  
                       u3740 0C3A                         u3660 0A86                         u3580 084A  
                       u4357 3216                         u3901 2712                         u2941 1E2E  
                       u2861 1D24                         u2781 1B98                         u3485 22D8  
                       u3821 100E                         u3741 0C36                         u3661 0A82  
                       u3581 0846                         u3910 2746                         u2950 1E62  
                       u2870 1D46                         u2790 1BAC                         u3830 1020  
                       u3750 0D82                         u3670 0AB8                         u3590 0894  
                       u4367 3228                         u3911 2742                         u2951 1E5E  
                       u2871 1D42                         u2791 1BA8                         u3831 101C  
                       u3751 0D7E                         u3671 0AB4                         u3591 0890  
                       u3920 27F4                         u2960 1E90                         u2880 1D66  
                       u3840 1074                         u3760 0DE8                         u3680 0AF6  
                       u4377 2DB4                         u3921 27F0                         u2961 1E8C  
                       u2881 1D62                         u3841 1070                         u3761 0DE4  
                       u3681 0AF2                         u3930 2806                         u2890 1D78  
                       u2970 16FA                         u3850 1146                         u3770 0E30  
                       u3690 0B82                         u4387 2DC8                         u3931 2802  
                       u2891 1D74                         u2971 16F6                         u3851 1142  
                       u3771 0E2C                         u3691 0B7E                         u3940 2EF4  
                       u2980 170C                         u3860 1162                         u3780 0E40  
                       u3941 2EF0                         u4397 2DDC                         u2981 1708  
                       u3861 115E                         u3781 0E3C                         u3950 2F0A  
                       u2990 171C                         u3870 11CA                         u3790 0EDA  
                       u3951 2F06                         u2991 1718                         u3871 11C4  
                       u3791 0ED6                         u3960 2F20                         u3880 11CC  
                       u3961 2F1C                         u3970 2F36                         u3890 11E0  
                       u3971 2F32                         u3891 11DC                         u3980 1EC8  
                       u3981 1EC4                         u3990 1F0C                         u3991 1F08  
                       _WPUB 000F85            ?_Lcd_Write_String 0005                         _dbuf 0100  
                       _labs 2E18                         _atoi 26E2                         _main 2580  
                       _prec 00B5                         _temp 00AF                         pad@i 0019  
                       pad@p 0016                         fsr0h 000FEA                         fsr1h 000FE2  
                       indf0 000FEF                         fsr2h 000FDA                         fsr0l 000FE9  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 001B  
                       fsr2l 000FD9             __end_of_ADC_Init 32C0                ___fpclassifyf 2A36  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
         ??_Lcd_Write_String 0007              ___fldiv@new_exp 0022              __end_of_Lcd_Cmd 32A4  
               ___param_bank 000000                        ??_pad 0018                ___fltol@sign1 0009  
                      ?_labs 0001                        ?_atoi 0007              __end_of___fladd 16E0  
                      ?_main 0001              __end_of___fldiv 1EA4              __end_of___flneg 31FA  
            __end_of___flmul 1B0A              __end_of___flsub 3078              __end_of___fltol 2932  
               vfpfcnvrt@fmt 0049                        _PORTB 000F81                        _PORTD 000F83  
                      _TRISB 000F93                        _TRISD 000F95                        _flags 005F  
                      _fputc 2B34                        _fputs 3102              __end_of_isdigit 325E  
                      labs@a 0001                        atoi@n 000E                        pad@fp 0012  
                      atoi@s 0007                        _width 00B3                        _putch 32C0  
            __end_of_isspace 30BE                        tablat 000FF5                        status 000FD8  
            __end_of_sprintf 2F92               ?___fpclassifyf 0001             __end_of_Lcd_Init 2E18  
           __end_of_Lcd_Port 2F40              __initialization 30BE                 __end_of_labs 2E7E  
               __end_of_atoi 282C                 __end_of_main 26E2                       ??_labs 0005  
                     ??_atoi 0009                       ??_main 005D                __activetblptr 000002  
           ??_OSCILADOR_Init 0001                       ?_fputc 0002                       ?_fputs 000B  
                     _ADRESH 000FC4                       _ADRESL 000FC3                       ?_putch 0001  
                     _ANSELD 000F5E                 ??_ADC_Enable 0001                       _RCREG1 000FAE  
                     _RCSTA1 000FAB                    ??_Lcd_Cmd 0002                       _SPBRG1 000FAF  
                     _TXREG1 000FAD             __end_of___xxtofl 2580                       _TXSTA1 000FAC  
               vfprintf@cfmt 005B                       ___flge 2932                       ___fleq 2BFE  
                  ??___fladd 0009                       ___wmul 325E                    ??___fldiv 0019  
                  ??___flneg 0005                    ??___flmul 001E                    ??___flsub 0037  
                  ??___fltol 0005                       _efgtoa 0826            __end_of_PORT_Init 3330  
                     _floorf 21BA                       _memcpy 2FE2                       clear_0 30E4  
                     clear_1 30F0                       isa$std 000001                       pad@buf 0014  
                     _strcpy 3146           __end_of_ADC_Enable 3346                       fputc@c 0002  
                     fputs@c 000F                       fputs@i 0010                       fputs@s 000B  
                  ??_isdigit 0003              ___fpclassifyf@e 0009                    ?_ADC_Init 0001  
            ___fpclassifyf@u 000B              ___fpclassifyf@x 0001                 __mediumconst 0000  
                  ??_isspace 0003                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8     ADC_GetConversion@channel 0007                       putch@c 0001  
           __end_of_vfprintf 2FE2                    ??_sprintf 005D              Lcd_Set_Cursor@a 0005  
            Lcd_Set_Cursor@b 0004              Lcd_Set_Cursor@y 0007              Lcd_Set_Cursor@z 0006  
                 ___flge@ff1 002F                   ___flge@ff2 0033              ??___fpclassifyf 0005  
               ___xxtofl@arg 0012                 ___xxtofl@exp 0011                 ___xxtofl@val 0008  
                 ___fleq@ff1 0001                   ___fleq@ff2 0005                   __accesstop 0060  
    __end_of__initialization 30F8                   ___flneg@f1 0001            __end_of_Lcd_Clear 333E  
              ___rparam_used 000001                   ___fltol@f1 0001               __pcstackCOMRAM 0001  
               __pidataBANK0 3312                __end_of_fputc 2BFE                __end_of_fputs 3146  
              __end_of_putch 32D6               _Lcd_Set_Cursor 2E7E                   ??_ADC_Init 0001  
                  ?_Lcd_Init 0001                    ?_Lcd_Port 0001                      ??_fputc 0006  
                    ??_fputs 000F                      ??_putch 0001                   __pbssBANK0 00A7  
                 __pbssBANK1 0100          _ADC_StateConversion 32EC                      ?___flge 002F  
                    ?___fleq 0001                      ?___wmul 0001                      ?_efgtoa 003E  
                    ?_floorf 002A                      ?_memcpy 0001         ?_ADC_StateConversion 0001  
     __end_of_Lcd_Set_Cursor 2EE4                      ?_strcpy 0001                ??_ADC_Disable 0001  
                  ?___xxtofl 0008                      _SPBRGH1 000FB0                   ??_Lcd_Init 0004  
                    _SSP1ADD 000FC8                      _SSP1BUF 000FC9                   ??_Lcd_Port 0001  
             _Lcd_Write_Char 31FA                      _Lcd_Cmd 3284                      __Hparam 0000  
                    __Lparam 0000                      ___fladd 1220                      ___fldiv 1B0A  
                    ___flneg 31C2                      ___flmul 16E0                      ___flsub 3032  
                    ___fltol 282C                    ?_vfprintf 008C                 __psmallconst 0800  
      ??_ADC_StateConversion 0001                      __pcinit 30BE                      __ramtop 0800  
            ?_Lcd_Set_Cursor 0004                      __ptext0 2580                      __ptext1 2F40  
                    __ptext2 2F92                      __ptext3 1EA4                      __ptext4 0826  
                    __ptext5 3146                      __ptext6 2D26                      __ptext7 3102  
                    __ptext8 2B34                      __ptext9 32C0                      _isdigit 3232  
                 ??___xxtofl 000C                      _isspace 3078                      efgtoa@c 0044  
                    efgtoa@d 006B                      efgtoa@e 006F                      efgtoa@f 0040  
                    efgtoa@g 0084                      efgtoa@h 0079                      efgtoa@i 0077  
                    efgtoa@l 007D                      efgtoa@m 006D                      efgtoa@n 0082  
                    efgtoa@p 0062                      efgtoa@t 0064                      efgtoa@u 0088  
                    efgtoa@w 0071                      atoi@neg 000C                      _strTemp 00B7  
                    _sprintf 2F40       __end_of_Lcd_Write_Char 3232          __end_of_ADC_Disable 334A  
       end_of_initialization 30F8                      floorf@e 0038                      floorf@m 0034  
                    floorf@u 003A                      floorf@x 002A                      memcpy@d 0007  
                    memcpy@n 0005                      memcpy@s 0009                      fputc@fp 0004  
              __Lmediumconst 0000                      fputs@fp 000D            __end_of_vfpfcnvrt 21BA  
                 efgtoa@mode 0069                   efgtoa@sign 0081                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE             vfpfcnvrt@convarg 0050                    Lcd_Port@a 0001  
                 ??_vfprintf 005B                      strcpy@d 0007                      strcpy@s 0005  
                  _PORT_Init 3322                  ___fladd@grs 0010                ___xxtofl@sign 0010  
                  _TRISBbits 000F93                    _TRISCbits 000F94                    _TRISEbits 000F96  
        _ADC_StartConversion 333E                  ___fldiv@grs 0024                  ___fldiv@rem 001D  
            ?_Lcd_Write_Char 0001            Lcd_Write_String@a 0005            Lcd_Write_String@i 0009  
                ___flmul@grs 0023         ?_ADC_StartConversion 0001                    _Lcd_Clear 3330  
             __end_of___flge 2A36               __end_of___fleq 2CA8                  vfpfcnvrt@ap 004B  
                vfpfcnvrt@cp 0059                  vfpfcnvrt@fp 0047               __end_of___wmul 3284  
           _Lcd_Write_String 2CA8               __end_of_efgtoa 1220               __end_of_floorf 23CC  
             __end_of_memcpy 3032                   floorf@F526 00A7                   ?_PORT_Init 0001  
                _ADC_Disable 3346               __end_of_strcpy 3186          start_initialization 30BE  
                __end_of_pad 2DA0                    _Keypad4x4 00CB        __end_of___fpclassifyf 2B34  
      ??_ADC_StartConversion 0001                  vfprintf@fmt 008E                   ?_Lcd_Clear 0001  
                   ??___flge 0037                     ??___fleq 0009                     ??___wmul 0005  
                   ??_efgtoa 0045                  __pdataBANK0 00CB                     ??_floorf 002E  
                   ??_memcpy 0007              Lcd_Write_Char@a 0004              Lcd_Write_Char@y 0003  
                   ??_strcpy 0005                    ___fladd@a 0005                    ___fladd@b 0001  
                  ___fldiv@a 0015                    ___fldiv@b 0011                    ___flmul@a 001A  
                  ___flmul@b 0016                  __pbssCOMRAM 005F                    ___flsub@a 0033  
                  ___flsub@b 002F                __pcstackBANK0 0060                     ?_Lcd_Cmd 0001  
                _efgtoa$1936 0066             ??_Lcd_Set_Cursor 0005            _ADC_SelectChannel 32D6  
                   ?___fladd 0001                     ?___fldiv 0011                     ?___flneg 0001  
                   ?___flmul 0016                     ?___flsub 002F                     ?___fltol 0001  
         ?_ADC_SelectChannel 0001                  ??_PORT_Init 0001                  __smallconst 0800  
                   _BAUDCON1 000FB8                     ?_isdigit 0001          ??_ADC_SelectChannel 0001  
                   _ADC_Init 32A4                     ?_isspace 0001                     ?_sprintf 0092  
             ___wmul@product 0005                     _LATEbits 000F8D                     _PIE1bits 000F9D  
  __end_of_ADC_SelectChannel 32EC  __end_of_ADC_StateConversion 3300                     Lcd_Cmd@a 0003  
                   _PIR1bits 000F9E                  ??_Lcd_Clear 0004                     _SSP1CON1 000FC6  
                   _SSP1STAT 000FC7                    _vfpfcnvrt 1EA4                   _ADCON0bits 000FC2  
                 _ADCON1bits 000FC1                   _ADCON2bits 000FC0            ___wmul@multiplier 0001  
   ADC_SelectChannel@channel 0002             ??_Lcd_Write_Char 0002                 _isspace$2014 0005  
                   _Lcd_Init 2DA0                     _Lcd_Port 2EE4                   vfpfcnvrt@c 0058  
                _INTCON2bits 000FF1                    copy_data0 30D2                   _ADC_Enable 3342  
   __end_of_Lcd_Write_String 2D26               _OSCILADOR_Init 3300                     __Hrparam 0000  
                  memcpy@tmp 000B                   vfprintf@ap 0090                     __Lrparam 0000  
                 vfprintf@fp 008C            _ADC_GetConversion 3186           ?_ADC_GetConversion 0003  
                 ?_vfpfcnvrt 0047                   _ANSELAbits 000F5B                   _ANSELBbits 000F5C  
                 _ANSELCbits 000F5D                   _ANSELEbits 000F5F           ___fpclassifyf@F465 00AB  
        ??_ADC_GetConversion 0005                   sprintf@fmt 0094                 ?_ADC_Disable 0001  
                   ___xxtofl 23CC                     __ptext10 2FE2                     __ptext11 2E18  
                   __ptext20 2BFE                     __ptext12 21BA                     __ptext21 1B0A  
                   __ptext13 2A36                     __ptext30 31FA                     __ptext22 26E2  
                   __ptext14 282C                     __ptext31 2E7E                     __ptext23 3078  
                   __ptext15 3032                     __ptext40 32D6                     __ptext32 2DA0  
                   __ptext24 3232                     __ptext16 1220                     __ptext41 3342  
                   __ptext33 3330                     __ptext25 325E                     __ptext17 31C2  
                   __ptext42 3346                     __ptext34 3284                     __ptext26 23CC  
                   __ptext18 16E0                     __ptext35 2EE4                     __ptext27 3322  
                   __ptext19 2932                     __ptext36 32A4                     __ptext28 3300  
                   __ptext37 3186                     __ptext29 2CA8                     __ptext38 32EC  
                   __ptext39 333E                 _SSP1CON1bits 000FC6                 _SSP1CON2bits 000FC5  
                 strcpy@dest 0001       __end_of_OSCILADOR_Init 3312    __end_of_ADC_GetConversion 31C2  
                   efgtoa@fp 003E                     efgtoa@ne 0060                     efgtoa@pp 0068  
                   efgtoa@ou 0073                     isa$xinst 000000                     _vfprintf 2F92  
               _SSP1STATbits 000FC7                     memcpy@d1 0001                     memcpy@s1 0003  
                   isdigit@c 0001           Lcd_Write_Char@temp 0002                    sprintf@ap 009A  
                ?_ADC_Enable 0001              ?_OSCILADOR_Init 0001  __end_of_ADC_StartConversion 3342  
                   isspace@c 0001                    strcpy@src 0003                   _RCSTA1bits 000FAB  
                 _OSCCONbits 000FD3                  efgtoa@nmode 006A                  ??_vfpfcnvrt 004D  
         Lcd_Set_Cursor@temp 0008                     sprintf@f 009C                     sprintf@s 0092  
                _SSPCON2bits 000FC5                ___fladd@signs 000D                 ___fladd@aexp 000E  
               ___fladd@bexp 000F  
