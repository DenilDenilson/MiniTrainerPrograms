

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 20 14:52:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Generated 09/02/2023 GMT
    69                           ; 
    70                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F45K50 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   000000                     
   103                           	psect	idataBANK0
   104   0021E0                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _Keypad4x4
   108   0021E0  31                 	db	49
   109   0021E1  32                 	db	50
   110   0021E2  33                 	db	51
   111   0021E3  41                 	db	65
   112   0021E4  34                 	db	52
   113   0021E5  35                 	db	53
   114   0021E6  36                 	db	54
   115   0021E7  42                 	db	66
   116   0021E8  37                 	db	55
   117   0021E9  38                 	db	56
   118   0021EA  39                 	db	57
   119   0021EB  43                 	db	67
   120   0021EC  2A                 	db	42
   121   0021ED  30                 	db	48
   122   0021EE  23                 	db	35
   123   0021EF  44                 	db	68
   124   000000                     _TMR0	set	4054
   125   000000                     _RCREG1	set	4014
   126   000000                     _TXREG1	set	4013
   127   000000                     _SPBRG1	set	4015
   128   000000                     _BAUDCON1	set	4024
   129   000000                     _ANSELCbits	set	3933
   130   000000                     _TRISCbits	set	3988
   131   000000                     _TRISD	set	3989
   132   000000                     _SSP1CON2bits	set	4037
   133   000000                     _SSP1CON1bits	set	4038
   134   000000                     _SSP1STATbits	set	4039
   135   000000                     _ADRESL	set	4035
   136   000000                     _ADRESH	set	4036
   137   000000                     _ADCON0bits	set	4034
   138   000000                     _ADCON2bits	set	4032
   139   000000                     _ADCON1bits	set	4033
   140   000000                     _RCONbits	set	4048
   141   000000                     _INTCONbits	set	4082
   142   000000                     _RCSTA1bits	set	4011
   143   000000                     _TXSTA1bits	set	4012
   144   000000                     _SSP1CON1	set	4038
   145   000000                     _SSP1STAT	set	4039
   146   000000                     _TRISB	set	3987
   147   000000                     _SSPCON2bits	set	4037
   148   000000                     _ANSELBbits	set	3932
   149   000000                     _ANSELD	set	3934
   150   000000                     _PORTB	set	3969
   151   000000                     _LATB	set	3978
   152   000000                     _TRISBbits	set	3987
   153   000000                     _INTCON2bits	set	4081
   154   000000                     _OSCCONbits	set	4051
   155   000000                     _T0CONbits	set	4053
   156   000000                     _SSP1BUF	set	4041
   157   000000                     _SSP1ADD	set	4040
   158   000000                     _LATD	set	3980
   159   000000                     _PORTD	set	3971
   160   000000                     _WPUB	set	3973
   161   000000                     _PIE1bits	set	3997
   162   000000                     _PIR1bits	set	3998
   163   000000                     _RCSTA1	set	4011
   164   000000                     _TXSTA1	set	4012
   165   000000                     _SPBRGH1	set	4016
   166                           
   167                           	psect	smallconst
   168   000800                     __psmallconst:
   169                           	callstack 0
   170   000800  00                 	db	0
   171   000801                     STR_1:
   172   000801  54                 	db	84	;'T'
   173   000802  69                 	db	105	;'i'
   174   000803  6D                 	db	109	;'m'
   175   000804  65                 	db	101	;'e'
   176   000805  72                 	db	114	;'r'
   177   000806  3A                 	db	58	;':'
   178   000807  20                 	db	32
   179   000808  20                 	db	32
   180   000809  25                 	db	37
   181   00080A  30                 	db	48	;'0'
   182   00080B  32                 	db	50	;'2'
   183   00080C  75                 	db	117	;'u'
   184   00080D  3A                 	db	58	;':'
   185   00080E  25                 	db	37
   186   00080F  30                 	db	48	;'0'
   187   000810  32                 	db	50	;'2'
   188   000811  75                 	db	117	;'u'
   189   000812  3A                 	db	58	;':'
   190   000813  25                 	db	37
   191   000814  30                 	db	48	;'0'
   192   000815  32                 	db	50	;'2'
   193   000816  75                 	db	117	;'u'
   194   000817  00                 	db	0
   195   000818  00                 	db	0	; dummy byte at the end
   196   000000                     
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   001E48                     __pcinit:
   201                           	callstack 0
   202   001E48                     start_initialization:
   203                           	callstack 0
   204   001E48                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK0 (16 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209   001E48  0EE0               	movlw	low __pidataBANK0
   210   001E4A  6EF6               	movwf	tblptrl,c
   211   001E4C  0E21               	movlw	high __pidataBANK0
   212   001E4E  6EF7               	movwf	tblptrh,c
   213   001E50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214   001E52  6EF8               	movwf	tblptru,c
   215   001E54  EE00  F0C9         	lfsr	0,__pdataBANK0
   216   001E58  EE10 F010          	lfsr	1,16
   217   001E5C                     copy_data0:
   218   001E5C  0009               	tblrd		*+
   219   001E5E  CFF5 FFEE          	movff	tablat,postinc0
   220   001E62  50E5               	movf	postdec1,w,c
   221   001E64  50E1               	movf	fsr1l,w,c
   222   001E66  E1FA               	bnz	copy_data0
   223                           
   224                           ; Clear objects allocated to BANK1 (55 bytes)
   225   001E68  EE01  F000         	lfsr	0,__pbssBANK1
   226   001E6C  0E37               	movlw	55
   227   001E6E                     clear_0:
   228   001E6E  6AEE               	clrf	postinc0,c
   229   001E70  06E8               	decf	wreg,f,c
   230   001E72  E1FD               	bnz	clear_0
   231                           
   232                           ; Clear objects allocated to BANK0 (5 bytes)
   233   001E74  0100               	movlb	0
   234   001E76  6BDD               	clrf	(__pbssBANK0+4)& (0+255),b
   235   001E78  6BDC               	clrf	(__pbssBANK0+3)& (0+255),b
   236   001E7A  6BDB               	clrf	(__pbssBANK0+2)& (0+255),b
   237   001E7C  6BDA               	clrf	(__pbssBANK0+1)& (0+255),b
   238   001E7E  6BD9               	clrf	__pbssBANK0& (0+255),b
   239                           
   240                           ; Clear objects allocated to COMRAM (1 bytes)
   241   001E80  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   242   001E82                     end_of_initialization:
   243                           	callstack 0
   244   001E82                     __end_of__initialization:
   245                           	callstack 0
   246   001E82  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247   001E84  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248   001E86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249   001E88  6EF8               	movwf	tblptru,c
   250   001E8A  0100               	movlb	0
   251   001E8C  EF59  F00E         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254   00005B                     __pbssCOMRAM:
   255                           	callstack 0
   256   00005B                     _col:
   257                           	callstack 0
   258   00005B                     	ds	1
   259                           
   260                           	psect	bssBANK0
   261   0000D9                     __pbssBANK0:
   262                           	callstack 0
   263   0000D9                     _width:
   264                           	callstack 0
   265   0000D9                     	ds	2
   266   0000DB                     _prec:
   267                           	callstack 0
   268   0000DB                     	ds	2
   269   0000DD                     _flags:
   270                           	callstack 0
   271   0000DD                     	ds	1
   272                           
   273                           	psect	dataBANK0
   274   0000C9                     __pdataBANK0:
   275                           	callstack 0
   276   0000C9                     _Keypad4x4:
   277                           	callstack 0
   278   0000C9                     	ds	16
   279                           
   280                           	psect	bssBANK1
   281   000100                     __pbssBANK1:
   282                           	callstack 0
   283   000100                     _seconds:
   284                           	callstack 0
   285   000100                     	ds	1
   286   000101                     _minutes:
   287                           	callstack 0
   288   000101                     	ds	1
   289   000102                     _hours:
   290                           	callstack 0
   291   000102                     	ds	1
   292   000103                     _dbuf:
   293                           	callstack 0
   294   000103                     	ds	32
   295   000123                     _strReloj:
   296                           	callstack 0
   297   000123                     	ds	20
   298                           
   299                           	psect	cstackBANK1
   300   000137                     __pcstackBANK1:
   301                           	callstack 0
   302   000137                     vfpfcnvrt@convarg:
   303                           	callstack 0
   304                           
   305                           ; 8 bytes @ 0x0
   306   000137                     	ds	8
   307   00013F                     vfpfcnvrt@done:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x8
   311   00013F                     	ds	2
   312   000141                     vfpfcnvrt@cp:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xA
   316   000141                     	ds	2
   317   000143                     ?_vfprintf:
   318                           	callstack 0
   319   000143                     vfprintf@fp:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0xC
   323   000143                     	ds	2
   324   000145                     vfprintf@fmt:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0xE
   328   000145                     	ds	2
   329   000147                     vfprintf@ap:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x10
   333   000147                     	ds	2
   334   000149                     ?_sprintf:
   335                           	callstack 0
   336   000149                     sprintf@s:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x12
   340   000149                     	ds	2
   341   00014B                     sprintf@fmt:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x14
   345   00014B                     	ds	8
   346   000153                     sprintf@ap:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x1C
   350   000153                     	ds	2
   351   000155                     sprintf@f:
   352                           	callstack 0
   353                           
   354                           ; 11 bytes @ 0x1E
   355   000155                     	ds	11
   356                           
   357                           	psect	cstackBANK0
   358   000060                     __pcstackBANK0:
   359                           	callstack 0
   360   000060                     ?i2_sprintf:
   361                           	callstack 0
   362   000060                     i2sprintf@s:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366   000060                     	ds	2
   367   000062                     i2sprintf@fmt:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371   000062                     	ds	8
   372   00006A                     i2sprintf@ap:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xA
   376   00006A                     	ds	2
   377   00006C                     i2sprintf@f:
   378                           	callstack 0
   379                           
   380                           ; 11 bytes @ 0xC
   381   00006C                     	ds	11
   382   000077                     ??_RutinaServicioInterrupt:
   383                           
   384                           ; 1 bytes @ 0x17
   385   000077                     	ds	10
   386   000081                     ?_isdigit:
   387                           	callstack 0
   388   000081                     ?_isspace:
   389                           	callstack 0
   390   000081                     ?___wmul:
   391                           	callstack 0
   392   000081                     ?___lodiv:
   393                           	callstack 0
   394   000081                     ?___lomod:
   395                           	callstack 0
   396   000081                     Lcd_Port@a:
   397                           	callstack 0
   398   000081                     putch@c:
   399                           	callstack 0
   400   000081                     ___wmul@multiplier:
   401                           	callstack 0
   402   000081                     isdigit@c:
   403                           	callstack 0
   404   000081                     isspace@c:
   405                           	callstack 0
   406   000081                     ___lodiv@dividend:
   407                           	callstack 0
   408   000081                     ___lomod@dividend:
   409                           	callstack 0
   410                           
   411                           ; 8 bytes @ 0x21
   412   000081                     	ds	1
   413   000082                     ??_Lcd_Cmd:
   414   000082                     Lcd_Write_Char@temp:
   415                           	callstack 0
   416   000082                     fputc@c:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x22
   420   000082                     	ds	1
   421   000083                     ??_isdigit:
   422   000083                     ??_isspace:
   423   000083                     Lcd_Cmd@a:
   424                           	callstack 0
   425   000083                     Lcd_Write_Char@y:
   426                           	callstack 0
   427   000083                     ___wmul@multiplicand:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x23
   431   000083                     	ds	1
   432   000084                     ??_Lcd_Init:
   433   000084                     Lcd_Set_Cursor@b:
   434                           	callstack 0
   435   000084                     Lcd_Write_Char@a:
   436                           	callstack 0
   437   000084                     fputc@fp:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x24
   441   000084                     	ds	1
   442   000085                     Lcd_Set_Cursor@a:
   443                           	callstack 0
   444   000085                     _isspace$2097:
   445                           	callstack 0
   446   000085                     Lcd_Write_String@a:
   447                           	callstack 0
   448   000085                     ___wmul@product:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x25
   452   000085                     	ds	1
   453   000086                     ??_fputc:
   454   000086                     Lcd_Set_Cursor@z:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x26
   458   000086                     	ds	1
   459   000087                     ?_atoi:
   460                           	callstack 0
   461   000087                     Lcd_Set_Cursor@y:
   462                           	callstack 0
   463   000087                     Lcd_Write_String@i:
   464                           	callstack 0
   465   000087                     atoi@s:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x27
   469   000087                     	ds	1
   470   000088                     Lcd_Set_Cursor@temp:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x28
   474   000088                     	ds	1
   475   000089                     ??_atoi:
   476   000089                     ___lodiv@divisor:
   477                           	callstack 0
   478   000089                     ___lomod@divisor:
   479                           	callstack 0
   480                           
   481                           ; 8 bytes @ 0x29
   482   000089                     	ds	2
   483   00008B                     fputs@s:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x2B
   487   00008B                     	ds	1
   488   00008C                     atoi@neg:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x2C
   492   00008C                     	ds	1
   493   00008D                     fputs@fp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x2D
   497   00008D                     	ds	1
   498   00008E                     atoi@n:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x2E
   502   00008E                     	ds	1
   503   00008F                     fputs@c:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x2F
   507   00008F                     	ds	1
   508   000090                     fputs@i:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x30
   512   000090                     	ds	1
   513   000091                     ___lomod@counter:
   514                           	callstack 0
   515   000091                     ___lodiv@quotient:
   516                           	callstack 0
   517                           
   518                           ; 8 bytes @ 0x31
   519   000091                     	ds	1
   520   000092                     pad@fp:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x32
   524   000092                     	ds	2
   525   000094                     pad@buf:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x34
   529   000094                     	ds	2
   530   000096                     pad@p:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x36
   534   000096                     	ds	2
   535   000098                     ??_pad:
   536                           
   537                           ; 1 bytes @ 0x38
   538   000098                     	ds	1
   539   000099                     ___lodiv@counter:
   540                           	callstack 0
   541   000099                     pad@i:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x39
   545   000099                     	ds	2
   546   00009B                     pad@w:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x3B
   550   00009B                     	ds	2
   551   00009D                     utoa@fp:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x3D
   555   00009D                     	ds	2
   556   00009F                     utoa@d:
   557                           	callstack 0
   558                           
   559                           ; 8 bytes @ 0x3F
   560   00009F                     	ds	8
   561   0000A7                     ??_utoa:
   562                           
   563                           ; 1 bytes @ 0x47
   564   0000A7                     	ds	8
   565   0000AF                     utoa@p:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x4F
   569   0000AF                     	ds	2
   570   0000B1                     utoa@w:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x51
   574   0000B1                     	ds	2
   575   0000B3                     utoa@n:
   576                           	callstack 0
   577                           
   578                           ; 8 bytes @ 0x53
   579   0000B3                     	ds	8
   580   0000BB                     utoa@i:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x5B
   584   0000BB                     	ds	2
   585   0000BD                     vfpfcnvrt@fp:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x5D
   589   0000BD                     	ds	2
   590   0000BF                     vfpfcnvrt@fmt:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x5F
   594   0000BF                     	ds	2
   595   0000C1                     vfpfcnvrt@ap:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x61
   599   0000C1                     	ds	2
   600   0000C3                     ??_vfpfcnvrt:
   601                           
   602                           ; 1 bytes @ 0x63
   603   0000C3                     	ds	4
   604   0000C7                     vfprintf@cfmt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x67
   608   0000C7                     	ds	2
   609   0000C9                     
   610                           ; 1 bytes @ 0x69
   611                           
   612                           	psect	cstackCOMRAM
   613   000001                     __pcstackCOMRAM:
   614                           	callstack 0
   615   000001                     ?i2___wmul:
   616                           	callstack 0
   617   000001                     ?i2___lodiv:
   618                           	callstack 0
   619   000001                     ?i2___lomod:
   620                           	callstack 0
   621   000001                     i2Lcd_Port@a:
   622                           	callstack 0
   623   000001                     i2putch@c:
   624                           	callstack 0
   625   000001                     i2___wmul@multiplier:
   626                           	callstack 0
   627   000001                     i2isdigit@c:
   628                           	callstack 0
   629   000001                     i2isspace@c:
   630                           	callstack 0
   631   000001                     i2___lodiv@dividend:
   632                           	callstack 0
   633   000001                     i2___lomod@dividend:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0x0
   637   000001                     	ds	1
   638   000002                     ??i2_Lcd_Cmd:
   639   000002                     i2Lcd_Write_Char@temp:
   640                           	callstack 0
   641   000002                     i2fputc@c:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x1
   645   000002                     	ds	1
   646   000003                     ??i2_isspace:
   647   000003                     i2Lcd_Cmd@a:
   648                           	callstack 0
   649   000003                     i2Lcd_Write_Char@y:
   650                           	callstack 0
   651   000003                     i2___wmul@multiplicand:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x2
   655   000003                     	ds	1
   656   000004                     i2Lcd_Set_Cursor@b:
   657                           	callstack 0
   658   000004                     i2Lcd_Write_Char@a:
   659                           	callstack 0
   660   000004                     i2fputc@fp:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x3
   664   000004                     	ds	1
   665   000005                     i2Lcd_Set_Cursor@a:
   666                           	callstack 0
   667   000005                     i2Lcd_Write_String@a:
   668                           	callstack 0
   669   000005                     i2___wmul@product:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x4
   673   000005                     	ds	1
   674   000006                     ??i2_fputc:
   675   000006                     i2Lcd_Set_Cursor@z:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x5
   679   000006                     	ds	1
   680   000007                     ?i2_atoi:
   681                           	callstack 0
   682   000007                     i2Lcd_Set_Cursor@y:
   683                           	callstack 0
   684   000007                     i2Lcd_Write_String@i:
   685                           	callstack 0
   686   000007                     i2atoi@s:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x6
   690   000007                     	ds	1
   691   000008                     i2Lcd_Set_Cursor@temp:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x7
   695   000008                     	ds	1
   696   000009                     ??i2_atoi:
   697   000009                     i2___lodiv@divisor:
   698                           	callstack 0
   699   000009                     i2___lomod@divisor:
   700                           	callstack 0
   701                           
   702                           ; 8 bytes @ 0x8
   703   000009                     	ds	2
   704   00000B                     i2fputs@s:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0xA
   708   00000B                     	ds	1
   709   00000C                     i2atoi@neg:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0xB
   713   00000C                     	ds	1
   714   00000D                     i2fputs@fp:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xC
   718   00000D                     	ds	1
   719   00000E                     i2atoi@n:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xD
   723   00000E                     	ds	1
   724   00000F                     i2fputs@c:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0xE
   728   00000F                     	ds	1
   729   000010                     i2fputs@i:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0xF
   733   000010                     	ds	1
   734   000011                     i2___lomod@counter:
   735                           	callstack 0
   736   000011                     i2___lodiv@quotient:
   737                           	callstack 0
   738                           
   739                           ; 8 bytes @ 0x10
   740   000011                     	ds	1
   741   000012                     i2pad@fp:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x11
   745   000012                     	ds	2
   746   000014                     i2pad@buf:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x13
   750   000014                     	ds	2
   751   000016                     i2pad@p:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755   000016                     	ds	2
   756   000018                     ??i2_pad:
   757                           
   758                           ; 1 bytes @ 0x17
   759   000018                     	ds	1
   760   000019                     i2___lodiv@counter:
   761                           	callstack 0
   762   000019                     i2pad@i:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x18
   766   000019                     	ds	2
   767   00001B                     i2pad@w:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x1A
   771   00001B                     	ds	2
   772   00001D                     i2utoa@fp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x1C
   776   00001D                     	ds	2
   777   00001F                     i2utoa@d:
   778                           	callstack 0
   779                           
   780                           ; 8 bytes @ 0x1E
   781   00001F                     	ds	8
   782   000027                     ??i2_utoa:
   783                           
   784                           ; 1 bytes @ 0x26
   785   000027                     	ds	8
   786   00002F                     i2utoa@p:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x2E
   790   00002F                     	ds	2
   791   000031                     i2utoa@w:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x30
   795   000031                     	ds	2
   796   000033                     i2utoa@n:
   797                           	callstack 0
   798                           
   799                           ; 8 bytes @ 0x32
   800   000033                     	ds	8
   801   00003B                     i2utoa@i:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x3A
   805   00003B                     	ds	2
   806   00003D                     i2vfpfcnvrt@fp:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x3C
   810   00003D                     	ds	2
   811   00003F                     i2vfpfcnvrt@fmt:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x3E
   815   00003F                     	ds	2
   816   000041                     i2vfpfcnvrt@ap:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x40
   820   000041                     	ds	2
   821   000043                     ??i2_vfpfcnvrt:
   822                           
   823                           ; 1 bytes @ 0x42
   824   000043                     	ds	4
   825   000047                     i2vfpfcnvrt@convarg:
   826                           	callstack 0
   827                           
   828                           ; 8 bytes @ 0x46
   829   000047                     	ds	8
   830   00004F                     i2vfpfcnvrt@done:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x4E
   834   00004F                     	ds	2
   835   000051                     i2vfpfcnvrt@cp:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x50
   839   000051                     	ds	2
   840   000053                     ?i2_vfprintf:
   841                           	callstack 0
   842   000053                     i2vfprintf@fp:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x52
   846   000053                     	ds	2
   847   000055                     i2vfprintf@fmt:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x54
   851   000055                     	ds	2
   852   000057                     i2vfprintf@ap:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x56
   856   000057                     	ds	2
   857   000059                     i2vfprintf@cfmt:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x58
   861   000059                     	ds	2
   862   00005B                     
   863                           ; 1 bytes @ 0x5A
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 17 in file "Gpio_Lcd_Buzzer.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  2   48[None  ] int 
   876 ;; Registers used:
   877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   883 ;;      Params:         0       0       0       0       0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels required when called: 17
   889 ;; This function calls:
   890 ;;		_Hardware_Init
   891 ;;		_Lcd_Clear
   892 ;;		_Lcd_Set_Cursor
   893 ;;		_Lcd_Write_String
   894 ;;		_sprintf
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text0
   901   001CB2                     __ptext0:
   902                           	callstack 0
   903   001CB2                     _main:
   904                           	callstack 14
   905   001CB2                     
   906                           ;Gpio_Lcd_Buzzer.c: 19:     Hardware_Init();
   907   001CB2  ECC7  F010         	call	_Hardware_Init	;wreg free
   908                           
   909                           ;Gpio_Lcd_Buzzer.c: 21:     Lcd_Clear();
   910   001CB6  ECF8  F010         	call	_Lcd_Clear	;wreg free
   911                           
   912                           ;Gpio_Lcd_Buzzer.c: 22:     Lcd_Set_Cursor(1, 1);
   913   001CBA  0E01               	movlw	1
   914   001CBC  0100               	movlb	0	; () banked
   915   001CBE  6F84               	movwf	Lcd_Set_Cursor@b& (0+255),b
   916   001CC0  0E01               	movlw	1
   917   001CC2  EC91  F00D         	call	_Lcd_Set_Cursor
   918   001CC6                     
   919                           ;Gpio_Lcd_Buzzer.c: 23:     sprintf(strReloj, "Timer:  %02u:%02u:%02u", hours, minutes, 
      +                          seconds);
   920   001CC6  0E23               	movlw	low _strReloj
   921   001CC8  0101               	movlb	1	; () banked
   922   001CCA  6F49               	movwf	sprintf@s& (0+255),b
   923   001CCC  0E01               	movlw	high _strReloj
   924   001CCE  6F4A               	movwf	(sprintf@s+1)& (0+255),b
   925   001CD0  0E01               	movlw	low STR_1
   926   001CD2  6F4B               	movwf	sprintf@fmt& (0+255),b
   927   001CD4  0E08               	movlw	high STR_1
   928   001CD6  6F4C               	movwf	(sprintf@fmt+1)& (0+255),b
   929   001CD8  C102  F14D         	movff	_hours,?_sprintf+4
   930   001CDC  6B4E               	clrf	(?_sprintf+5)& (0+255),b
   931   001CDE  C101  F14F         	movff	_minutes,?_sprintf+6
   932   001CE2  6B50               	clrf	(?_sprintf+7)& (0+255),b
   933   001CE4  C100  F151         	movff	_seconds,?_sprintf+8
   934   001CE8  6B52               	clrf	(?_sprintf+9)& (0+255),b
   935   001CEA  EC82  F00E         	call	_sprintf	;wreg free
   936   001CEE                     
   937                           ;Gpio_Lcd_Buzzer.c: 25:     Lcd_Write_String(strReloj);
   938   001CEE  0E23               	movlw	low _strReloj
   939   001CF0  0100               	movlb	0	; () banked
   940   001CF2  6F85               	movwf	Lcd_Write_String@a& (0+255),b
   941   001CF4  0E01               	movlw	high _strReloj
   942   001CF6  6F86               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   943   001CF8  EC90  F00F         	call	_Lcd_Write_String	;wreg free
   944   001CFC                     l49:
   945   001CFC  EF7E  F00E         	goto	l49
   946   001D00  EF83  F000         	goto	start
   947   001D04                     __end_of_main:
   948                           	callstack 0
   949                           
   950 ;; *************** function _sprintf *****************
   951 ;; Defined at:
   952 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  s               2   18[BANK1 ] PTR unsigned char 
   955 ;;		 -> strReloj(20), 
   956 ;;  fmt             2   20[BANK1 ] PTR const unsigned char 
   957 ;;		 -> STR_2(23), STR_1(23), 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  f              11   30[BANK1 ] struct _IO_FILE
   960 ;;  ap              2   28[BANK1 ] PTR void [1]
   961 ;;		 -> ?_sprintf(2), 
   962 ;;  ret             2    0        int 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2   18[BANK1 ] int 
   965 ;; Registers used:
   966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         0       0      10       0       0       0       0       0       0
   973 ;;      Locals:         0       0      13       0       0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0
   975 ;;      Totals:         0       0      23       0       0       0       0       0       0
   976 ;;Total ram usage:       23 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 16
   979 ;; This function calls:
   980 ;;		_vfprintf
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text1
   987   001D04                     __ptext1:
   988                           	callstack 0
   989   001D04                     _sprintf:
   990                           	callstack 14
   991   001D04  0E4D               	movlw	low (?_sprintf+4)
   992   001D06  0101               	movlb	1	; () banked
   993   001D08  6F53               	movwf	sprintf@ap& (0+255),b
   994   001D0A  0E01               	movlw	high (?_sprintf+4)
   995   001D0C  6F54               	movwf	(sprintf@ap+1)& (0+255),b
   996   001D0E  C149  F155         	movff	sprintf@s,sprintf@f
   997   001D12  C14A  F156         	movff	sprintf@s+1,sprintf@f+1
   998   001D16                     
   999                           ; BSR set to: 1
  1000   001D16  0E00               	movlw	0
  1001   001D18  6F59               	movwf	(sprintf@f+4)& (0+255),b
  1002   001D1A  0E00               	movlw	0
  1003   001D1C  6F58               	movwf	(sprintf@f+3)& (0+255),b
  1004   001D1E                     
  1005                           ; BSR set to: 1
  1006   001D1E  0E00               	movlw	0
  1007   001D20  6F5F               	movwf	(sprintf@f+10)& (0+255),b
  1008   001D22  0E00               	movlw	0
  1009   001D24  6F5E               	movwf	(sprintf@f+9)& (0+255),b
  1010   001D26                     
  1011                           ; BSR set to: 1
  1012   001D26  0E55               	movlw	low sprintf@f
  1013   001D28  6F43               	movwf	vfprintf@fp& (0+255),b
  1014   001D2A  0E01               	movlw	high sprintf@f
  1015   001D2C  6F44               	movwf	(vfprintf@fp+1)& (0+255),b
  1016   001D2E  C14B  F145         	movff	sprintf@fmt,vfprintf@fmt
  1017   001D32  C14C  F146         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1018   001D36  0E53               	movlw	low sprintf@ap
  1019   001D38  6F47               	movwf	vfprintf@ap& (0+255),b
  1020   001D3A  0E01               	movlw	high sprintf@ap
  1021   001D3C  6F48               	movwf	(vfprintf@ap+1)& (0+255),b
  1022   001D3E  ECAB  F00E         	call	_vfprintf	;wreg free
  1023   001D42  0101               	movlb	1	; () banked
  1024   001D44  5158               	movf	(sprintf@f+3)& (0+255),w,b
  1025   001D46  2549               	addwf	sprintf@s& (0+255),w,b
  1026   001D48  6ED9               	movwf	fsr2l,c
  1027   001D4A  5159               	movf	(sprintf@f+4)& (0+255),w,b
  1028   001D4C  214A               	addwfc	(sprintf@s+1)& (0+255),w,b
  1029   001D4E  6EDA               	movwf	fsr2h,c
  1030   001D50  0E00               	movlw	0
  1031   001D52  6EDF               	movwf	indf2,c
  1032   001D54                     
  1033                           ; BSR set to: 1
  1034   001D54  0012               	return		;funcret
  1035   001D56                     __end_of_sprintf:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function _vfprintf *****************
  1039 ;; Defined at:
  1040 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  fp              2   12[BANK1 ] PTR struct _IO_FILE
  1043 ;;		 -> sprintf@f(11), 
  1044 ;;  fmt             2   14[BANK1 ] PTR const unsigned char 
  1045 ;;		 -> STR_2(23), STR_1(23), 
  1046 ;;  ap              2   16[BANK1 ] PTR PTR void 
  1047 ;;		 -> sprintf@ap(2), 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  cfmt            2  103[BANK0 ] PTR unsigned char 
  1050 ;;		 -> STR_2(23), STR_1(23), 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2   12[BANK1 ] int 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         0       0       6       0       0       0       0       0       0
  1061 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1063 ;;      Totals:         0       2       6       0       0       0       0       0       0
  1064 ;;Total ram usage:        8 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 15
  1067 ;; This function calls:
  1068 ;;		_vfpfcnvrt
  1069 ;; This function is called by:
  1070 ;;		_sprintf
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text2
  1075   001D56                     __ptext2:
  1076                           	callstack 0
  1077   001D56                     _vfprintf:
  1078                           	callstack 14
  1079   001D56                     
  1080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1081   001D56  C145  F0C7         	movff	vfprintf@fmt,vfprintf@cfmt
  1082   001D5A  C146  F0C8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1083                           
  1084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1085   001D5E  EFC0  F00E         	goto	l3760
  1086   001D62                     l3758:
  1087                           
  1088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1089   001D62  C143  F0BD         	movff	vfprintf@fp,vfpfcnvrt@fp
  1090   001D66  C144  F0BE         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1091   001D6A  0EC7               	movlw	low vfprintf@cfmt
  1092   001D6C  0100               	movlb	0	; () banked
  1093   001D6E  6FBF               	movwf	vfpfcnvrt@fmt& (0+255),b
  1094   001D70  0E00               	movlw	high vfprintf@cfmt
  1095   001D72  6FC0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1096   001D74  C147  F0C1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1097   001D78  C148  F0C2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1098   001D7C  EC0D  F004         	call	_vfpfcnvrt	;wreg free
  1099   001D80                     l3760:
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1102   001D80  C0C7  FFF6         	movff	vfprintf@cfmt,tblptrl
  1103   001D84  C0C8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1104   001D88                     	if	0	;tblptru may be non-zero
  1105   001D88                     	endif
  1106   001D88                     	if	0	;tblptru may be non-zero
  1107   001D88                     	endif
  1108   001D88  0008               	tblrd		*
  1109   001D8A  50F5               	movf	tablat,w,c
  1110   001D8C  0900               	iorlw	0
  1111   001D8E  A4D8               	btfss	status,2,c
  1112   001D90  EFCC  F00E         	goto	u2781
  1113   001D94  EFCE  F00E         	goto	u2780
  1114   001D98                     u2781:
  1115   001D98  EFB1  F00E         	goto	l3758
  1116   001D9C                     u2780:
  1117   001D9C                     
  1118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1119   001D9C  0E00               	movlw	0
  1120   001D9E  0101               	movlb	1	; () banked
  1121   001DA0  6F44               	movwf	(?_vfprintf+1)& (0+255),b
  1122   001DA2  0E00               	movlw	0
  1123   001DA4  6F43               	movwf	?_vfprintf& (0+255),b
  1124   001DA6                     
  1125                           ; BSR set to: 1
  1126   001DA6  0012               	return		;funcret
  1127   001DA8                     __end_of_vfprintf:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _vfpfcnvrt *****************
  1131 ;; Defined at:
  1132 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  fp              2   93[BANK0 ] PTR struct _IO_FILE
  1135 ;;		 -> sprintf@f(11), 
  1136 ;;  fmt             2   95[BANK0 ] PTR PTR unsigned char 
  1137 ;;		 -> vfprintf@cfmt(2), 
  1138 ;;  ap              2   97[BANK0 ] PTR PTR void 
  1139 ;;		 -> sprintf@ap(2), 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  convarg         8    0[BANK1 ] struct .
  1142 ;;  cp              2   10[BANK1 ] PTR unsigned char 
  1143 ;;		 -> STR_2(23), STR_1(23), 
  1144 ;;  done            2    8[BANK1 ] int 
  1145 ;;  i               2    0        int 
  1146 ;;  c               1    0        unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         0       6       0       0       0       0       0       0       0
  1157 ;;      Locals:         0       0      12       0       0       0       0       0       0
  1158 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1159 ;;      Totals:         0      10      12       0       0       0       0       0       0
  1160 ;;Total ram usage:       22 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 14
  1163 ;; This function calls:
  1164 ;;		_atoi
  1165 ;;		_fputc
  1166 ;;		_isdigit
  1167 ;;		_utoa
  1168 ;; This function is called by:
  1169 ;;		_vfprintf
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text3
  1174   00081A                     __ptext3:
  1175                           	callstack 0
  1176   00081A                     _vfpfcnvrt:
  1177                           	callstack 14
  1178   00081A                     
  1179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1180   00081A  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1181   00081E  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1182   000822  CFDE FFF6          	movff	postinc2,tblptrl
  1183   000826  CFDD FFF7          	movff	postdec2,tblptrh
  1184   00082A                     	if	0	;tblptru may be non-zero
  1185   00082A                     	endif
  1186   00082A                     	if	0	;tblptru may be non-zero
  1187   00082A                     	endif
  1188   00082A  0008               	tblrd		*
  1189   00082C  50F5               	movf	tablat,w,c
  1190   00082E  0A25               	xorlw	37
  1191   000830  A4D8               	btfss	status,2,c
  1192   000832  EF1D  F004         	goto	u2721
  1193   000836  EF1F  F004         	goto	u2720
  1194   00083A                     u2721:
  1195   00083A  EF5B  F005         	goto	l3738
  1196   00083E                     u2720:
  1197   00083E                     
  1198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1199   00083E  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1200   000842  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1201   000846  2ADE               	incf	postinc2,f,c
  1202   000848  0E00               	movlw	0
  1203   00084A  22DD               	addwfc	postdec2,f,c
  1204   00084C                     
  1205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1206   00084C  0E00               	movlw	0
  1207   00084E  0100               	movlb	0	; () banked
  1208   000850  6FDA               	movwf	(_width+1)& (0+255),b
  1209   000852  0E00               	movlw	0
  1210   000854  6FD9               	movwf	_width& (0+255),b
  1211   000856  C0D9  F0DD         	movff	_width,_flags
  1212   00085A                     
  1213                           ; BSR set to: 0
  1214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1215   00085A  69DB               	setf	_prec& (0+255),b
  1216   00085C  69DC               	setf	(_prec+1)& (0+255),b
  1217   00085E                     
  1218                           ; BSR set to: 0
  1219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1220   00085E  0E00               	movlw	0
  1221   000860  0101               	movlb	1	; () banked
  1222   000862  6F40               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1223   000864  0E00               	movlw	0
  1224   000866  6F3F               	movwf	vfpfcnvrt@done& (0+255),b
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1227   000868  EF62  F004         	goto	l3702
  1228   00086C                     l3692:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1232   00086C  83DD               	bsf	_flags& (0+255),1,b
  1233   00086E                     
  1234                           ; BSR set to: 0
  1235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1236   00086E  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237   000872  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238   000876  2ADE               	incf	postinc2,f,c
  1239   000878  0E00               	movlw	0
  1240   00087A  22DD               	addwfc	postdec2,f,c
  1241                           
  1242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1243   00087C  EF62  F004         	goto	l3702
  1244   000880                     l3696:
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1248   000880  0E00               	movlw	0
  1249   000882  0101               	movlb	1	; () banked
  1250   000884  6F40               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1251   000886  0E01               	movlw	1
  1252   000888  6F3F               	movwf	vfpfcnvrt@done& (0+255),b
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1255   00088A  EF62  F004         	goto	l3702
  1256   00088E                     l3700:
  1257                           
  1258                           ; BSR set to: 1
  1259   00088E  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1260   000892  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1261   000896  CFDE FFF6          	movff	postinc2,tblptrl
  1262   00089A  CFDD FFF7          	movff	postdec2,tblptrh
  1263   00089E                     	if	0	;tblptru may be non-zero
  1264   00089E                     	endif
  1265   00089E                     	if	0	;tblptru may be non-zero
  1266   00089E                     	endif
  1267   00089E  0008               	tblrd		*
  1268   0008A0  50F5               	movf	tablat,w,c
  1269   0008A2  0100               	movlb	0	; () banked
  1270   0008A4  6FC3               	movwf	??_vfpfcnvrt& (0+255),b
  1271   0008A6  6BC4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1272                           
  1273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1274                           ; Switch size 1, requested type "simple"
  1275                           ; Number of cases is 1, Range of values is 0 to 0
  1276                           ; switch strategies available:
  1277                           ; Name         Instructions Cycles
  1278                           ; simple_byte            4     3 (average)
  1279                           ;	Chosen strategy is simple_byte
  1280   0008A8  51C4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1281   0008AA  0A00               	xorlw	0	; case 0
  1282   0008AC  B4D8               	btfsc	status,2,c
  1283   0008AE  EF5B  F004         	goto	l3924
  1284   0008B2  EF40  F004         	goto	l3696
  1285   0008B6                     l3924:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ; Switch size 1, requested type "simple"
  1289                           ; Number of cases is 1, Range of values is 48 to 48
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte            4     3 (average)
  1293                           ;	Chosen strategy is simple_byte
  1294   0008B6  51C3               	movf	??_vfpfcnvrt& (0+255),w,b
  1295   0008B8  0A30               	xorlw	48	; case 48
  1296   0008BA  B4D8               	btfsc	status,2,c
  1297   0008BC  EF36  F004         	goto	l3692
  1298   0008C0  EF40  F004         	goto	l3696
  1299   0008C4                     l3702:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1302   0008C4  0101               	movlb	1	; () banked
  1303   0008C6  513F               	movf	vfpfcnvrt@done& (0+255),w,b
  1304   0008C8  1140               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1305   0008CA  B4D8               	btfsc	status,2,c
  1306   0008CC  EF6A  F004         	goto	u2731
  1307   0008D0  EF6C  F004         	goto	u2730
  1308   0008D4                     u2731:
  1309   0008D4  EF47  F004         	goto	l3700
  1310   0008D8                     u2730:
  1311   0008D8                     
  1312                           ; BSR set to: 1
  1313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1314   0008D8  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1315   0008DC  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1316   0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  1317   0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  1318   0008E8                     	if	0	;tblptru may be non-zero
  1319   0008E8                     	endif
  1320   0008E8                     	if	0	;tblptru may be non-zero
  1321   0008E8                     	endif
  1322   0008E8  0008               	tblrd		*
  1323   0008EA  50F5               	movf	tablat,w,c
  1324   0008EC  0A2A               	xorlw	42
  1325   0008EE  A4D8               	btfss	status,2,c
  1326   0008F0  EF7C  F004         	goto	u2741
  1327   0008F4  EF7E  F004         	goto	u2740
  1328   0008F8                     u2741:
  1329   0008F8  EFA8  F004         	goto	l3712
  1330   0008FC                     u2740:
  1331   0008FC                     
  1332                           ; BSR set to: 1
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1334   0008FC  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335   000900  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336   000904  2ADE               	incf	postinc2,f,c
  1337   000906  0E00               	movlw	0
  1338   000908  22DD               	addwfc	postdec2,f,c
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1341   00090A  C0C1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1342   00090E  C0C2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1343   000912  CFDF F0C3          	movff	indf2,??_vfpfcnvrt
  1344   000916  0E02               	movlw	2
  1345   000918  26DE               	addwf	postinc2,f,c
  1346   00091A  CFDF F0C4          	movff	indf2,??_vfpfcnvrt+1
  1347   00091E  0E00               	movlw	0
  1348   000920  22DD               	addwfc	postdec2,f,c
  1349   000922  C0C3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1350   000926  C0C4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1351   00092A  CFDE F0D9          	movff	postinc2,_width
  1352   00092E  CFDD F0DA          	movff	postdec2,_width+1
  1353   000932                     
  1354                           ; BSR set to: 1
  1355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1356   000932  0100               	movlb	0	; () banked
  1357   000934  BFDA               	btfsc	(_width+1)& (0+255),7,b
  1358   000936  EFA1  F004         	goto	u2750
  1359   00093A  EF9F  F004         	goto	u2751
  1360   00093E                     u2751:
  1361   00093E  EFDC  F004         	goto	l3720
  1362   000942                     u2750:
  1363   000942                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1366   000942  81DD               	bsf	_flags& (0+255),0,b
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1369   000944  6DD9               	negf	_width& (0+255),b
  1370   000946  1FDA               	comf	(_width+1)& (0+255),f,b
  1371   000948  B0D8               	btfsc	status,0,c
  1372   00094A  2BDA               	incf	(_width+1)& (0+255),f,b
  1373   00094C  EFDC  F004         	goto	l3720
  1374   000950                     l3712:
  1375                           
  1376                           ; BSR set to: 1
  1377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1378   000950  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1379   000954  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1380   000958  CFDE F087          	movff	postinc2,atoi@s
  1381   00095C  CFDD F088          	movff	postdec2,atoi@s+1
  1382   000960  ECC9  F008         	call	_atoi	;wreg free
  1383   000964  C087  F0D9         	movff	?_atoi,_width
  1384   000968  C088  F0DA         	movff	?_atoi+1,_width+1
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1387   00096C  EFBF  F004         	goto	l3718
  1388   000970                     l3714:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1392   000970  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393   000974  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394   000978  2ADE               	incf	postinc2,f,c
  1395   00097A  0E00               	movlw	0
  1396   00097C  22DD               	addwfc	postdec2,f,c
  1397   00097E                     l3718:
  1398   00097E  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1399   000982  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1400   000986  CFDE FFF6          	movff	postinc2,tblptrl
  1401   00098A  CFDD FFF7          	movff	postdec2,tblptrh
  1402   00098E                     	if	0	;tblptru may be non-zero
  1403   00098E                     	endif
  1404   00098E                     	if	0	;tblptru may be non-zero
  1405   00098E                     	endif
  1406   00098E  0008               	tblrd		*
  1407   000990  CFF5 F0C3          	movff	tablat,??_vfpfcnvrt
  1408   000994  0ED0               	movlw	208
  1409   000996  0100               	movlb	0	; () banked
  1410   000998  25C3               	addwf	??_vfpfcnvrt& (0+255),w,b
  1411   00099A  6FC4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1412   00099C  6BC5               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  1413   00099E  0EFF               	movlw	255
  1414   0009A0  23C5               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  1415   0009A2  51C5               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  1416   0009A4  E109               	bnz	u2760
  1417   0009A6  0E0A               	movlw	10
  1418   0009A8  5DC4               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  1419   0009AA  A0D8               	btfss	status,0,c
  1420   0009AC  EFDA  F004         	goto	u2761
  1421   0009B0  EFDC  F004         	goto	u2760
  1422   0009B4                     u2761:
  1423   0009B4  EFB8  F004         	goto	l3714
  1424   0009B8                     u2760:
  1425   0009B8                     l3720:
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  1429   0009B8  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1430   0009BC  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1431   0009C0  CFDE F141          	movff	postinc2,vfpfcnvrt@cp
  1432   0009C4  CFDD F142          	movff	postdec2,vfpfcnvrt@cp+1
  1433   0009C8                     
  1434                           ; BSR set to: 0
  1435   0009C8  C141  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1436   0009CC  C142  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1437   0009D0                     	if	0	;tblptru may be non-zero
  1438   0009D0                     	endif
  1439   0009D0                     	if	0	;tblptru may be non-zero
  1440   0009D0                     	endif
  1441   0009D0  0008               	tblrd		*
  1442   0009D2  50F5               	movf	tablat,w,c
  1443   0009D4  0A75               	xorlw	117
  1444   0009D6  A4D8               	btfss	status,2,c
  1445   0009D8  EFF0  F004         	goto	u2771
  1446   0009DC  EFF2  F004         	goto	u2770
  1447   0009E0                     u2771:
  1448   0009E0  EF52  F005         	goto	l3734
  1449   0009E4                     u2770:
  1450   0009E4                     
  1451                           ; BSR set to: 0
  1452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1453   0009E4  C0C1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1454   0009E8  C0C2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1455   0009EC  CFDF F0C3          	movff	indf2,??_vfpfcnvrt
  1456   0009F0  0E02               	movlw	2
  1457   0009F2  26DE               	addwf	postinc2,f,c
  1458   0009F4  CFDF F0C4          	movff	indf2,??_vfpfcnvrt+1
  1459   0009F8  0E00               	movlw	0
  1460   0009FA  22DD               	addwfc	postdec2,f,c
  1461   0009FC  C0C3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1462   000A00  C0C4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1463   000A04  CFDE F0C5          	movff	postinc2,??_vfpfcnvrt+2
  1464   000A08  CFDD F0C6          	movff	postdec2,??_vfpfcnvrt+3
  1465   000A0C  C0C5  F137         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  1466   000A10  C0C6  F138         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  1467   000A14  0101               	movlb	1	; () banked
  1468   000A16  6B39               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  1469   000A18  6B3A               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  1470   000A1A  6B3B               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  1471   000A1C  6B3C               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  1472   000A1E  6B3D               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  1473   000A20  6B3E               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  1476   000A22  0E01               	movlw	1
  1477   000A24  2541               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1478   000A26  0100               	movlb	0	; () banked
  1479   000A28  6FC3               	movwf	??_vfpfcnvrt& (0+255),b
  1480   000A2A  0E00               	movlw	0
  1481   000A2C  0101               	movlb	1	; () banked
  1482   000A2E  2142               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1483   000A30  0100               	movlb	0	; () banked
  1484   000A32  6FC4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1485   000A34  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1486   000A38  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1487   000A3C  C0C3  FFDE         	movff	??_vfpfcnvrt,postinc2
  1488   000A40  C0C4  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  1491   000A44  EF3C  F005         	goto	l3732
  1492   000A48                     l3726:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  1496   000A48  C0BD  F09D         	movff	vfpfcnvrt@fp,utoa@fp
  1497   000A4C  C0BE  F09E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1498   000A50  C137  F09F         	movff	vfpfcnvrt@convarg,utoa@d
  1499   000A54  C138  F0A0         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1500   000A58  C139  F0A1         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  1501   000A5C  C13A  F0A2         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  1502   000A60  C13B  F0A3         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  1503   000A64  C13C  F0A4         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  1504   000A68  C13D  F0A5         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  1505   000A6C  C13E  F0A6         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  1506   000A70  ECCC  F006         	call	_utoa	;wreg free
  1507   000A74  EF70  F005         	goto	l1192
  1508   000A78                     l3732:
  1509                           
  1510                           ; BSR set to: 0
  1511   000A78  C141  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1512   000A7C  C142  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1513   000A80                     	if	0	;tblptru may be non-zero
  1514   000A80                     	endif
  1515   000A80                     	if	0	;tblptru may be non-zero
  1516   000A80                     	endif
  1517   000A80  0008               	tblrd		*
  1518   000A82  50F5               	movf	tablat,w,c
  1519   000A84  6FC3               	movwf	??_vfpfcnvrt& (0+255),b
  1520   000A86  6BC4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1521                           
  1522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1523                           ; Switch size 1, requested type "simple"
  1524                           ; Number of cases is 1, Range of values is 0 to 0
  1525                           ; switch strategies available:
  1526                           ; Name         Instructions Cycles
  1527                           ; simple_byte            4     3 (average)
  1528                           ;	Chosen strategy is simple_byte
  1529   000A88  51C4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1530   000A8A  0A00               	xorlw	0	; case 0
  1531   000A8C  B4D8               	btfsc	status,2,c
  1532   000A8E  EF4B  F005         	goto	l3926
  1533   000A92  EF52  F005         	goto	l3734
  1534   000A96                     l3926:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ; Switch size 1, requested type "simple"
  1538                           ; Number of cases is 1, Range of values is 117 to 117
  1539                           ; switch strategies available:
  1540                           ; Name         Instructions Cycles
  1541                           ; simple_byte            4     3 (average)
  1542                           ;	Chosen strategy is simple_byte
  1543   000A96  51C3               	movf	??_vfpfcnvrt& (0+255),w,b
  1544   000A98  0A75               	xorlw	117	; case 117
  1545   000A9A  B4D8               	btfsc	status,2,c
  1546   000A9C  EF24  F005         	goto	l3726
  1547   000AA0  EF52  F005         	goto	l3734
  1548   000AA4                     l3734:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1551   000AA4  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1552   000AA8  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1553   000AAC  2ADE               	incf	postinc2,f,c
  1554   000AAE  0E00               	movlw	0
  1555   000AB0  22DD               	addwfc	postdec2,f,c
  1556   000AB2  EF70  F005         	goto	l1192
  1557   000AB6                     l3738:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1560   000AB6  C0BF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1561   000ABA  C0C0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1562   000ABE  CFDE FFF6          	movff	postinc2,tblptrl
  1563   000AC2  CFDD FFF7          	movff	postdec2,tblptrh
  1564   000AC6                     	if	0	;tblptru may be non-zero
  1565   000AC6                     	endif
  1566   000AC6                     	if	0	;tblptru may be non-zero
  1567   000AC6                     	endif
  1568   000AC6  0008               	tblrd		*
  1569   000AC8  50F5               	movf	tablat,w,c
  1570   000ACA  0100               	movlb	0	; () banked
  1571   000ACC  6F82               	movwf	fputc@c& (0+255),b
  1572   000ACE  6B83               	clrf	(fputc@c+1)& (0+255),b
  1573   000AD0  C0BD  F084         	movff	vfpfcnvrt@fp,fputc@fp
  1574   000AD4  C0BE  F085         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1575   000AD8  ECD7  F00B         	call	_fputc	;wreg free
  1576   000ADC  EF52  F005         	goto	l3734
  1577   000AE0                     l1192:
  1578   000AE0  0012               	return		;funcret
  1579   000AE2                     __end_of_vfpfcnvrt:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _utoa *****************
  1583 ;; Defined at:
  1584 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1587 ;;		 -> sprintf@f(11), 
  1588 ;;  d               8   63[BANK0 ] unsigned long long 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  n               8   83[BANK0 ] unsigned long long 
  1591 ;;  i               2   91[BANK0 ] int 
  1592 ;;  w               2   81[BANK0 ] int 
  1593 ;;  p               2   79[BANK0 ] int 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1603 ;;      Params:         0      10       0       0       0       0       0       0       0
  1604 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1605 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1606 ;;      Totals:         0      32       0       0       0       0       0       0       0
  1607 ;;Total ram usage:       32 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 13
  1610 ;; This function calls:
  1611 ;;		___lodiv
  1612 ;;		___lomod
  1613 ;;		_pad
  1614 ;; This function is called by:
  1615 ;;		_vfpfcnvrt
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text4
  1620   000D98                     __ptext4:
  1621                           	callstack 0
  1622   000D98                     _utoa:
  1623                           	callstack 14
  1624   000D98                     
  1625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  1626   000D98  0100               	movlb	0	; () banked
  1627   000D9A  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  1628   000D9C  EFD2  F006         	goto	u2611
  1629   000DA0  EFD4  F006         	goto	u2610
  1630   000DA4                     u2611:
  1631   000DA4  EFD5  F006         	goto	l3618
  1632   000DA8                     u2610:
  1633   000DA8                     
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  1636   000DA8  93DD               	bcf	_flags& (0+255),1,b
  1637   000DAA                     l3618:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  1641   000DAA  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  1642   000DAC  EFE2  F006         	goto	u2620
  1643   000DB0  51DC               	movf	(_prec+1)& (0+255),w,b
  1644   000DB2  E106               	bnz	u2621
  1645   000DB4  05DB               	decf	_prec& (0+255),w,b
  1646   000DB6  B0D8               	btfsc	status,0,c
  1647   000DB8  EFE0  F006         	goto	u2621
  1648   000DBC  EFE2  F006         	goto	u2620
  1649   000DC0                     u2621:
  1650   000DC0  EFE8  F006         	goto	l1158
  1651   000DC4                     u2620:
  1652   000DC4                     
  1653                           ; BSR set to: 0
  1654   000DC4  0E00               	movlw	0
  1655   000DC6  6FB0               	movwf	(utoa@p+1)& (0+255),b
  1656   000DC8  0E01               	movlw	1
  1657   000DCA  6FAF               	movwf	utoa@p& (0+255),b
  1658   000DCC  EFEC  F006         	goto	l1160
  1659   000DD0                     l1158:
  1660                           
  1661                           ; BSR set to: 0
  1662   000DD0  C0DB  F0AF         	movff	_prec,utoa@p
  1663   000DD4  C0DC  F0B0         	movff	_prec+1,utoa@p+1
  1664   000DD8                     l1160:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  1668   000DD8  C0D9  F0B1         	movff	_width,utoa@w
  1669   000DDC  C0DA  F0B2         	movff	_width+1,utoa@w+1
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  1672   000DE0  C09F  F0B3         	movff	utoa@d,utoa@n
  1673   000DE4  C0A0  F0B4         	movff	utoa@d+1,utoa@n+1
  1674   000DE8  C0A1  F0B5         	movff	utoa@d+2,utoa@n+2
  1675   000DEC  C0A2  F0B6         	movff	utoa@d+3,utoa@n+3
  1676   000DF0  C0A3  F0B7         	movff	utoa@d+4,utoa@n+4
  1677   000DF4  C0A4  F0B8         	movff	utoa@d+5,utoa@n+5
  1678   000DF8  C0A5  F0B9         	movff	utoa@d+6,utoa@n+6
  1679   000DFC  C0A6  F0BA         	movff	utoa@d+7,utoa@n+7
  1680   000E00                     
  1681                           ; BSR set to: 0
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  1683   000E00  0E00               	movlw	0
  1684   000E02  6FBC               	movwf	(utoa@i+1)& (0+255),b
  1685   000E04  0E1F               	movlw	31
  1686   000E06  6FBB               	movwf	utoa@i& (0+255),b
  1687   000E08                     
  1688                           ; BSR set to: 0
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  1690   000E08  0E00               	movlw	0
  1691   000E0A  0101               	movlb	1	; () banked
  1692   000E0C  6F22               	movwf	(_dbuf+31)& (0+255),b
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1695   000E0E  EF80  F007         	goto	l3636
  1696   000E12                     l3626:
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  1700   000E12  07BB               	decf	utoa@i& (0+255),f,b
  1701   000E14  A0D8               	btfss	status,0,c
  1702   000E16  07BC               	decf	(utoa@i+1)& (0+255),f,b
  1703   000E18                     
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  1706   000E18  0E03               	movlw	low _dbuf
  1707   000E1A  25BB               	addwf	utoa@i& (0+255),w,b
  1708   000E1C  6ED9               	movwf	fsr2l,c
  1709   000E1E  0E01               	movlw	high _dbuf
  1710   000E20  21BC               	addwfc	(utoa@i+1)& (0+255),w,b
  1711   000E22  6EDA               	movwf	fsr2h,c
  1712   000E24  C0B3  F081         	movff	utoa@n,___lomod@dividend
  1713   000E28  C0B4  F082         	movff	utoa@n+1,___lomod@dividend+1
  1714   000E2C  C0B5  F083         	movff	utoa@n+2,___lomod@dividend+2
  1715   000E30  C0B6  F084         	movff	utoa@n+3,___lomod@dividend+3
  1716   000E34  C0B7  F085         	movff	utoa@n+4,___lomod@dividend+4
  1717   000E38  C0B8  F086         	movff	utoa@n+5,___lomod@dividend+5
  1718   000E3C  C0B9  F087         	movff	utoa@n+6,___lomod@dividend+6
  1719   000E40  C0BA  F088         	movff	utoa@n+7,___lomod@dividend+7
  1720   000E44  0E0A               	movlw	10
  1721   000E46  6F89               	movwf	___lomod@divisor& (0+255),b
  1722   000E48  0E00               	movlw	0
  1723   000E4A  6F8A               	movwf	(___lomod@divisor+1)& (0+255),b
  1724   000E4C  0E00               	movlw	0
  1725   000E4E  6F8B               	movwf	(___lomod@divisor+2)& (0+255),b
  1726   000E50  0E00               	movlw	0
  1727   000E52  6F8C               	movwf	(___lomod@divisor+3)& (0+255),b
  1728   000E54  0E00               	movlw	0
  1729   000E56  6F8D               	movwf	(___lomod@divisor+4)& (0+255),b
  1730   000E58  0E00               	movlw	0
  1731   000E5A  6F8E               	movwf	(___lomod@divisor+5)& (0+255),b
  1732   000E5C  0E00               	movlw	0
  1733   000E5E  6F8F               	movwf	(___lomod@divisor+6)& (0+255),b
  1734   000E60  0E00               	movlw	0
  1735   000E62  6F90               	movwf	(___lomod@divisor+7)& (0+255),b
  1736   000E64  EC06  F00B         	call	___lomod	;wreg free
  1737   000E68  C081  F0A7         	movff	?___lomod,??_utoa
  1738   000E6C  C082  F0A8         	movff	?___lomod+1,??_utoa+1
  1739   000E70  C083  F0A9         	movff	?___lomod+2,??_utoa+2
  1740   000E74  C084  F0AA         	movff	?___lomod+3,??_utoa+3
  1741   000E78  C085  F0AB         	movff	?___lomod+4,??_utoa+4
  1742   000E7C  C086  F0AC         	movff	?___lomod+5,??_utoa+5
  1743   000E80  C087  F0AD         	movff	?___lomod+6,??_utoa+6
  1744   000E84  C088  F0AE         	movff	?___lomod+7,??_utoa+7
  1745   000E88  0100               	movlb	0	; () banked
  1746   000E8A  51A7               	movf	??_utoa& (0+255),w,b
  1747   000E8C  0F30               	addlw	48
  1748   000E8E  6EDF               	movwf	indf2,c
  1749   000E90                     
  1750                           ; BSR set to: 0
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  1752   000E90  07AF               	decf	utoa@p& (0+255),f,b
  1753   000E92  A0D8               	btfss	status,0,c
  1754   000E94  07B0               	decf	(utoa@p+1)& (0+255),f,b
  1755   000E96                     
  1756                           ; BSR set to: 0
  1757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  1758   000E96  07B1               	decf	utoa@w& (0+255),f,b
  1759   000E98  A0D8               	btfss	status,0,c
  1760   000E9A  07B2               	decf	(utoa@w+1)& (0+255),f,b
  1761   000E9C                     
  1762                           ; BSR set to: 0
  1763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  1764   000E9C  C0B3  F081         	movff	utoa@n,___lodiv@dividend
  1765   000EA0  C0B4  F082         	movff	utoa@n+1,___lodiv@dividend+1
  1766   000EA4  C0B5  F083         	movff	utoa@n+2,___lodiv@dividend+2
  1767   000EA8  C0B6  F084         	movff	utoa@n+3,___lodiv@dividend+3
  1768   000EAC  C0B7  F085         	movff	utoa@n+4,___lodiv@dividend+4
  1769   000EB0  C0B8  F086         	movff	utoa@n+5,___lodiv@dividend+5
  1770   000EB4  C0B9  F087         	movff	utoa@n+6,___lodiv@dividend+6
  1771   000EB8  C0BA  F088         	movff	utoa@n+7,___lodiv@dividend+7
  1772   000EBC  0E0A               	movlw	10
  1773   000EBE  6F89               	movwf	___lodiv@divisor& (0+255),b
  1774   000EC0  0E00               	movlw	0
  1775   000EC2  6F8A               	movwf	(___lodiv@divisor+1)& (0+255),b
  1776   000EC4  0E00               	movlw	0
  1777   000EC6  6F8B               	movwf	(___lodiv@divisor+2)& (0+255),b
  1778   000EC8  0E00               	movlw	0
  1779   000ECA  6F8C               	movwf	(___lodiv@divisor+3)& (0+255),b
  1780   000ECC  0E00               	movlw	0
  1781   000ECE  6F8D               	movwf	(___lodiv@divisor+4)& (0+255),b
  1782   000ED0  0E00               	movlw	0
  1783   000ED2  6F8E               	movwf	(___lodiv@divisor+5)& (0+255),b
  1784   000ED4  0E00               	movlw	0
  1785   000ED6  6F8F               	movwf	(___lodiv@divisor+6)& (0+255),b
  1786   000ED8  0E00               	movlw	0
  1787   000EDA  6F90               	movwf	(___lodiv@divisor+7)& (0+255),b
  1788   000EDC  EC15  F00A         	call	___lodiv	;wreg free
  1789   000EE0  C081  F0B3         	movff	?___lodiv,utoa@n
  1790   000EE4  C082  F0B4         	movff	?___lodiv+1,utoa@n+1
  1791   000EE8  C083  F0B5         	movff	?___lodiv+2,utoa@n+2
  1792   000EEC  C084  F0B6         	movff	?___lodiv+3,utoa@n+3
  1793   000EF0  C085  F0B7         	movff	?___lodiv+4,utoa@n+4
  1794   000EF4  C086  F0B8         	movff	?___lodiv+5,utoa@n+5
  1795   000EF8  C087  F0B9         	movff	?___lodiv+6,utoa@n+6
  1796   000EFC  C088  F0BA         	movff	?___lodiv+7,utoa@n+7
  1797   000F00                     l3636:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1800   000F00  0100               	movlb	0	; () banked
  1801   000F02  51BB               	movf	utoa@i& (0+255),w,b
  1802   000F04  11BC               	iorwf	(utoa@i+1)& (0+255),w,b
  1803   000F06  B4D8               	btfsc	status,2,c
  1804   000F08  EF88  F007         	goto	u2631
  1805   000F0C  EF8A  F007         	goto	u2630
  1806   000F10                     u2631:
  1807   000F10  EFBA  F007         	goto	l3646
  1808   000F14                     u2630:
  1809   000F14                     
  1810                           ; BSR set to: 0
  1811   000F14  51B3               	movf	utoa@n& (0+255),w,b
  1812   000F16  11B4               	iorwf	(utoa@n+1)& (0+255),w,b
  1813   000F18  11B5               	iorwf	(utoa@n+2)& (0+255),w,b
  1814   000F1A  11B6               	iorwf	(utoa@n+3)& (0+255),w,b
  1815   000F1C  11B7               	iorwf	(utoa@n+4)& (0+255),w,b
  1816   000F1E  11B8               	iorwf	(utoa@n+5)& (0+255),w,b
  1817   000F20  11B9               	iorwf	(utoa@n+6)& (0+255),w,b
  1818   000F22  11BA               	iorwf	(utoa@n+7)& (0+255),w,b
  1819   000F24  A4D8               	btfss	status,2,c
  1820   000F26  EF97  F007         	goto	u2641
  1821   000F2A  EF99  F007         	goto	u2640
  1822   000F2E                     u2641:
  1823   000F2E  EF09  F007         	goto	l3626
  1824   000F32                     u2640:
  1825   000F32                     
  1826                           ; BSR set to: 0
  1827   000F32  BFB0               	btfsc	(utoa@p+1)& (0+255),7,b
  1828   000F34  EFA6  F007         	goto	u2650
  1829   000F38  51B0               	movf	(utoa@p+1)& (0+255),w,b
  1830   000F3A  E106               	bnz	u2651
  1831   000F3C  05AF               	decf	utoa@p& (0+255),w,b
  1832   000F3E  B0D8               	btfsc	status,0,c
  1833   000F40  EFA4  F007         	goto	u2651
  1834   000F44  EFA6  F007         	goto	u2650
  1835   000F48                     u2651:
  1836   000F48  EF09  F007         	goto	l3626
  1837   000F4C                     u2650:
  1838   000F4C                     
  1839                           ; BSR set to: 0
  1840   000F4C  BFB2               	btfsc	(utoa@w+1)& (0+255),7,b
  1841   000F4E  EFB1  F007         	goto	u2661
  1842   000F52  51B2               	movf	(utoa@w+1)& (0+255),w,b
  1843   000F54  E108               	bnz	u2660
  1844   000F56  05B1               	decf	utoa@w& (0+255),w,b
  1845   000F58  A0D8               	btfss	status,0,c
  1846   000F5A  EFB1  F007         	goto	u2661
  1847   000F5E  EFB3  F007         	goto	u2660
  1848   000F62                     u2661:
  1849   000F62  EFBA  F007         	goto	l3646
  1850   000F66                     u2660:
  1851   000F66                     
  1852                           ; BSR set to: 0
  1853   000F66  B3DD               	btfsc	_flags& (0+255),1,b
  1854   000F68  EFB8  F007         	goto	u2671
  1855   000F6C  EFBA  F007         	goto	u2670
  1856   000F70                     u2671:
  1857   000F70  EF09  F007         	goto	l3626
  1858   000F74                     u2670:
  1859   000F74                     l3646:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1863   000F74  C09D  F092         	movff	utoa@fp,pad@fp
  1864   000F78  C09E  F093         	movff	utoa@fp+1,pad@fp+1
  1865   000F7C  0E03               	movlw	low _dbuf
  1866   000F7E  25BB               	addwf	utoa@i& (0+255),w,b
  1867   000F80  6F94               	movwf	pad@buf& (0+255),b
  1868   000F82  0E01               	movlw	high _dbuf
  1869   000F84  21BC               	addwfc	(utoa@i+1)& (0+255),w,b
  1870   000F86  6F95               	movwf	(pad@buf+1)& (0+255),b
  1871   000F88  C0B1  F096         	movff	utoa@w,pad@p
  1872   000F8C  C0B2  F097         	movff	utoa@w+1,pad@p+1
  1873   000F90  ECA2  F00C         	call	_pad	;wreg free
  1874   000F94  0012               	return		;funcret
  1875   000F96                     __end_of_utoa:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _pad *****************
  1879 ;; Defined at:
  1880 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1883 ;;		 -> sprintf@f(11), 
  1884 ;;  buf             2   52[BANK0 ] PTR unsigned char 
  1885 ;;		 -> dbuf(32), 
  1886 ;;  p               2   54[BANK0 ] int 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  w               2   59[BANK0 ] int 
  1889 ;;  i               2   57[BANK0 ] int 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1899 ;;      Params:         0       6       0       0       0       0       0       0       0
  1900 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1901 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1902 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1903 ;;Total ram usage:       11 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 12
  1906 ;; This function calls:
  1907 ;;		_fputc
  1908 ;;		_fputs
  1909 ;; This function is called by:
  1910 ;;		_utoa
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text5
  1915   001944                     __ptext5:
  1916                           	callstack 0
  1917   001944                     _pad:
  1918                           	callstack 14
  1919   001944                     
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  1921   001944  0100               	movlb	0	; () banked
  1922   001946  A1DD               	btfss	_flags& (0+255),0,b
  1923   001948  EFA8  F00C         	goto	u2531
  1924   00194C  EFAA  F00C         	goto	u2530
  1925   001950                     u2531:
  1926   001950  EFB4  F00C         	goto	l3584
  1927   001954                     u2530:
  1928   001954                     
  1929                           ; BSR set to: 0
  1930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  1931   001954  C094  F08B         	movff	pad@buf,fputs@s
  1932   001958  C095  F08C         	movff	pad@buf+1,fputs@s+1
  1933   00195C  C092  F08D         	movff	pad@fp,fputs@fp
  1934   001960  C093  F08E         	movff	pad@fp+1,fputs@fp+1
  1935   001964  EC48  F00F         	call	_fputs	;wreg free
  1936   001968                     l3584:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  1939   001968  0100               	movlb	0	; () banked
  1940   00196A  BF97               	btfsc	(pad@p+1)& (0+255),7,b
  1941   00196C  EFBA  F00C         	goto	u2541
  1942   001970  EFBC  F00C         	goto	u2540
  1943   001974                     u2541:
  1944   001974  EFC2  F00C         	goto	l3588
  1945   001978                     u2540:
  1946   001978                     
  1947                           ; BSR set to: 0
  1948   001978  C096  F09B         	movff	pad@p,pad@w
  1949   00197C  C097  F09C         	movff	pad@p+1,pad@w+1
  1950   001980  EFC6  F00C         	goto	l1148
  1951   001984                     l3588:
  1952                           
  1953                           ; BSR set to: 0
  1954   001984  0E00               	movlw	0
  1955   001986  6F9C               	movwf	(pad@w+1)& (0+255),b
  1956   001988  0E00               	movlw	0
  1957   00198A  6F9B               	movwf	pad@w& (0+255),b
  1958   00198C                     l1148:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1962   00198C  0E00               	movlw	0
  1963   00198E  6F9A               	movwf	(pad@i+1)& (0+255),b
  1964   001990  0E00               	movlw	0
  1965   001992  6F99               	movwf	pad@i& (0+255),b
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1968   001994  EFD9  F00C         	goto	l3594
  1969   001998                     l3590:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1973   001998  0E00               	movlw	0
  1974   00199A  6F83               	movwf	(fputc@c+1)& (0+255),b
  1975   00199C  0E20               	movlw	32
  1976   00199E  6F82               	movwf	fputc@c& (0+255),b
  1977   0019A0  C092  F084         	movff	pad@fp,fputc@fp
  1978   0019A4  C093  F085         	movff	pad@fp+1,fputc@fp+1
  1979   0019A8  ECD7  F00B         	call	_fputc	;wreg free
  1980   0019AC                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1982   0019AC  0100               	movlb	0	; () banked
  1983   0019AE  4B99               	infsnz	pad@i& (0+255),f,b
  1984   0019B0  2B9A               	incf	(pad@i+1)& (0+255),f,b
  1985   0019B2                     l3594:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1989   0019B2  519B               	movf	pad@w& (0+255),w,b
  1990   0019B4  5D99               	subwf	pad@i& (0+255),w,b
  1991   0019B6  519A               	movf	(pad@i+1)& (0+255),w,b
  1992   0019B8  0A80               	xorlw	128
  1993   0019BA  6F98               	movwf	??_pad& (0+255),b
  1994   0019BC  519C               	movf	(pad@w+1)& (0+255),w,b
  1995   0019BE  0A80               	xorlw	128
  1996   0019C0  5998               	subwfb	??_pad& (0+255),w,b
  1997   0019C2  A0D8               	btfss	status,0,c
  1998   0019C4  EFE6  F00C         	goto	u2551
  1999   0019C8  EFE8  F00C         	goto	u2550
  2000   0019CC                     u2551:
  2001   0019CC  EFCC  F00C         	goto	l3590
  2002   0019D0                     u2550:
  2003   0019D0                     
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2006   0019D0  B1DD               	btfsc	_flags& (0+255),0,b
  2007   0019D2  EFED  F00C         	goto	u2561
  2008   0019D6  EFEF  F00C         	goto	u2560
  2009   0019DA                     u2561:
  2010   0019DA  EFF9  F00C         	goto	l1153
  2011   0019DE                     u2560:
  2012   0019DE                     
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2015   0019DE  C094  F08B         	movff	pad@buf,fputs@s
  2016   0019E2  C095  F08C         	movff	pad@buf+1,fputs@s+1
  2017   0019E6  C092  F08D         	movff	pad@fp,fputs@fp
  2018   0019EA  C093  F08E         	movff	pad@fp+1,fputs@fp+1
  2019   0019EE  EC48  F00F         	call	_fputs	;wreg free
  2020   0019F2                     l1153:
  2021   0019F2  0012               	return		;funcret
  2022   0019F4                     __end_of_pad:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _fputs *****************
  2026 ;; Defined at:
  2027 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  s               2   43[BANK0 ] PTR const unsigned char 
  2030 ;;		 -> dbuf(32), 
  2031 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2032 ;;		 -> sprintf@f(11), 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  i               2   48[BANK0 ] int 
  2035 ;;  c               1   47[BANK0 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2   43[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2045 ;;      Params:         0       4       0       0       0       0       0       0       0
  2046 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2048 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2049 ;;Total ram usage:        7 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 11
  2052 ;; This function calls:
  2053 ;;		_fputc
  2054 ;; This function is called by:
  2055 ;;		_pad
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text6
  2060   001E90                     __ptext6:
  2061                           	callstack 0
  2062   001E90                     _fputs:
  2063                           	callstack 14
  2064   001E90  0E00               	movlw	0
  2065   001E92  0100               	movlb	0	; () banked
  2066   001E94  6F91               	movwf	(fputs@i+1)& (0+255),b
  2067   001E96  0E00               	movlw	0
  2068   001E98  6F90               	movwf	fputs@i& (0+255),b
  2069   001E9A  EF5B  F00F         	goto	l3534
  2070   001E9E                     l3530:
  2071                           
  2072                           ; BSR set to: 0
  2073   001E9E  C08F  F082         	movff	fputs@c,fputc@c
  2074   001EA2  6B83               	clrf	(fputc@c+1)& (0+255),b
  2075   001EA4  C08D  F084         	movff	fputs@fp,fputc@fp
  2076   001EA8  C08E  F085         	movff	fputs@fp+1,fputc@fp+1
  2077   001EAC  ECD7  F00B         	call	_fputc	;wreg free
  2078   001EB0  0100               	movlb	0	; () banked
  2079   001EB2  4B90               	infsnz	fputs@i& (0+255),f,b
  2080   001EB4  2B91               	incf	(fputs@i+1)& (0+255),f,b
  2081   001EB6                     l3534:
  2082                           
  2083                           ; BSR set to: 0
  2084   001EB6  5190               	movf	fputs@i& (0+255),w,b
  2085   001EB8  258B               	addwf	fputs@s& (0+255),w,b
  2086   001EBA  6ED9               	movwf	fsr2l,c
  2087   001EBC  5191               	movf	(fputs@i+1)& (0+255),w,b
  2088   001EBE  218C               	addwfc	(fputs@s+1)& (0+255),w,b
  2089   001EC0  6EDA               	movwf	fsr2h,c
  2090   001EC2  50DF               	movf	indf2,w,c
  2091   001EC4  6F8F               	movwf	fputs@c& (0+255),b
  2092   001EC6  518F               	movf	fputs@c& (0+255),w,b
  2093   001EC8  A4D8               	btfss	status,2,c
  2094   001ECA  EF69  F00F         	goto	u2451
  2095   001ECE  EF6B  F00F         	goto	u2450
  2096   001ED2                     u2451:
  2097   001ED2  EF4F  F00F         	goto	l3530
  2098   001ED6                     u2450:
  2099   001ED6                     
  2100                           ; BSR set to: 0
  2101   001ED6  0012               	return		;funcret
  2102   001ED8                     __end_of_fputs:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function _fputc *****************
  2106 ;; Defined at:
  2107 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  c               2   34[BANK0 ] int 
  2110 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  2111 ;;		 -> sprintf@f(11), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2   34[BANK0 ] int 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       4       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        9 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 10
  2130 ;; This function calls:
  2131 ;;		_putch
  2132 ;; This function is called by:
  2133 ;;		_pad
  2134 ;;		_vfpfcnvrt
  2135 ;;		_fputs
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text7
  2140   0017AE                     __ptext7:
  2141                           	callstack 0
  2142   0017AE                     _fputc:
  2143                           	callstack 14
  2144   0017AE  0100               	movlb	0	; () banked
  2145   0017B0  5184               	movf	fputc@fp& (0+255),w,b
  2146   0017B2  1185               	iorwf	(fputc@fp+1)& (0+255),w,b
  2147   0017B4  B4D8               	btfsc	status,2,c
  2148   0017B6  EFDF  F00B         	goto	u2411
  2149   0017BA  EFE1  F00B         	goto	u2410
  2150   0017BE                     u2411:
  2151   0017BE  EFEA  F00B         	goto	l3518
  2152   0017C2                     u2410:
  2153   0017C2                     
  2154                           ; BSR set to: 0
  2155   0017C2  5184               	movf	fputc@fp& (0+255),w,b
  2156   0017C4  1185               	iorwf	(fputc@fp+1)& (0+255),w,b
  2157   0017C6  A4D8               	btfss	status,2,c
  2158   0017C8  EFE8  F00B         	goto	u2421
  2159   0017CC  EFEA  F00B         	goto	u2420
  2160   0017D0                     u2421:
  2161   0017D0  EFEF  F00B         	goto	l3520
  2162   0017D4                     u2420:
  2163   0017D4                     l3518:
  2164                           
  2165                           ; BSR set to: 0
  2166   0017D4  5182               	movf	fputc@c& (0+255),w,b
  2167   0017D6  ECBB  F010         	call	_putch
  2168   0017DA  EF3C  F00C         	goto	l1250
  2169   0017DE                     l3520:
  2170                           
  2171                           ; BSR set to: 0
  2172   0017DE  EE20 F009          	lfsr	2,9
  2173   0017E2  5184               	movf	fputc@fp& (0+255),w,b
  2174   0017E4  26D9               	addwf	fsr2l,f,c
  2175   0017E6  5185               	movf	(fputc@fp+1)& (0+255),w,b
  2176   0017E8  22DA               	addwfc	fsr2h,f,c
  2177   0017EA  50DE               	movf	postinc2,w,c
  2178   0017EC  10DE               	iorwf	postinc2,w,c
  2179   0017EE  B4D8               	btfsc	status,2,c
  2180   0017F0  EFFC  F00B         	goto	u2431
  2181   0017F4  EFFE  F00B         	goto	u2430
  2182   0017F8                     u2431:
  2183   0017F8  EF19  F00C         	goto	l3524
  2184   0017FC                     u2430:
  2185   0017FC                     
  2186                           ; BSR set to: 0
  2187   0017FC  EE20 F009          	lfsr	2,9
  2188   001800  5184               	movf	fputc@fp& (0+255),w,b
  2189   001802  26D9               	addwf	fsr2l,f,c
  2190   001804  5185               	movf	(fputc@fp+1)& (0+255),w,b
  2191   001806  22DA               	addwfc	fsr2h,f,c
  2192   001808  EE10 F003          	lfsr	1,3
  2193   00180C  5184               	movf	fputc@fp& (0+255),w,b
  2194   00180E  26E1               	addwf	fsr1l,f,c
  2195   001810  5185               	movf	(fputc@fp+1)& (0+255),w,b
  2196   001812  22E2               	addwfc	fsr1h,f,c
  2197   001814  50DE               	movf	postinc2,w,c
  2198   001816  5CE6               	subwf	postinc1,w,c
  2199   001818  50E6               	movf	postinc1,w,c
  2200   00181A  0A80               	xorlw	128
  2201   00181C  6F8A               	movwf	(??_fputc+4)& (0+255),b
  2202   00181E  50DE               	movf	postinc2,w,c
  2203   001820  0A80               	xorlw	128
  2204   001822  598A               	subwfb	(??_fputc+4)& (0+255),w,b
  2205   001824  B0D8               	btfsc	status,0,c
  2206   001826  EF17  F00C         	goto	u2441
  2207   00182A  EF19  F00C         	goto	u2440
  2208   00182E                     u2441:
  2209   00182E  EF3C  F00C         	goto	l1250
  2210   001832                     u2440:
  2211   001832                     l3524:
  2212                           
  2213                           ; BSR set to: 0
  2214   001832  EE20 F003          	lfsr	2,3
  2215   001836  5184               	movf	fputc@fp& (0+255),w,b
  2216   001838  26D9               	addwf	fsr2l,f,c
  2217   00183A  5185               	movf	(fputc@fp+1)& (0+255),w,b
  2218   00183C  22DA               	addwfc	fsr2h,f,c
  2219   00183E  CFDE F086          	movff	postinc2,??_fputc
  2220   001842  CFDD F087          	movff	postdec2,??_fputc+1
  2221   001846  C084  FFD9         	movff	fputc@fp,fsr2l
  2222   00184A  C085  FFDA         	movff	fputc@fp+1,fsr2h
  2223   00184E  CFDE F088          	movff	postinc2,??_fputc+2
  2224   001852  CFDD F089          	movff	postdec2,??_fputc+3
  2225   001856  5186               	movf	??_fputc& (0+255),w,b
  2226   001858  2588               	addwf	(??_fputc+2)& (0+255),w,b
  2227   00185A  6ED9               	movwf	fsr2l,c
  2228   00185C  5187               	movf	(??_fputc+1)& (0+255),w,b
  2229   00185E  2189               	addwfc	(??_fputc+3)& (0+255),w,b
  2230   001860  6EDA               	movwf	fsr2h,c
  2231   001862  C082  FFDF         	movff	fputc@c,indf2
  2232   001866  EE20 F003          	lfsr	2,3
  2233   00186A  5184               	movf	fputc@fp& (0+255),w,b
  2234   00186C  26D9               	addwf	fsr2l,f,c
  2235   00186E  5185               	movf	(fputc@fp+1)& (0+255),w,b
  2236   001870  22DA               	addwfc	fsr2h,f,c
  2237   001872  2ADE               	incf	postinc2,f,c
  2238   001874  0E00               	movlw	0
  2239   001876  22DD               	addwfc	postdec2,f,c
  2240   001878                     l1250:
  2241   001878  0012               	return		;funcret
  2242   00187A                     __end_of_fputc:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _putch *****************
  2246 ;; Defined at:
  2247 ;;		line 93 in file "lib_pic/usart.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  c               1    wreg     unsigned char 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  c               1   33[BANK0 ] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0
  2262 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2264 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2265 ;;Total ram usage:        1 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 9
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_fputc
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text8
  2276   002176                     __ptext8:
  2277                           	callstack 0
  2278   002176                     _putch:
  2279                           	callstack 14
  2280                           
  2281                           ;incstack = 0
  2282                           ;putch@c stored from wreg
  2283   002176  0100               	movlb	0	; () banked
  2284   002178  6F81               	movwf	putch@c& (0+255),b
  2285   00217A                     l439:
  2286   00217A  A2AC               	btfss	172,1,c	;volatile
  2287   00217C  EFC2  F010         	goto	u2401
  2288   002180  EFC4  F010         	goto	u2400
  2289   002184                     u2401:
  2290   002184  EFBD  F010         	goto	l439
  2291   002188                     u2400:
  2292   002188                     
  2293                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  2294   002188  C081  FFAD         	movff	putch@c,4013	;volatile
  2295   00218C  0012               	return		;funcret
  2296   00218E                     __end_of_putch:
  2297                           	callstack 0
  2298                           
  2299 ;; *************** function ___lomod *****************
  2300 ;; Defined at:
  2301 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  dividend        8   33[BANK0 ] unsigned long long 
  2304 ;;  divisor         8   41[BANK0 ] unsigned long long 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  counter         1   49[BANK0 ] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  8   33[BANK0 ] unsigned long long 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0      16       0       0       0       0       0       0       0
  2317 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2320 ;;Total ram usage:       17 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 9
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_utoa
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text9
  2331   00160C                     __ptext9:
  2332                           	callstack 0
  2333   00160C                     ___lomod:
  2334                           	callstack 17
  2335   00160C  0100               	movlb	0	; () banked
  2336   00160E  5189               	movf	___lomod@divisor& (0+255),w,b
  2337   001610  118A               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  2338   001612  118B               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  2339   001614  118C               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  2340   001616  118D               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  2341   001618  118E               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  2342   00161A  118F               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  2343   00161C  1190               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  2344   00161E  B4D8               	btfsc	status,2,c
  2345   001620  EF14  F00B         	goto	u2501
  2346   001624  EF16  F00B         	goto	u2500
  2347   001628                     u2501:
  2348   001628  EF5E  F00B         	goto	l893
  2349   00162C                     u2500:
  2350   00162C                     
  2351                           ; BSR set to: 0
  2352   00162C  0E01               	movlw	1
  2353   00162E  6F91               	movwf	___lomod@counter& (0+255),b
  2354   001630  EF24  F00B         	goto	l3570
  2355   001634                     l3568:
  2356                           
  2357                           ; BSR set to: 0
  2358   001634  90D8               	bcf	status,0,c
  2359   001636  3789               	rlcf	___lomod@divisor& (0+255),f,b
  2360   001638  378A               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  2361   00163A  378B               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  2362   00163C  378C               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  2363   00163E  378D               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  2364   001640  378E               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  2365   001642  378F               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  2366   001644  3790               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  2367   001646  2B91               	incf	___lomod@counter& (0+255),f,b
  2368   001648                     l3570:
  2369                           
  2370                           ; BSR set to: 0
  2371   001648  AF90               	btfss	(___lomod@divisor+7)& (0+255),7,b
  2372   00164A  EF29  F00B         	goto	u2511
  2373   00164E  EF2B  F00B         	goto	u2510
  2374   001652                     u2511:
  2375   001652  EF1A  F00B         	goto	l3568
  2376   001656                     u2510:
  2377   001656                     l3572:
  2378                           
  2379                           ; BSR set to: 0
  2380   001656  5189               	movf	___lomod@divisor& (0+255),w,b
  2381   001658  5D81               	subwf	___lomod@dividend& (0+255),w,b
  2382   00165A  518A               	movf	(___lomod@divisor+1)& (0+255),w,b
  2383   00165C  5982               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  2384   00165E  518B               	movf	(___lomod@divisor+2)& (0+255),w,b
  2385   001660  5983               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  2386   001662  518C               	movf	(___lomod@divisor+3)& (0+255),w,b
  2387   001664  5984               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  2388   001666  518D               	movf	(___lomod@divisor+4)& (0+255),w,b
  2389   001668  5985               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  2390   00166A  518E               	movf	(___lomod@divisor+5)& (0+255),w,b
  2391   00166C  5986               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  2392   00166E  518F               	movf	(___lomod@divisor+6)& (0+255),w,b
  2393   001670  5987               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  2394   001672  5190               	movf	(___lomod@divisor+7)& (0+255),w,b
  2395   001674  5988               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  2396   001676  A0D8               	btfss	status,0,c
  2397   001678  EF40  F00B         	goto	u2521
  2398   00167C  EF42  F00B         	goto	u2520
  2399   001680                     u2521:
  2400   001680  EF52  F00B         	goto	l3576
  2401   001684                     u2520:
  2402   001684                     
  2403                           ; BSR set to: 0
  2404   001684  5189               	movf	___lomod@divisor& (0+255),w,b
  2405   001686  5F81               	subwf	___lomod@dividend& (0+255),f,b
  2406   001688  518A               	movf	(___lomod@divisor+1)& (0+255),w,b
  2407   00168A  5B82               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  2408   00168C  518B               	movf	(___lomod@divisor+2)& (0+255),w,b
  2409   00168E  5B83               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  2410   001690  518C               	movf	(___lomod@divisor+3)& (0+255),w,b
  2411   001692  5B84               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  2412   001694  518D               	movf	(___lomod@divisor+4)& (0+255),w,b
  2413   001696  5B85               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  2414   001698  518E               	movf	(___lomod@divisor+5)& (0+255),w,b
  2415   00169A  5B86               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  2416   00169C  518F               	movf	(___lomod@divisor+6)& (0+255),w,b
  2417   00169E  5B87               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  2418   0016A0  5190               	movf	(___lomod@divisor+7)& (0+255),w,b
  2419   0016A2  5B88               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  2420   0016A4                     l3576:
  2421                           
  2422                           ; BSR set to: 0
  2423   0016A4  90D8               	bcf	status,0,c
  2424   0016A6  3390               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  2425   0016A8  338F               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  2426   0016AA  338E               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  2427   0016AC  338D               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  2428   0016AE  338C               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  2429   0016B0  338B               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  2430   0016B2  338A               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  2431   0016B4  3389               	rrcf	___lomod@divisor& (0+255),f,b
  2432   0016B6                     
  2433                           ; BSR set to: 0
  2434   0016B6  2F91               	decfsz	___lomod@counter& (0+255),f,b
  2435   0016B8  EF2B  F00B         	goto	l3572
  2436   0016BC                     l893:
  2437                           
  2438                           ; BSR set to: 0
  2439   0016BC  C081  F081         	movff	___lomod@dividend,?___lomod
  2440   0016C0  C082  F082         	movff	___lomod@dividend+1,?___lomod+1
  2441   0016C4  C083  F083         	movff	___lomod@dividend+2,?___lomod+2
  2442   0016C8  C084  F084         	movff	___lomod@dividend+3,?___lomod+3
  2443   0016CC  C085  F085         	movff	___lomod@dividend+4,?___lomod+4
  2444   0016D0  C086  F086         	movff	___lomod@dividend+5,?___lomod+5
  2445   0016D4  C087  F087         	movff	___lomod@dividend+6,?___lomod+6
  2446   0016D8  C088  F088         	movff	___lomod@dividend+7,?___lomod+7
  2447   0016DC                     
  2448                           ; BSR set to: 0
  2449   0016DC  0012               	return		;funcret
  2450   0016DE                     __end_of___lomod:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function ___lodiv *****************
  2454 ;; Defined at:
  2455 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  dividend        8   33[BANK0 ] unsigned long long 
  2458 ;;  divisor         8   41[BANK0 ] unsigned long long 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  quotient        8   49[BANK0 ] unsigned long long 
  2461 ;;  counter         1   57[BANK0 ] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  8   33[BANK0 ] unsigned long long 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0      16       0       0       0       0       0       0       0
  2472 ;;      Locals:         0       9       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         0      25       0       0       0       0       0       0       0
  2475 ;;Total ram usage:       25 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 9
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_utoa
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text10
  2486   00142A                     __ptext10:
  2487                           	callstack 0
  2488   00142A                     ___lodiv:
  2489                           	callstack 17
  2490   00142A  EE20  F091         	lfsr	2,___lodiv@quotient
  2491   00142E  0E07               	movlw	7
  2492   001430                     u2461:
  2493   001430  6ADE               	clrf	postinc2,c
  2494   001432  06E8               	decf	wreg,f,c
  2495   001434  E2FD               	bc	u2461
  2496   001436  0100               	movlb	0	; () banked
  2497   001438  5189               	movf	___lodiv@divisor& (0+255),w,b
  2498   00143A  118A               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  2499   00143C  118B               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  2500   00143E  118C               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  2501   001440  118D               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  2502   001442  118E               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  2503   001444  118F               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  2504   001446  1190               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  2505   001448  B4D8               	btfsc	status,2,c
  2506   00144A  EF29  F00A         	goto	u2471
  2507   00144E  EF2B  F00A         	goto	u2470
  2508   001452                     u2471:
  2509   001452  EF7D  F00A         	goto	l883
  2510   001456                     u2470:
  2511   001456                     
  2512                           ; BSR set to: 0
  2513   001456  0E01               	movlw	1
  2514   001458  6F99               	movwf	___lodiv@counter& (0+255),b
  2515   00145A  EF39  F00A         	goto	l3550
  2516   00145E                     l3548:
  2517                           
  2518                           ; BSR set to: 0
  2519   00145E  90D8               	bcf	status,0,c
  2520   001460  3789               	rlcf	___lodiv@divisor& (0+255),f,b
  2521   001462  378A               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  2522   001464  378B               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  2523   001466  378C               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  2524   001468  378D               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  2525   00146A  378E               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  2526   00146C  378F               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  2527   00146E  3790               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  2528   001470  2B99               	incf	___lodiv@counter& (0+255),f,b
  2529   001472                     l3550:
  2530                           
  2531                           ; BSR set to: 0
  2532   001472  AF90               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  2533   001474  EF3E  F00A         	goto	u2481
  2534   001478  EF40  F00A         	goto	u2480
  2535   00147C                     u2481:
  2536   00147C  EF2F  F00A         	goto	l3548
  2537   001480                     u2480:
  2538   001480                     l3552:
  2539                           
  2540                           ; BSR set to: 0
  2541   001480  90D8               	bcf	status,0,c
  2542   001482  3791               	rlcf	___lodiv@quotient& (0+255),f,b
  2543   001484  3792               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  2544   001486  3793               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  2545   001488  3794               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  2546   00148A  3795               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  2547   00148C  3796               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  2548   00148E  3797               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  2549   001490  3798               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  2550   001492                     
  2551                           ; BSR set to: 0
  2552   001492  5189               	movf	___lodiv@divisor& (0+255),w,b
  2553   001494  5D81               	subwf	___lodiv@dividend& (0+255),w,b
  2554   001496  518A               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2555   001498  5982               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  2556   00149A  518B               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2557   00149C  5983               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  2558   00149E  518C               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2559   0014A0  5984               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  2560   0014A2  518D               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2561   0014A4  5985               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  2562   0014A6  518E               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2563   0014A8  5986               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  2564   0014AA  518F               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2565   0014AC  5987               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  2566   0014AE  5190               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2567   0014B0  5988               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  2568   0014B2  A0D8               	btfss	status,0,c
  2569   0014B4  EF5E  F00A         	goto	u2491
  2570   0014B8  EF60  F00A         	goto	u2490
  2571   0014BC                     u2491:
  2572   0014BC  EF71  F00A         	goto	l3560
  2573   0014C0                     u2490:
  2574   0014C0                     
  2575                           ; BSR set to: 0
  2576   0014C0  5189               	movf	___lodiv@divisor& (0+255),w,b
  2577   0014C2  5F81               	subwf	___lodiv@dividend& (0+255),f,b
  2578   0014C4  518A               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2579   0014C6  5B82               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  2580   0014C8  518B               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2581   0014CA  5B83               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  2582   0014CC  518C               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2583   0014CE  5B84               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  2584   0014D0  518D               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2585   0014D2  5B85               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  2586   0014D4  518E               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2587   0014D6  5B86               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  2588   0014D8  518F               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2589   0014DA  5B87               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  2590   0014DC  5190               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2591   0014DE  5B88               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  2592   0014E0                     
  2593                           ; BSR set to: 0
  2594   0014E0  8191               	bsf	___lodiv@quotient& (0+255),0,b
  2595   0014E2                     l3560:
  2596                           
  2597                           ; BSR set to: 0
  2598   0014E2  90D8               	bcf	status,0,c
  2599   0014E4  3390               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  2600   0014E6  338F               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  2601   0014E8  338E               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  2602   0014EA  338D               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  2603   0014EC  338C               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  2604   0014EE  338B               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  2605   0014F0  338A               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  2606   0014F2  3389               	rrcf	___lodiv@divisor& (0+255),f,b
  2607   0014F4                     
  2608                           ; BSR set to: 0
  2609   0014F4  2F99               	decfsz	___lodiv@counter& (0+255),f,b
  2610   0014F6  EF40  F00A         	goto	l3552
  2611   0014FA                     l883:
  2612                           
  2613                           ; BSR set to: 0
  2614   0014FA  C091  F081         	movff	___lodiv@quotient,?___lodiv
  2615   0014FE  C092  F082         	movff	___lodiv@quotient+1,?___lodiv+1
  2616   001502  C093  F083         	movff	___lodiv@quotient+2,?___lodiv+2
  2617   001506  C094  F084         	movff	___lodiv@quotient+3,?___lodiv+3
  2618   00150A  C095  F085         	movff	___lodiv@quotient+4,?___lodiv+4
  2619   00150E  C096  F086         	movff	___lodiv@quotient+5,?___lodiv+5
  2620   001512  C097  F087         	movff	___lodiv@quotient+6,?___lodiv+6
  2621   001516  C098  F088         	movff	___lodiv@quotient+7,?___lodiv+7
  2622   00151A                     
  2623                           ; BSR set to: 0
  2624   00151A  0012               	return		;funcret
  2625   00151C                     __end_of___lodiv:
  2626                           	callstack 0
  2627                           
  2628 ;; *************** function _atoi *****************
  2629 ;; Defined at:
  2630 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  s               2   39[BANK0 ] PTR const unsigned char 
  2633 ;;		 -> STR_2(23), STR_1(23), 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  n               2   46[BANK0 ] int 
  2636 ;;  neg             2   44[BANK0 ] int 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2   39[BANK0 ] int 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:         0       2       0       0       0       0       0       0       0
  2647 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2648 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2649 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2650 ;;Total ram usage:        9 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 10
  2653 ;; This function calls:
  2654 ;;		___wmul
  2655 ;;		_isdigit
  2656 ;;		_isspace
  2657 ;; This function is called by:
  2658 ;;		_vfpfcnvrt
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text11
  2663   001192                     __ptext11:
  2664                           	callstack 0
  2665   001192                     _atoi:
  2666                           	callstack 17
  2667   001192  0E00               	movlw	0
  2668   001194  0100               	movlb	0	; () banked
  2669   001196  6F8F               	movwf	(atoi@n+1)& (0+255),b
  2670   001198  0E00               	movlw	0
  2671   00119A  6F8E               	movwf	atoi@n& (0+255),b
  2672   00119C  0E00               	movlw	0
  2673   00119E  6F8D               	movwf	(atoi@neg+1)& (0+255),b
  2674   0011A0  0E00               	movlw	0
  2675   0011A2  6F8C               	movwf	atoi@neg& (0+255),b
  2676   0011A4  EFD6  F008         	goto	l3656
  2677   0011A8                     l3652:
  2678                           
  2679                           ; BSR set to: 0
  2680   0011A8  4B87               	infsnz	atoi@s& (0+255),f,b
  2681   0011AA  2B88               	incf	(atoi@s+1)& (0+255),f,b
  2682   0011AC                     l3656:
  2683                           
  2684                           ; BSR set to: 0
  2685   0011AC  C087  FFF6         	movff	atoi@s,tblptrl
  2686   0011B0  C088  FFF7         	movff	atoi@s+1,tblptrh
  2687   0011B4                     	if	0	;tblptru may be non-zero
  2688   0011B4                     	endif
  2689   0011B4                     	if	0	;tblptru may be non-zero
  2690   0011B4                     	endif
  2691   0011B4  0008               	tblrd		*
  2692   0011B6  50F5               	movf	tablat,w,c
  2693   0011B8  0A20               	xorlw	32
  2694   0011BA  B4D8               	btfsc	status,2,c
  2695   0011BC  EFE2  F008         	goto	u2681
  2696   0011C0  EFE4  F008         	goto	u2680
  2697   0011C4                     u2681:
  2698   0011C4  EFD4  F008         	goto	l3652
  2699   0011C8                     u2680:
  2700   0011C8                     
  2701                           ; BSR set to: 0
  2702   0011C8  C087  FFF6         	movff	atoi@s,tblptrl
  2703   0011CC  C088  FFF7         	movff	atoi@s+1,tblptrh
  2704   0011D0                     	if	0	;tblptru may be non-zero
  2705   0011D0                     	endif
  2706   0011D0                     	if	0	;tblptru may be non-zero
  2707   0011D0                     	endif
  2708   0011D0  0008               	tblrd		*
  2709   0011D2  CFF5 F089          	movff	tablat,??_atoi
  2710   0011D6  0EF7               	movlw	247
  2711   0011D8  2589               	addwf	??_atoi& (0+255),w,b
  2712   0011DA  6F8A               	movwf	(??_atoi+1)& (0+255),b
  2713   0011DC  6B8B               	clrf	(??_atoi+2)& (0+255),b
  2714   0011DE  0EFF               	movlw	255
  2715   0011E0  238B               	addwfc	(??_atoi+2)& (0+255),f,b
  2716   0011E2  518B               	movf	(??_atoi+2)& (0+255),w,b
  2717   0011E4  E109               	bnz	u2690
  2718   0011E6  0E05               	movlw	5
  2719   0011E8  5D8A               	subwf	(??_atoi+1)& (0+255),w,b
  2720   0011EA  A0D8               	btfss	status,0,c
  2721   0011EC  EFFA  F008         	goto	u2691
  2722   0011F0  EFFC  F008         	goto	u2690
  2723   0011F4                     u2691:
  2724   0011F4  EFD4  F008         	goto	l3652
  2725   0011F8                     u2690:
  2726   0011F8  EF06  F009         	goto	l3664
  2727   0011FC                     l3660:
  2728                           
  2729                           ; BSR set to: 0
  2730   0011FC  0E00               	movlw	0
  2731   0011FE  6F8D               	movwf	(atoi@neg+1)& (0+255),b
  2732   001200  0E01               	movlw	1
  2733   001202  6F8C               	movwf	atoi@neg& (0+255),b
  2734   001204                     l3662:
  2735                           
  2736                           ; BSR set to: 0
  2737   001204  4B87               	infsnz	atoi@s& (0+255),f,b
  2738   001206  2B88               	incf	(atoi@s+1)& (0+255),f,b
  2739   001208  EF3C  F009         	goto	l3672
  2740   00120C                     l3664:
  2741                           
  2742                           ; BSR set to: 0
  2743   00120C  C087  FFF6         	movff	atoi@s,tblptrl
  2744   001210  C088  FFF7         	movff	atoi@s+1,tblptrh
  2745   001214                     	if	0	;tblptru may be non-zero
  2746   001214                     	endif
  2747   001214                     	if	0	;tblptru may be non-zero
  2748   001214                     	endif
  2749   001214  0008               	tblrd		*
  2750   001216  50F5               	movf	tablat,w,c
  2751   001218  6F89               	movwf	??_atoi& (0+255),b
  2752   00121A  6B8A               	clrf	(??_atoi+1)& (0+255),b
  2753                           
  2754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2755                           ; Switch size 1, requested type "simple"
  2756                           ; Number of cases is 1, Range of values is 0 to 0
  2757                           ; switch strategies available:
  2758                           ; Name         Instructions Cycles
  2759                           ; simple_byte            4     3 (average)
  2760                           ;	Chosen strategy is simple_byte
  2761   00121C  518A               	movf	(??_atoi+1)& (0+255),w,b
  2762   00121E  0A00               	xorlw	0	; case 0
  2763   001220  B4D8               	btfsc	status,2,c
  2764   001222  EF15  F009         	goto	l3928
  2765   001226  EF3C  F009         	goto	l3672
  2766   00122A                     l3928:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ; Switch size 1, requested type "simple"
  2770                           ; Number of cases is 2, Range of values is 43 to 45
  2771                           ; switch strategies available:
  2772                           ; Name         Instructions Cycles
  2773                           ; simple_byte            7     4 (average)
  2774                           ;	Chosen strategy is simple_byte
  2775   00122A  5189               	movf	??_atoi& (0+255),w,b
  2776   00122C  0A2B               	xorlw	43	; case 43
  2777   00122E  B4D8               	btfsc	status,2,c
  2778   001230  EF02  F009         	goto	l3662
  2779   001234  0A06               	xorlw	6	; case 45
  2780   001236  B4D8               	btfsc	status,2,c
  2781   001238  EFFE  F008         	goto	l3660
  2782   00123C  EF3C  F009         	goto	l3672
  2783   001240                     l3666:
  2784                           
  2785                           ; BSR set to: 0
  2786   001240  C08E  F081         	movff	atoi@n,___wmul@multiplier
  2787   001244  C08F  F082         	movff	atoi@n+1,___wmul@multiplier+1
  2788   001248  0E00               	movlw	0
  2789   00124A  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2790   00124C  0E0A               	movlw	10
  2791   00124E  6F83               	movwf	___wmul@multiplicand& (0+255),b
  2792   001250  EC62  F010         	call	___wmul	;wreg free
  2793   001254  C087  FFF6         	movff	atoi@s,tblptrl
  2794   001258  C088  FFF7         	movff	atoi@s+1,tblptrh
  2795   00125C                     	if	0	;tblptru may be non-zero
  2796   00125C                     	endif
  2797   00125C                     	if	0	;tblptru may be non-zero
  2798   00125C                     	endif
  2799   00125C  0008               	tblrd		*
  2800   00125E  50F5               	movf	tablat,w,c
  2801   001260  0100               	movlb	0	; () banked
  2802   001262  5F81               	subwf	?___wmul& (0+255),f,b
  2803   001264  0E00               	movlw	0
  2804   001266  5B82               	subwfb	(?___wmul+1)& (0+255),f,b
  2805   001268  0E30               	movlw	48
  2806   00126A  2581               	addwf	?___wmul& (0+255),w,b
  2807   00126C  6F8E               	movwf	atoi@n& (0+255),b
  2808   00126E  0E00               	movlw	0
  2809   001270  2182               	addwfc	(?___wmul+1)& (0+255),w,b
  2810   001272  6F8F               	movwf	(atoi@n+1)& (0+255),b
  2811   001274  EF02  F009         	goto	l3662
  2812   001278                     l3672:
  2813                           
  2814                           ; BSR set to: 0
  2815   001278  C087  FFF6         	movff	atoi@s,tblptrl
  2816   00127C  C088  FFF7         	movff	atoi@s+1,tblptrh
  2817   001280                     	if	0	;tblptru may be non-zero
  2818   001280                     	endif
  2819   001280                     	if	0	;tblptru may be non-zero
  2820   001280                     	endif
  2821   001280  0008               	tblrd		*
  2822   001282  CFF5 F089          	movff	tablat,??_atoi
  2823   001286  0ED0               	movlw	208
  2824   001288  2589               	addwf	??_atoi& (0+255),w,b
  2825   00128A  6F8A               	movwf	(??_atoi+1)& (0+255),b
  2826   00128C  6B8B               	clrf	(??_atoi+2)& (0+255),b
  2827   00128E  0EFF               	movlw	255
  2828   001290  238B               	addwfc	(??_atoi+2)& (0+255),f,b
  2829   001292  518B               	movf	(??_atoi+2)& (0+255),w,b
  2830   001294  E109               	bnz	u2700
  2831   001296  0E0A               	movlw	10
  2832   001298  5D8A               	subwf	(??_atoi+1)& (0+255),w,b
  2833   00129A  A0D8               	btfss	status,0,c
  2834   00129C  EF52  F009         	goto	u2701
  2835   0012A0  EF54  F009         	goto	u2700
  2836   0012A4                     u2701:
  2837   0012A4  EF20  F009         	goto	l3666
  2838   0012A8                     u2700:
  2839   0012A8                     
  2840                           ; BSR set to: 0
  2841   0012A8  518C               	movf	atoi@neg& (0+255),w,b
  2842   0012AA  118D               	iorwf	(atoi@neg+1)& (0+255),w,b
  2843   0012AC  A4D8               	btfss	status,2,c
  2844   0012AE  EF5B  F009         	goto	u2711
  2845   0012B2  EF5D  F009         	goto	u2710
  2846   0012B6                     u2711:
  2847   0012B6  EF6B  F009         	goto	l1221
  2848   0012BA                     u2710:
  2849   0012BA                     
  2850                           ; BSR set to: 0
  2851   0012BA  C08E  F089         	movff	atoi@n,??_atoi
  2852   0012BE  C08F  F08A         	movff	atoi@n+1,??_atoi+1
  2853   0012C2  1F89               	comf	??_atoi& (0+255),f,b
  2854   0012C4  1F8A               	comf	(??_atoi+1)& (0+255),f,b
  2855   0012C6  4B89               	infsnz	??_atoi& (0+255),f,b
  2856   0012C8  2B8A               	incf	(??_atoi+1)& (0+255),f,b
  2857   0012CA  C089  F087         	movff	??_atoi,?_atoi
  2858   0012CE  C08A  F088         	movff	??_atoi+1,?_atoi+1
  2859   0012D2  EF6F  F009         	goto	l1224
  2860   0012D6                     l1221:
  2861                           
  2862                           ; BSR set to: 0
  2863   0012D6  C08E  F087         	movff	atoi@n,?_atoi
  2864   0012DA  C08F  F088         	movff	atoi@n+1,?_atoi+1
  2865   0012DE                     l1224:
  2866                           
  2867                           ; BSR set to: 0
  2868   0012DE  0012               	return		;funcret
  2869   0012E0                     __end_of_atoi:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _isspace *****************
  2873 ;; Defined at:
  2874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  c               2   33[BANK0 ] int 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  2   33[BANK0 ] int 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2888 ;;      Params:         0       2       0       0       0       0       0       0       0
  2889 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2890 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2891 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2892 ;;Total ram usage:        5 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 9
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_atoi
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text12
  2903   001ED8                     __ptext12:
  2904                           	callstack 0
  2905   001ED8                     _isspace:
  2906                           	callstack 17
  2907   001ED8  0E01               	movlw	1
  2908   001EDA  0100               	movlb	0	; () banked
  2909   001EDC  6F85               	movwf	_isspace$2097& (0+255),b
  2910   001EDE                     
  2911                           ; BSR set to: 0
  2912   001EDE  0E20               	movlw	32
  2913   001EE0  1981               	xorwf	isspace@c& (0+255),w,b
  2914   001EE2  1182               	iorwf	(isspace@c+1)& (0+255),w,b
  2915   001EE4  B4D8               	btfsc	status,2,c
  2916   001EE6  EF77  F00F         	goto	u2591
  2917   001EEA  EF79  F00F         	goto	u2590
  2918   001EEE                     u2591:
  2919   001EEE  EF8C  F00F         	goto	l3610
  2920   001EF2                     u2590:
  2921   001EF2                     
  2922                           ; BSR set to: 0
  2923   001EF2  0EF7               	movlw	247
  2924   001EF4  2581               	addwf	isspace@c& (0+255),w,b
  2925   001EF6  6F83               	movwf	??_isspace& (0+255),b
  2926   001EF8  0EFF               	movlw	255
  2927   001EFA  2182               	addwfc	(isspace@c+1)& (0+255),w,b
  2928   001EFC  6F84               	movwf	(??_isspace+1)& (0+255),b
  2929   001EFE  5184               	movf	(??_isspace+1)& (0+255),w,b
  2930   001F00  E109               	bnz	u2600
  2931   001F02  0E05               	movlw	5
  2932   001F04  5D83               	subwf	??_isspace& (0+255),w,b
  2933   001F06  A0D8               	btfss	status,0,c
  2934   001F08  EF88  F00F         	goto	u2601
  2935   001F0C  EF8A  F00F         	goto	u2600
  2936   001F10                     u2601:
  2937   001F10  EF8C  F00F         	goto	l3610
  2938   001F14                     u2600:
  2939   001F14                     
  2940                           ; BSR set to: 0
  2941   001F14  0E00               	movlw	0
  2942   001F16  6F85               	movwf	_isspace$2097& (0+255),b
  2943   001F18                     l3610:
  2944                           
  2945                           ; BSR set to: 0
  2946   001F18  C085  F081         	movff	_isspace$2097,?_isspace
  2947   001F1C  6B82               	clrf	(?_isspace+1)& (0+255),b
  2948   001F1E                     
  2949                           ; BSR set to: 0
  2950   001F1E  0012               	return		;funcret
  2951   001F20                     __end_of_isspace:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _isdigit *****************
  2955 ;; Defined at:
  2956 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  c               2   33[BANK0 ] int 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  2   33[BANK0 ] int 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       2       0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2973 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        4 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 9
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_vfpfcnvrt
  2981 ;;		_atoi
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text13
  2986   002096                     __ptext13:
  2987                           	callstack 0
  2988   002096                     _isdigit:
  2989                           	callstack 18
  2990   002096  0ED0               	movlw	208
  2991   002098  0100               	movlb	0	; () banked
  2992   00209A  2581               	addwf	isdigit@c& (0+255),w,b
  2993   00209C  6F83               	movwf	??_isdigit& (0+255),b
  2994   00209E  0EFF               	movlw	255
  2995   0020A0  2182               	addwfc	(isdigit@c+1)& (0+255),w,b
  2996   0020A2  6F84               	movwf	(??_isdigit+1)& (0+255),b
  2997   0020A4  5184               	movf	(??_isdigit+1)& (0+255),w,b
  2998   0020A6  E10A               	bnz	u2570
  2999   0020A8  0E0A               	movlw	10
  3000   0020AA  5D83               	subwf	??_isdigit& (0+255),w,b
  3001   0020AC  A0D8               	btfss	status,0,c
  3002   0020AE  EF5B  F010         	goto	u2571
  3003   0020B2  EF5E  F010         	goto	u2570
  3004   0020B6                     u2571:
  3005   0020B6  0E01               	movlw	1
  3006   0020B8  EF5F  F010         	goto	u2580
  3007   0020BC                     u2570:
  3008   0020BC  0E00               	movlw	0
  3009   0020BE                     u2580:
  3010   0020BE  6F81               	movwf	?_isdigit& (0+255),b
  3011   0020C0  6B82               	clrf	(?_isdigit+1)& (0+255),b
  3012   0020C2                     
  3013                           ; BSR set to: 0
  3014   0020C2  0012               	return		;funcret
  3015   0020C4                     __end_of_isdigit:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function ___wmul *****************
  3019 ;; Defined at:
  3020 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  multiplier      2   33[BANK0 ] unsigned int 
  3023 ;;  multiplicand    2   35[BANK0 ] unsigned int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  product         2   37[BANK0 ] unsigned int 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  2   33[BANK0 ] unsigned int 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, prodl, prodh
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3035 ;;      Params:         0       4       0       0       0       0       0       0       0
  3036 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3038 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3039 ;;Total ram usage:        6 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 9
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_atoi
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text14
  3050   0020C4                     __ptext14:
  3051                           	callstack 0
  3052   0020C4                     ___wmul:
  3053                           	callstack 17
  3054   0020C4  0100               	movlb	0	; () banked
  3055   0020C6  5181               	movf	___wmul@multiplier& (0+255),w,b
  3056   0020C8  0383               	mulwf	___wmul@multiplicand& (0+255),b
  3057   0020CA  CFF3 F085          	movff	prodl,___wmul@product
  3058   0020CE  CFF4 F086          	movff	prodh,___wmul@product+1
  3059   0020D2  5181               	movf	___wmul@multiplier& (0+255),w,b
  3060   0020D4  0384               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3061   0020D6  50F3               	movf	243,w,c
  3062   0020D8  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  3063   0020DA  5182               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3064   0020DC  0383               	mulwf	___wmul@multiplicand& (0+255),b
  3065   0020DE  50F3               	movf	243,w,c
  3066   0020E0  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  3067   0020E2                     
  3068                           ; BSR set to: 0
  3069   0020E2  C085  F081         	movff	___wmul@product,?___wmul
  3070   0020E6  C086  F082         	movff	___wmul@product+1,?___wmul+1
  3071   0020EA                     
  3072                           ; BSR set to: 0
  3073   0020EA  0012               	return		;funcret
  3074   0020EC                     __end_of___wmul:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _Lcd_Write_String *****************
  3078 ;; Defined at:
  3079 ;;		line 113 in file "lib_pic/lcd_2x16.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  a               2   37[BANK0 ] PTR unsigned char 
  3082 ;;		 -> strReloj(20), 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  i               2   39[BANK0 ] int 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         0       2       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        4 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 11
  3101 ;; This function calls:
  3102 ;;		_Lcd_Write_Char
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text15
  3109   001F20                     __ptext15:
  3110                           	callstack 0
  3111   001F20                     _Lcd_Write_String:
  3112                           	callstack 19
  3113   001F20                     
  3114                           ;lib_pic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);lib_pic/lcd_2x16.c: 11
      +                          4: {;lib_pic/lcd_2x16.c: 115:  int i;;lib_pic/lcd_2x16.c: 116:  for(i=0;a[i]!='\0';i++)
  3115   001F20  0E00               	movlw	0
  3116   001F22  0100               	movlb	0	; () banked
  3117   001F24  6F88               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  3118   001F26  0E00               	movlw	0
  3119   001F28  6F87               	movwf	Lcd_Write_String@i& (0+255),b
  3120   001F2A  EFA3  F00F         	goto	l3178
  3121   001F2E                     l3174:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;lib_pic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  3125   001F2E  5187               	movf	Lcd_Write_String@i& (0+255),w,b
  3126   001F30  2585               	addwf	Lcd_Write_String@a& (0+255),w,b
  3127   001F32  6ED9               	movwf	fsr2l,c
  3128   001F34  5188               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3129   001F36  2186               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3130   001F38  6EDA               	movwf	fsr2h,c
  3131   001F3A  50DF               	movf	indf2,w,c
  3132   001F3C  ECF4  F00F         	call	_Lcd_Write_Char
  3133   001F40  0100               	movlb	0	; () banked
  3134   001F42  4B87               	infsnz	Lcd_Write_String@i& (0+255),f,b
  3135   001F44  2B88               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  3136   001F46                     l3178:
  3137                           
  3138                           ; BSR set to: 0
  3139   001F46  5187               	movf	Lcd_Write_String@i& (0+255),w,b
  3140   001F48  2585               	addwf	Lcd_Write_String@a& (0+255),w,b
  3141   001F4A  6ED9               	movwf	fsr2l,c
  3142   001F4C  5188               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3143   001F4E  2186               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3144   001F50  6EDA               	movwf	fsr2h,c
  3145   001F52  50DF               	movf	indf2,w,c
  3146   001F54  A4D8               	btfss	status,2,c
  3147   001F56  EFAF  F00F         	goto	u2191
  3148   001F5A  EFB1  F00F         	goto	u2190
  3149   001F5E                     u2191:
  3150   001F5E  EF97  F00F         	goto	l3174
  3151   001F62                     u2190:
  3152   001F62                     
  3153                           ; BSR set to: 0
  3154   001F62  0012               	return		;funcret
  3155   001F64                     __end_of_Lcd_Write_String:
  3156                           	callstack 0
  3157                           
  3158 ;; *************** function _Lcd_Write_Char *****************
  3159 ;; Defined at:
  3160 ;;		line 96 in file "lib_pic/lcd_2x16.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  a               1    wreg     unsigned char 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  a               1   36[BANK0 ] unsigned char 
  3165 ;;  y               1   35[BANK0 ] unsigned char 
  3166 ;;  temp            1   34[BANK0 ] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0
  3177 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3179 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3180 ;;Total ram usage:        3 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 10
  3183 ;; This function calls:
  3184 ;;		_Lcd_Port
  3185 ;; This function is called by:
  3186 ;;		_Lcd_Write_String
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text16
  3191   001FE8                     __ptext16:
  3192                           	callstack 0
  3193   001FE8                     _Lcd_Write_Char:
  3194                           	callstack 19
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;incstack = 0
  3198                           ;Lcd_Write_Char@a stored from wreg
  3199   001FE8  0100               	movlb	0	; () banked
  3200   001FEA  6F84               	movwf	Lcd_Write_Char@a& (0+255),b
  3201   001FEC                     
  3202                           ;lib_pic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);lib_pic/lcd_2x16.c: 97: {;
      +                          lib_pic/lcd_2x16.c: 98:    char temp,y;;lib_pic/lcd_2x16.c: 99:    temp = a&0x0F;
  3203   001FEC  0100               	movlb	0	; () banked
  3204   001FEE  5184               	movf	Lcd_Write_Char@a& (0+255),w,b
  3205   001FF0  0B0F               	andlw	15
  3206   001FF2  6F82               	movwf	Lcd_Write_Char@temp& (0+255),b
  3207                           
  3208                           ;lib_pic/lcd_2x16.c: 100:    y = a&0xF0;
  3209   001FF4  5184               	movf	Lcd_Write_Char@a& (0+255),w,b
  3210   001FF6  0BF0               	andlw	240
  3211   001FF8  6F83               	movwf	Lcd_Write_Char@y& (0+255),b
  3212   001FFA                     
  3213                           ; BSR set to: 0
  3214                           ;lib_pic/lcd_2x16.c: 101:    PORTD |= (1<<2);
  3215   001FFA  8483               	bsf	131,2,c	;volatile
  3216   001FFC                     
  3217                           ; BSR set to: 0
  3218                           ;lib_pic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  3219   001FFC  3983               	swapf	Lcd_Write_Char@y& (0+255),w,b
  3220   001FFE  0B0F               	andlw	15
  3221   002000  ECFB  F00D         	call	_Lcd_Port
  3222   002004                     
  3223                           ;lib_pic/lcd_2x16.c: 103:    PORTD |= (1<<3);
  3224   002004  8683               	bsf	131,3,c	;volatile
  3225   002006                     
  3226                           ;lib_pic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  3227   002006  0E1A               	movlw	26
  3228   002008                     u2797:
  3229   002008  2EE8               	decfsz	wreg,f,c
  3230   00200A  D7FE               	bra	u2797
  3231   00200C  D000               	nop2	
  3232   00200E                     
  3233                           ;lib_pic/lcd_2x16.c: 105:    PORTD &= ~(1<<3);
  3234   00200E  9683               	bcf	131,3,c	;volatile
  3235                           
  3236                           ;lib_pic/lcd_2x16.c: 106:    Lcd_Port(temp);
  3237   002010  0100               	movlb	0	; () banked
  3238   002012  5182               	movf	Lcd_Write_Char@temp& (0+255),w,b
  3239   002014  ECFB  F00D         	call	_Lcd_Port
  3240   002018                     
  3241                           ;lib_pic/lcd_2x16.c: 107:    PORTD |= (1<<3);
  3242   002018  8683               	bsf	131,3,c	;volatile
  3243   00201A                     
  3244                           ;lib_pic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  3245   00201A  0E1A               	movlw	26
  3246   00201C                     u2807:
  3247   00201C  2EE8               	decfsz	wreg,f,c
  3248   00201E  D7FE               	bra	u2807
  3249   002020  D000               	nop2	
  3250   002022                     
  3251                           ;lib_pic/lcd_2x16.c: 109:    PORTD &= ~(1<<3);
  3252   002022  9683               	bcf	131,3,c	;volatile
  3253   002024  0012               	return		;funcret
  3254   002026                     __end_of_Lcd_Write_Char:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _Lcd_Set_Cursor *****************
  3258 ;; Defined at:
  3259 ;;		line 50 in file "lib_pic/lcd_2x16.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  a               1    wreg     unsigned char 
  3262 ;;  b               1   36[BANK0 ] unsigned char 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  a               1   37[BANK0 ] unsigned char 
  3265 ;;  temp            1   40[BANK0 ] unsigned char 
  3266 ;;  y               1   39[BANK0 ] unsigned char 
  3267 ;;  z               1   38[BANK0 ] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3277 ;;      Params:         0       1       0       0       0       0       0       0       0
  3278 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3280 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3281 ;;Total ram usage:        5 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 11
  3284 ;; This function calls:
  3285 ;;		_Lcd_Cmd
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text17
  3292   001B22                     __ptext17:
  3293                           	callstack 0
  3294   001B22                     _Lcd_Set_Cursor:
  3295                           	callstack 19
  3296                           
  3297                           ;incstack = 0
  3298                           ;Lcd_Set_Cursor@a stored from wreg
  3299   001B22  0100               	movlb	0	; () banked
  3300   001B24  6F85               	movwf	Lcd_Set_Cursor@a& (0+255),b
  3301   001B26                     
  3302                           ;lib_pic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/l
      +                          cd_2x16.c: 51: {;lib_pic/lcd_2x16.c: 52:  char temp,z,y;;lib_pic/lcd_2x16.c: 53:  if(a =
      +                          = 1)
  3303   001B26  0100               	movlb	0	; () banked
  3304   001B28  0585               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  3305   001B2A  A4D8               	btfss	status,2,c
  3306   001B2C  EF9A  F00D         	goto	u2171
  3307   001B30  EF9C  F00D         	goto	u2170
  3308   001B34                     u2171:
  3309   001B34  EFAE  F00D         	goto	l3152
  3310   001B38                     u2170:
  3311   001B38                     
  3312                           ; BSR set to: 0
  3313                           ;lib_pic/lcd_2x16.c: 54:  {;lib_pic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  3314   001B38  5184               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3315   001B3A  0F7F               	addlw	127
  3316   001B3C  6F88               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3317                           
  3318                           ;lib_pic/lcd_2x16.c: 56:   z = temp>>4;
  3319   001B3E  3988               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3320   001B40  0B0F               	andlw	15
  3321   001B42  6F86               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3322                           
  3323                           ;lib_pic/lcd_2x16.c: 57:   y = temp & 0x0F;
  3324   001B44  5188               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3325   001B46  0B0F               	andlw	15
  3326   001B48  6F87               	movwf	Lcd_Set_Cursor@y& (0+255),b
  3327   001B4A                     
  3328                           ; BSR set to: 0
  3329                           ;lib_pic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  3330   001B4A  5186               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  3331   001B4C  EC76  F010         	call	_Lcd_Cmd
  3332   001B50                     
  3333                           ;lib_pic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  3334   001B50  0100               	movlb	0	; () banked
  3335   001B52  5187               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  3336   001B54  EC76  F010         	call	_Lcd_Cmd
  3337                           
  3338                           ;lib_pic/lcd_2x16.c: 60:  }
  3339   001B58  EFC7  F00D         	goto	l290
  3340   001B5C                     l3152:
  3341                           
  3342                           ; BSR set to: 0
  3343   001B5C  0E02               	movlw	2
  3344   001B5E  1985               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  3345   001B60  A4D8               	btfss	status,2,c
  3346   001B62  EFB5  F00D         	goto	u2181
  3347   001B66  EFB7  F00D         	goto	u2180
  3348   001B6A                     u2181:
  3349   001B6A  EFC7  F00D         	goto	l290
  3350   001B6E                     u2180:
  3351   001B6E                     
  3352                           ; BSR set to: 0
  3353                           ;lib_pic/lcd_2x16.c: 62:  {;lib_pic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  3354   001B6E  5184               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3355   001B70  0FBF               	addlw	191
  3356   001B72  6F88               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3357                           
  3358                           ;lib_pic/lcd_2x16.c: 64:   z = temp>>4;
  3359   001B74  3988               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3360   001B76  0B0F               	andlw	15
  3361   001B78  6F86               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3362                           
  3363                           ;lib_pic/lcd_2x16.c: 65:   y = temp & 0x0F;
  3364   001B7A  5188               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3365   001B7C  0B0F               	andlw	15
  3366   001B7E  6F87               	movwf	Lcd_Set_Cursor@y& (0+255),b
  3367   001B80                     
  3368                           ; BSR set to: 0
  3369                           ;lib_pic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  3370   001B80  5186               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  3371   001B82  EC76  F010         	call	_Lcd_Cmd
  3372   001B86                     
  3373                           ;lib_pic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  3374   001B86  0100               	movlb	0	; () banked
  3375   001B88  5187               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  3376   001B8A  EC76  F010         	call	_Lcd_Cmd
  3377   001B8E                     l290:
  3378   001B8E  0012               	return		;funcret
  3379   001B90                     __end_of_Lcd_Set_Cursor:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function _Lcd_Clear *****************
  3383 ;; Defined at:
  3384 ;;		line 43 in file "lib_pic/lcd_2x16.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 11
  3405 ;; This function calls:
  3406 ;;		_Lcd_Cmd
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text18
  3413   0021F0                     __ptext18:
  3414                           	callstack 0
  3415   0021F0                     _Lcd_Clear:
  3416                           	callstack 19
  3417   0021F0                     
  3418                           ;lib_pic/lcd_2x16.c: 45:  Lcd_Cmd(0);
  3419   0021F0  0E00               	movlw	0
  3420   0021F2  EC76  F010         	call	_Lcd_Cmd
  3421                           
  3422                           ;lib_pic/lcd_2x16.c: 46:  Lcd_Cmd(1);
  3423   0021F6  0E01               	movlw	1
  3424   0021F8  EC76  F010         	call	_Lcd_Cmd
  3425   0021FC  0012               	return		;funcret
  3426   0021FE                     __end_of_Lcd_Clear:
  3427                           	callstack 0
  3428                           
  3429 ;; *************** function _Hardware_Init *****************
  3430 ;; Defined at:
  3431 ;;		line 91 in file "Gpio_Lcd_Buzzer.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3445 ;;      Params:         0       0       0       0       0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3448 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3449 ;;Total ram usage:        0 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; Hardware stack levels required when called: 12
  3452 ;; This function calls:
  3453 ;;		_INTERRUPT_Global_Config
  3454 ;;		_Lcd_Init
  3455 ;;		_OSCILADOR_Init
  3456 ;;		_PORT_Init
  3457 ;;		_TMR0_Temporizador_Init
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text19
  3464   00218E                     __ptext19:
  3465                           	callstack 0
  3466   00218E                     _Hardware_Init:
  3467                           	callstack 18
  3468   00218E                     
  3469                           ;Gpio_Lcd_Buzzer.c: 92:     OSCILADOR_Init();
  3470   00218E  ECE7  F010         	call	_OSCILADOR_Init	;wreg free
  3471                           
  3472                           ;Gpio_Lcd_Buzzer.c: 93:     PORT_Init();
  3473   002192  ECDD  F010         	call	_PORT_Init	;wreg free
  3474   002196                     
  3475                           ;Gpio_Lcd_Buzzer.c: 94:     Lcd_Init();
  3476   002196  EC51  F00D         	call	_Lcd_Init	;wreg free
  3477   00219A                     
  3478                           ;Gpio_Lcd_Buzzer.c: 95:     TMR0_Temporizador_Init();
  3479   00219A  ECAC  F010         	call	_TMR0_Temporizador_Init	;wreg free
  3480   00219E                     
  3481                           ;Gpio_Lcd_Buzzer.c: 96:     INTERRUPT_Global_Config();
  3482   00219E  ECFF  F010         	call	_INTERRUPT_Global_Config	;wreg free
  3483   0021A2  0012               	return		;funcret
  3484   0021A4                     __end_of_Hardware_Init:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _TMR0_Temporizador_Init *****************
  3488 ;; Defined at:
  3489 ;;		line 108 in file "Gpio_Lcd_Buzzer.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 9
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_Hardware_Init
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text20
  3518   002158                     __ptext20:
  3519                           	callstack 0
  3520   002158                     _TMR0_Temporizador_Init:
  3521                           	callstack 20
  3522   002158                     
  3523                           ;Gpio_Lcd_Buzzer.c: 109:     T0CONbits.T08BIT = 0;
  3524   002158  9CD5               	bcf	213,6,c	;volatile
  3525                           
  3526                           ;Gpio_Lcd_Buzzer.c: 110:     T0CONbits.T0CS = 0;
  3527   00215A  9AD5               	bcf	213,5,c	;volatile
  3528                           
  3529                           ;Gpio_Lcd_Buzzer.c: 111:     T0CONbits.PSA = 0;
  3530   00215C  96D5               	bcf	213,3,c	;volatile
  3531   00215E                     
  3532                           ;Gpio_Lcd_Buzzer.c: 112:     T0CONbits.T0PS = 0b101;
  3533   00215E  50D5               	movf	213,w,c	;volatile
  3534   002160  0BF8               	andlw	-8
  3535   002162  0905               	iorlw	5
  3536   002164  6ED5               	movwf	213,c	;volatile
  3537                           
  3538                           ;Gpio_Lcd_Buzzer.c: 115:     TMR0 = 3036;
  3539   002166  0E0B               	movlw	11
  3540   002168  6ED7               	movwf	215,c	;volatile
  3541   00216A  0EDC               	movlw	220
  3542   00216C  6ED6               	movwf	214,c	;volatile
  3543   00216E                     
  3544                           ;Gpio_Lcd_Buzzer.c: 118:     INTCONbits.TMR0IE = 1;
  3545   00216E  8AF2               	bsf	242,5,c	;volatile
  3546   002170                     
  3547                           ;Gpio_Lcd_Buzzer.c: 119:     INTCONbits.TMR0IF = 0;
  3548   002170  94F2               	bcf	242,2,c	;volatile
  3549   002172                     
  3550                           ;Gpio_Lcd_Buzzer.c: 122:     T0CONbits.TMR0ON = 1;
  3551   002172  8ED5               	bsf	213,7,c	;volatile
  3552   002174  0012               	return		;funcret
  3553   002176                     __end_of_TMR0_Temporizador_Init:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _PORT_Init *****************
  3557 ;; Defined at:
  3558 ;;		line 42 in file "Gpio_Lcd_Buzzer.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3572 ;;      Params:         0       0       0       0       0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 9
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_Hardware_Init
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text21
  3587   0021BA                     __ptext21:
  3588                           	callstack 0
  3589   0021BA                     _PORT_Init:
  3590                           	callstack 20
  3591   0021BA                     
  3592                           ;Gpio_Lcd_Buzzer.c: 44:     ANSELD = 0x00;
  3593   0021BA  0E00               	movlw	0
  3594   0021BC  010F               	movlb	15	; () banked
  3595   0021BE  6F5E               	movwf	94,b	;volatile
  3596   0021C0                     
  3597                           ; BSR set to: 15
  3598                           ;Gpio_Lcd_Buzzer.c: 47:     ANSELBbits.ANSB0 = 0;
  3599   0021C0  915C               	bcf	92,0,b	;volatile
  3600   0021C2                     
  3601                           ; BSR set to: 15
  3602                           ;Gpio_Lcd_Buzzer.c: 48:     TRISBbits.RB0 = 1;
  3603   0021C2  8093               	bsf	147,0,c	;volatile
  3604   0021C4                     
  3605                           ; BSR set to: 15
  3606                           ;Gpio_Lcd_Buzzer.c: 49:     ANSELBbits.ANSB1 = 0;
  3607   0021C4  935C               	bcf	92,1,b	;volatile
  3608   0021C6                     
  3609                           ; BSR set to: 15
  3610                           ;Gpio_Lcd_Buzzer.c: 50:     TRISBbits.RB1 = 1;
  3611   0021C6  8293               	bsf	147,1,c	;volatile
  3612   0021C8                     
  3613                           ; BSR set to: 15
  3614                           ;Gpio_Lcd_Buzzer.c: 51:     ANSELBbits.ANSB2 = 0;
  3615   0021C8  955C               	bcf	92,2,b	;volatile
  3616   0021CA                     
  3617                           ; BSR set to: 15
  3618                           ;Gpio_Lcd_Buzzer.c: 52:     TRISBbits.RB2 = 1;
  3619   0021CA  8493               	bsf	147,2,c	;volatile
  3620   0021CC                     
  3621                           ; BSR set to: 15
  3622   0021CC  0012               	return		;funcret
  3623   0021CE                     __end_of_PORT_Init:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _OSCILADOR_Init *****************
  3627 ;; Defined at:
  3628 ;;		line 5 in file "lib_pic/configDevice.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3642 ;;      Params:         0       0       0       0       0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 9
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_Hardware_Init
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text22
  3657   0021CE                     __ptext22:
  3658                           	callstack 0
  3659   0021CE                     _OSCILADOR_Init:
  3660                           	callstack 20
  3661   0021CE                     
  3662                           ;lib_pic/configDevice.c: 9:     OSCCONbits.IRCF = 0b110;
  3663   0021CE  50D3               	movf	211,w,c	;volatile
  3664   0021D0  0B8F               	andlw	-113
  3665   0021D2  0960               	iorlw	96
  3666   0021D4  6ED3               	movwf	211,c	;volatile
  3667                           
  3668                           ;lib_pic/configDevice.c: 10:     OSCCONbits.SCS = 0b10;
  3669   0021D6  50D3               	movf	211,w,c	;volatile
  3670   0021D8  0BFC               	andlw	-4
  3671   0021DA  0902               	iorlw	2
  3672   0021DC  6ED3               	movwf	211,c	;volatile
  3673   0021DE  0012               	return		;funcret
  3674   0021E0                     __end_of_OSCILADOR_Init:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _Lcd_Init *****************
  3678 ;; Defined at:
  3679 ;;		line 72 in file "lib_pic/lcd_2x16.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3695 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3696 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 11
  3700 ;; This function calls:
  3701 ;;		_Lcd_Cmd
  3702 ;;		_Lcd_Port
  3703 ;; This function is called by:
  3704 ;;		_Hardware_Init
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text23
  3709   001AA2                     __ptext23:
  3710                           	callstack 0
  3711   001AA2                     _Lcd_Init:
  3712                           	callstack 18
  3713   001AA2                     
  3714                           ;lib_pic/lcd_2x16.c: 75:  TRISD &= ~(0xF0);
  3715   001AA2  0E0F               	movlw	15
  3716   001AA4  1695               	andwf	149,f,c	;volatile
  3717                           
  3718                           ;lib_pic/lcd_2x16.c: 76:  TRISD &= ~((1<<3)|(1<<2));
  3719   001AA6  0EF3               	movlw	243
  3720   001AA8  1695               	andwf	149,f,c	;volatile
  3721   001AAA                     
  3722                           ;lib_pic/lcd_2x16.c: 78:  Lcd_Port(0x00);
  3723   001AAA  0E00               	movlw	0
  3724   001AAC  ECFB  F00D         	call	_Lcd_Port
  3725   001AB0                     
  3726                           ;lib_pic/lcd_2x16.c: 79:  _delay((unsigned long)((20)*(8000000UL/4000.0)));
  3727   001AB0  0E34               	movlw	52
  3728   001AB2  0100               	movlb	0	; () banked
  3729   001AB4  6F84               	movwf	??_Lcd_Init& (0+255),b
  3730   001AB6  0EF1               	movlw	241
  3731   001AB8                     u2817:
  3732   001AB8  2EE8               	decfsz	wreg,f,c
  3733   001ABA  D7FE               	bra	u2817
  3734   001ABC  2F84               	decfsz	??_Lcd_Init& (0+255),f,b
  3735   001ABE  D7FC               	bra	u2817
  3736   001AC0  D000               	nop2	
  3737   001AC2                     
  3738                           ;lib_pic/lcd_2x16.c: 80:  Lcd_Cmd(0x03);
  3739   001AC2  0E03               	movlw	3
  3740   001AC4  EC76  F010         	call	_Lcd_Cmd
  3741   001AC8                     
  3742                           ;lib_pic/lcd_2x16.c: 81:  _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3743   001AC8  0E0D               	movlw	13
  3744   001ACA  0100               	movlb	0	; () banked
  3745   001ACC  6F84               	movwf	??_Lcd_Init& (0+255),b
  3746   001ACE  0EFB               	movlw	251
  3747   001AD0                     u2827:
  3748   001AD0  2EE8               	decfsz	wreg,f,c
  3749   001AD2  D7FE               	bra	u2827
  3750   001AD4  2F84               	decfsz	??_Lcd_Init& (0+255),f,b
  3751   001AD6  D7FC               	bra	u2827
  3752   001AD8  D000               	nop2	
  3753   001ADA                     
  3754                           ;lib_pic/lcd_2x16.c: 82:  Lcd_Cmd(0x03);
  3755   001ADA  0E03               	movlw	3
  3756   001ADC  EC76  F010         	call	_Lcd_Cmd
  3757   001AE0                     
  3758                           ;lib_pic/lcd_2x16.c: 83:  _delay((unsigned long)((11)*(8000000UL/4000.0)));
  3759   001AE0  0E1D               	movlw	29
  3760   001AE2  0100               	movlb	0	; () banked
  3761   001AE4  6F84               	movwf	??_Lcd_Init& (0+255),b
  3762   001AE6  0E91               	movlw	145
  3763   001AE8                     u2837:
  3764   001AE8  2EE8               	decfsz	wreg,f,c
  3765   001AEA  D7FE               	bra	u2837
  3766   001AEC  2F84               	decfsz	??_Lcd_Init& (0+255),f,b
  3767   001AEE  D7FC               	bra	u2837
  3768   001AF0                     
  3769                           ;lib_pic/lcd_2x16.c: 84:  Lcd_Cmd(0x03);
  3770   001AF0  0E03               	movlw	3
  3771   001AF2  EC76  F010         	call	_Lcd_Cmd
  3772   001AF6                     
  3773                           ;lib_pic/lcd_2x16.c: 86:  Lcd_Cmd(0x02);
  3774   001AF6  0E02               	movlw	2
  3775   001AF8  EC76  F010         	call	_Lcd_Cmd
  3776   001AFC                     
  3777                           ;lib_pic/lcd_2x16.c: 87:  Lcd_Cmd(0x02);
  3778   001AFC  0E02               	movlw	2
  3779   001AFE  EC76  F010         	call	_Lcd_Cmd
  3780   001B02                     
  3781                           ;lib_pic/lcd_2x16.c: 88:  Lcd_Cmd(0x08);
  3782   001B02  0E08               	movlw	8
  3783   001B04  EC76  F010         	call	_Lcd_Cmd
  3784   001B08                     
  3785                           ;lib_pic/lcd_2x16.c: 89:  Lcd_Cmd(0x00);
  3786   001B08  0E00               	movlw	0
  3787   001B0A  EC76  F010         	call	_Lcd_Cmd
  3788   001B0E                     
  3789                           ;lib_pic/lcd_2x16.c: 90:  Lcd_Cmd(0x0C);
  3790   001B0E  0E0C               	movlw	12
  3791   001B10  EC76  F010         	call	_Lcd_Cmd
  3792   001B14                     
  3793                           ;lib_pic/lcd_2x16.c: 91:  Lcd_Cmd(0x00);
  3794   001B14  0E00               	movlw	0
  3795   001B16  EC76  F010         	call	_Lcd_Cmd
  3796   001B1A                     
  3797                           ;lib_pic/lcd_2x16.c: 92:  Lcd_Cmd(0x06);
  3798   001B1A  0E06               	movlw	6
  3799   001B1C  EC76  F010         	call	_Lcd_Cmd
  3800   001B20  0012               	return		;funcret
  3801   001B22                     __end_of_Lcd_Init:
  3802                           	callstack 0
  3803                           
  3804 ;; *************** function _Lcd_Cmd *****************
  3805 ;; Defined at:
  3806 ;;		line 33 in file "lib_pic/lcd_2x16.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  a               1    wreg     unsigned char 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  a               1   35[BANK0 ] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0
  3821 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3822 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3823 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used: 1
  3826 ;; Hardware stack levels required when called: 10
  3827 ;; This function calls:
  3828 ;;		_Lcd_Port
  3829 ;; This function is called by:
  3830 ;;		_Lcd_Clear
  3831 ;;		_Lcd_Set_Cursor
  3832 ;;		_Lcd_Init
  3833 ;;		_Lcd_Shift_Right
  3834 ;;		_Lcd_Shift_Left
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text24
  3839   0020EC                     __ptext24:
  3840                           	callstack 0
  3841   0020EC                     _Lcd_Cmd:
  3842                           	callstack 19
  3843                           
  3844                           ;incstack = 0
  3845                           ;Lcd_Cmd@a stored from wreg
  3846   0020EC  0100               	movlb	0	; () banked
  3847   0020EE  6F83               	movwf	Lcd_Cmd@a& (0+255),b
  3848   0020F0                     
  3849                           ;lib_pic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd_2x16.c: 34: {;lib_pic
      +                          /lcd_2x16.c: 35:  PORTD &= ~(1<<2);
  3850   0020F0  9483               	bcf	131,2,c	;volatile
  3851   0020F2                     
  3852                           ;lib_pic/lcd_2x16.c: 36:  Lcd_Port(a);
  3853   0020F2  0100               	movlb	0	; () banked
  3854   0020F4  5183               	movf	Lcd_Cmd@a& (0+255),w,b
  3855   0020F6  ECFB  F00D         	call	_Lcd_Port
  3856   0020FA                     
  3857                           ;lib_pic/lcd_2x16.c: 37:  PORTD |= (1<<3);
  3858   0020FA  8683               	bsf	131,3,c	;volatile
  3859   0020FC                     
  3860                           ;lib_pic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  3861   0020FC  0E0B               	movlw	11
  3862   0020FE  0100               	movlb	0	; () banked
  3863   002100  6F82               	movwf	??_Lcd_Cmd& (0+255),b
  3864   002102  0E62               	movlw	98
  3865   002104                     u2847:
  3866   002104  2EE8               	decfsz	wreg,f,c
  3867   002106  D7FE               	bra	u2847
  3868   002108  2F82               	decfsz	??_Lcd_Cmd& (0+255),f,b
  3869   00210A  D7FC               	bra	u2847
  3870   00210C  F000               	nop	
  3871   00210E                     
  3872                           ;lib_pic/lcd_2x16.c: 39:  PORTD &= ~(1<<3);
  3873   00210E  9683               	bcf	131,3,c	;volatile
  3874   002110  0012               	return		;funcret
  3875   002112                     __end_of_Lcd_Cmd:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _Lcd_Port *****************
  3879 ;; Defined at:
  3880 ;;		line 5 in file "lib_pic/lcd_2x16.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  a               1    wreg     unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  a               1   33[BANK0 ] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        1 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 9
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_Lcd_Cmd
  3905 ;;		_Lcd_Init
  3906 ;;		_Lcd_Write_Char
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text25
  3911   001BF6                     __ptext25:
  3912                           	callstack 0
  3913   001BF6                     _Lcd_Port:
  3914                           	callstack 19
  3915                           
  3916                           ;incstack = 0
  3917                           ;Lcd_Port@a stored from wreg
  3918   001BF6  0100               	movlb	0	; () banked
  3919   001BF8  6F81               	movwf	Lcd_Port@a& (0+255),b
  3920   001BFA                     
  3921                           ;lib_pic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd_2x16.c: 6: {;lib_pic/
      +                          lcd_2x16.c: 7:  if(a & 1)
  3922   001BFA  0100               	movlb	0	; () banked
  3923   001BFC  A181               	btfss	Lcd_Port@a& (0+255),0,b
  3924   001BFE  EF03  F00E         	goto	u1731
  3925   001C02  EF05  F00E         	goto	u1730
  3926   001C06                     u1731:
  3927   001C06  EF08  F00E         	goto	l2676
  3928   001C0A                     u1730:
  3929   001C0A                     
  3930                           ; BSR set to: 0
  3931                           ;lib_pic/lcd_2x16.c: 9:   LATD |= (1<<4);
  3932   001C0A  888C               	bsf	140,4,c	;volatile
  3933   001C0C  EF09  F00E         	goto	l2678
  3934   001C10                     l2676:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;lib_pic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  3938   001C10  988C               	bcf	140,4,c	;volatile
  3939   001C12                     l2678:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;lib_pic/lcd_2x16.c: 13:  if(a & 2)
  3943   001C12  A381               	btfss	Lcd_Port@a& (0+255),1,b
  3944   001C14  EF0E  F00E         	goto	u1741
  3945   001C18  EF10  F00E         	goto	u1740
  3946   001C1C                     u1741:
  3947   001C1C  EF13  F00E         	goto	l2682
  3948   001C20                     u1740:
  3949   001C20                     
  3950                           ; BSR set to: 0
  3951                           ;lib_pic/lcd_2x16.c: 15:   LATD |= (1<<5);
  3952   001C20  8A8C               	bsf	140,5,c	;volatile
  3953   001C22  EF14  F00E         	goto	l2684
  3954   001C26                     l2682:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;lib_pic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  3958   001C26  9A8C               	bcf	140,5,c	;volatile
  3959   001C28                     l2684:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;lib_pic/lcd_2x16.c: 19:  if(a & 4)
  3963   001C28  A581               	btfss	Lcd_Port@a& (0+255),2,b
  3964   001C2A  EF19  F00E         	goto	u1751
  3965   001C2E  EF1B  F00E         	goto	u1750
  3966   001C32                     u1751:
  3967   001C32  EF1E  F00E         	goto	l2688
  3968   001C36                     u1750:
  3969   001C36                     
  3970                           ; BSR set to: 0
  3971                           ;lib_pic/lcd_2x16.c: 21:   LATD |= (1<<6);
  3972   001C36  8C8C               	bsf	140,6,c	;volatile
  3973   001C38  EF1F  F00E         	goto	l2690
  3974   001C3C                     l2688:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;lib_pic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  3978   001C3C  9C8C               	bcf	140,6,c	;volatile
  3979   001C3E                     l2690:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;lib_pic/lcd_2x16.c: 25:  if(a & 8)
  3983   001C3E  A781               	btfss	Lcd_Port@a& (0+255),3,b
  3984   001C40  EF24  F00E         	goto	u1761
  3985   001C44  EF26  F00E         	goto	u1760
  3986   001C48                     u1761:
  3987   001C48  EF29  F00E         	goto	l2694
  3988   001C4C                     u1760:
  3989   001C4C                     
  3990                           ; BSR set to: 0
  3991                           ;lib_pic/lcd_2x16.c: 27:   LATD |= (1<<7);
  3992   001C4C  8E8C               	bsf	140,7,c	;volatile
  3993   001C4E  EF2A  F00E         	goto	l278
  3994   001C52                     l2694:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;lib_pic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  3998   001C52  9E8C               	bcf	140,7,c	;volatile
  3999   001C54                     l278:
  4000                           
  4001                           ; BSR set to: 0
  4002   001C54  0012               	return		;funcret
  4003   001C56                     __end_of_Lcd_Port:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _INTERRUPT_Global_Config *****************
  4007 ;; Defined at:
  4008 ;;		line 100 in file "Gpio_Lcd_Buzzer.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		None
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4026 ;;Total ram usage:        0 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 9
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_Hardware_Init
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text26
  4037   0021FE                     __ptext26:
  4038                           	callstack 0
  4039   0021FE                     _INTERRUPT_Global_Config:
  4040                           	callstack 20
  4041   0021FE                     
  4042                           ;Gpio_Lcd_Buzzer.c: 101:     RCONbits.IPEN = 0;
  4043   0021FE  9ED0               	bcf	208,7,c	;volatile
  4044                           
  4045                           ;Gpio_Lcd_Buzzer.c: 103:     INTCONbits.GIE = 1;
  4046   002200  8EF2               	bsf	242,7,c	;volatile
  4047                           
  4048                           ;Gpio_Lcd_Buzzer.c: 104:     INTCONbits.PEIE = 1;
  4049   002202  8CF2               	bsf	242,6,c	;volatile
  4050   002204  0012               	return		;funcret
  4051   002206                     __end_of_INTERRUPT_Global_Config:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _RutinaServicioInterrupt *****************
  4055 ;; Defined at:
  4056 ;;		line 58 in file "Gpio_Lcd_Buzzer.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4072 ;;      Temps:          0      10       0       0       0       0       0       0       0
  4073 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4074 ;;Total ram usage:       10 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 8
  4077 ;; This function calls:
  4078 ;;		i2_Lcd_Set_Cursor
  4079 ;;		i2_Lcd_Write_String
  4080 ;;		i2_sprintf
  4081 ;; This function is called by:
  4082 ;;		Interrupt level 2
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	intcode
  4087   000008                     __pintcode:
  4088                           	callstack 0
  4089   000008                     _RutinaServicioInterrupt:
  4090                           	callstack 14
  4091                           
  4092                           ;incstack = 0
  4093   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4094   00000A  CFE1 F077          	movff	fsr1l,??_RutinaServicioInterrupt
  4095   00000E  CFE2 F078          	movff	fsr1h,??_RutinaServicioInterrupt+1
  4096   000012  CFD9 F079          	movff	fsr2l,??_RutinaServicioInterrupt+2
  4097   000016  CFDA F07A          	movff	fsr2h,??_RutinaServicioInterrupt+3
  4098   00001A  CFF3 F07B          	movff	prodl,??_RutinaServicioInterrupt+4
  4099   00001E  CFF4 F07C          	movff	prodh,??_RutinaServicioInterrupt+5
  4100   000022  CFF6 F07D          	movff	tblptrl,??_RutinaServicioInterrupt+6
  4101   000026  CFF7 F07E          	movff	tblptrh,??_RutinaServicioInterrupt+7
  4102   00002A  CFF8 F07F          	movff	tblptru,??_RutinaServicioInterrupt+8
  4103   00002E  CFF5 F080          	movff	tablat,??_RutinaServicioInterrupt+9
  4104   000032                     
  4105                           ;Gpio_Lcd_Buzzer.c: 60:     if ( INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1 ) {
  4106   000032  AAF2               	btfss	242,5,c	;volatile
  4107   000034  EF1E  F000         	goto	i2u231_41
  4108   000038  EF20  F000         	goto	i2u231_40
  4109   00003C                     i2u231_41:
  4110   00003C  EF6D  F000         	goto	i2l64
  4111   000040                     i2u231_40:
  4112   000040  A4F2               	btfss	242,2,c	;volatile
  4113   000042  EF25  F000         	goto	i2u232_41
  4114   000046  EF27  F000         	goto	i2u232_40
  4115   00004A                     i2u232_41:
  4116   00004A  EF6D  F000         	goto	i2l64
  4117   00004E                     i2u232_40:
  4118   00004E                     
  4119                           ;Gpio_Lcd_Buzzer.c: 62:         TMR0 = 3036;
  4120   00004E  0E0B               	movlw	11
  4121   000050  6ED7               	movwf	215,c	;volatile
  4122   000052  0EDC               	movlw	220
  4123   000054  6ED6               	movwf	214,c	;volatile
  4124   000056                     
  4125                           ;Gpio_Lcd_Buzzer.c: 63:         INTCONbits.TMR0IF = 0;
  4126   000056  94F2               	bcf	242,2,c	;volatile
  4127   000058                     
  4128                           ;Gpio_Lcd_Buzzer.c: 66:         seconds++;
  4129   000058  0101               	movlb	1	; () banked
  4130   00005A  2B00               	incf	_seconds& (0+255),f,b
  4131   00005C                     
  4132                           ; BSR set to: 1
  4133                           ;Gpio_Lcd_Buzzer.c: 67:         if ( seconds >= 60 ) {
  4134   00005C  0E3B               	movlw	59
  4135   00005E  6500               	cpfsgt	_seconds& (0+255),b
  4136   000060  EF34  F000         	goto	i2u233_41
  4137   000064  EF36  F000         	goto	i2u233_40
  4138   000068                     i2u233_41:
  4139   000068  EF4E  F000         	goto	i2l3296
  4140   00006C                     i2u233_40:
  4141   00006C                     
  4142                           ; BSR set to: 1
  4143                           ;Gpio_Lcd_Buzzer.c: 68:             seconds = 0;
  4144   00006C  0E00               	movlw	0
  4145   00006E  6F00               	movwf	_seconds& (0+255),b
  4146   000070                     
  4147                           ; BSR set to: 1
  4148                           ;Gpio_Lcd_Buzzer.c: 69:             minutes++;
  4149   000070  2B01               	incf	_minutes& (0+255),f,b
  4150   000072                     
  4151                           ; BSR set to: 1
  4152                           ;Gpio_Lcd_Buzzer.c: 70:             if ( minutes >= 60 ) {
  4153   000072  0E3B               	movlw	59
  4154   000074  6501               	cpfsgt	_minutes& (0+255),b
  4155   000076  EF3F  F000         	goto	i2u234_41
  4156   00007A  EF41  F000         	goto	i2u234_40
  4157   00007E                     i2u234_41:
  4158   00007E  EF4E  F000         	goto	i2l3296
  4159   000082                     i2u234_40:
  4160   000082                     
  4161                           ; BSR set to: 1
  4162                           ;Gpio_Lcd_Buzzer.c: 71:                 minutes = 0;
  4163   000082  0E00               	movlw	0
  4164   000084  6F01               	movwf	_minutes& (0+255),b
  4165   000086                     
  4166                           ; BSR set to: 1
  4167                           ;Gpio_Lcd_Buzzer.c: 72:                 hours++;
  4168   000086  2B02               	incf	_hours& (0+255),f,b
  4169   000088                     
  4170                           ; BSR set to: 1
  4171                           ;Gpio_Lcd_Buzzer.c: 73:                 if ( hours >= 24 ) {
  4172   000088  0E17               	movlw	23
  4173   00008A  6502               	cpfsgt	_hours& (0+255),b
  4174   00008C  EF4A  F000         	goto	i2u235_41
  4175   000090  EF4C  F000         	goto	i2u235_40
  4176   000094                     i2u235_41:
  4177   000094  EF4E  F000         	goto	i2l3296
  4178   000098                     i2u235_40:
  4179   000098                     
  4180                           ; BSR set to: 1
  4181                           ;Gpio_Lcd_Buzzer.c: 74:                     hours = 0;
  4182   000098  0E00               	movlw	0
  4183   00009A  6F02               	movwf	_hours& (0+255),b
  4184   00009C                     i2l3296:
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;Gpio_Lcd_Buzzer.c: 78:         Lcd_Set_Cursor(1, 1);
  4188   00009C  0E01               	movlw	1
  4189   00009E  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  4190   0000A0  0E01               	movlw	1
  4191   0000A2  ECC8  F00D         	call	i2_Lcd_Set_Cursor
  4192   0000A6                     
  4193                           ;Gpio_Lcd_Buzzer.c: 79:         sprintf(strReloj, "Timer:  %02u:%02u:%02u", hours, minut
      +                          es, seconds);
  4194   0000A6  0E23               	movlw	low _strReloj
  4195   0000A8  0100               	movlb	0	; () banked
  4196   0000AA  6F60               	movwf	i2sprintf@s& (0+255),b
  4197   0000AC  0E01               	movlw	high _strReloj
  4198   0000AE  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4199   0000B0  0E01               	movlw	low STR_1
  4200   0000B2  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4201   0000B4  0E08               	movlw	high STR_1
  4202   0000B6  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4203   0000B8  C102  F064         	movff	_hours,?i2_sprintf+4
  4204   0000BC  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  4205   0000BE  C101  F066         	movff	_minutes,?i2_sprintf+6
  4206   0000C2  6B67               	clrf	(?i2_sprintf+7)& (0+255),b
  4207   0000C4  C100  F068         	movff	_seconds,?i2_sprintf+8
  4208   0000C8  6B69               	clrf	(?i2_sprintf+9)& (0+255),b
  4209   0000CA  ECD4  F00E         	call	i2_sprintf	;wreg free
  4210   0000CE                     
  4211                           ;Gpio_Lcd_Buzzer.c: 81:         Lcd_Write_String(strReloj);
  4212   0000CE  0E23               	movlw	low _strReloj
  4213   0000D0  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4214   0000D2  0E01               	movlw	high _strReloj
  4215   0000D4  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  4216   0000D6  ECD4  F00F         	call	i2_Lcd_Write_String	;wreg free
  4217   0000DA                     i2l64:
  4218   0000DA  C080  FFF5         	movff	??_RutinaServicioInterrupt+9,tablat
  4219   0000DE  C07F  FFF8         	movff	??_RutinaServicioInterrupt+8,tblptru
  4220   0000E2  C07E  FFF7         	movff	??_RutinaServicioInterrupt+7,tblptrh
  4221   0000E6  C07D  FFF6         	movff	??_RutinaServicioInterrupt+6,tblptrl
  4222   0000EA  C07C  FFF4         	movff	??_RutinaServicioInterrupt+5,prodh
  4223   0000EE  C07B  FFF3         	movff	??_RutinaServicioInterrupt+4,prodl
  4224   0000F2  C07A  FFDA         	movff	??_RutinaServicioInterrupt+3,fsr2h
  4225   0000F6  C079  FFD9         	movff	??_RutinaServicioInterrupt+2,fsr2l
  4226   0000FA  C078  FFE2         	movff	??_RutinaServicioInterrupt+1,fsr1h
  4227   0000FE  C077  FFE1         	movff	??_RutinaServicioInterrupt,fsr1l
  4228   000102  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4229   000104  0011               	retfie		f
  4230   000106                     __end_of_RutinaServicioInterrupt:
  4231                           	callstack 0
  4232                           
  4233 ;; *************** function i2_sprintf *****************
  4234 ;; Defined at:
  4235 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4238 ;;		 -> strReloj(20), 
  4239 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4240 ;;		 -> STR_2(23), STR_1(23), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  f              11   12[BANK0 ] struct _IO_FILE
  4243 ;;  ap              2   10[BANK0 ] PTR void [1]
  4244 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  4245 ;;  ret             2    0        int 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  2    0[BANK0 ] int 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4255 ;;      Params:         0      10       0       0       0       0       0       0       0
  4256 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4258 ;;      Totals:         0      23       0       0       0       0       0       0       0
  4259 ;;Total ram usage:       23 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 7
  4262 ;; This function calls:
  4263 ;;		i2_vfprintf
  4264 ;; This function is called by:
  4265 ;;		_RutinaServicioInterrupt
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text28
  4270   001DA8                     __ptext28:
  4271                           	callstack 0
  4272   001DA8                     i2_sprintf:
  4273                           	callstack 14
  4274   001DA8  0E64               	movlw	low (?i2_sprintf+4)
  4275   001DAA  0100               	movlb	0	; () banked
  4276   001DAC  6F6A               	movwf	i2sprintf@ap& (0+255),b
  4277   001DAE  0E00               	movlw	high (?i2_sprintf+4)
  4278   001DB0  6F6B               	movwf	(i2sprintf@ap+1)& (0+255),b
  4279   001DB2  C060  F06C         	movff	i2sprintf@s,i2sprintf@f
  4280   001DB6  C061  F06D         	movff	i2sprintf@s+1,i2sprintf@f+1
  4281   001DBA                     
  4282                           ; BSR set to: 0
  4283   001DBA  0E00               	movlw	0
  4284   001DBC  6F70               	movwf	(i2sprintf@f+4)& (0+255),b
  4285   001DBE  0E00               	movlw	0
  4286   001DC0  6F6F               	movwf	(i2sprintf@f+3)& (0+255),b
  4287   001DC2                     
  4288                           ; BSR set to: 0
  4289   001DC2  0E00               	movlw	0
  4290   001DC4  6F76               	movwf	(i2sprintf@f+10)& (0+255),b
  4291   001DC6  0E00               	movlw	0
  4292   001DC8  6F75               	movwf	(i2sprintf@f+9)& (0+255),b
  4293   001DCA                     
  4294                           ; BSR set to: 0
  4295   001DCA  0E6C               	movlw	low i2sprintf@f
  4296   001DCC  6E53               	movwf	i2vfprintf@fp^0,c
  4297   001DCE  0E00               	movlw	high i2sprintf@f
  4298   001DD0  6E54               	movwf	(i2vfprintf@fp+1)^0,c
  4299   001DD2  C062  F055         	movff	i2sprintf@fmt,i2vfprintf@fmt
  4300   001DD6  C063  F056         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  4301   001DDA  0E6A               	movlw	low i2sprintf@ap
  4302   001DDC  6E57               	movwf	i2vfprintf@ap^0,c
  4303   001DDE  0E00               	movlw	high i2sprintf@ap
  4304   001DE0  6E58               	movwf	(i2vfprintf@ap+1)^0,c
  4305   001DE2  ECFD  F00E         	call	i2_vfprintf	;wreg free
  4306   001DE6  0100               	movlb	0	; () banked
  4307   001DE8  516F               	movf	(i2sprintf@f+3)& (0+255),w,b
  4308   001DEA  2560               	addwf	i2sprintf@s& (0+255),w,b
  4309   001DEC  6ED9               	movwf	fsr2l,c
  4310   001DEE  5170               	movf	(i2sprintf@f+4)& (0+255),w,b
  4311   001DF0  2161               	addwfc	(i2sprintf@s+1)& (0+255),w,b
  4312   001DF2  6EDA               	movwf	fsr2h,c
  4313   001DF4  0E00               	movlw	0
  4314   001DF6  6EDF               	movwf	indf2,c
  4315   001DF8                     
  4316                           ; BSR set to: 0
  4317   001DF8  0012               	return		;funcret
  4318   001DFA                     __end_ofi2_sprintf:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function i2_vfprintf *****************
  4322 ;; Defined at:
  4323 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  4326 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4327 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  4328 ;;		 -> STR_2(23), STR_1(23), 
  4329 ;;  ap              2   86[COMRAM] PTR PTR void 
  4330 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  4333 ;;		 -> STR_2(23), STR_1(23), 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2   82[COMRAM] int 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4343 ;;      Params:         6       0       0       0       0       0       0       0       0
  4344 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4346 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4347 ;;Total ram usage:        8 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 6
  4350 ;; This function calls:
  4351 ;;		i2_vfpfcnvrt
  4352 ;; This function is called by:
  4353 ;;		i2_sprintf
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text29
  4358   001DFA                     __ptext29:
  4359                           	callstack 0
  4360   001DFA                     i2_vfprintf:
  4361                           	callstack 14
  4362   001DFA                     
  4363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4364   001DFA  C055  F059         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4365   001DFE  C056  F05A         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4368   001E02  EF11  F00F         	goto	i2l3128
  4369   001E06                     i2l3126:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4372   001E06  C053  F03D         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4373   001E0A  C054  F03E         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4374   001E0E  0E59               	movlw	low i2vfprintf@cfmt
  4375   001E10  6E3F               	movwf	i2vfpfcnvrt@fmt^0,c
  4376   001E12  0E00               	movlw	high i2vfprintf@cfmt
  4377   001E14  6E40               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  4378   001E16  C057  F041         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4379   001E1A  C058  F042         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4380   001E1E  EC71  F005         	call	i2_vfpfcnvrt	;wreg free
  4381   001E22                     i2l3128:
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4384   001E22  C059  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4385   001E26  C05A  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  4386   001E2A                     	if	0	;tblptru may be non-zero
  4387   001E2A                     	endif
  4388   001E2A                     	if	0	;tblptru may be non-zero
  4389   001E2A                     	endif
  4390   001E2A  0008               	tblrd		*
  4391   001E2C  50F5               	movf	tablat,w,c
  4392   001E2E  0900               	iorlw	0
  4393   001E30  A4D8               	btfss	status,2,c
  4394   001E32  EF1D  F00F         	goto	i2u216_41
  4395   001E36  EF1F  F00F         	goto	i2u216_40
  4396   001E3A                     i2u216_41:
  4397   001E3A  EF03  F00F         	goto	i2l3126
  4398   001E3E                     i2u216_40:
  4399   001E3E                     
  4400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4401   001E3E  0E00               	movlw	0
  4402   001E40  6E54               	movwf	(?i2_vfprintf+1)^0,c
  4403   001E42  0E00               	movlw	0
  4404   001E44  6E53               	movwf	?i2_vfprintf^0,c
  4405   001E46  0012               	return		;funcret
  4406   001E48                     __end_ofi2_vfprintf:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function i2_vfpfcnvrt *****************
  4410 ;; Defined at:
  4411 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  fp              2   60[COMRAM] PTR struct _IO_FILE
  4414 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4415 ;;  fmt             2   62[COMRAM] PTR PTR unsigned char 
  4416 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  4417 ;;  ap              2   64[COMRAM] PTR PTR void 
  4418 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  convarg         8   70[COMRAM] struct .
  4421 ;;  cp              2   80[COMRAM] PTR unsigned char 
  4422 ;;		 -> STR_2(23), STR_1(23), 
  4423 ;;  done            2   78[COMRAM] int 
  4424 ;;  i               2    0        int 
  4425 ;;  c               1    0        unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4435 ;;      Params:         6       0       0       0       0       0       0       0       0
  4436 ;;      Locals:        12       0       0       0       0       0       0       0       0
  4437 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4438 ;;      Totals:        22       0       0       0       0       0       0       0       0
  4439 ;;Total ram usage:       22 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 5
  4442 ;; This function calls:
  4443 ;;		i2_atoi
  4444 ;;		i2_fputc
  4445 ;;		i2_isdigit
  4446 ;;		i2_utoa
  4447 ;; This function is called by:
  4448 ;;		i2_vfprintf
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text30
  4453   000AE2                     __ptext30:
  4454                           	callstack 0
  4455   000AE2                     i2_vfpfcnvrt:
  4456                           	callstack 14
  4457   000AE2                     
  4458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4459   000AE2  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4460   000AE6  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4461   000AEA  CFDE FFF6          	movff	postinc2,tblptrl
  4462   000AEE  CFDD FFF7          	movff	postdec2,tblptrh
  4463   000AF2                     	if	0	;tblptru may be non-zero
  4464   000AF2                     	endif
  4465   000AF2                     	if	0	;tblptru may be non-zero
  4466   000AF2                     	endif
  4467   000AF2  0008               	tblrd		*
  4468   000AF4  50F5               	movf	tablat,w,c
  4469   000AF6  0A25               	xorlw	37
  4470   000AF8  A4D8               	btfss	status,2,c
  4471   000AFA  EF81  F005         	goto	i2u209_41
  4472   000AFE  EF83  F005         	goto	i2u209_40
  4473   000B02                     i2u209_41:
  4474   000B02  EFB7  F006         	goto	i2l2996
  4475   000B06                     i2u209_40:
  4476   000B06                     
  4477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4478   000B06  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4479   000B0A  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4480   000B0E  2ADE               	incf	postinc2,f,c
  4481   000B10  0E00               	movlw	0
  4482   000B12  22DD               	addwfc	postdec2,f,c
  4483   000B14                     
  4484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4485   000B14  0E00               	movlw	0
  4486   000B16  0100               	movlb	0	; () banked
  4487   000B18  6FDA               	movwf	(_width+1)& (0+255),b
  4488   000B1A  0E00               	movlw	0
  4489   000B1C  6FD9               	movwf	_width& (0+255),b
  4490   000B1E  C0D9  F0DD         	movff	_width,_flags
  4491   000B22                     
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4494   000B22  69DB               	setf	_prec& (0+255),b
  4495   000B24  69DC               	setf	(_prec+1)& (0+255),b
  4496   000B26                     
  4497                           ; BSR set to: 0
  4498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  4499   000B26  0E00               	movlw	0
  4500   000B28  6E50               	movwf	(i2vfpfcnvrt@done+1)^0,c
  4501   000B2A  0E00               	movlw	0
  4502   000B2C  6E4F               	movwf	i2vfpfcnvrt@done^0,c
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4505   000B2E  EFC4  F005         	goto	i2l2960
  4506   000B32                     i2l2950:
  4507                           
  4508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  4509   000B32  0100               	movlb	0	; () banked
  4510   000B34  83DD               	bsf	_flags& (0+255),1,b
  4511   000B36                     
  4512                           ; BSR set to: 0
  4513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  4514   000B36  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4515   000B3A  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4516   000B3E  2ADE               	incf	postinc2,f,c
  4517   000B40  0E00               	movlw	0
  4518   000B42  22DD               	addwfc	postdec2,f,c
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  4521   000B44  EFC4  F005         	goto	i2l2960
  4522   000B48                     i2l2954:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  4525   000B48  0E00               	movlw	0
  4526   000B4A  6E50               	movwf	(i2vfpfcnvrt@done+1)^0,c
  4527   000B4C  0E01               	movlw	1
  4528   000B4E  6E4F               	movwf	i2vfpfcnvrt@done^0,c
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  4531   000B50  EFC4  F005         	goto	i2l2960
  4532   000B54                     i2l2958:
  4533   000B54  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4534   000B58  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4535   000B5C  CFDE FFF6          	movff	postinc2,tblptrl
  4536   000B60  CFDD FFF7          	movff	postdec2,tblptrh
  4537   000B64                     	if	0	;tblptru may be non-zero
  4538   000B64                     	endif
  4539   000B64                     	if	0	;tblptru may be non-zero
  4540   000B64                     	endif
  4541   000B64  0008               	tblrd		*
  4542   000B66  50F5               	movf	tablat,w,c
  4543   000B68  6E43               	movwf	??i2_vfpfcnvrt^0,c
  4544   000B6A  6A44               	clrf	(??i2_vfpfcnvrt+1)^0,c
  4545                           
  4546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4547                           ; Switch size 1, requested type "simple"
  4548                           ; Number of cases is 1, Range of values is 0 to 0
  4549                           ; switch strategies available:
  4550                           ; Name         Instructions Cycles
  4551                           ; simple_byte            4     3 (average)
  4552                           ;	Chosen strategy is simple_byte
  4553   000B6C  5044               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  4554   000B6E  0A00               	xorlw	0	; case 0
  4555   000B70  B4D8               	btfsc	status,2,c
  4556   000B72  EFBD  F005         	goto	i2l3930
  4557   000B76  EFA4  F005         	goto	i2l2954
  4558   000B7A                     i2l3930:
  4559                           
  4560                           ; Switch size 1, requested type "simple"
  4561                           ; Number of cases is 1, Range of values is 48 to 48
  4562                           ; switch strategies available:
  4563                           ; Name         Instructions Cycles
  4564                           ; simple_byte            4     3 (average)
  4565                           ;	Chosen strategy is simple_byte
  4566   000B7A  5043               	movf	??i2_vfpfcnvrt^0,w,c
  4567   000B7C  0A30               	xorlw	48	; case 48
  4568   000B7E  B4D8               	btfsc	status,2,c
  4569   000B80  EF99  F005         	goto	i2l2950
  4570   000B84  EFA4  F005         	goto	i2l2954
  4571   000B88                     i2l2960:
  4572                           
  4573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4574   000B88  504F               	movf	i2vfpfcnvrt@done^0,w,c
  4575   000B8A  1050               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
  4576   000B8C  B4D8               	btfsc	status,2,c
  4577   000B8E  EFCB  F005         	goto	i2u210_41
  4578   000B92  EFCD  F005         	goto	i2u210_40
  4579   000B96                     i2u210_41:
  4580   000B96  EFAA  F005         	goto	i2l2958
  4581   000B9A                     i2u210_40:
  4582   000B9A                     
  4583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  4584   000B9A  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4585   000B9E  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4586   000BA2  CFDE FFF6          	movff	postinc2,tblptrl
  4587   000BA6  CFDD FFF7          	movff	postdec2,tblptrh
  4588   000BAA                     	if	0	;tblptru may be non-zero
  4589   000BAA                     	endif
  4590   000BAA                     	if	0	;tblptru may be non-zero
  4591   000BAA                     	endif
  4592   000BAA  0008               	tblrd		*
  4593   000BAC  50F5               	movf	tablat,w,c
  4594   000BAE  0A2A               	xorlw	42
  4595   000BB0  A4D8               	btfss	status,2,c
  4596   000BB2  EFDD  F005         	goto	i2u211_41
  4597   000BB6  EFDF  F005         	goto	i2u211_40
  4598   000BBA                     i2u211_41:
  4599   000BBA  EF09  F006         	goto	i2l2970
  4600   000BBE                     i2u211_40:
  4601   000BBE                     
  4602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  4603   000BBE  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4604   000BC2  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4605   000BC6  2ADE               	incf	postinc2,f,c
  4606   000BC8  0E00               	movlw	0
  4607   000BCA  22DD               	addwfc	postdec2,f,c
  4608                           
  4609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4610   000BCC  C041  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4611   000BD0  C042  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4612   000BD4  CFDF F043          	movff	indf2,??i2_vfpfcnvrt
  4613   000BD8  0E02               	movlw	2
  4614   000BDA  26DE               	addwf	postinc2,f,c
  4615   000BDC  CFDF F044          	movff	indf2,??i2_vfpfcnvrt+1
  4616   000BE0  0E00               	movlw	0
  4617   000BE2  22DD               	addwfc	postdec2,f,c
  4618   000BE4  C043  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4619   000BE8  C044  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4620   000BEC  CFDE F0D9          	movff	postinc2,_width
  4621   000BF0  CFDD F0DA          	movff	postdec2,_width+1
  4622   000BF4                     
  4623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  4624   000BF4  0100               	movlb	0	; () banked
  4625   000BF6  BFDA               	btfsc	(_width+1)& (0+255),7,b
  4626   000BF8  EF02  F006         	goto	i2u212_40
  4627   000BFC  EF00  F006         	goto	i2u212_41
  4628   000C00                     i2u212_41:
  4629   000C00  EF3C  F006         	goto	i2l2978
  4630   000C04                     i2u212_40:
  4631   000C04                     
  4632                           ; BSR set to: 0
  4633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  4634   000C04  81DD               	bsf	_flags& (0+255),0,b
  4635                           
  4636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  4637   000C06  6DD9               	negf	_width& (0+255),b
  4638   000C08  1FDA               	comf	(_width+1)& (0+255),f,b
  4639   000C0A  B0D8               	btfsc	status,0,c
  4640   000C0C  2BDA               	incf	(_width+1)& (0+255),f,b
  4641   000C0E  EF3C  F006         	goto	i2l2978
  4642   000C12                     i2l2970:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  4645   000C12  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4646   000C16  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4647   000C1A  CFDE F007          	movff	postinc2,i2atoi@s
  4648   000C1E  CFDD F008          	movff	postdec2,i2atoi@s+1
  4649   000C22  EC70  F009         	call	i2_atoi	;wreg free
  4650   000C26  C007  F0D9         	movff	?i2_atoi,_width
  4651   000C2A  C008  F0DA         	movff	?i2_atoi+1,_width+1
  4652                           
  4653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4654   000C2E  EF20  F006         	goto	i2l2976
  4655   000C32                     i2l2972:
  4656                           
  4657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  4658   000C32  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4659   000C36  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4660   000C3A  2ADE               	incf	postinc2,f,c
  4661   000C3C  0E00               	movlw	0
  4662   000C3E  22DD               	addwfc	postdec2,f,c
  4663   000C40                     i2l2976:
  4664   000C40  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4665   000C44  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4666   000C48  CFDE FFF6          	movff	postinc2,tblptrl
  4667   000C4C  CFDD FFF7          	movff	postdec2,tblptrh
  4668   000C50                     	if	0	;tblptru may be non-zero
  4669   000C50                     	endif
  4670   000C50                     	if	0	;tblptru may be non-zero
  4671   000C50                     	endif
  4672   000C50  0008               	tblrd		*
  4673   000C52  CFF5 F043          	movff	tablat,??i2_vfpfcnvrt
  4674   000C56  0ED0               	movlw	208
  4675   000C58  2443               	addwf	??i2_vfpfcnvrt^0,w,c
  4676   000C5A  6E44               	movwf	(??i2_vfpfcnvrt+1)^0,c
  4677   000C5C  6A45               	clrf	(??i2_vfpfcnvrt+2)^0,c
  4678   000C5E  0EFF               	movlw	255
  4679   000C60  2245               	addwfc	(??i2_vfpfcnvrt+2)^0,f,c
  4680   000C62  5045               	movf	(??i2_vfpfcnvrt+2)^0,w,c
  4681   000C64  E109               	bnz	i2u213_40
  4682   000C66  0E0A               	movlw	10
  4683   000C68  5C44               	subwf	(??i2_vfpfcnvrt+1)^0,w,c
  4684   000C6A  A0D8               	btfss	status,0,c
  4685   000C6C  EF3A  F006         	goto	i2u213_41
  4686   000C70  EF3C  F006         	goto	i2u213_40
  4687   000C74                     i2u213_41:
  4688   000C74  EF19  F006         	goto	i2l2972
  4689   000C78                     i2u213_40:
  4690   000C78                     i2l2978:
  4691                           
  4692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  4693   000C78  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4694   000C7C  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4695   000C80  CFDE F051          	movff	postinc2,i2vfpfcnvrt@cp
  4696   000C84  CFDD F052          	movff	postdec2,i2vfpfcnvrt@cp+1
  4697   000C88  C051  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4698   000C8C  C052  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  4699   000C90                     	if	0	;tblptru may be non-zero
  4700   000C90                     	endif
  4701   000C90                     	if	0	;tblptru may be non-zero
  4702   000C90                     	endif
  4703   000C90  0008               	tblrd		*
  4704   000C92  50F5               	movf	tablat,w,c
  4705   000C94  0A75               	xorlw	117
  4706   000C96  A4D8               	btfss	status,2,c
  4707   000C98  EF50  F006         	goto	i2u214_41
  4708   000C9C  EF52  F006         	goto	i2u214_40
  4709   000CA0                     i2u214_41:
  4710   000CA0  EFAE  F006         	goto	i2l2992
  4711   000CA4                     i2u214_40:
  4712   000CA4                     
  4713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4714   000CA4  C041  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4715   000CA8  C042  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4716   000CAC  CFDF F043          	movff	indf2,??i2_vfpfcnvrt
  4717   000CB0  0E02               	movlw	2
  4718   000CB2  26DE               	addwf	postinc2,f,c
  4719   000CB4  CFDF F044          	movff	indf2,??i2_vfpfcnvrt+1
  4720   000CB8  0E00               	movlw	0
  4721   000CBA  22DD               	addwfc	postdec2,f,c
  4722   000CBC  C043  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4723   000CC0  C044  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4724   000CC4  CFDE F045          	movff	postinc2,??i2_vfpfcnvrt+2
  4725   000CC8  CFDD F046          	movff	postdec2,??i2_vfpfcnvrt+3
  4726   000CCC  C045  F047         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@convarg
  4727   000CD0  C046  F048         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@convarg+1
  4728   000CD4  6A49               	clrf	(i2vfpfcnvrt@convarg+2)^0,c
  4729   000CD6  6A4A               	clrf	(i2vfpfcnvrt@convarg+3)^0,c
  4730   000CD8  6A4B               	clrf	(i2vfpfcnvrt@convarg+4)^0,c
  4731   000CDA  6A4C               	clrf	(i2vfpfcnvrt@convarg+5)^0,c
  4732   000CDC  6A4D               	clrf	(i2vfpfcnvrt@convarg+6)^0,c
  4733   000CDE  6A4E               	clrf	(i2vfpfcnvrt@convarg+7)^0,c
  4734                           
  4735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  4736   000CE0  0E01               	movlw	1
  4737   000CE2  2451               	addwf	i2vfpfcnvrt@cp^0,w,c
  4738   000CE4  6E43               	movwf	??i2_vfpfcnvrt^0,c
  4739   000CE6  0E00               	movlw	0
  4740   000CE8  2052               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  4741   000CEA  6E44               	movwf	(??i2_vfpfcnvrt+1)^0,c
  4742   000CEC  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4743   000CF0  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4744   000CF4  C043  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  4745   000CF8  C044  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  4746                           
  4747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  4748   000CFC  EF98  F006         	goto	i2l2990
  4749   000D00                     i2l2984:
  4750                           
  4751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of i2_vfpfcnvrt is never used
  4752   000D00  C03D  F01D         	movff	i2vfpfcnvrt@fp,i2utoa@fp
  4753   000D04  C03E  F01E         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
  4754   000D08  C047  F01F         	movff	i2vfpfcnvrt@convarg,i2utoa@d
  4755   000D0C  C048  F020         	movff	i2vfpfcnvrt@convarg+1,i2utoa@d+1
  4756   000D10  C049  F021         	movff	i2vfpfcnvrt@convarg+2,i2utoa@d+2
  4757   000D14  C04A  F022         	movff	i2vfpfcnvrt@convarg+3,i2utoa@d+3
  4758   000D18  C04B  F023         	movff	i2vfpfcnvrt@convarg+4,i2utoa@d+4
  4759   000D1C  C04C  F024         	movff	i2vfpfcnvrt@convarg+5,i2utoa@d+5
  4760   000D20  C04D  F025         	movff	i2vfpfcnvrt@convarg+6,i2utoa@d+6
  4761   000D24  C04E  F026         	movff	i2vfpfcnvrt@convarg+7,i2utoa@d+7
  4762   000D28  ECCB  F007         	call	i2_utoa	;wreg free
  4763   000D2C  EFCB  F006         	goto	i2l1192
  4764   000D30                     i2l2990:
  4765   000D30  C051  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4766   000D34  C052  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  4767   000D38                     	if	0	;tblptru may be non-zero
  4768   000D38                     	endif
  4769   000D38                     	if	0	;tblptru may be non-zero
  4770   000D38                     	endif
  4771   000D38  0008               	tblrd		*
  4772   000D3A  50F5               	movf	tablat,w,c
  4773   000D3C  6E43               	movwf	??i2_vfpfcnvrt^0,c
  4774   000D3E  6A44               	clrf	(??i2_vfpfcnvrt+1)^0,c
  4775                           
  4776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4777                           ; Switch size 1, requested type "simple"
  4778                           ; Number of cases is 1, Range of values is 0 to 0
  4779                           ; switch strategies available:
  4780                           ; Name         Instructions Cycles
  4781                           ; simple_byte            4     3 (average)
  4782                           ;	Chosen strategy is simple_byte
  4783   000D40  5044               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  4784   000D42  0A00               	xorlw	0	; case 0
  4785   000D44  B4D8               	btfsc	status,2,c
  4786   000D46  EFA7  F006         	goto	i2l3932
  4787   000D4A  EFAE  F006         	goto	i2l2992
  4788   000D4E                     i2l3932:
  4789                           
  4790                           ; Switch size 1, requested type "simple"
  4791                           ; Number of cases is 1, Range of values is 117 to 117
  4792                           ; switch strategies available:
  4793                           ; Name         Instructions Cycles
  4794                           ; simple_byte            4     3 (average)
  4795                           ;	Chosen strategy is simple_byte
  4796   000D4E  5043               	movf	??i2_vfpfcnvrt^0,w,c
  4797   000D50  0A75               	xorlw	117	; case 117
  4798   000D52  B4D8               	btfsc	status,2,c
  4799   000D54  EF80  F006         	goto	i2l2984
  4800   000D58  EFAE  F006         	goto	i2l2992
  4801   000D5C                     i2l2992:
  4802                           
  4803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4804   000D5C  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4805   000D60  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4806   000D64  2ADE               	incf	postinc2,f,c
  4807   000D66  0E00               	movlw	0
  4808   000D68  22DD               	addwfc	postdec2,f,c
  4809   000D6A  EFCB  F006         	goto	i2l1192
  4810   000D6E                     i2l2996:
  4811                           
  4812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4813   000D6E  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4814   000D72  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4815   000D76  CFDE FFF6          	movff	postinc2,tblptrl
  4816   000D7A  CFDD FFF7          	movff	postdec2,tblptrh
  4817   000D7E                     	if	0	;tblptru may be non-zero
  4818   000D7E                     	endif
  4819   000D7E                     	if	0	;tblptru may be non-zero
  4820   000D7E                     	endif
  4821   000D7E  0008               	tblrd		*
  4822   000D80  50F5               	movf	tablat,w,c
  4823   000D82  6E02               	movwf	i2fputc@c^0,c
  4824   000D84  6A03               	clrf	(i2fputc@c+1)^0,c
  4825   000D86  C03D  F004         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4826   000D8A  C03E  F005         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4827   000D8E  EC3D  F00C         	call	i2_fputc	;wreg free
  4828   000D92  EFAE  F006         	goto	i2l2992
  4829   000D96                     i2l1192:
  4830   000D96  0012               	return		;funcret
  4831   000D98                     __end_ofi2_vfpfcnvrt:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function i2_utoa *****************
  4835 ;; Defined at:
  4836 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  4839 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4840 ;;  d               8   30[COMRAM] unsigned long long 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  n               8   50[COMRAM] unsigned long long 
  4843 ;;  i               2   58[COMRAM] int 
  4844 ;;  w               2   48[COMRAM] int 
  4845 ;;  p               2   46[COMRAM] int 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4855 ;;      Params:        10       0       0       0       0       0       0       0       0
  4856 ;;      Locals:        14       0       0       0       0       0       0       0       0
  4857 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4858 ;;      Totals:        32       0       0       0       0       0       0       0       0
  4859 ;;Total ram usage:       32 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 4
  4862 ;; This function calls:
  4863 ;;		i2___lodiv
  4864 ;;		i2___lomod
  4865 ;;		i2_pad
  4866 ;; This function is called by:
  4867 ;;		i2_vfpfcnvrt
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text31
  4872   000F96                     __ptext31:
  4873                           	callstack 0
  4874   000F96                     i2_utoa:
  4875                           	callstack 14
  4876   000F96                     
  4877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  4878   000F96  0100               	movlb	0	; () banked
  4879   000F98  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  4880   000F9A  EFD1  F007         	goto	i2u188_41
  4881   000F9E  EFD3  F007         	goto	i2u188_40
  4882   000FA2                     i2u188_41:
  4883   000FA2  EFD4  F007         	goto	i2l2768
  4884   000FA6                     i2u188_40:
  4885   000FA6                     
  4886                           ; BSR set to: 0
  4887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  4888   000FA6  93DD               	bcf	_flags& (0+255),1,b
  4889   000FA8                     i2l2768:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  4893   000FA8  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  4894   000FAA  EFE1  F007         	goto	i2u189_40
  4895   000FAE  51DC               	movf	(_prec+1)& (0+255),w,b
  4896   000FB0  E106               	bnz	i2u189_41
  4897   000FB2  05DB               	decf	_prec& (0+255),w,b
  4898   000FB4  B0D8               	btfsc	status,0,c
  4899   000FB6  EFDF  F007         	goto	i2u189_41
  4900   000FBA  EFE1  F007         	goto	i2u189_40
  4901   000FBE                     i2u189_41:
  4902   000FBE  EFE7  F007         	goto	i2l1158
  4903   000FC2                     i2u189_40:
  4904   000FC2                     
  4905                           ; BSR set to: 0
  4906   000FC2  0E00               	movlw	0
  4907   000FC4  6E30               	movwf	(i2utoa@p+1)^0,c
  4908   000FC6  0E01               	movlw	1
  4909   000FC8  6E2F               	movwf	i2utoa@p^0,c
  4910   000FCA  EFEB  F007         	goto	i2l1160
  4911   000FCE                     i2l1158:
  4912                           
  4913                           ; BSR set to: 0
  4914   000FCE  C0DB  F02F         	movff	_prec,i2utoa@p
  4915   000FD2  C0DC  F030         	movff	_prec+1,i2utoa@p+1
  4916   000FD6                     i2l1160:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  4920   000FD6  C0D9  F031         	movff	_width,i2utoa@w
  4921   000FDA  C0DA  F032         	movff	_width+1,i2utoa@w+1
  4922                           
  4923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  4924   000FDE  C01F  F033         	movff	i2utoa@d,i2utoa@n
  4925   000FE2  C020  F034         	movff	i2utoa@d+1,i2utoa@n+1
  4926   000FE6  C021  F035         	movff	i2utoa@d+2,i2utoa@n+2
  4927   000FEA  C022  F036         	movff	i2utoa@d+3,i2utoa@n+3
  4928   000FEE  C023  F037         	movff	i2utoa@d+4,i2utoa@n+4
  4929   000FF2  C024  F038         	movff	i2utoa@d+5,i2utoa@n+5
  4930   000FF6  C025  F039         	movff	i2utoa@d+6,i2utoa@n+6
  4931   000FFA  C026  F03A         	movff	i2utoa@d+7,i2utoa@n+7
  4932   000FFE                     
  4933                           ; BSR set to: 0
  4934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  4935   000FFE  0E00               	movlw	0
  4936   001000  6E3C               	movwf	(i2utoa@i+1)^0,c
  4937   001002  0E1F               	movlw	31
  4938   001004  6E3B               	movwf	i2utoa@i^0,c
  4939   001006                     
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  4942   001006  0E00               	movlw	0
  4943   001008  0101               	movlb	1	; () banked
  4944   00100A  6F22               	movwf	(_dbuf+31)& (0+255),b
  4945                           
  4946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  4947   00100C  EF7E  F008         	goto	i2l2786
  4948   001010                     i2l2776:
  4949                           
  4950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  4951   001010  063B               	decf	i2utoa@i^0,f,c
  4952   001012  A0D8               	btfss	status,0,c
  4953   001014  063C               	decf	(i2utoa@i+1)^0,f,c
  4954   001016                     
  4955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  4956   001016  0E03               	movlw	low _dbuf
  4957   001018  243B               	addwf	i2utoa@i^0,w,c
  4958   00101A  6ED9               	movwf	fsr2l,c
  4959   00101C  0E01               	movlw	high _dbuf
  4960   00101E  203C               	addwfc	(i2utoa@i+1)^0,w,c
  4961   001020  6EDA               	movwf	fsr2h,c
  4962   001022  C033  F001         	movff	i2utoa@n,i2___lomod@dividend
  4963   001026  C034  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
  4964   00102A  C035  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
  4965   00102E  C036  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
  4966   001032  C037  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
  4967   001036  C038  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
  4968   00103A  C039  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
  4969   00103E  C03A  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
  4970   001042  0E0A               	movlw	10
  4971   001044  6E09               	movwf	i2___lomod@divisor^0,c
  4972   001046  0E00               	movlw	0
  4973   001048  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
  4974   00104A  0E00               	movlw	0
  4975   00104C  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
  4976   00104E  0E00               	movlw	0
  4977   001050  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
  4978   001052  0E00               	movlw	0
  4979   001054  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
  4980   001056  0E00               	movlw	0
  4981   001058  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
  4982   00105A  0E00               	movlw	0
  4983   00105C  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
  4984   00105E  0E00               	movlw	0
  4985   001060  6E10               	movwf	(i2___lomod@divisor+7)^0,c
  4986   001062  EC6F  F00B         	call	i2___lomod	;wreg free
  4987   001066  C001  F027         	movff	?i2___lomod,??i2_utoa
  4988   00106A  C002  F028         	movff	?i2___lomod+1,??i2_utoa+1
  4989   00106E  C003  F029         	movff	?i2___lomod+2,??i2_utoa+2
  4990   001072  C004  F02A         	movff	?i2___lomod+3,??i2_utoa+3
  4991   001076  C005  F02B         	movff	?i2___lomod+4,??i2_utoa+4
  4992   00107A  C006  F02C         	movff	?i2___lomod+5,??i2_utoa+5
  4993   00107E  C007  F02D         	movff	?i2___lomod+6,??i2_utoa+6
  4994   001082  C008  F02E         	movff	?i2___lomod+7,??i2_utoa+7
  4995   001086  5027               	movf	??i2_utoa^0,w,c
  4996   001088  0F30               	addlw	48
  4997   00108A  6EDF               	movwf	indf2,c
  4998   00108C                     
  4999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  5000   00108C  062F               	decf	i2utoa@p^0,f,c
  5001   00108E  A0D8               	btfss	status,0,c
  5002   001090  0630               	decf	(i2utoa@p+1)^0,f,c
  5003   001092                     
  5004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  5005   001092  0631               	decf	i2utoa@w^0,f,c
  5006   001094  A0D8               	btfss	status,0,c
  5007   001096  0632               	decf	(i2utoa@w+1)^0,f,c
  5008   001098                     
  5009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  5010   001098  C033  F001         	movff	i2utoa@n,i2___lodiv@dividend
  5011   00109C  C034  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
  5012   0010A0  C035  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
  5013   0010A4  C036  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
  5014   0010A8  C037  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
  5015   0010AC  C038  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
  5016   0010B0  C039  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
  5017   0010B4  C03A  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
  5018   0010B8  0E0A               	movlw	10
  5019   0010BA  6E09               	movwf	i2___lodiv@divisor^0,c
  5020   0010BC  0E00               	movlw	0
  5021   0010BE  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
  5022   0010C0  0E00               	movlw	0
  5023   0010C2  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
  5024   0010C4  0E00               	movlw	0
  5025   0010C6  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
  5026   0010C8  0E00               	movlw	0
  5027   0010CA  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
  5028   0010CC  0E00               	movlw	0
  5029   0010CE  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
  5030   0010D0  0E00               	movlw	0
  5031   0010D2  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
  5032   0010D4  0E00               	movlw	0
  5033   0010D6  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
  5034   0010D8  EC8E  F00A         	call	i2___lodiv	;wreg free
  5035   0010DC  C001  F033         	movff	?i2___lodiv,i2utoa@n
  5036   0010E0  C002  F034         	movff	?i2___lodiv+1,i2utoa@n+1
  5037   0010E4  C003  F035         	movff	?i2___lodiv+2,i2utoa@n+2
  5038   0010E8  C004  F036         	movff	?i2___lodiv+3,i2utoa@n+3
  5039   0010EC  C005  F037         	movff	?i2___lodiv+4,i2utoa@n+4
  5040   0010F0  C006  F038         	movff	?i2___lodiv+5,i2utoa@n+5
  5041   0010F4  C007  F039         	movff	?i2___lodiv+6,i2utoa@n+6
  5042   0010F8  C008  F03A         	movff	?i2___lodiv+7,i2utoa@n+7
  5043   0010FC                     i2l2786:
  5044                           
  5045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5046   0010FC  503B               	movf	i2utoa@i^0,w,c
  5047   0010FE  103C               	iorwf	(i2utoa@i+1)^0,w,c
  5048   001100  B4D8               	btfsc	status,2,c
  5049   001102  EF85  F008         	goto	i2u190_41
  5050   001106  EF87  F008         	goto	i2u190_40
  5051   00110A                     i2u190_41:
  5052   00110A  EFB8  F008         	goto	i2l2796
  5053   00110E                     i2u190_40:
  5054   00110E  5033               	movf	i2utoa@n^0,w,c
  5055   001110  1034               	iorwf	(i2utoa@n+1)^0,w,c
  5056   001112  1035               	iorwf	(i2utoa@n+2)^0,w,c
  5057   001114  1036               	iorwf	(i2utoa@n+3)^0,w,c
  5058   001116  1037               	iorwf	(i2utoa@n+4)^0,w,c
  5059   001118  1038               	iorwf	(i2utoa@n+5)^0,w,c
  5060   00111A  1039               	iorwf	(i2utoa@n+6)^0,w,c
  5061   00111C  103A               	iorwf	(i2utoa@n+7)^0,w,c
  5062   00111E  A4D8               	btfss	status,2,c
  5063   001120  EF94  F008         	goto	i2u191_41
  5064   001124  EF96  F008         	goto	i2u191_40
  5065   001128                     i2u191_41:
  5066   001128  EF08  F008         	goto	i2l2776
  5067   00112C                     i2u191_40:
  5068   00112C  BE30               	btfsc	(i2utoa@p+1)^0,7,c
  5069   00112E  EFA3  F008         	goto	i2u192_40
  5070   001132  5030               	movf	(i2utoa@p+1)^0,w,c
  5071   001134  E106               	bnz	i2u192_41
  5072   001136  042F               	decf	i2utoa@p^0,w,c
  5073   001138  B0D8               	btfsc	status,0,c
  5074   00113A  EFA1  F008         	goto	i2u192_41
  5075   00113E  EFA3  F008         	goto	i2u192_40
  5076   001142                     i2u192_41:
  5077   001142  EF08  F008         	goto	i2l2776
  5078   001146                     i2u192_40:
  5079   001146  BE32               	btfsc	(i2utoa@w+1)^0,7,c
  5080   001148  EFAE  F008         	goto	i2u193_41
  5081   00114C  5032               	movf	(i2utoa@w+1)^0,w,c
  5082   00114E  E108               	bnz	i2u193_40
  5083   001150  0431               	decf	i2utoa@w^0,w,c
  5084   001152  A0D8               	btfss	status,0,c
  5085   001154  EFAE  F008         	goto	i2u193_41
  5086   001158  EFB0  F008         	goto	i2u193_40
  5087   00115C                     i2u193_41:
  5088   00115C  EFB8  F008         	goto	i2l2796
  5089   001160                     i2u193_40:
  5090   001160  0100               	movlb	0	; () banked
  5091   001162  B3DD               	btfsc	_flags& (0+255),1,b
  5092   001164  EFB6  F008         	goto	i2u194_41
  5093   001168  EFB8  F008         	goto	i2u194_40
  5094   00116C                     i2u194_41:
  5095   00116C  EF08  F008         	goto	i2l2776
  5096   001170                     i2u194_40:
  5097   001170                     i2l2796:
  5098                           
  5099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5100   001170  C01D  F012         	movff	i2utoa@fp,i2pad@fp
  5101   001174  C01E  F013         	movff	i2utoa@fp+1,i2pad@fp+1
  5102   001178  0E03               	movlw	low _dbuf
  5103   00117A  243B               	addwf	i2utoa@i^0,w,c
  5104   00117C  6E14               	movwf	i2pad@buf^0,c
  5105   00117E  0E01               	movlw	high _dbuf
  5106   001180  203C               	addwfc	(i2utoa@i+1)^0,w,c
  5107   001182  6E15               	movwf	(i2pad@buf+1)^0,c
  5108   001184  C031  F016         	movff	i2utoa@w,i2pad@p
  5109   001188  C032  F017         	movff	i2utoa@w+1,i2pad@p+1
  5110   00118C  ECFA  F00C         	call	i2_pad	;wreg free
  5111   001190  0012               	return		;funcret
  5112   001192                     __end_ofi2_utoa:
  5113                           	callstack 0
  5114                           
  5115 ;; *************** function i2_pad *****************
  5116 ;; Defined at:
  5117 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  5120 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5121 ;;  buf             2   19[COMRAM] PTR unsigned char 
  5122 ;;		 -> dbuf(32), 
  5123 ;;  p               2   21[COMRAM] int 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  w               2   26[COMRAM] int 
  5126 ;;  i               2   24[COMRAM] int 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5136 ;;      Params:         6       0       0       0       0       0       0       0       0
  5137 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5138 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5139 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5140 ;;Total ram usage:       11 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 3
  5143 ;; This function calls:
  5144 ;;		i2_fputc
  5145 ;;		i2_fputs
  5146 ;; This function is called by:
  5147 ;;		i2_utoa
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text32
  5152   0019F4                     __ptext32:
  5153                           	callstack 0
  5154   0019F4                     i2_pad:
  5155                           	callstack 14
  5156   0019F4                     
  5157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  5158   0019F4  0100               	movlb	0	; () banked
  5159   0019F6  A1DD               	btfss	_flags& (0+255),0,b
  5160   0019F8  EF00  F00D         	goto	i2u167_41
  5161   0019FC  EF02  F00D         	goto	i2u167_40
  5162   001A00                     i2u167_41:
  5163   001A00  EF0C  F00D         	goto	i2l2646
  5164   001A04                     i2u167_40:
  5165   001A04                     
  5166                           ; BSR set to: 0
  5167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  5168   001A04  C014  F00B         	movff	i2pad@buf,i2fputs@s
  5169   001A08  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  5170   001A0C  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  5171   001A10  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  5172   001A14  ECB2  F00F         	call	i2_fputs	;wreg free
  5173   001A18                     i2l2646:
  5174                           
  5175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  5176   001A18  BE17               	btfsc	(i2pad@p+1)^0,7,c
  5177   001A1A  EF11  F00D         	goto	i2u168_41
  5178   001A1E  EF13  F00D         	goto	i2u168_40
  5179   001A22                     i2u168_41:
  5180   001A22  EF19  F00D         	goto	i2l2650
  5181   001A26                     i2u168_40:
  5182   001A26  C016  F01B         	movff	i2pad@p,i2pad@w
  5183   001A2A  C017  F01C         	movff	i2pad@p+1,i2pad@w+1
  5184   001A2E  EF1D  F00D         	goto	i2l1148
  5185   001A32                     i2l2650:
  5186   001A32  0E00               	movlw	0
  5187   001A34  6E1C               	movwf	(i2pad@w+1)^0,c
  5188   001A36  0E00               	movlw	0
  5189   001A38  6E1B               	movwf	i2pad@w^0,c
  5190   001A3A                     i2l1148:
  5191                           
  5192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5193   001A3A  0E00               	movlw	0
  5194   001A3C  6E1A               	movwf	(i2pad@i+1)^0,c
  5195   001A3E  0E00               	movlw	0
  5196   001A40  6E19               	movwf	i2pad@i^0,c
  5197                           
  5198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5199   001A42  EF2F  F00D         	goto	i2l2656
  5200   001A46                     i2l2652:
  5201                           
  5202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5203   001A46  0E00               	movlw	0
  5204   001A48  6E03               	movwf	(i2fputc@c+1)^0,c
  5205   001A4A  0E20               	movlw	32
  5206   001A4C  6E02               	movwf	i2fputc@c^0,c
  5207   001A4E  C012  F004         	movff	i2pad@fp,i2fputc@fp
  5208   001A52  C013  F005         	movff	i2pad@fp+1,i2fputc@fp+1
  5209   001A56  EC3D  F00C         	call	i2_fputc	;wreg free
  5210   001A5A                     
  5211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5212   001A5A  4A19               	infsnz	i2pad@i^0,f,c
  5213   001A5C  2A1A               	incf	(i2pad@i+1)^0,f,c
  5214   001A5E                     i2l2656:
  5215                           
  5216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5217   001A5E  501B               	movf	i2pad@w^0,w,c
  5218   001A60  5C19               	subwf	i2pad@i^0,w,c
  5219   001A62  501A               	movf	(i2pad@i+1)^0,w,c
  5220   001A64  0A80               	xorlw	128
  5221   001A66  6E18               	movwf	??i2_pad^0,c
  5222   001A68  501C               	movf	(i2pad@w+1)^0,w,c
  5223   001A6A  0A80               	xorlw	128
  5224   001A6C  5818               	subwfb	??i2_pad^0,w,c
  5225   001A6E  A0D8               	btfss	status,0,c
  5226   001A70  EF3C  F00D         	goto	i2u169_41
  5227   001A74  EF3E  F00D         	goto	i2u169_40
  5228   001A78                     i2u169_41:
  5229   001A78  EF23  F00D         	goto	i2l2652
  5230   001A7C                     i2u169_40:
  5231   001A7C                     
  5232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  5233   001A7C  0100               	movlb	0	; () banked
  5234   001A7E  B1DD               	btfsc	_flags& (0+255),0,b
  5235   001A80  EF44  F00D         	goto	i2u170_41
  5236   001A84  EF46  F00D         	goto	i2u170_40
  5237   001A88                     i2u170_41:
  5238   001A88  EF50  F00D         	goto	i2l1153
  5239   001A8C                     i2u170_40:
  5240   001A8C                     
  5241                           ; BSR set to: 0
  5242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5243   001A8C  C014  F00B         	movff	i2pad@buf,i2fputs@s
  5244   001A90  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  5245   001A94  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  5246   001A98  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  5247   001A9C  ECB2  F00F         	call	i2_fputs	;wreg free
  5248   001AA0                     i2l1153:
  5249   001AA0  0012               	return		;funcret
  5250   001AA2                     __end_ofi2_pad:
  5251                           	callstack 0
  5252                           
  5253 ;; *************** function i2_fputs *****************
  5254 ;; Defined at:
  5255 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  s               2   10[COMRAM] PTR const unsigned char 
  5258 ;;		 -> dbuf(32), 
  5259 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  5260 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  i               2   15[COMRAM] int 
  5263 ;;  c               1   14[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2   10[COMRAM] int 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5273 ;;      Params:         4       0       0       0       0       0       0       0       0
  5274 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5276 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5277 ;;Total ram usage:        7 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 2
  5280 ;; This function calls:
  5281 ;;		i2_fputc
  5282 ;; This function is called by:
  5283 ;;		i2_pad
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text33
  5288   001F64                     __ptext33:
  5289                           	callstack 0
  5290   001F64                     i2_fputs:
  5291                           	callstack 14
  5292   001F64  0E00               	movlw	0
  5293   001F66  6E11               	movwf	(i2fputs@i+1)^0,c
  5294   001F68  0E00               	movlw	0
  5295   001F6A  6E10               	movwf	i2fputs@i^0,c
  5296   001F6C  EFC3  F00F         	goto	i2l2518
  5297   001F70                     i2l2514:
  5298   001F70  C00F  F002         	movff	i2fputs@c,i2fputc@c
  5299   001F74  6A03               	clrf	(i2fputc@c+1)^0,c
  5300   001F76  C00D  F004         	movff	i2fputs@fp,i2fputc@fp
  5301   001F7A  C00E  F005         	movff	i2fputs@fp+1,i2fputc@fp+1
  5302   001F7E  EC3D  F00C         	call	i2_fputc	;wreg free
  5303   001F82  4A10               	infsnz	i2fputs@i^0,f,c
  5304   001F84  2A11               	incf	(i2fputs@i+1)^0,f,c
  5305   001F86                     i2l2518:
  5306   001F86  5010               	movf	i2fputs@i^0,w,c
  5307   001F88  240B               	addwf	i2fputs@s^0,w,c
  5308   001F8A  6ED9               	movwf	fsr2l,c
  5309   001F8C  5011               	movf	(i2fputs@i+1)^0,w,c
  5310   001F8E  200C               	addwfc	(i2fputs@s+1)^0,w,c
  5311   001F90  6EDA               	movwf	fsr2h,c
  5312   001F92  50DF               	movf	indf2,w,c
  5313   001F94  6E0F               	movwf	i2fputs@c^0,c
  5314   001F96  500F               	movf	i2fputs@c^0,w,c
  5315   001F98  A4D8               	btfss	status,2,c
  5316   001F9A  EFD1  F00F         	goto	i2u144_41
  5317   001F9E  EFD3  F00F         	goto	i2u144_40
  5318   001FA2                     i2u144_41:
  5319   001FA2  EFB8  F00F         	goto	i2l2514
  5320   001FA6                     i2u144_40:
  5321   001FA6  0012               	return		;funcret
  5322   001FA8                     __end_ofi2_fputs:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function i2_fputc *****************
  5326 ;; Defined at:
  5327 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  c               2    1[COMRAM] int 
  5330 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  5331 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  2    1[COMRAM] int 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5343 ;;      Params:         4       0       0       0       0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5345 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5346 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5347 ;;Total ram usage:        9 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 1
  5350 ;; This function calls:
  5351 ;;		i2_putch
  5352 ;; This function is called by:
  5353 ;;		i2_pad
  5354 ;;		i2_vfpfcnvrt
  5355 ;;		i2_fputs
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text34
  5360   00187A                     __ptext34:
  5361                           	callstack 0
  5362   00187A                     i2_fputc:
  5363                           	callstack 14
  5364   00187A  5004               	movf	i2fputc@fp^0,w,c
  5365   00187C  1005               	iorwf	(i2fputc@fp+1)^0,w,c
  5366   00187E  B4D8               	btfsc	status,2,c
  5367   001880  EF44  F00C         	goto	i2u139_41
  5368   001884  EF46  F00C         	goto	i2u139_40
  5369   001888                     i2u139_41:
  5370   001888  EF4F  F00C         	goto	i2l2494
  5371   00188C                     i2u139_40:
  5372   00188C  5004               	movf	i2fputc@fp^0,w,c
  5373   00188E  1005               	iorwf	(i2fputc@fp+1)^0,w,c
  5374   001890  A4D8               	btfss	status,2,c
  5375   001892  EF4D  F00C         	goto	i2u140_41
  5376   001896  EF4F  F00C         	goto	i2u140_40
  5377   00189A                     i2u140_41:
  5378   00189A  EF54  F00C         	goto	i2l2496
  5379   00189E                     i2u140_40:
  5380   00189E                     i2l2494:
  5381   00189E  5002               	movf	i2fputc@c^0,w,c
  5382   0018A0  ECD2  F010         	call	i2_putch
  5383   0018A4  EFA1  F00C         	goto	i2l1250
  5384   0018A8                     i2l2496:
  5385   0018A8  EE20 F009          	lfsr	2,9
  5386   0018AC  5004               	movf	i2fputc@fp^0,w,c
  5387   0018AE  26D9               	addwf	fsr2l,f,c
  5388   0018B0  5005               	movf	(i2fputc@fp+1)^0,w,c
  5389   0018B2  22DA               	addwfc	fsr2h,f,c
  5390   0018B4  50DE               	movf	postinc2,w,c
  5391   0018B6  10DE               	iorwf	postinc2,w,c
  5392   0018B8  B4D8               	btfsc	status,2,c
  5393   0018BA  EF61  F00C         	goto	i2u141_41
  5394   0018BE  EF63  F00C         	goto	i2u141_40
  5395   0018C2                     i2u141_41:
  5396   0018C2  EF7E  F00C         	goto	i2l2500
  5397   0018C6                     i2u141_40:
  5398   0018C6  EE20 F009          	lfsr	2,9
  5399   0018CA  5004               	movf	i2fputc@fp^0,w,c
  5400   0018CC  26D9               	addwf	fsr2l,f,c
  5401   0018CE  5005               	movf	(i2fputc@fp+1)^0,w,c
  5402   0018D0  22DA               	addwfc	fsr2h,f,c
  5403   0018D2  EE10 F003          	lfsr	1,3
  5404   0018D6  5004               	movf	i2fputc@fp^0,w,c
  5405   0018D8  26E1               	addwf	fsr1l,f,c
  5406   0018DA  5005               	movf	(i2fputc@fp+1)^0,w,c
  5407   0018DC  22E2               	addwfc	fsr1h,f,c
  5408   0018DE  50DE               	movf	postinc2,w,c
  5409   0018E0  5CE6               	subwf	postinc1,w,c
  5410   0018E2  50E6               	movf	postinc1,w,c
  5411   0018E4  0A80               	xorlw	128
  5412   0018E6  6E0A               	movwf	(??i2_fputc+4)^0,c
  5413   0018E8  50DE               	movf	postinc2,w,c
  5414   0018EA  0A80               	xorlw	128
  5415   0018EC  580A               	subwfb	(??i2_fputc+4)^0,w,c
  5416   0018EE  B0D8               	btfsc	status,0,c
  5417   0018F0  EF7C  F00C         	goto	i2u142_41
  5418   0018F4  EF7E  F00C         	goto	i2u142_40
  5419   0018F8                     i2u142_41:
  5420   0018F8  EFA1  F00C         	goto	i2l1250
  5421   0018FC                     i2u142_40:
  5422   0018FC                     i2l2500:
  5423   0018FC  EE20 F003          	lfsr	2,3
  5424   001900  5004               	movf	i2fputc@fp^0,w,c
  5425   001902  26D9               	addwf	fsr2l,f,c
  5426   001904  5005               	movf	(i2fputc@fp+1)^0,w,c
  5427   001906  22DA               	addwfc	fsr2h,f,c
  5428   001908  CFDE F006          	movff	postinc2,??i2_fputc
  5429   00190C  CFDD F007          	movff	postdec2,??i2_fputc+1
  5430   001910  C004  FFD9         	movff	i2fputc@fp,fsr2l
  5431   001914  C005  FFDA         	movff	i2fputc@fp+1,fsr2h
  5432   001918  CFDE F008          	movff	postinc2,??i2_fputc+2
  5433   00191C  CFDD F009          	movff	postdec2,??i2_fputc+3
  5434   001920  5006               	movf	??i2_fputc^0,w,c
  5435   001922  2408               	addwf	(??i2_fputc+2)^0,w,c
  5436   001924  6ED9               	movwf	fsr2l,c
  5437   001926  5007               	movf	(??i2_fputc+1)^0,w,c
  5438   001928  2009               	addwfc	(??i2_fputc+3)^0,w,c
  5439   00192A  6EDA               	movwf	fsr2h,c
  5440   00192C  C002  FFDF         	movff	i2fputc@c,indf2
  5441   001930  EE20 F003          	lfsr	2,3
  5442   001934  5004               	movf	i2fputc@fp^0,w,c
  5443   001936  26D9               	addwf	fsr2l,f,c
  5444   001938  5005               	movf	(i2fputc@fp+1)^0,w,c
  5445   00193A  22DA               	addwfc	fsr2h,f,c
  5446   00193C  2ADE               	incf	postinc2,f,c
  5447   00193E  0E00               	movlw	0
  5448   001940  22DD               	addwfc	postdec2,f,c
  5449   001942                     i2l1250:
  5450   001942  0012               	return		;funcret
  5451   001944                     __end_ofi2_fputc:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function i2_putch *****************
  5455 ;; Defined at:
  5456 ;;		line 93 in file "lib_pic/usart.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  c               1    wreg     unsigned char 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  c               1    0[COMRAM] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0
  5471 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5473 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5474 ;;Total ram usage:        1 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; This function calls:
  5477 ;;		Nothing
  5478 ;; This function is called by:
  5479 ;;		i2_fputc
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text35
  5484   0021A4                     __ptext35:
  5485                           	callstack 0
  5486   0021A4                     i2_putch:
  5487                           	callstack 14
  5488                           
  5489                           ;incstack = 0
  5490                           ;i2putch@c stored from wreg
  5491   0021A4  6E01               	movwf	i2putch@c^0,c
  5492   0021A6                     i2l439:
  5493   0021A6  A2AC               	btfss	172,1,c	;volatile
  5494   0021A8  EFD8  F010         	goto	i2u134_41
  5495   0021AC  EFDA  F010         	goto	i2u134_40
  5496   0021B0                     i2u134_41:
  5497   0021B0  EFD3  F010         	goto	i2l439
  5498   0021B4                     i2u134_40:
  5499   0021B4                     
  5500                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  5501   0021B4  C001  FFAD         	movff	i2putch@c,4013	;volatile
  5502   0021B8  0012               	return		;funcret
  5503   0021BA                     __end_ofi2_putch:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function i2___lomod *****************
  5507 ;; Defined at:
  5508 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  dividend        8    0[COMRAM] unsigned long long 
  5511 ;;  divisor         8    8[COMRAM] unsigned long long 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  counter         1   16[COMRAM] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  8    0[COMRAM] unsigned long long 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5523 ;;      Params:        16       0       0       0       0       0       0       0       0
  5524 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5526 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5527 ;;Total ram usage:       17 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		i2_utoa
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text36
  5537   0016DE                     __ptext36:
  5538                           	callstack 0
  5539   0016DE                     i2___lomod:
  5540                           	callstack 17
  5541   0016DE  5009               	movf	i2___lomod@divisor^0,w,c
  5542   0016E0  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
  5543   0016E2  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
  5544   0016E4  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
  5545   0016E6  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
  5546   0016E8  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
  5547   0016EA  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
  5548   0016EC  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
  5549   0016EE  B4D8               	btfsc	status,2,c
  5550   0016F0  EF7C  F00B         	goto	i2u164_41
  5551   0016F4  EF7E  F00B         	goto	i2u164_40
  5552   0016F8                     i2u164_41:
  5553   0016F8  EFC6  F00B         	goto	i2l893
  5554   0016FC                     i2u164_40:
  5555   0016FC  0E01               	movlw	1
  5556   0016FE  6E11               	movwf	i2___lomod@counter^0,c
  5557   001700  EF8C  F00B         	goto	i2l2632
  5558   001704                     i2l2630:
  5559   001704  90D8               	bcf	status,0,c
  5560   001706  3609               	rlcf	i2___lomod@divisor^0,f,c
  5561   001708  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
  5562   00170A  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
  5563   00170C  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
  5564   00170E  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
  5565   001710  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
  5566   001712  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
  5567   001714  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
  5568   001716  2A11               	incf	i2___lomod@counter^0,f,c
  5569   001718                     i2l2632:
  5570   001718  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
  5571   00171A  EF91  F00B         	goto	i2u165_41
  5572   00171E  EF93  F00B         	goto	i2u165_40
  5573   001722                     i2u165_41:
  5574   001722  EF82  F00B         	goto	i2l2630
  5575   001726                     i2u165_40:
  5576   001726                     i2l2634:
  5577   001726  5009               	movf	i2___lomod@divisor^0,w,c
  5578   001728  5C01               	subwf	i2___lomod@dividend^0,w,c
  5579   00172A  500A               	movf	(i2___lomod@divisor+1)^0,w,c
  5580   00172C  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
  5581   00172E  500B               	movf	(i2___lomod@divisor+2)^0,w,c
  5582   001730  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
  5583   001732  500C               	movf	(i2___lomod@divisor+3)^0,w,c
  5584   001734  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
  5585   001736  500D               	movf	(i2___lomod@divisor+4)^0,w,c
  5586   001738  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
  5587   00173A  500E               	movf	(i2___lomod@divisor+5)^0,w,c
  5588   00173C  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
  5589   00173E  500F               	movf	(i2___lomod@divisor+6)^0,w,c
  5590   001740  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
  5591   001742  5010               	movf	(i2___lomod@divisor+7)^0,w,c
  5592   001744  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
  5593   001746  A0D8               	btfss	status,0,c
  5594   001748  EFA8  F00B         	goto	i2u166_41
  5595   00174C  EFAA  F00B         	goto	i2u166_40
  5596   001750                     i2u166_41:
  5597   001750  EFBA  F00B         	goto	i2l2638
  5598   001754                     i2u166_40:
  5599   001754  5009               	movf	i2___lomod@divisor^0,w,c
  5600   001756  5E01               	subwf	i2___lomod@dividend^0,f,c
  5601   001758  500A               	movf	(i2___lomod@divisor+1)^0,w,c
  5602   00175A  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
  5603   00175C  500B               	movf	(i2___lomod@divisor+2)^0,w,c
  5604   00175E  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
  5605   001760  500C               	movf	(i2___lomod@divisor+3)^0,w,c
  5606   001762  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
  5607   001764  500D               	movf	(i2___lomod@divisor+4)^0,w,c
  5608   001766  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
  5609   001768  500E               	movf	(i2___lomod@divisor+5)^0,w,c
  5610   00176A  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
  5611   00176C  500F               	movf	(i2___lomod@divisor+6)^0,w,c
  5612   00176E  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
  5613   001770  5010               	movf	(i2___lomod@divisor+7)^0,w,c
  5614   001772  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
  5615   001774                     i2l2638:
  5616   001774  90D8               	bcf	status,0,c
  5617   001776  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
  5618   001778  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
  5619   00177A  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
  5620   00177C  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
  5621   00177E  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
  5622   001780  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
  5623   001782  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
  5624   001784  3209               	rrcf	i2___lomod@divisor^0,f,c
  5625   001786  2E11               	decfsz	i2___lomod@counter^0,f,c
  5626   001788  EF93  F00B         	goto	i2l2634
  5627   00178C                     i2l893:
  5628   00178C  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
  5629   001790  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
  5630   001794  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
  5631   001798  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
  5632   00179C  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
  5633   0017A0  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
  5634   0017A4  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
  5635   0017A8  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
  5636   0017AC  0012               	return		;funcret
  5637   0017AE                     __end_ofi2___lomod:
  5638                           	callstack 0
  5639                           
  5640 ;; *************** function i2___lodiv *****************
  5641 ;; Defined at:
  5642 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  dividend        8    0[COMRAM] unsigned long long 
  5645 ;;  divisor         8    8[COMRAM] unsigned long long 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  quotient        8   16[COMRAM] unsigned long long 
  5648 ;;  counter         1   24[COMRAM] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  8    0[COMRAM] unsigned long long 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5658 ;;      Params:        16       0       0       0       0       0       0       0       0
  5659 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5661 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5662 ;;Total ram usage:       25 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		i2_utoa
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text37
  5672   00151C                     __ptext37:
  5673                           	callstack 0
  5674   00151C                     i2___lodiv:
  5675                           	callstack 17
  5676   00151C  EE20  F011         	lfsr	2,i2___lodiv@quotient
  5677   001520  0E07               	movlw	7
  5678   001522                     i2u160_41:
  5679   001522  6ADE               	clrf	postinc2,c
  5680   001524  06E8               	decf	wreg,f,c
  5681   001526  E2FD               	bc	i2u160_41
  5682   001528  5009               	movf	i2___lodiv@divisor^0,w,c
  5683   00152A  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
  5684   00152C  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
  5685   00152E  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
  5686   001530  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
  5687   001532  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
  5688   001534  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
  5689   001536  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
  5690   001538  B4D8               	btfsc	status,2,c
  5691   00153A  EFA1  F00A         	goto	i2u161_41
  5692   00153E  EFA3  F00A         	goto	i2u161_40
  5693   001542                     i2u161_41:
  5694   001542  EFF5  F00A         	goto	i2l883
  5695   001546                     i2u161_40:
  5696   001546  0E01               	movlw	1
  5697   001548  6E19               	movwf	i2___lodiv@counter^0,c
  5698   00154A  EFB1  F00A         	goto	i2l2612
  5699   00154E                     i2l2610:
  5700   00154E  90D8               	bcf	status,0,c
  5701   001550  3609               	rlcf	i2___lodiv@divisor^0,f,c
  5702   001552  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
  5703   001554  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
  5704   001556  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
  5705   001558  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
  5706   00155A  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
  5707   00155C  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
  5708   00155E  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
  5709   001560  2A19               	incf	i2___lodiv@counter^0,f,c
  5710   001562                     i2l2612:
  5711   001562  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
  5712   001564  EFB6  F00A         	goto	i2u162_41
  5713   001568  EFB8  F00A         	goto	i2u162_40
  5714   00156C                     i2u162_41:
  5715   00156C  EFA7  F00A         	goto	i2l2610
  5716   001570                     i2u162_40:
  5717   001570                     i2l2614:
  5718   001570  90D8               	bcf	status,0,c
  5719   001572  3611               	rlcf	i2___lodiv@quotient^0,f,c
  5720   001574  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
  5721   001576  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
  5722   001578  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
  5723   00157A  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
  5724   00157C  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
  5725   00157E  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
  5726   001580  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
  5727   001582  5009               	movf	i2___lodiv@divisor^0,w,c
  5728   001584  5C01               	subwf	i2___lodiv@dividend^0,w,c
  5729   001586  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
  5730   001588  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
  5731   00158A  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
  5732   00158C  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
  5733   00158E  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
  5734   001590  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
  5735   001592  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
  5736   001594  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
  5737   001596  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
  5738   001598  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
  5739   00159A  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
  5740   00159C  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
  5741   00159E  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
  5742   0015A0  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
  5743   0015A2  A0D8               	btfss	status,0,c
  5744   0015A4  EFD6  F00A         	goto	i2u163_41
  5745   0015A8  EFD8  F00A         	goto	i2u163_40
  5746   0015AC                     i2u163_41:
  5747   0015AC  EFE9  F00A         	goto	i2l2622
  5748   0015B0                     i2u163_40:
  5749   0015B0  5009               	movf	i2___lodiv@divisor^0,w,c
  5750   0015B2  5E01               	subwf	i2___lodiv@dividend^0,f,c
  5751   0015B4  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
  5752   0015B6  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
  5753   0015B8  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
  5754   0015BA  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
  5755   0015BC  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
  5756   0015BE  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
  5757   0015C0  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
  5758   0015C2  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
  5759   0015C4  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
  5760   0015C6  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
  5761   0015C8  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
  5762   0015CA  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
  5763   0015CC  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
  5764   0015CE  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
  5765   0015D0  8011               	bsf	i2___lodiv@quotient^0,0,c
  5766   0015D2                     i2l2622:
  5767   0015D2  90D8               	bcf	status,0,c
  5768   0015D4  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
  5769   0015D6  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
  5770   0015D8  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
  5771   0015DA  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
  5772   0015DC  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
  5773   0015DE  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
  5774   0015E0  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
  5775   0015E2  3209               	rrcf	i2___lodiv@divisor^0,f,c
  5776   0015E4  2E19               	decfsz	i2___lodiv@counter^0,f,c
  5777   0015E6  EFB8  F00A         	goto	i2l2614
  5778   0015EA                     i2l883:
  5779   0015EA  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
  5780   0015EE  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
  5781   0015F2  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
  5782   0015F6  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
  5783   0015FA  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
  5784   0015FE  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
  5785   001602  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
  5786   001606  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
  5787   00160A  0012               	return		;funcret
  5788   00160C                     __end_ofi2___lodiv:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function i2_atoi *****************
  5792 ;; Defined at:
  5793 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5796 ;;		 -> STR_2(23), STR_1(23), 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  n               2   13[COMRAM] int 
  5799 ;;  neg             2   11[COMRAM] int 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  2    6[COMRAM] int 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5809 ;;      Params:         2       0       0       0       0       0       0       0       0
  5810 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5811 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5812 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5813 ;;Total ram usage:        9 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; Hardware stack levels required when called: 1
  5816 ;; This function calls:
  5817 ;;		i2___wmul
  5818 ;;		i2_isdigit
  5819 ;;		i2_isspace
  5820 ;; This function is called by:
  5821 ;;		i2_vfpfcnvrt
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text38
  5826   0012E0                     __ptext38:
  5827                           	callstack 0
  5828   0012E0                     i2_atoi:
  5829                           	callstack 17
  5830   0012E0  0E00               	movlw	0
  5831   0012E2  6E0F               	movwf	(i2atoi@n+1)^0,c
  5832   0012E4  0E00               	movlw	0
  5833   0012E6  6E0E               	movwf	i2atoi@n^0,c
  5834   0012E8  0E00               	movlw	0
  5835   0012EA  6E0D               	movwf	(i2atoi@neg+1)^0,c
  5836   0012EC  0E00               	movlw	0
  5837   0012EE  6E0C               	movwf	i2atoi@neg^0,c
  5838   0012F0  EF7C  F009         	goto	i2l2806
  5839   0012F4                     i2l2802:
  5840   0012F4  4A07               	infsnz	i2atoi@s^0,f,c
  5841   0012F6  2A08               	incf	(i2atoi@s+1)^0,f,c
  5842   0012F8                     i2l2806:
  5843   0012F8  C007  FFF6         	movff	i2atoi@s,tblptrl
  5844   0012FC  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5845   001300                     	if	0	;tblptru may be non-zero
  5846   001300                     	endif
  5847   001300                     	if	0	;tblptru may be non-zero
  5848   001300                     	endif
  5849   001300  0008               	tblrd		*
  5850   001302  50F5               	movf	tablat,w,c
  5851   001304  0A20               	xorlw	32
  5852   001306  B4D8               	btfsc	status,2,c
  5853   001308  EF88  F009         	goto	i2u195_41
  5854   00130C  EF8A  F009         	goto	i2u195_40
  5855   001310                     i2u195_41:
  5856   001310  EF7A  F009         	goto	i2l2802
  5857   001314                     i2u195_40:
  5858   001314  C007  FFF6         	movff	i2atoi@s,tblptrl
  5859   001318  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5860   00131C                     	if	0	;tblptru may be non-zero
  5861   00131C                     	endif
  5862   00131C                     	if	0	;tblptru may be non-zero
  5863   00131C                     	endif
  5864   00131C  0008               	tblrd		*
  5865   00131E  CFF5 F009          	movff	tablat,??i2_atoi
  5866   001322  0EF7               	movlw	247
  5867   001324  2409               	addwf	??i2_atoi^0,w,c
  5868   001326  6E0A               	movwf	(??i2_atoi+1)^0,c
  5869   001328  6A0B               	clrf	(??i2_atoi+2)^0,c
  5870   00132A  0EFF               	movlw	255
  5871   00132C  220B               	addwfc	(??i2_atoi+2)^0,f,c
  5872   00132E  500B               	movf	(??i2_atoi+2)^0,w,c
  5873   001330  E109               	bnz	i2u196_40
  5874   001332  0E05               	movlw	5
  5875   001334  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  5876   001336  A0D8               	btfss	status,0,c
  5877   001338  EFA0  F009         	goto	i2u196_41
  5878   00133C  EFA2  F009         	goto	i2u196_40
  5879   001340                     i2u196_41:
  5880   001340  EF7A  F009         	goto	i2l2802
  5881   001344                     i2u196_40:
  5882   001344  EFAC  F009         	goto	i2l2814
  5883   001348                     i2l2810:
  5884   001348  0E00               	movlw	0
  5885   00134A  6E0D               	movwf	(i2atoi@neg+1)^0,c
  5886   00134C  0E01               	movlw	1
  5887   00134E  6E0C               	movwf	i2atoi@neg^0,c
  5888   001350                     i2l2812:
  5889   001350  4A07               	infsnz	i2atoi@s^0,f,c
  5890   001352  2A08               	incf	(i2atoi@s+1)^0,f,c
  5891   001354  EFE1  F009         	goto	i2l2822
  5892   001358                     i2l2814:
  5893   001358  C007  FFF6         	movff	i2atoi@s,tblptrl
  5894   00135C  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5895   001360                     	if	0	;tblptru may be non-zero
  5896   001360                     	endif
  5897   001360                     	if	0	;tblptru may be non-zero
  5898   001360                     	endif
  5899   001360  0008               	tblrd		*
  5900   001362  50F5               	movf	tablat,w,c
  5901   001364  6E09               	movwf	??i2_atoi^0,c
  5902   001366  6A0A               	clrf	(??i2_atoi+1)^0,c
  5903                           
  5904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5905                           ; Switch size 1, requested type "simple"
  5906                           ; Number of cases is 1, Range of values is 0 to 0
  5907                           ; switch strategies available:
  5908                           ; Name         Instructions Cycles
  5909                           ; simple_byte            4     3 (average)
  5910                           ;	Chosen strategy is simple_byte
  5911   001368  500A               	movf	(??i2_atoi+1)^0,w,c
  5912   00136A  0A00               	xorlw	0	; case 0
  5913   00136C  B4D8               	btfsc	status,2,c
  5914   00136E  EFBB  F009         	goto	i2l3934
  5915   001372  EFE1  F009         	goto	i2l2822
  5916   001376                     i2l3934:
  5917                           
  5918                           ; Switch size 1, requested type "simple"
  5919                           ; Number of cases is 2, Range of values is 43 to 45
  5920                           ; switch strategies available:
  5921                           ; Name         Instructions Cycles
  5922                           ; simple_byte            7     4 (average)
  5923                           ;	Chosen strategy is simple_byte
  5924   001376  5009               	movf	??i2_atoi^0,w,c
  5925   001378  0A2B               	xorlw	43	; case 43
  5926   00137A  B4D8               	btfsc	status,2,c
  5927   00137C  EFA8  F009         	goto	i2l2812
  5928   001380  0A06               	xorlw	6	; case 45
  5929   001382  B4D8               	btfsc	status,2,c
  5930   001384  EFA4  F009         	goto	i2l2810
  5931   001388  EFE1  F009         	goto	i2l2822
  5932   00138C                     i2l2816:
  5933   00138C  C00E  F001         	movff	i2atoi@n,i2___wmul@multiplier
  5934   001390  C00F  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  5935   001394  0E00               	movlw	0
  5936   001396  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5937   001398  0E0A               	movlw	10
  5938   00139A  6E03               	movwf	i2___wmul@multiplicand^0,c
  5939   00139C  EC89  F010         	call	i2___wmul	;wreg free
  5940   0013A0  C007  FFF6         	movff	i2atoi@s,tblptrl
  5941   0013A4  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5942   0013A8                     	if	0	;tblptru may be non-zero
  5943   0013A8                     	endif
  5944   0013A8                     	if	0	;tblptru may be non-zero
  5945   0013A8                     	endif
  5946   0013A8  0008               	tblrd		*
  5947   0013AA  50F5               	movf	tablat,w,c
  5948   0013AC  5E01               	subwf	?i2___wmul^0,f,c
  5949   0013AE  0E00               	movlw	0
  5950   0013B0  5A02               	subwfb	(?i2___wmul+1)^0,f,c
  5951   0013B2  0E30               	movlw	48
  5952   0013B4  2401               	addwf	?i2___wmul^0,w,c
  5953   0013B6  6E0E               	movwf	i2atoi@n^0,c
  5954   0013B8  0E00               	movlw	0
  5955   0013BA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  5956   0013BC  6E0F               	movwf	(i2atoi@n+1)^0,c
  5957   0013BE  EFA8  F009         	goto	i2l2812
  5958   0013C2                     i2l2822:
  5959   0013C2  C007  FFF6         	movff	i2atoi@s,tblptrl
  5960   0013C6  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5961   0013CA                     	if	0	;tblptru may be non-zero
  5962   0013CA                     	endif
  5963   0013CA                     	if	0	;tblptru may be non-zero
  5964   0013CA                     	endif
  5965   0013CA  0008               	tblrd		*
  5966   0013CC  CFF5 F009          	movff	tablat,??i2_atoi
  5967   0013D0  0ED0               	movlw	208
  5968   0013D2  2409               	addwf	??i2_atoi^0,w,c
  5969   0013D4  6E0A               	movwf	(??i2_atoi+1)^0,c
  5970   0013D6  6A0B               	clrf	(??i2_atoi+2)^0,c
  5971   0013D8  0EFF               	movlw	255
  5972   0013DA  220B               	addwfc	(??i2_atoi+2)^0,f,c
  5973   0013DC  500B               	movf	(??i2_atoi+2)^0,w,c
  5974   0013DE  E109               	bnz	i2u197_40
  5975   0013E0  0E0A               	movlw	10
  5976   0013E2  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  5977   0013E4  A0D8               	btfss	status,0,c
  5978   0013E6  EFF7  F009         	goto	i2u197_41
  5979   0013EA  EFF9  F009         	goto	i2u197_40
  5980   0013EE                     i2u197_41:
  5981   0013EE  EFC6  F009         	goto	i2l2816
  5982   0013F2                     i2u197_40:
  5983   0013F2  500C               	movf	i2atoi@neg^0,w,c
  5984   0013F4  100D               	iorwf	(i2atoi@neg+1)^0,w,c
  5985   0013F6  A4D8               	btfss	status,2,c
  5986   0013F8  EF00  F00A         	goto	i2u198_41
  5987   0013FC  EF02  F00A         	goto	i2u198_40
  5988   001400                     i2u198_41:
  5989   001400  EF10  F00A         	goto	i2l1221
  5990   001404                     i2u198_40:
  5991   001404  C00E  F009         	movff	i2atoi@n,??i2_atoi
  5992   001408  C00F  F00A         	movff	i2atoi@n+1,??i2_atoi+1
  5993   00140C  1E09               	comf	??i2_atoi^0,f,c
  5994   00140E  1E0A               	comf	(??i2_atoi+1)^0,f,c
  5995   001410  4A09               	infsnz	??i2_atoi^0,f,c
  5996   001412  2A0A               	incf	(??i2_atoi+1)^0,f,c
  5997   001414  C009  F007         	movff	??i2_atoi,?i2_atoi
  5998   001418  C00A  F008         	movff	??i2_atoi+1,?i2_atoi+1
  5999   00141C  EF14  F00A         	goto	i2l1224
  6000   001420                     i2l1221:
  6001   001420  C00E  F007         	movff	i2atoi@n,?i2_atoi
  6002   001424  C00F  F008         	movff	i2atoi@n+1,?i2_atoi+1
  6003   001428                     i2l1224:
  6004   001428  0012               	return		;funcret
  6005   00142A                     __end_ofi2_atoi:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function i2_isspace *****************
  6009 ;; Defined at:
  6010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  c               2    0[COMRAM] int 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2    0[COMRAM] int 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6024 ;;      Params:         2       0       0       0       0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6026 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6027 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6028 ;;Total ram usage:        4 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		i2_atoi
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text39
  6038   002026                     __ptext39:
  6039                           	callstack 0
  6040   002026                     i2_isspace:
  6041                           	callstack 17
  6042   002026  0E20               	movlw	32
  6043   002028  1801               	xorwf	i2isspace@c^0,w,c
  6044   00202A  1002               	iorwf	(i2isspace@c+1)^0,w,c
  6045   00202C  B4D8               	btfsc	status,2,c
  6046   00202E  EF1B  F010         	goto	i2u171_41
  6047   002032  EF1D  F010         	goto	i2u171_40
  6048   002036                     i2u171_41:
  6049   002036  EF2E  F010         	goto	i2l1235
  6050   00203A                     i2u171_40:
  6051   00203A  0EF7               	movlw	247
  6052   00203C  2401               	addwf	i2isspace@c^0,w,c
  6053   00203E  6E03               	movwf	??i2_isspace^0,c
  6054   002040  0EFF               	movlw	255
  6055   002042  2002               	addwfc	(i2isspace@c+1)^0,w,c
  6056   002044  6E04               	movwf	(??i2_isspace+1)^0,c
  6057   002046  5004               	movf	(??i2_isspace+1)^0,w,c
  6058   002048  E109               	bnz	i2u172_40
  6059   00204A  0E05               	movlw	5
  6060   00204C  5C03               	subwf	??i2_isspace^0,w,c
  6061   00204E  A0D8               	btfss	status,0,c
  6062   002050  EF2C  F010         	goto	i2u172_41
  6063   002054  EF2E  F010         	goto	i2u172_40
  6064   002058                     i2u172_41:
  6065   002058  EF2E  F010         	goto	i2l1235
  6066   00205C                     i2u172_40:
  6067   00205C                     i2l1235:
  6068   00205C  0012               	return		;funcret
  6069   00205E                     __end_ofi2_isspace:
  6070                           	callstack 0
  6071                           
  6072 ;; *************** function i2_isdigit *****************
  6073 ;; Defined at:
  6074 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  c               2    0[COMRAM] int 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2    0[COMRAM] int 
  6081 ;; Registers used:
  6082 ;;		None
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6088 ;;      Params:         2       0       0       0       0       0       0       0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6091 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6092 ;;Total ram usage:        2 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		i2_vfpfcnvrt
  6098 ;;		i2_atoi
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text40
  6103   002206                     __ptext40:
  6104                           	callstack 0
  6105   002206                     i2_isdigit:
  6106                           	callstack 18
  6107   002206  0012               	return		;funcret
  6108   002208                     __end_ofi2_isdigit:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function i2___wmul *****************
  6112 ;; Defined at:
  6113 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  multiplier      2    0[COMRAM] unsigned int 
  6116 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  product         2    4[COMRAM] unsigned int 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2    0[COMRAM] unsigned int 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, prodl, prodh
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6128 ;;      Params:         4       0       0       0       0       0       0       0       0
  6129 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6131 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6132 ;;Total ram usage:        6 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		i2_atoi
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text41
  6142   002112                     __ptext41:
  6143                           	callstack 0
  6144   002112                     i2___wmul:
  6145                           	callstack 17
  6146   002112  5001               	movf	i2___wmul@multiplier^0,w,c
  6147   002114  0203               	mulwf	i2___wmul@multiplicand^0,c
  6148   002116  CFF3 F005          	movff	prodl,i2___wmul@product
  6149   00211A  CFF4 F006          	movff	prodh,i2___wmul@product+1
  6150   00211E  5001               	movf	i2___wmul@multiplier^0,w,c
  6151   002120  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  6152   002122  50F3               	movf	243,w,c
  6153   002124  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6154   002126  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  6155   002128  0203               	mulwf	i2___wmul@multiplicand^0,c
  6156   00212A  50F3               	movf	243,w,c
  6157   00212C  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6158   00212E  C005  F001         	movff	i2___wmul@product,?i2___wmul
  6159   002132  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  6160   002136  0012               	return		;funcret
  6161   002138                     __end_ofi2___wmul:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function i2_Lcd_Write_String *****************
  6165 ;; Defined at:
  6166 ;;		line 113 in file "lib_pic/lcd_2x16.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  a               2    4[COMRAM] PTR unsigned char 
  6169 ;;		 -> strReloj(20), 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  i               2    6[COMRAM] int 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6181 ;;      Params:         2       0       0       0       0       0       0       0       0
  6182 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6184 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:        4 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; Hardware stack levels required when called: 2
  6188 ;; This function calls:
  6189 ;;		i2_Lcd_Write_Char
  6190 ;; This function is called by:
  6191 ;;		_RutinaServicioInterrupt
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text42
  6196   001FA8                     __ptext42:
  6197                           	callstack 0
  6198   001FA8                     i2_Lcd_Write_String:
  6199                           	callstack 19
  6200   001FA8                     
  6201                           ;lib_pic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);lib_pic/lcd_2x16.c: 11
      +                          4: {;lib_pic/lcd_2x16.c: 115:  int i;;lib_pic/lcd_2x16.c: 116:  for(i=0;a[i]!='\0';i++)
  6202   001FA8  0E00               	movlw	0
  6203   001FAA  6E08               	movwf	(i2Lcd_Write_String@i+1)^0,c
  6204   001FAC  0E00               	movlw	0
  6205   001FAE  6E07               	movwf	i2Lcd_Write_String@i^0,c
  6206   001FB0  EFE5  F00F         	goto	i2l3250
  6207   001FB4                     i2l3246:
  6208                           
  6209                           ;lib_pic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  6210   001FB4  5007               	movf	i2Lcd_Write_String@i^0,w,c
  6211   001FB6  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  6212   001FB8  6ED9               	movwf	fsr2l,c
  6213   001FBA  5008               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  6214   001FBC  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  6215   001FBE  6EDA               	movwf	fsr2h,c
  6216   001FC0  50DF               	movf	indf2,w,c
  6217   001FC2  EC2F  F010         	call	i2_Lcd_Write_Char
  6218   001FC6  4A07               	infsnz	i2Lcd_Write_String@i^0,f,c
  6219   001FC8  2A08               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  6220   001FCA                     i2l3250:
  6221   001FCA  5007               	movf	i2Lcd_Write_String@i^0,w,c
  6222   001FCC  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  6223   001FCE  6ED9               	movwf	fsr2l,c
  6224   001FD0  5008               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  6225   001FD2  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  6226   001FD4  6EDA               	movwf	fsr2h,c
  6227   001FD6  50DF               	movf	indf2,w,c
  6228   001FD8  A4D8               	btfss	status,2,c
  6229   001FDA  EFF1  F00F         	goto	i2u230_41
  6230   001FDE  EFF3  F00F         	goto	i2u230_40
  6231   001FE2                     i2u230_41:
  6232   001FE2  EFDA  F00F         	goto	i2l3246
  6233   001FE6                     i2u230_40:
  6234   001FE6  0012               	return		;funcret
  6235   001FE8                     __end_ofi2_Lcd_Write_String:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function i2_Lcd_Write_Char *****************
  6239 ;; Defined at:
  6240 ;;		line 96 in file "lib_pic/lcd_2x16.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  a               1    wreg     unsigned char 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  a               1    3[COMRAM] unsigned char 
  6245 ;;  y               1    2[COMRAM] unsigned char 
  6246 ;;  temp            1    1[COMRAM] unsigned char 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0, cstack
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6256 ;;      Params:         0       0       0       0       0       0       0       0       0
  6257 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6259 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6260 ;;Total ram usage:        3 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; Hardware stack levels required when called: 1
  6263 ;; This function calls:
  6264 ;;		i2_Lcd_Port
  6265 ;; This function is called by:
  6266 ;;		i2_Lcd_Write_String
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text43
  6271   00205E                     __ptext43:
  6272                           	callstack 0
  6273   00205E                     i2_Lcd_Write_Char:
  6274                           	callstack 19
  6275                           
  6276                           ;incstack = 0
  6277                           ;i2Lcd_Write_Char@a stored from wreg
  6278   00205E  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  6279   002060                     
  6280                           ;lib_pic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);lib_pic/lcd_2x16.c: 97: {;
      +                          lib_pic/lcd_2x16.c: 98:    char temp,y;;lib_pic/lcd_2x16.c: 99:    temp = a&0x0F;
  6281   002060  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6282   002062  0B0F               	andlw	15
  6283   002064  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  6284                           
  6285                           ;lib_pic/lcd_2x16.c: 100:    y = a&0xF0;
  6286   002066  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6287   002068  0BF0               	andlw	240
  6288   00206A  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  6289   00206C                     
  6290                           ;lib_pic/lcd_2x16.c: 101:    PORTD |= (1<<2);
  6291   00206C  8483               	bsf	131,2,c	;volatile
  6292   00206E                     
  6293                           ;lib_pic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  6294   00206E  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  6295   002070  0B0F               	andlw	15
  6296   002072  EC2B  F00E         	call	i2_Lcd_Port
  6297   002076                     
  6298                           ;lib_pic/lcd_2x16.c: 103:    PORTD |= (1<<3);
  6299   002076  8683               	bsf	131,3,c	;volatile
  6300   002078                     
  6301                           ;lib_pic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  6302   002078  0E1A               	movlw	26
  6303   00207A                     i2u285_47:
  6304   00207A  2EE8               	decfsz	wreg,f,c
  6305   00207C  D7FE               	bra	i2u285_47
  6306   00207E  D000               	nop2	
  6307   002080                     
  6308                           ;lib_pic/lcd_2x16.c: 105:    PORTD &= ~(1<<3);
  6309   002080  9683               	bcf	131,3,c	;volatile
  6310                           
  6311                           ;lib_pic/lcd_2x16.c: 106:    Lcd_Port(temp);
  6312   002082  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  6313   002084  EC2B  F00E         	call	i2_Lcd_Port
  6314   002088                     
  6315                           ;lib_pic/lcd_2x16.c: 107:    PORTD |= (1<<3);
  6316   002088  8683               	bsf	131,3,c	;volatile
  6317   00208A                     
  6318                           ;lib_pic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  6319   00208A  0E1A               	movlw	26
  6320   00208C                     i2u286_47:
  6321   00208C  2EE8               	decfsz	wreg,f,c
  6322   00208E  D7FE               	bra	i2u286_47
  6323   002090  D000               	nop2	
  6324   002092                     
  6325                           ;lib_pic/lcd_2x16.c: 109:    PORTD &= ~(1<<3);
  6326   002092  9683               	bcf	131,3,c	;volatile
  6327   002094  0012               	return		;funcret
  6328   002096                     __end_ofi2_Lcd_Write_Char:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function i2_Lcd_Set_Cursor *****************
  6332 ;; Defined at:
  6333 ;;		line 50 in file "lib_pic/lcd_2x16.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  a               1    wreg     unsigned char 
  6336 ;;  b               1    3[COMRAM] unsigned char 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  a               1    4[COMRAM] unsigned char 
  6339 ;;  temp            1    7[COMRAM] unsigned char 
  6340 ;;  y               1    6[COMRAM] unsigned char 
  6341 ;;  z               1    5[COMRAM] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6351 ;;      Params:         1       0       0       0       0       0       0       0       0
  6352 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6354 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6355 ;;Total ram usage:        5 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 2
  6358 ;; This function calls:
  6359 ;;		i2_Lcd_Cmd
  6360 ;; This function is called by:
  6361 ;;		_RutinaServicioInterrupt
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text44
  6366   001B90                     __ptext44:
  6367                           	callstack 0
  6368   001B90                     i2_Lcd_Set_Cursor:
  6369                           	callstack 19
  6370                           
  6371                           ;incstack = 0
  6372                           ;i2Lcd_Set_Cursor@a stored from wreg
  6373   001B90  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  6374   001B92                     
  6375                           ;lib_pic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/l
      +                          cd_2x16.c: 51: {;lib_pic/lcd_2x16.c: 52:  char temp,z,y;;lib_pic/lcd_2x16.c: 53:  if(a =
      +                          = 1)
  6376   001B92  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  6377   001B94  A4D8               	btfss	status,2,c
  6378   001B96  EFCF  F00D         	goto	i2u228_41
  6379   001B9A  EFD1  F00D         	goto	i2u228_40
  6380   001B9E                     i2u228_41:
  6381   001B9E  EFE2  F00D         	goto	i2l3236
  6382   001BA2                     i2u228_40:
  6383   001BA2                     
  6384                           ;lib_pic/lcd_2x16.c: 54:  {;lib_pic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  6385   001BA2  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6386   001BA4  0F7F               	addlw	127
  6387   001BA6  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6388                           
  6389                           ;lib_pic/lcd_2x16.c: 56:   z = temp>>4;
  6390   001BA8  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6391   001BAA  0B0F               	andlw	15
  6392   001BAC  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  6393                           
  6394                           ;lib_pic/lcd_2x16.c: 57:   y = temp & 0x0F;
  6395   001BAE  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6396   001BB0  0B0F               	andlw	15
  6397   001BB2  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  6398   001BB4                     
  6399                           ;lib_pic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  6400   001BB4  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6401   001BB6  EC9C  F010         	call	i2_Lcd_Cmd
  6402   001BBA                     
  6403                           ;lib_pic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  6404   001BBA  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6405   001BBC  EC9C  F010         	call	i2_Lcd_Cmd
  6406                           
  6407                           ;lib_pic/lcd_2x16.c: 60:  }
  6408   001BC0  EFFA  F00D         	goto	i2l290
  6409   001BC4                     i2l3236:
  6410   001BC4  0E02               	movlw	2
  6411   001BC6  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  6412   001BC8  A4D8               	btfss	status,2,c
  6413   001BCA  EFE9  F00D         	goto	i2u229_41
  6414   001BCE  EFEB  F00D         	goto	i2u229_40
  6415   001BD2                     i2u229_41:
  6416   001BD2  EFFA  F00D         	goto	i2l290
  6417   001BD6                     i2u229_40:
  6418   001BD6                     
  6419                           ;lib_pic/lcd_2x16.c: 62:  {;lib_pic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  6420   001BD6  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6421   001BD8  0FBF               	addlw	191
  6422   001BDA  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6423                           
  6424                           ;lib_pic/lcd_2x16.c: 64:   z = temp>>4;
  6425   001BDC  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6426   001BDE  0B0F               	andlw	15
  6427   001BE0  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  6428                           
  6429                           ;lib_pic/lcd_2x16.c: 65:   y = temp & 0x0F;
  6430   001BE2  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6431   001BE4  0B0F               	andlw	15
  6432   001BE6  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  6433   001BE8                     
  6434                           ;lib_pic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  6435   001BE8  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6436   001BEA  EC9C  F010         	call	i2_Lcd_Cmd
  6437   001BEE                     
  6438                           ;lib_pic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  6439   001BEE  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6440   001BF0  EC9C  F010         	call	i2_Lcd_Cmd
  6441   001BF4                     i2l290:
  6442   001BF4  0012               	return		;funcret
  6443   001BF6                     __end_ofi2_Lcd_Set_Cursor:
  6444                           	callstack 0
  6445                           
  6446 ;; *************** function i2_Lcd_Cmd *****************
  6447 ;; Defined at:
  6448 ;;		line 33 in file "lib_pic/lcd_2x16.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  a               1    wreg     unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  a               1    2[COMRAM] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6462 ;;      Params:         0       0       0       0       0       0       0       0       0
  6463 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6464 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6465 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6466 ;;Total ram usage:        2 bytes
  6467 ;; Hardware stack levels used: 1
  6468 ;; Hardware stack levels required when called: 1
  6469 ;; This function calls:
  6470 ;;		i2_Lcd_Port
  6471 ;; This function is called by:
  6472 ;;		i2_Lcd_Set_Cursor
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text45
  6477   002138                     __ptext45:
  6478                           	callstack 0
  6479   002138                     i2_Lcd_Cmd:
  6480                           	callstack 19
  6481                           
  6482                           ;incstack = 0
  6483                           ;i2Lcd_Cmd@a stored from wreg
  6484   002138  6E03               	movwf	i2Lcd_Cmd@a^0,c
  6485   00213A                     
  6486                           ;lib_pic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd_2x16.c: 34: {;lib_pic
      +                          /lcd_2x16.c: 35:  PORTD &= ~(1<<2);
  6487   00213A  9483               	bcf	131,2,c	;volatile
  6488   00213C                     
  6489                           ;lib_pic/lcd_2x16.c: 36:  Lcd_Port(a);
  6490   00213C  5003               	movf	i2Lcd_Cmd@a^0,w,c
  6491   00213E  EC2B  F00E         	call	i2_Lcd_Port
  6492   002142                     
  6493                           ;lib_pic/lcd_2x16.c: 37:  PORTD |= (1<<3);
  6494   002142  8683               	bsf	131,3,c	;volatile
  6495   002144                     
  6496                           ;lib_pic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  6497   002144  0E0B               	movlw	11
  6498   002146  6E02               	movwf	??i2_Lcd_Cmd^0,c
  6499   002148  0E62               	movlw	98
  6500   00214A                     i2u287_47:
  6501   00214A  2EE8               	decfsz	wreg,f,c
  6502   00214C  D7FE               	bra	i2u287_47
  6503   00214E  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  6504   002150  D7FC               	bra	i2u287_47
  6505   002152  D000               	nop2	
  6506   002154                     
  6507                           ;lib_pic/lcd_2x16.c: 39:  PORTD &= ~(1<<3);
  6508   002154  9683               	bcf	131,3,c	;volatile
  6509   002156  0012               	return		;funcret
  6510   002158                     __end_ofi2_Lcd_Cmd:
  6511                           	callstack 0
  6512                           
  6513 ;; *************** function i2_Lcd_Port *****************
  6514 ;; Defined at:
  6515 ;;		line 5 in file "lib_pic/lcd_2x16.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  a               1    wreg     unsigned char 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  a               1    0[COMRAM] unsigned char 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  1    wreg      void 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6529 ;;      Params:         0       0       0       0       0       0       0       0       0
  6530 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6532 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6533 ;;Total ram usage:        1 bytes
  6534 ;; Hardware stack levels used: 1
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		i2_Lcd_Cmd
  6539 ;;		i2_Lcd_Write_Char
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text46
  6544   001C56                     __ptext46:
  6545                           	callstack 0
  6546   001C56                     i2_Lcd_Port:
  6547                           	callstack 19
  6548                           
  6549                           ;incstack = 0
  6550                           ;i2Lcd_Port@a stored from wreg
  6551   001C56  6E01               	movwf	i2Lcd_Port@a^0,c
  6552   001C58                     
  6553                           ;lib_pic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd_2x16.c: 6: {;lib_pic/
      +                          lcd_2x16.c: 7:  if(a & 1)
  6554   001C58  A001               	btfss	i2Lcd_Port@a^0,0,c
  6555   001C5A  EF31  F00E         	goto	i2u205_41
  6556   001C5E  EF33  F00E         	goto	i2u205_40
  6557   001C62                     i2u205_41:
  6558   001C62  EF36  F00E         	goto	i2l2920
  6559   001C66                     i2u205_40:
  6560   001C66                     
  6561                           ;lib_pic/lcd_2x16.c: 9:   LATD |= (1<<4);
  6562   001C66  888C               	bsf	140,4,c	;volatile
  6563   001C68  EF37  F00E         	goto	i2l2922
  6564   001C6C                     i2l2920:
  6565                           
  6566                           ;lib_pic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  6567   001C6C  988C               	bcf	140,4,c	;volatile
  6568   001C6E                     i2l2922:
  6569                           
  6570                           ;lib_pic/lcd_2x16.c: 13:  if(a & 2)
  6571   001C6E  A201               	btfss	i2Lcd_Port@a^0,1,c
  6572   001C70  EF3C  F00E         	goto	i2u206_41
  6573   001C74  EF3E  F00E         	goto	i2u206_40
  6574   001C78                     i2u206_41:
  6575   001C78  EF41  F00E         	goto	i2l2926
  6576   001C7C                     i2u206_40:
  6577   001C7C                     
  6578                           ;lib_pic/lcd_2x16.c: 15:   LATD |= (1<<5);
  6579   001C7C  8A8C               	bsf	140,5,c	;volatile
  6580   001C7E  EF42  F00E         	goto	i2l2928
  6581   001C82                     i2l2926:
  6582                           
  6583                           ;lib_pic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  6584   001C82  9A8C               	bcf	140,5,c	;volatile
  6585   001C84                     i2l2928:
  6586                           
  6587                           ;lib_pic/lcd_2x16.c: 19:  if(a & 4)
  6588   001C84  A401               	btfss	i2Lcd_Port@a^0,2,c
  6589   001C86  EF47  F00E         	goto	i2u207_41
  6590   001C8A  EF49  F00E         	goto	i2u207_40
  6591   001C8E                     i2u207_41:
  6592   001C8E  EF4C  F00E         	goto	i2l2932
  6593   001C92                     i2u207_40:
  6594   001C92                     
  6595                           ;lib_pic/lcd_2x16.c: 21:   LATD |= (1<<6);
  6596   001C92  8C8C               	bsf	140,6,c	;volatile
  6597   001C94  EF4D  F00E         	goto	i2l2934
  6598   001C98                     i2l2932:
  6599                           
  6600                           ;lib_pic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  6601   001C98  9C8C               	bcf	140,6,c	;volatile
  6602   001C9A                     i2l2934:
  6603                           
  6604                           ;lib_pic/lcd_2x16.c: 25:  if(a & 8)
  6605   001C9A  A601               	btfss	i2Lcd_Port@a^0,3,c
  6606   001C9C  EF52  F00E         	goto	i2u208_41
  6607   001CA0  EF54  F00E         	goto	i2u208_40
  6608   001CA4                     i2u208_41:
  6609   001CA4  EF57  F00E         	goto	i2l2938
  6610   001CA8                     i2u208_40:
  6611   001CA8                     
  6612                           ;lib_pic/lcd_2x16.c: 27:   LATD |= (1<<7);
  6613   001CA8  8E8C               	bsf	140,7,c	;volatile
  6614   001CAA  EF58  F00E         	goto	i2l278
  6615   001CAE                     i2l2938:
  6616                           
  6617                           ;lib_pic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  6618   001CAE  9E8C               	bcf	140,7,c	;volatile
  6619   001CB0                     i2l278:
  6620   001CB0  0012               	return		;funcret
  6621   001CB2                     __end_ofi2_Lcd_Port:
  6622                           	callstack 0
  6623                           
  6624                           	psect	rparam
  6625   000000                     
  6626                           	psect	temp
  6627   00005C                     btemp:
  6628                           	callstack 0
  6629   00005C                     	ds	1
  6630   000000                     int$flags	set	btemp
  6631   000000                     wtemp8	set	btemp+1
  6632   000000                     ttemp5	set	btemp+1
  6633   000000                     ttemp6	set	btemp+4
  6634   000000                     ttemp7	set	btemp+8
  6635                           
  6636                           	psect	idloc
  6637                           
  6638                           ;Config register IDLOC0 @ 0x200000
  6639                           ;	unspecified, using default values
  6640   200000                     	org	2097152
  6641   200000  FF                 	db	255
  6642                           
  6643                           ;Config register IDLOC1 @ 0x200001
  6644                           ;	unspecified, using default values
  6645   200001                     	org	2097153
  6646   200001  FF                 	db	255
  6647                           
  6648                           ;Config register IDLOC2 @ 0x200002
  6649                           ;	unspecified, using default values
  6650   200002                     	org	2097154
  6651   200002  FF                 	db	255
  6652                           
  6653                           ;Config register IDLOC3 @ 0x200003
  6654                           ;	unspecified, using default values
  6655   200003                     	org	2097155
  6656   200003  FF                 	db	255
  6657                           
  6658                           ;Config register IDLOC4 @ 0x200004
  6659                           ;	unspecified, using default values
  6660   200004                     	org	2097156
  6661   200004  FF                 	db	255
  6662                           
  6663                           ;Config register IDLOC5 @ 0x200005
  6664                           ;	unspecified, using default values
  6665   200005                     	org	2097157
  6666   200005  FF                 	db	255
  6667                           
  6668                           ;Config register IDLOC6 @ 0x200006
  6669                           ;	unspecified, using default values
  6670   200006                     	org	2097158
  6671   200006  FF                 	db	255
  6672                           
  6673                           ;Config register IDLOC7 @ 0x200007
  6674                           ;	unspecified, using default values
  6675   200007                     	org	2097159
  6676   200007  FF                 	db	255
  6677                           
  6678                           	psect	config
  6679                           
  6680                           ;Config register CONFIG1L @ 0x300000
  6681                           ;	PLL Selection
  6682                           ;	PLLSEL = PLL4X, 4x clock multiplier
  6683                           ;	PLL Enable Configuration bit
  6684                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  6685                           ;	CPU System Clock Postscaler
  6686                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  6687                           ;	Low Speed USB mode with 48 MHz system clock
  6688                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  6689   300000                     	org	3145728
  6690   300000  00                 	db	0
  6691                           
  6692                           ;Config register CONFIG1H @ 0x300001
  6693                           ;	Oscillator Selection
  6694                           ;	FOSC = INTOSCIO, Internal oscillator
  6695                           ;	Primary Oscillator Shutdown
  6696                           ;	PCLKEN = ON, Primary oscillator enabled
  6697                           ;	Fail-Safe Clock Monitor
  6698                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6699                           ;	Internal/External Oscillator Switchover
  6700                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6701   300001                     	org	3145729
  6702   300001  28                 	db	40
  6703                           
  6704                           ;Config register CONFIG2L @ 0x300002
  6705                           ;	Power-up Timer Enable
  6706                           ;	nPWRTEN = ON, Power up timer enabled
  6707                           ;	Brown-out Reset Enable
  6708                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  6709                           ;	Brown-out Reset Voltage
  6710                           ;	BORV = 190, BOR set to 1.9V nominal
  6711                           ;	Low-Power Brown-out Reset
  6712                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  6713   300002                     	org	3145730
  6714   300002  5E                 	db	94
  6715                           
  6716                           ;Config register CONFIG2H @ 0x300003
  6717                           ;	Watchdog Timer Enable bits
  6718                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  6719                           ;	Watchdog Timer Postscaler
  6720                           ;	WDTPS = 32768, 1:32768
  6721   300003                     	org	3145731
  6722   300003  3C                 	db	60
  6723                           
  6724                           ; Padding undefined space
  6725   300004                     	org	3145732
  6726   300004  FF                 	db	255
  6727                           
  6728                           ;Config register CONFIG3H @ 0x300005
  6729                           ;	CCP2 MUX bit
  6730                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  6731                           ;	PORTB A/D Enable bit
  6732                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  6733                           ;	Timer3 Clock Input MUX bit
  6734                           ;	T3CMX = RC0, T3CKI function is on RC0
  6735                           ;	SDO Output MUX bit
  6736                           ;	SDOMX = RB3, SDO function is on RB3
  6737                           ;	Master Clear Reset Pin Enable
  6738                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  6739   300005                     	org	3145733
  6740   300005  D1                 	db	209
  6741                           
  6742                           ;Config register CONFIG4L @ 0x300006
  6743                           ;	Stack Full/Underflow Reset
  6744                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6745                           ;	Single-Supply ICSP Enable bit
  6746                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6747                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  6748                           ;	ICPRT = OFF, ICPORT disabled
  6749                           ;	Extended Instruction Set Enable bit
  6750                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  6751                           ;	Background Debugger Enable bit
  6752                           ;	DEBUG = 0x1, unprogrammed default
  6753   300006                     	org	3145734
  6754   300006  85                 	db	133
  6755                           
  6756                           ; Padding undefined space
  6757   300007                     	org	3145735
  6758   300007  FF                 	db	255
  6759                           
  6760                           ;Config register CONFIG5L @ 0x300008
  6761                           ;	Block 0 Code Protect
  6762                           ;	CP0 = OFF, Block 0 is not code-protected
  6763                           ;	Block 1 Code Protect
  6764                           ;	CP1 = OFF, Block 1 is not code-protected
  6765                           ;	Block 2 Code Protect
  6766                           ;	CP2 = OFF, Block 2 is not code-protected
  6767                           ;	Block 3 Code Protect
  6768                           ;	CP3 = OFF, Block 3 is not code-protected
  6769   300008                     	org	3145736
  6770   300008  0F                 	db	15
  6771                           
  6772                           ;Config register CONFIG5H @ 0x300009
  6773                           ;	Boot Block Code Protect
  6774                           ;	CPB = OFF, Boot block is not code-protected
  6775                           ;	Data EEPROM Code Protect
  6776                           ;	CPD = OFF, Data EEPROM is not code-protected
  6777   300009                     	org	3145737
  6778   300009  C0                 	db	192
  6779                           
  6780                           ;Config register CONFIG6L @ 0x30000A
  6781                           ;	Block 0 Write Protect
  6782                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  6783                           ;	Block 1 Write Protect
  6784                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  6785                           ;	Block 2 Write Protect
  6786                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  6787                           ;	Block 3 Write Protect
  6788                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  6789   30000A                     	org	3145738
  6790   30000A  0F                 	db	15
  6791                           
  6792                           ;Config register CONFIG6H @ 0x30000B
  6793                           ;	Configuration Registers Write Protect
  6794                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6795                           ;	Boot Block Write Protect
  6796                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  6797                           ;	Data EEPROM Write Protect
  6798                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6799   30000B                     	org	3145739
  6800   30000B  E0                 	db	224
  6801                           
  6802                           ;Config register CONFIG7L @ 0x30000C
  6803                           ;	Block 0 Table Read Protect
  6804                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  6805                           ;	Block 1 Table Read Protect
  6806                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  6807                           ;	Block 2 Table Read Protect
  6808                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  6809                           ;	Block 3 Table Read Protect
  6810                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  6811   30000C                     	org	3145740
  6812   30000C  0F                 	db	15
  6813                           
  6814                           ;Config register CONFIG7H @ 0x30000D
  6815                           ;	Boot Block Table Read Protect
  6816                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  6817   30000D                     	org	3145741
  6818   30000D  40                 	db	64
  6819                           tosu	equ	0xFFF
  6820                           tosh	equ	0xFFE
  6821                           tosl	equ	0xFFD
  6822                           stkptr	equ	0xFFC
  6823                           pclatu	equ	0xFFB
  6824                           pclath	equ	0xFFA
  6825                           pcl	equ	0xFF9
  6826                           tblptru	equ	0xFF8
  6827                           tblptrh	equ	0xFF7
  6828                           tblptrl	equ	0xFF6
  6829                           tablat	equ	0xFF5
  6830                           prodh	equ	0xFF4
  6831                           prodl	equ	0xFF3
  6832                           indf0	equ	0xFEF
  6833                           postinc0	equ	0xFEE
  6834                           postdec0	equ	0xFED
  6835                           preinc0	equ	0xFEC
  6836                           plusw0	equ	0xFEB
  6837                           fsr0h	equ	0xFEA
  6838                           fsr0l	equ	0xFE9
  6839                           wreg	equ	0xFE8
  6840                           indf1	equ	0xFE7
  6841                           postinc1	equ	0xFE6
  6842                           postdec1	equ	0xFE5
  6843                           preinc1	equ	0xFE4
  6844                           plusw1	equ	0xFE3
  6845                           fsr1h	equ	0xFE2
  6846                           fsr1l	equ	0xFE1
  6847                           bsr	equ	0xFE0
  6848                           indf2	equ	0xFDF
  6849                           postinc2	equ	0xFDE
  6850                           postdec2	equ	0xFDD
  6851                           preinc2	equ	0xFDC
  6852                           plusw2	equ	0xFDB
  6853                           fsr2h	equ	0xFDA
  6854                           fsr2l	equ	0xFD9
  6855                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        16
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      91
    BANK0           160    105     126
    BANK1           256     41      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2sprintf@f...source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f...buffer	PTR unsigned char  size(2) Largest target is 0

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2014$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strReloj(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1966$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1966$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> strReloj(BANK1[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RutinaServicioInterrupt in COMRAM

    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_utoa
    i2_utoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_atoi->i2___wmul
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Hardware_Init->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RutinaServicioInterrupt in BANK0

    _RutinaServicioInterrupt->i2_sprintf

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _RutinaServicioInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RutinaServicioInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RutinaServicioInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RutinaServicioInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RutinaServicioInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RutinaServicioInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RutinaServicioInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10251
                      _Hardware_Init
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    9043
                                             18 BANK1     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8408
                                            103 BANK0      2     2      0
                                             12 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    7848
                                             93 BANK0     10     4      6
                                              0 BANK1     12    12      0
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4249
                                             61 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2837
                                             50 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1388
                                             43 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     888
                                             34 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             33 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             33 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1404
                                             39 BANK0      9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             33 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             33 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     394
                                             37 BANK0      4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                             34 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     506
                                             36 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        0     0      0     198
            _INTERRUPT_Global_Config
                           _Lcd_Init
                     _OSCILADOR_Init
                          _PORT_Init
             _TMR0_Temporizador_Init
 ---------------------------------------------------------------------------------
 (2) _TMR0_Temporizador_Init                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     198
                                             36 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                             34 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Global_Config                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _RutinaServicioInterrupt                             10    10      0    4897
                                             23 BANK0     10    10      0
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (10) i2_sprintf                                          25    15     10    4197
                                              0 BANK0     23    13     10
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (11) i2_vfprintf                                          8     2      6    3944
                                             82 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) i2_vfpfcnvrt                                        25    19      6    3733
                                             60 COMRAM    22    16      6
                             i2_atoi
                            i2_fputc
                          i2_isdigit
                             i2_utoa
 ---------------------------------------------------------------------------------
 (13) i2_utoa                                             32    22     10    2039
                                             28 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (14) i2_pad                                              11     5      6    1289
                                             17 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (15) i2_fputs                                             7     3      4     605
                                             10 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     404
                                              1 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2___lomod                                          17     1     16     211
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (14) i2___lodiv                                          25     9     16     214
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (13) i2_atoi                                              9     7      2     622
                                              6 COMRAM     9     7      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (14) i2_isspace                                           5     3      2      78
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_isdigit                                           2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Write_String                                  4     2      2     294
                                              4 COMRAM     4     2      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Set_Cursor                                    5     4      1     406
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Cmd                                           2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Hardware_Init
     _INTERRUPT_Global_Config
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _OSCILADOR_Init
     _PORT_Init
     _TMR0_Temporizador_Init
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc

 _RutinaServicioInterrupt (ROOT)
   i2_Lcd_Set_Cursor
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Write_String
     i2_Lcd_Write_Char
       i2_Lcd_Port
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_atoi
           i2___wmul
           i2_isdigit
           i2_isspace
         i2_fputc
           i2_putch
         i2_isdigit
         i2_utoa
           i2___lodiv
           i2___lomod
           i2_pad
             i2_fputc
             i2_fputs
               i2_fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     29      60       7       37.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      7E       5       78.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5B       1       96.8%
BITBIGSFRhlll       22      0       0      34        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRll          9      0       0      35        0.0%
BITBIGSFRhhllll      7      0       0      26        0.0%
BITBIGSFRhhllll      7      0       0      25        0.0%
BITBIGSFRhhllll      7      0       0      28        0.0%
BITBIGSFRhlhh        6      0       0      29        0.0%
BITBIGSFRhhlllh      6      0       0      24        0.0%
BITBIGSFRhllhhh      4      0       0      31        0.0%
BITBIGSFRhhllhl      2      0       0      23        0.0%
BITBIGSFRhllhhl      1      0       0      32        0.0%
BITBIGSFRhllhl       1      0       0      33        0.0%
BITBIGSFRhlhl        1      0       0      30        0.0%
BITBIGSFRhhllhh      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     139      36        0.0%
DATA                 0      0     139       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 20 14:52:33 2023

                             l50 1CFC                               l70 2204  
                             l55 21CC                               l73 2174  
                             l49 1CFC                               l67 21A2  
            ___wmul@multiplicand 0083                              l115 21DE  
                            l302 1F62                              l281 2110  
                            l290 1B8E                              l442 218C  
                            l284 21FC                              l293 1B20  
                            l445 20EA                              l278 1C54  
                            l439 217A                              l296 2024  
                            l900 16DC                              l890 151A  
                            l883 14FA                              l893 16BC  
                            _col 005B                              _pad 1944  
__end_of_INTERRUPT_Global_Config 2206                              wreg 000FE8  
                     _TXSTA1bits 000FAC              __end_ofi2_vfpfcnvrt 0D98  
                           l1123 1D54                             l1221 12D6  
                           l1151 19D0                             l1224 12DE  
                           l1160 0DD8                             l1153 19F2  
                           l3010 21BA                             l1250 1878  
                           l1227 20C2                             l1235 1F1E  
                           l3020 21C8                             l3012 21C0  
                           l1148 198C                             l3030 1AB0  
                           l3022 21CA                             l3014 21C2  
                           l1158 0DD0                             l3040 1AF0  
                           l3032 1AC2                             l3024 21CE  
                           l3016 21C4                             l1168 0F94  
                           l1192 0AE0                             l3050 1B0E  
                           l3042 1AF6                             l3034 1AC8  
                           l3026 1AA2                             l3018 21C6  
                           l1258 1ED6                             l3052 1B14  
                           l3044 1AFC                             l3036 1ADA  
                           l3028 1AAA                             l3060 216E  
                           l3140 219E                             l3054 1B1A  
                           l3046 1B02                             l3038 1AE0  
                           l3062 2170                             l3134 218E  
                           l3142 21F0                             l3150 1B50  
                           l3070 1FFA                             l1199 1DA6  
                           l3048 1B08                             l3064 2172  
                           l3056 2158                             l3136 2196  
                           l3152 1B5C                             l3144 1B26  
                           l3080 2018                             l3072 1FFC  
                           l3066 21FE                             l3058 215E  
                           l3138 219A                             l3154 1B6E  
                           l3146 1B38                             l3082 201A  
                           l3074 2004                             l3156 1B80  
                           l3148 1B4A                             l3084 2022  
                           l3076 2006                             l3068 1FEC  
                           l3172 1F20                             l3158 1B86  
                           l3078 200E                             l3174 1F2E  
                           l3510 217A                             l3176 1F40  
                           l3512 2188                             l3520 17DE  
                           l3178 1F46                             l3610 1F18  
                           l3602 1ED8                             l3522 17FC  
                           l3514 17AE                             l3530 1E9E  
                           l3604 1EDE                             l3524 1832  
                           l3516 17C2                             l3532 1EB0  
                           l3620 0DC4                             l3700 088E  
                           l3606 1EF2                             l3550 1472  
                           l3542 142A                             l3518 17D4  
                           l3534 1EB6                             l3630 0E90  
                           l3622 0E00                             l3614 0D98  
                           l3710 0942                             l3702 08C4  
                           l2680 1C20                             l2672 1BFA  
                           l2840 210E                             l2832 20F0  
                           l3536 20C4                             l3608 1F14  
                           l3560 14E2                             l3552 1480  
                           l3544 1436                             l3528 1E90  
                           l3640 0F32                             l3632 0E96  
                           l3624 0E08                             l3616 0DA8  
                           l3720 09B8                             l3712 0950  
                           l3704 08D8                             l2690 1C3E  
                           l2682 1C26                             l2674 1C0A  
                           l2834 20F2                             l3538 20E2  
                           l3650 1192                             l3562 14F4  
                           l3554 1492                             l3546 1456  
                           l3570 1648                             l3642 0F4C  
                           l3634 0E9C                             l3626 0E12  
                           l3618 0DAA                             l3722 09C8  
                           l3714 0970                             l3706 08FC  
                           l2692 1C4C                             l2684 1C28  
                           l2676 1C10                             l2836 20FA  
                           l3660 11FC                             l3652 11A8  
                           l3556 14C0                             l3548 145E  
                           l3572 1656                             l3564 160C  
                           l3580 1944                             l3644 0F66  
                           l3628 0E18                             l3636 0F00  
                           l3732 0A78                             l3724 09E4  
                           l3708 0932                             l2694 1C52  
                           l2686 1C36                             l2678 1C12  
                           l2838 20FC                             l3662 1204  
                           l3558 14E0                             l3574 1684  
                           l3566 162C                             l3590 1998  
                           l3582 1954                             l3638 0F14  
                           l3646 0F74                             l3726 0A48  
                           l3734 0AA4                             l3718 097E  
                           ?_pad 0092                             l2688 1C3C  
                           l3672 1278                             l3664 120C  
                           l3656 11AC                             l3576 16A4  
                           l3568 1634                             l3592 19AC  
                           l3584 1968                             l3760 1D80  
                           l3674 12A8                             l3666 1240  
                           l3658 11C8                             l3578 16B6  
                           l3594 19B2                             l3586 1978  
                           l3690 085E                             l3738 0AB6  
                           l3682 081A                             l3762 1D9C  
                           l3770 1D1E                             l3676 12BA  
                           l3596 19DE                             l3588 1984  
                           l3924 08B6                             l3692 086C  
                           l3684 083E                             l3756 1D56  
                           l3772 1D26                             l3780 1CC6  
                           l3598 2096                             l3926 0A96  
                           l3694 086E                             l3686 084C  
                           l3758 1D62                             l3774 1D42  
                           l3766 1D04                             l3782 1CEE  
                           l3928 122A                             l3696 0880  
                           l3688 085A                             l3768 1D16  
                           l3778 1CB2                             STR_1 0801  
                           STR_2 0801                             _LATB 000F8A  
                           u2400 2188                             _LATD 000F8C  
                           u2401 2184                             u2170 1B38  
                           u2410 17C2                             u2171 1B34  
                           u2411 17BE                             u2180 1B6E  
                           u2500 162C                             u2420 17D4  
                           u2181 1B6A                             u2501 1628  
                           u2421 17D0                             u2190 1F62  
                           u2510 1656                             u2430 17FC  
                           u2191 1F5E                             u2511 1652  
                           u2431 17F8                             u2600 1F14  
                           u2520 1684                             u2440 1832  
                           u2601 1F10                             u2521 1680  
                           u2441 182E                             u1730 1C0A  
                           u2450 1ED6                             u2530 1954  
                           u2610 0DA8                             u1731 1C06  
                           u2451 1ED2                             u2531 1950  
                           u2611 0DA4                             u1740 1C20  
                           u2700 12A8                             u2540 1978  
                           u2620 0DC4                             u1741 1C1C  
                           u2701 12A4                             u2461 1430  
                           u2541 1974                             u2621 0DC0  
                           u1750 1C36                             u2710 12BA  
                           u2470 1456                             u2550 19D0  
                           u2630 0F14                             u1751 1C32  
                           u2711 12B6                             u2471 1452  
                           u2551 19CC                             u2631 0F10  
                           u1760 1C4C                             u2480 1480  
                           u2560 19DE                             u2640 0F32  
                           u2720 083E                             u1761 1C48  
                           u2481 147C                             u2561 19DA  
                           u2641 0F2E                             u2721 083A  
                           u2570 20BC                             u2490 14C0  
                           u2650 0F4C                             u2730 08D8  
                           u2571 20B6                             u2491 14BC  
                           u2651 0F48                             u2731 08D4  
                           u2580 20BE                             u2660 0F66  
                           u2740 08FC                             u2661 0F62  
                           u2741 08F8                             u2590 1EF2  
                           u2670 0F74                             u2750 0942  
                           u2807 201C                             u2591 1EEE  
                           u2671 0F70                             u2751 093E  
                           u2680 11C8                             u2760 09B8  
                           u2817 1AB8                             u2681 11C4  
                           u2761 09B4                             u2690 11F8  
                           u2770 09E4                             u2827 1AD0  
                           u2691 11F4                             u2771 09E0  
                           u2780 1D9C                             u2837 1AE8  
                           u2781 1D98                             u2847 2104  
                           u2797 2008                             i2l64 00DA  
                           _TMR0 000FD6                             _WPUB 000F85  
              ?_Lcd_Write_String 0085                             _dbuf 0103  
                           _atoi 1192                             _main 1CB2  
                           _prec 00DB                             pad@i 0099  
                           pad@p 0096                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 009B  
                           fsr2l 000FD9                             btemp 005C  
                           _utoa 0D98                             prodh 000FF4  
                           prodl 000FF3                             start 0106  
             ??_Lcd_Write_String 0087                  __end_ofi2_fputc 1944  
                __end_ofi2_fputs 1FA8                  __end_of_Lcd_Cmd 2112  
                __end_ofi2_putch 21BA                     ___param_bank 000000  
                          ??_pad 0098                       i2_vfprintf 1DFA  
                          ?_atoi 0087                            ?_main 0001  
                          ?_utoa 009D                  __end_of___lodiv 151C  
                __end_of___lomod 16DE                            i2l302 1FE6  
                          i2l281 2156                            i2l290 1BF4  
                          i2l442 21B8                            i2l445 2136  
                          i2l278 1CB0                            i2l439 21A6  
                          i2l296 2094                            i2l900 17AC  
                          i2l890 160A                            i2l883 15EA  
                          i2l893 178C                     vfpfcnvrt@fmt 00BF  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                          i2_pad 19F4                       i2isdigit@c 0001  
                    ?i2_Lcd_Port 0001                            _flags 00DD  
                          _fputc 17AE                            _fputs 1E90  
                __end_of_isdigit 20C4                            _hours 0102  
                          atoi@n 008E                            pad@fp 0092  
                          atoi@s 0087                            _width 00D9  
                          _putch 2176                  __end_of_isspace 1F20  
                          tablat 000FF5                 __end_ofi2___wmul 2138  
                          ttemp5 005D                            ttemp6 0060  
                          ttemp7 0064                            utoa@d 009F  
                          utoa@i 00BB                            utoa@n 00B3  
                          utoa@p 00AF                            utoa@w 00B1  
                          status 000FD8                       i2isspace@c 0001  
                          wtemp8 005D                  __end_of_sprintf 1D56  
               ___lodiv@dividend 0081                 i2_Lcd_Set_Cursor 1B90  
               __end_of_Lcd_Init 1B22                 __end_of_Lcd_Port 1C56  
                __initialization 1E48                     __end_of_atoi 12E0  
                   __end_of_main 1D04                     __end_of_utoa 0F96  
                    i2_vfpfcnvrt 0AE2                    i2vfpfcnvrt@ap 0041  
                  i2vfpfcnvrt@cp 0051                    i2vfpfcnvrt@fp 003D  
                         ??_atoi 0089                           ??_main 00C9  
                         ??_utoa 00A7                    __activetblptr 000002  
                     i2sprintf@f 006C                       i2sprintf@s 0060  
                         ?i2_pad 0012                 ___lodiv@quotient 0091  
               ??_OSCILADOR_Init 0081                           ?_fputc 0082  
                         ?_fputs 008B                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           ?_putch 0001  
                         _ANSELD 000F5E                           i2l1123 1DF8  
                         i2l1221 1420                           i2l1151 1A7C  
                         i2l1224 1428                           i2l1160 0FD6  
                         i2l1153 1AA0                           i2l1250 1942  
                         i2l1227 2206                           i2l1235 205C  
                         i2l3100 2142                           i2l1148 1A3A  
                         i2l3102 2144                           i2l3110 206E  
                         i2l1158 0FCE                           i2l3104 2154  
                         i2l3120 208A                           i2l3112 2076  
                         i2l1168 1190                           i2l1192 0D96  
                         i2l3122 2092                           i2l3114 2078  
                         i2l3106 2060                           i2l1258 1FA6  
                         i2l3130 1E3E                           i2l3116 2080  
                         i2l3108 206C                           i2l2500 18FC  
                         i2l3124 1DFA                           i2l3300 00CE  
                         i2l3230 1BA2                           i2l3118 2088  
                         i2l3126 1E06                           i2l1199 1E46  
                         i2l3240 1BE8                           i2l3232 1BB4  
                         i2l2600 212E                           i2l2512 1F64  
                         i2l3128 1E22                           i2l3242 1BEE  
                         i2l3234 1BBA                           i2l3250 1FCA  
                         i2l2610 154E                           i2l2514 1F70  
                         i2l3236 1BC4                           i2l3228 1B92  
                         i2l3244 1FA8                           i2l2620 15D0  
                         i2l2612 1562                           i2l2604 151C  
                         i2l2516 1F82                           i2l3260 1DE6  
                         i2l3252 1DA8                           i2l3238 1BD6  
                         i2l3246 1FB4                           i2l2622 15D2  
                         i2l2614 1570                           i2l2606 1528  
                         i2l2630 1704                           i2l2518 1F86  
                         i2l3254 1DBA                           i2l3270 0032  
                         i2l3096 213A                           i2l3248 1FC6  
                         i2l2800 12E0                           i2l2624 15E4  
                         i2l2616 1582                           i2l2608 1546  
                         i2l2640 1786                           i2l2632 1718  
                         i2l2472 21A6                           i2l3256 1DC2  
                         i2l3280 005C                           i2l3272 0040  
                         i2l3098 213C                           i2l2810 1348  
                         i2l2802 12F4                           i2l2618 15B0  
                         i2l2634 1726                           i2l2626 16DE  
                         i2l2474 21B4                           i2l2490 187A  
                         i2l2650 1A32                           i2l2642 19F4  
                         i2l3258 1DCA                           i2l3290 0086  
                         i2l3282 006C                           i2l3274 004E  
                         i2l2660 2206                           i2l2812 1350  
                         i2l2636 1754                           i2l2628 16FC  
                         i2l2492 188C                           i2l2652 1A46  
                         i2l2644 1A04                           i2l3292 0088  
                         i2l3284 0070                           i2l3276 0056  
                         i2l2662 2026                           i2l2822 13C2  
                         i2l2814 1358                           i2l2806 12F8  
                         i2l2638 1774                           i2l2494 189E  
                         i2l2654 1A5A                           i2l2646 1A18  
                         i2l3294 0098                           i2l3286 0072  
                         i2l3278 0058                           i2l2920 1C6C  
                         i2l2664 2026                           i2l2824 13F2  
                         i2l2816 138C                           i2l2808 1314  
                         i2l2496 18A8                           i2l2656 1A5E  
                         i2l2648 1A26                           i2l3288 0082  
                         i2l3296 009C                           i2l2930 1C92  
                         i2l2922 1C6E                           i2l2666 203A  
                         i2l2826 1404                           i2l2498 18C6  
                         i2l2658 1A8C                           i2l2770 0FC2  
                         i2l3298 00A6                           i2l2932 1C98  
                         i2l2924 1C7C                           i2l2916 1C58  
                         i2l2668 205C                           i2l2780 108C  
                         i2l2772 0FFE                           i2l2764 0F96  
                         i2l2940 0AE2                           i2l2934 1C9A  
                         i2l2926 1C82                           i2l2918 1C66  
                         i2l2598 2112                           i2l2790 112C  
                         i2l2782 1092                           i2l2774 1006  
                         i2l2766 0FA6                           i2l2950 0B32  
                         i2l2942 0B06                           i2l2936 1CA8  
                         i2l2928 1C84                           i2l2792 1146  
                         i2l2784 1098                           i2l2776 1010  
                         i2l2768 0FA8                           i2l2952 0B36  
                         i2l2960 0B88                           i2l2944 0B14  
                         i2l2938 1CAE                           i2l2794 1160  
                         i2l2778 1016                           i2l2786 10FC  
                         i2l2970 0C12                           i2l2962 0B9A  
                         i2l3930 0B7A                           i2l2954 0B48  
                         i2l2946 0B22                           i2l2788 110E  
                         i2l2796 1170                           i2l3932 0D4E  
                         i2l2980 0C88                           i2l2972 0C32  
                         i2l2964 0BBE                           i2l2948 0B26  
                         i2l3934 1376                           i2l2990 0D30  
                         i2l2982 0CA4                           i2l2966 0BF4  
                         i2l2958 0B54                           i2l2984 0D00  
                         i2l2992 0D5C                           i2l2976 0C40  
                         i2l2968 0C04                           i2l2978 0C78  
                         i2l2996 0D6E                        ??i2_fputc 0006  
                         _RCREG1 000FAE                        ??i2_fputs 000F  
                         _RCSTA1 000FAB                        ??_Lcd_Cmd 0082  
                  vfpfcnvrt@done 013F                           _SPBRG1 000FAF  
                      ??i2_putch 0001                           _TXREG1 000FAD  
                         _TXSTA1 000FAC                           i2_atoi 12E0  
                         i2pad@i 0019                           i2pad@p 0016  
                         i2pad@w 001B                           i2_utoa 0F96  
                   vfprintf@cfmt 00C7                __end_ofi2_Lcd_Cmd 2158  
                  i2vfprintf@fmt 0055                           ___wmul 20C4  
                      ??___lodiv 0091                        ??___lomod 0091  
              __end_of_PORT_Init 21CE                      ?i2_vfprintf 0053  
            i2Lcd_Write_String@a 0005              i2Lcd_Write_String@i 0007  
                         clear_0 1E6E                           isa$std 000001  
                         pad@buf 0094                 i2_Lcd_Write_Char 205E  
                         fputc@c 0082                           fputs@c 008F  
                         fputs@i 0090                           fputs@s 008B  
                      ??_isdigit 0083                __end_ofi2___lodiv 160C  
              __end_ofi2___lomod 17AE                     __mediumconst 0000  
                      ??_isspace 0083                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0081                 __end_of_vfprintf 1DA8  
              i2___lodiv@divisor 0009                           utoa@fp 009D  
              i2___lodiv@counter 0019                        ??_sprintf 00C9  
                Lcd_Set_Cursor@a 0085                  Lcd_Set_Cursor@b 0084  
                Lcd_Set_Cursor@y 0087                  Lcd_Set_Cursor@z 0086  
              __end_ofi2_isdigit 2208                       __accesstop 0060  
        __end_of__initialization 1E82                __end_ofi2_isspace 205E  
              __end_of_Lcd_Clear 21FE                    ___rparam_used 000001  
              __end_ofi2_sprintf 1DFA            __end_of_Hardware_Init 21A4  
                  __end_ofi2_pad 1AA2                   __pcstackCOMRAM 0001  
                   __pidataBANK0 21E0                    __end_of_fputc 187A  
                  __end_of_fputs 1ED8                    __end_of_putch 218E  
              i2Lcd_Write_Char@a 0004                i2Lcd_Write_Char@y 0003  
                      ?i2___wmul 0001                   _Lcd_Set_Cursor 1B22  
                        ??i2_pad 0018                   i2vfpfcnvrt@fmt 003F  
                      ?_Lcd_Init 0001                        ?_Lcd_Port 0001  
                        ??_fputc 0086                          ??_fputs 008F  
           i2Lcd_Write_Char@temp 0002                          ??_putch 0081  
                     __pbssBANK0 00D9                       __pbssBANK1 0100  
                    i2sprintf@ap 006A                          ?i2_atoi 0007  
                        ?i2_utoa 001D                          ?___wmul 0081  
           i2Lcd_Set_Cursor@temp 0008           __end_of_Lcd_Set_Cursor 1B90  
                     ??i2___wmul 0005         __end_ofi2_Lcd_Set_Cursor 1BF6  
              i2___lomod@divisor 0009                i2___lomod@counter 0011  
                        _SPBRGH1 000FB0                       ??_Lcd_Init 0084  
                        _SSP1ADD 000FC8                     ??i2_Lcd_Port 0001  
                        _SSP1BUF 000FC9                       ??_Lcd_Port 0081  
               ___lomod@dividend 0081                          i2_fputc 187A  
                        i2_fputs 1F64          _RutinaServicioInterrupt 0008  
                 _Lcd_Write_Char 1FE8                          _Lcd_Cmd 20EC  
                        i2atoi@n 000E                          i2pad@fp 0012  
                        i2atoi@s 0007                          i2_putch 21A4  
       ??_TMR0_Temporizador_Init 0081                          i2utoa@d 001F  
                        i2utoa@i 003B                          i2utoa@n 0033  
                        i2utoa@p 002F                          i2utoa@w 0031  
        _INTERRUPT_Global_Config 21FE                          __Hparam 0000  
                        __Lparam 0000                          ___lodiv 142A  
                        ___lomod 160C                        ?_vfprintf 0143  
                 i2vfprintf@cfmt 0059                     __psmallconst 0800  
             __end_ofi2_Lcd_Port 1CB2                     ?i2_vfpfcnvrt 003D  
                        __pcinit 1E48                          __ramtop 0800  
                ?_Lcd_Set_Cursor 0084                          __ptext0 1CB2  
                        __ptext1 1D04                          __ptext2 1D56  
                        __ptext3 081A                          __ptext4 0D98  
                        __ptext5 1944                          __ptext6 1E90  
                        __ptext7 17AE                          __ptext8 2176  
                        __ptext9 160C                        _T0CONbits 000FD5  
                        _isdigit 2096                          _minutes 0101  
                        _seconds 0100                          _isspace 1ED8  
                        atoi@neg 008C                          _sprintf 1D04  
         __end_of_Lcd_Write_Char 2026             end_of_initialization 1E82  
                        fputc@fp 0084                    __Lmediumconst 0000  
                        fputs@fp 008D              i2___wmul@multiplier 0001  
       __end_ofi2_Lcd_Write_Char 2096                __end_of_vfpfcnvrt 0AE2  
                        postdec1 000FE5                          postdec2 000FDD  
             i2___lodiv@dividend 0001                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
               vfpfcnvrt@convarg 0137                        Lcd_Port@a 0081  
                   ??i2_vfprintf 0059                       ??_vfprintf 00C7  
                      i2_Lcd_Cmd 2138                        _PORT_Init 21BA  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
      ??_RutinaServicioInterrupt 0077                        i2___lodiv 151C  
                      i2___lomod 16DE                  ?_Lcd_Write_Char 0001  
              Lcd_Write_String@a 0085                Lcd_Write_String@i 0087  
             i2___lodiv@quotient 0011        ??_INTERRUPT_Global_Config 0081  
             __end_ofi2_vfprintf 1E48                        i2_isdigit 2206  
                 __end_ofi2_atoi 142A                        i2_isspace 2026  
                 __end_ofi2_utoa 1192                        _Lcd_Clear 21F0  
                      i2atoi@neg 000C                        i2_sprintf 1DA8  
                    vfpfcnvrt@ap 00C1                      vfpfcnvrt@cp 0141  
                    vfpfcnvrt@fp 00BD                   __end_of___wmul 20EC  
               _Lcd_Write_String 1F20                       ?i2_Lcd_Cmd 0001  
                      i2fputc@fp 0004                        i2fputs@fp 000D  
                     ?_PORT_Init 0001                 i2___wmul@product 0005  
            start_initialization 1E48                  ___lodiv@divisor 0089  
                ___lodiv@counter 0099                      __end_of_pad 19F4  
                      _Keypad4x4 00C9                       ?i2___lodiv 0001  
                     ?i2___lomod 0001                         ??i2_atoi 0009  
                       ??i2_utoa 0027                       ?i2_isdigit 0001  
                     ?i2_isspace 0001                      vfprintf@fmt 0145  
                   i2vfprintf@ap 0057                  i2vfpfcnvrt@done 004F  
                   i2vfprintf@fp 0053                       ?_Lcd_Clear 0001  
__end_of_RutinaServicioInterrupt 0106       __end_ofi2_Lcd_Write_String 1FE8  
                       ??___wmul 0085                       ?i2_sprintf 0060  
                    __pdataBANK0 00C9                  Lcd_Write_Char@a 0084  
                Lcd_Write_Char@y 0083           _TMR0_Temporizador_Init 2158  
                   i2sprintf@fmt 0062                      __pbssCOMRAM 005B  
                  __pcstackBANK0 0060                    __pcstackBANK1 0137  
              ?i2_Lcd_Set_Cursor 0004               ??i2_Lcd_Set_Cursor 0005  
                       ?i2_fputc 0002                         ?i2_fputs 000B  
                       ?_Lcd_Cmd 0001                         ?i2_putch 0001  
               ??_Lcd_Set_Cursor 0085                        __pintcode 0008  
                       ?___lodiv 0081                         ?___lomod 0081  
                    ??i2_Lcd_Cmd 0002                      ??_PORT_Init 0081  
                ___lomod@divisor 0089                      __smallconst 0800  
                ___lomod@counter 0091                         _BAUDCON1 000FB8  
                       ?_isdigit 0081                         ?_isspace 0081  
                       ?_sprintf 0149                      ??i2___lodiv 0011  
                    ??i2___lomod 0011                   ___wmul@product 0085  
              ?i2_Lcd_Write_Char 0001                         _PIE1bits 000F9D  
             i2___lomod@dividend 0001                      ??i2_isdigit 0003  
                       i2u210_40 0B9A                         i2u210_41 0B96  
                       i2u211_40 0BBE                         i2u211_41 0BBA  
                       i2u140_40 189E                         i2u212_40 0C04  
                       i2u140_41 189A                         i2u212_41 0C00  
                       i2u205_40 1C66                         i2u141_40 18C6  
                       i2u213_40 0C78                         i2u205_41 1C62  
                       i2u141_41 18C2                         i2u213_41 0C74  
                       i2u206_40 1C7C                         i2u230_40 1FE6  
                       i2u134_40 21B4                         i2u142_40 18FC  
                       i2u214_40 0CA4                         i2u206_41 1C78  
                       i2u230_41 1FE2                         i2u134_41 21B0  
                       i2u142_41 18F8                         i2u214_41 0CA0  
                    ??i2_isspace 0003                         i2u207_40 1C92  
                       i2u231_40 0040                         i2u207_41 1C8E  
                       i2u231_41 003C                         i2u208_40 1CA8  
                       i2u144_40 1FA6                         i2u216_40 1E3E  
                       i2u232_40 004E                         i2u208_41 1CA4  
                       i2u160_41 1522                         i2u144_41 1FA2  
                       i2u216_41 1E3A                         i2u232_41 004A  
                       i2u161_40 1546                         i2u209_40 0B06  
                       i2u233_40 006C                         i2u161_41 1542  
                       i2u209_41 0B02                         i2u233_41 0068  
                       i2u162_40 1570                         i2u170_40 1A8C  
                       i2u234_40 0082                         i2u162_41 156C  
                       i2u170_41 1A88                         i2u234_41 007E  
                       Lcd_Cmd@a 0083                         i2u171_40 203A  
                       i2u163_40 15B0                         i2u139_40 188C  
                       i2u235_40 0098                         i2u171_41 2036  
                       i2u163_41 15AC                         i2u139_41 1888  
                       i2u235_41 0094                         i2u228_40 1BA2  
                       i2u172_40 205C                         i2u164_40 16FC  
                       i2u228_41 1B9E                         i2u172_41 2058  
                       i2u164_41 16F8                         i2u229_40 1BD6  
                       i2u165_40 1726                         i2u229_41 1BD2  
                       i2u165_41 1722                         i2u166_40 1754  
                       i2u190_40 110E                         i2u166_41 1750  
                       i2u190_41 110A                         i2u167_40 1A04  
                       i2u191_40 112C                         i2u167_41 1A00  
                       i2u191_41 1128                         i2u168_40 1A26  
                       i2u192_40 1146                         i2u168_41 1A22  
                       i2u192_41 1142                         i2u169_40 1A7C  
                       i2u193_40 1160                         i2u169_41 1A78  
                       i2u193_41 115C                    _Hardware_Init 218E  
                       _PIR1bits 000F9E                         i2u194_40 1170  
                       i2u194_41 116C                         i2u195_40 1314  
                       i2u195_41 1310                         i2u196_40 1344  
                       i2u188_40 0FA6                         i2u196_41 1340  
                       i2u188_41 0FA2                         i2u197_40 13F2  
                       i2u189_40 0FC2                         i2u197_41 13EE  
                       i2u189_41 0FBE                         i2u285_47 207A  
                       i2u198_40 1404                         i2u198_41 1400  
                       i2u286_47 208C               ??i2_Lcd_Write_Char 0002  
                       i2u287_47 214A                      ??_Lcd_Clear 0084  
                       _RCONbits 000FD0                         _SSP1CON1 000FC6  
                    ??i2_sprintf 005B                         _SSP1STAT 000FC7  
                      _vfpfcnvrt 081A                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                       _ADCON2bits 000FC0  
              ___wmul@multiplier 0081                         i2___wmul 2112  
               ??_Lcd_Write_Char 0082                     _isspace$2097 0085  
                       i2pad@buf 0014                         _Lcd_Init 1AA2  
                       _Lcd_Port 1BF6                      _INTCON2bits 000FF1  
                      copy_data0 1E5C                         i2fputc@c 0002  
                       i2fputs@c 000F                         i2fputs@i 0010  
                       i2fputs@s 000B         __end_of_Lcd_Write_String 1F64  
                       i2putch@c 0001                         i2utoa@fp 001D  
                 _OSCILADOR_Init 21CE                   ?_Hardware_Init 0001  
                       __Hrparam 0000                       vfprintf@ap 0147  
                       __Lrparam 0000                       vfprintf@fp 0143  
          i2___wmul@multiplicand 0003                       ?_vfpfcnvrt 00BD  
                     _ANSELBbits 000F5C                       _ANSELCbits 000F5D  
             i2vfpfcnvrt@convarg 0047                       sprintf@fmt 014B  
                       __ptext10 142A                         __ptext11 1192  
                       __ptext20 2158                         __ptext12 1ED8  
                       __ptext21 21BA                         __ptext13 2096  
                       __ptext30 0AE2                         __ptext22 21CE  
                       __ptext14 20C4                         __ptext31 0F96  
                       __ptext23 1AA2                         __ptext15 1F20  
                       __ptext40 2206                         __ptext32 19F4  
                       __ptext24 20EC                         __ptext16 1FE8  
                       __ptext41 2112                         __ptext33 1F64  
                       __ptext25 1BF6                         __ptext17 1B22  
                       __ptext42 1FA8                         __ptext34 187A  
                       __ptext26 21FE                         __ptext18 21F0  
                       __ptext43 205E                         __ptext35 21A4  
                       __ptext19 218E                         __ptext44 1B90  
                       __ptext36 16DE                         __ptext28 1DA8  
                       __ptext45 2138                         __ptext37 151C  
                       __ptext29 1DFA                         __ptext46 1C56  
                       __ptext38 12E0                         __ptext39 2026  
                   _SSP1CON1bits 000FC6                     _SSP1CON2bits 000FC5  
         __end_of_OSCILADOR_Init 21E0                         isa$xinst 000000  
                       int$flags 005C          ?_TMR0_Temporizador_Init 0001  
                    i2Lcd_Port@a 0001                         _vfprintf 1D56  
                       _strReloj 0123                     _SSP1STATbits 000FC7  
       ?_RutinaServicioInterrupt 0001                       _INTCONbits 000FF2  
             i2_Lcd_Write_String 1FA8                         isdigit@c 0081  
       ?_INTERRUPT_Global_Config 0001               Lcd_Write_Char@temp 0082  
                       intlevel2 0000                        sprintf@ap 0153  
            ?i2_Lcd_Write_String 0005                  ?_OSCILADOR_Init 0001  
              i2Lcd_Set_Cursor@a 0005                i2Lcd_Set_Cursor@b 0004  
              i2Lcd_Set_Cursor@y 0007                i2Lcd_Set_Cursor@z 0006  
                       isspace@c 0081                  ??_Hardware_Init 0085  
                     _RCSTA1bits 000FAB                       _OSCCONbits 000FD3  
                     i2Lcd_Cmd@a 0003   __end_of_TMR0_Temporizador_Init 2176  
           ??i2_Lcd_Write_String 0007                    ??i2_vfpfcnvrt 0043  
                    ??_vfpfcnvrt 00C3               Lcd_Set_Cursor@temp 0088  
                       sprintf@f 0155                         sprintf@s 0149  
                    _SSPCON2bits 000FC5                       i2_Lcd_Port 1C56  
