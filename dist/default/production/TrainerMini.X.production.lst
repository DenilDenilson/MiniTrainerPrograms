

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 20 14:35:32 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Generated 09/02/2023 GMT
    68                           ; 
    69                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F45K50 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102                           	psect	idataBANK0
   103   0022C8                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _Keypad4x4
   107   0022C8  31                 	db	49
   108   0022C9  32                 	db	50
   109   0022CA  33                 	db	51
   110   0022CB  41                 	db	65
   111   0022CC  34                 	db	52
   112   0022CD  35                 	db	53
   113   0022CE  36                 	db	54
   114   0022CF  42                 	db	66
   115   0022D0  37                 	db	55
   116   0022D1  38                 	db	56
   117   0022D2  39                 	db	57
   118   0022D3  43                 	db	67
   119   0022D4  2A                 	db	42
   120   0022D5  30                 	db	48
   121   0022D6  23                 	db	35
   122   0022D7  44                 	db	68
   123   000000                     _TMR0	set	4054
   124   000000                     _RCREG1	set	4014
   125   000000                     _TXREG1	set	4013
   126   000000                     _SPBRG1	set	4015
   127   000000                     _BAUDCON1	set	4024
   128   000000                     _ANSELCbits	set	3933
   129   000000                     _TRISCbits	set	3988
   130   000000                     _TRISD	set	3989
   131   000000                     _SSP1CON2bits	set	4037
   132   000000                     _SSP1CON1bits	set	4038
   133   000000                     _SSP1STATbits	set	4039
   134   000000                     _ADRESL	set	4035
   135   000000                     _ADRESH	set	4036
   136   000000                     _ADCON0bits	set	4034
   137   000000                     _ADCON2bits	set	4032
   138   000000                     _ADCON1bits	set	4033
   139   000000                     _RCONbits	set	4048
   140   000000                     _INTCONbits	set	4082
   141   000000                     _RCSTA1bits	set	4011
   142   000000                     _TXSTA1bits	set	4012
   143   000000                     _SSP1CON1	set	4038
   144   000000                     _SSP1STAT	set	4039
   145   000000                     _TRISB	set	3987
   146   000000                     _SSPCON2bits	set	4037
   147   000000                     _ANSELBbits	set	3932
   148   000000                     _ANSELD	set	3934
   149   000000                     _PORTB	set	3969
   150   000000                     _LATB	set	3978
   151   000000                     _TRISBbits	set	3987
   152   000000                     _INTCON2bits	set	4081
   153   000000                     _OSCCONbits	set	4051
   154   000000                     _T0CONbits	set	4053
   155   000000                     _SSP1BUF	set	4041
   156   000000                     _SSP1ADD	set	4040
   157   000000                     _LATD	set	3980
   158   000000                     _PORTD	set	3971
   159   000000                     _WPUB	set	3973
   160   000000                     _PIE1bits	set	3997
   161   000000                     _PIR1bits	set	3998
   162   000000                     _RCSTA1	set	4011
   163   000000                     _TXSTA1	set	4012
   164   000000                     _SPBRGH1	set	4016
   165                           
   166                           	psect	smallconst
   167   000800                     __psmallconst:
   168                           	callstack 0
   169   000800  00                 	db	0
   170   000801                     STR_1:
   171   000801  54                 	db	84	;'T'
   172   000802  69                 	db	105	;'i'
   173   000803  6D                 	db	109	;'m'
   174   000804  65                 	db	101	;'e'
   175   000805  72                 	db	114	;'r'
   176   000806  3A                 	db	58	;':'
   177   000807  20                 	db	32
   178   000808  20                 	db	32
   179   000809  25                 	db	37
   180   00080A  30                 	db	48	;'0'
   181   00080B  32                 	db	50	;'2'
   182   00080C  75                 	db	117	;'u'
   183   00080D  3A                 	db	58	;':'
   184   00080E  25                 	db	37
   185   00080F  30                 	db	48	;'0'
   186   000810  32                 	db	50	;'2'
   187   000811  75                 	db	117	;'u'
   188   000812  3A                 	db	58	;':'
   189   000813  25                 	db	37
   190   000814  30                 	db	48	;'0'
   191   000815  32                 	db	50	;'2'
   192   000816  75                 	db	117	;'u'
   193   000817  00                 	db	0
   194   000818                     STR_3:
   195   000818  20                 	db	32
   196   000819  00                 	db	0
   197   00081A                     STR_2:
   198   00081A  2A                 	db	42
   199   00081B  00                 	db	0
   200   00081C  00                 	db	0	; dummy byte at the end
   201   000000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205   002046                     __pcinit:
   206                           	callstack 0
   207   002046                     start_initialization:
   208                           	callstack 0
   209   002046                     __initialization:
   210                           	callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK0 (16 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214   002046  0EC8               	movlw	low __pidataBANK0
   215   002048  6EF6               	movwf	tblptrl,c
   216   00204A  0E22               	movlw	high __pidataBANK0
   217   00204C  6EF7               	movwf	tblptrh,c
   218   00204E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219   002050  6EF8               	movwf	tblptru,c
   220   002052  EE00  F0C5         	lfsr	0,__pdataBANK0
   221   002056  EE10 F010          	lfsr	1,16
   222   00205A                     copy_data0:
   223   00205A  0009               	tblrd		*+
   224   00205C  CFF5 FFEE          	movff	tablat,postinc0
   225   002060  50E5               	movf	postdec1,w,c
   226   002062  50E1               	movf	fsr1l,w,c
   227   002064  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to BANK1 (52 bytes)
   230   002066  EE01  F000         	lfsr	0,__pbssBANK1
   231   00206A  0E34               	movlw	52
   232   00206C                     clear_0:
   233   00206C  6AEE               	clrf	postinc0,c
   234   00206E  06E8               	decf	wreg,f,c
   235   002070  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to BANK0 (8 bytes)
   238   002072  EE00  F0D5         	lfsr	0,__pbssBANK0
   239   002076  0E08               	movlw	8
   240   002078                     clear_1:
   241   002078  6AEE               	clrf	postinc0,c
   242   00207A  06E8               	decf	wreg,f,c
   243   00207C  E1FD               	bnz	clear_1
   244   00207E                     end_of_initialization:
   245                           	callstack 0
   246   00207E                     __end_of__initialization:
   247                           	callstack 0
   248   00207E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   249   002080  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   250   002082  0E00               	movlw	low (__Lmediumconst shr (0+16))
   251   002084  6EF8               	movwf	tblptru,c
   252   002086  0100               	movlb	0
   253   002088  EFA0  F00C         	goto	_main	;jump to C main() function
   254                           
   255                           	psect	bssBANK0
   256   0000D5                     __pbssBANK0:
   257                           	callstack 0
   258   0000D5                     _width:
   259                           	callstack 0
   260   0000D5                     	ds	2
   261   0000D7                     _prec:
   262                           	callstack 0
   263   0000D7                     	ds	2
   264   0000D9                     _flags:
   265                           	callstack 0
   266   0000D9                     	ds	1
   267   0000DA                     _seconds:
   268                           	callstack 0
   269   0000DA                     	ds	1
   270   0000DB                     _minutes:
   271                           	callstack 0
   272   0000DB                     	ds	1
   273   0000DC                     _hours:
   274                           	callstack 0
   275   0000DC                     	ds	1
   276                           
   277                           	psect	dataBANK0
   278   0000C5                     __pdataBANK0:
   279                           	callstack 0
   280   0000C5                     _Keypad4x4:
   281                           	callstack 0
   282   0000C5                     	ds	16
   283                           
   284                           	psect	bssBANK1
   285   000100                     __pbssBANK1:
   286                           	callstack 0
   287   000100                     _dbuf:
   288                           	callstack 0
   289   000100                     	ds	32
   290   000120                     _strReloj:
   291                           	callstack 0
   292   000120                     	ds	20
   293                           
   294                           	psect	cstackBANK1
   295   000134                     __pcstackBANK1:
   296                           	callstack 0
   297   000134                     ??_vfpfcnvrt:
   298                           
   299                           ; 1 bytes @ 0x0
   300   000134                     	ds	4
   301   000138                     vfpfcnvrt@convarg:
   302                           	callstack 0
   303                           
   304                           ; 8 bytes @ 0x4
   305   000138                     	ds	8
   306   000140                     vfpfcnvrt@done:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xC
   310   000140                     	ds	2
   311   000142                     vfpfcnvrt@cp:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xE
   315   000142                     	ds	2
   316   000144                     ?_vfprintf:
   317                           	callstack 0
   318   000144                     vfprintf@fp:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x10
   322   000144                     	ds	2
   323   000146                     vfprintf@fmt:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x12
   327   000146                     	ds	2
   328   000148                     vfprintf@ap:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x14
   332   000148                     	ds	2
   333   00014A                     vfprintf@cfmt:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x16
   337   00014A                     	ds	2
   338   00014C                     ?_sprintf:
   339                           	callstack 0
   340   00014C                     sprintf@s:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x18
   344   00014C                     	ds	2
   345   00014E                     sprintf@fmt:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x1A
   349   00014E                     	ds	8
   350   000156                     sprintf@ap:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x22
   354   000156                     	ds	2
   355   000158                     sprintf@f:
   356                           	callstack 0
   357                           
   358                           ; 11 bytes @ 0x24
   359   000158                     	ds	11
   360   000163                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x2F
   363   000163                     	ds	2
   364   000165                     main@col:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x31
   368   000165                     	ds	1
   369                           
   370                           	psect	cstackBANK0
   371   000060                     __pcstackBANK0:
   372                           	callstack 0
   373   000060                     ?i2_sprintf:
   374                           	callstack 0
   375   000060                     i2sprintf@s:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x0
   379   000060                     	ds	2
   380   000062                     i2sprintf@fmt:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384   000062                     	ds	8
   385   00006A                     i2sprintf@ap:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0xA
   389   00006A                     	ds	2
   390   00006C                     i2sprintf@f:
   391                           	callstack 0
   392                           
   393                           ; 11 bytes @ 0xC
   394   00006C                     	ds	11
   395   000077                     ??_RutinaServicioInterrupt:
   396                           
   397                           ; 1 bytes @ 0x17
   398   000077                     	ds	12
   399   000083                     ?_isdigit:
   400                           	callstack 0
   401   000083                     ?_isspace:
   402                           	callstack 0
   403   000083                     ?___wmul:
   404                           	callstack 0
   405   000083                     ?___lodiv:
   406                           	callstack 0
   407   000083                     ?___lomod:
   408                           	callstack 0
   409   000083                     Lcd_Port@a:
   410                           	callstack 0
   411   000083                     putch@c:
   412                           	callstack 0
   413   000083                     ___wmul@multiplier:
   414                           	callstack 0
   415   000083                     isdigit@c:
   416                           	callstack 0
   417   000083                     isspace@c:
   418                           	callstack 0
   419   000083                     ___lodiv@dividend:
   420                           	callstack 0
   421   000083                     ___lomod@dividend:
   422                           	callstack 0
   423                           
   424                           ; 8 bytes @ 0x23
   425   000083                     	ds	1
   426   000084                     ??_Lcd_Cmd:
   427   000084                     Lcd_Write_Char@temp:
   428                           	callstack 0
   429   000084                     fputc@c:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x24
   433   000084                     	ds	1
   434   000085                     ??_isdigit:
   435   000085                     ??_isspace:
   436   000085                     Lcd_Cmd@a:
   437                           	callstack 0
   438   000085                     Lcd_Write_Char@y:
   439                           	callstack 0
   440   000085                     ___wmul@multiplicand:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x25
   444   000085                     	ds	1
   445   000086                     ??_Lcd_Init:
   446   000086                     Lcd_Set_Cursor@b:
   447                           	callstack 0
   448   000086                     Lcd_Write_Char@a:
   449                           	callstack 0
   450   000086                     fputc@fp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x26
   454   000086                     	ds	1
   455   000087                     Lcd_Set_Cursor@a:
   456                           	callstack 0
   457   000087                     _isspace$2101:
   458                           	callstack 0
   459   000087                     Lcd_Write_String@a:
   460                           	callstack 0
   461   000087                     ___wmul@product:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x27
   465   000087                     	ds	1
   466   000088                     ??_fputc:
   467   000088                     Lcd_Set_Cursor@z:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x28
   471   000088                     	ds	1
   472   000089                     ??_Lcd_Write_String:
   473   000089                     ?_atoi:
   474                           	callstack 0
   475   000089                     Lcd_Set_Cursor@y:
   476                           	callstack 0
   477   000089                     atoi@s:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x29
   481   000089                     	ds	1
   482   00008A                     Lcd_Set_Cursor@temp:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x2A
   486   00008A                     	ds	1
   487   00008B                     ??_atoi:
   488   00008B                     Lcd_Write_String@i:
   489                           	callstack 0
   490   00008B                     ___lodiv@divisor:
   491                           	callstack 0
   492   00008B                     ___lomod@divisor:
   493                           	callstack 0
   494                           
   495                           ; 8 bytes @ 0x2B
   496   00008B                     	ds	2
   497   00008D                     fputs@s:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x2D
   501   00008D                     	ds	1
   502   00008E                     atoi@neg:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x2E
   506   00008E                     	ds	1
   507   00008F                     fputs@fp:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x2F
   511   00008F                     	ds	1
   512   000090                     atoi@n:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x30
   516   000090                     	ds	1
   517   000091                     fputs@c:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x31
   521   000091                     	ds	1
   522   000092                     fputs@i:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x32
   526   000092                     	ds	1
   527   000093                     ___lomod@counter:
   528                           	callstack 0
   529   000093                     ___lodiv@quotient:
   530                           	callstack 0
   531                           
   532                           ; 8 bytes @ 0x33
   533   000093                     	ds	1
   534   000094                     pad@fp:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x34
   538   000094                     	ds	2
   539   000096                     pad@buf:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x36
   543   000096                     	ds	2
   544   000098                     pad@p:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x38
   548   000098                     	ds	2
   549   00009A                     ??_pad:
   550                           
   551                           ; 1 bytes @ 0x3A
   552   00009A                     	ds	1
   553   00009B                     ___lodiv@counter:
   554                           	callstack 0
   555   00009B                     pad@i:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x3B
   559   00009B                     	ds	2
   560   00009D                     pad@w:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x3D
   564   00009D                     	ds	2
   565   00009F                     utoa@fp:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x3F
   569   00009F                     	ds	2
   570   0000A1                     utoa@d:
   571                           	callstack 0
   572                           
   573                           ; 8 bytes @ 0x41
   574   0000A1                     	ds	8
   575   0000A9                     ??_utoa:
   576                           
   577                           ; 1 bytes @ 0x49
   578   0000A9                     	ds	8
   579   0000B1                     utoa@p:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x51
   583   0000B1                     	ds	2
   584   0000B3                     utoa@w:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x53
   588   0000B3                     	ds	2
   589   0000B5                     utoa@n:
   590                           	callstack 0
   591                           
   592                           ; 8 bytes @ 0x55
   593   0000B5                     	ds	8
   594   0000BD                     utoa@i:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x5D
   598   0000BD                     	ds	2
   599   0000BF                     vfpfcnvrt@fp:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x5F
   603   0000BF                     	ds	2
   604   0000C1                     vfpfcnvrt@fmt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x61
   608   0000C1                     	ds	2
   609   0000C3                     vfpfcnvrt@ap:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x63
   613   0000C3                     	ds	2
   614   0000C5                     
   615                           ; 1 bytes @ 0x65
   616                           
   617                           	psect	cstackCOMRAM
   618   000001                     __pcstackCOMRAM:
   619                           	callstack 0
   620   000001                     ?i2___wmul:
   621                           	callstack 0
   622   000001                     ?i2___lodiv:
   623                           	callstack 0
   624   000001                     ?i2___lomod:
   625                           	callstack 0
   626   000001                     i2Lcd_Port@a:
   627                           	callstack 0
   628   000001                     i2putch@c:
   629                           	callstack 0
   630   000001                     i2___wmul@multiplier:
   631                           	callstack 0
   632   000001                     i2isdigit@c:
   633                           	callstack 0
   634   000001                     i2isspace@c:
   635                           	callstack 0
   636   000001                     i2___lodiv@dividend:
   637                           	callstack 0
   638   000001                     i2___lomod@dividend:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0x0
   642   000001                     	ds	1
   643   000002                     ??i2_Lcd_Cmd:
   644   000002                     i2Lcd_Write_Char@temp:
   645                           	callstack 0
   646   000002                     i2fputc@c:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x1
   650   000002                     	ds	1
   651   000003                     ??i2_isspace:
   652   000003                     i2Lcd_Cmd@a:
   653                           	callstack 0
   654   000003                     i2Lcd_Write_Char@y:
   655                           	callstack 0
   656   000003                     i2___wmul@multiplicand:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x2
   660   000003                     	ds	1
   661   000004                     i2Lcd_Set_Cursor@b:
   662                           	callstack 0
   663   000004                     i2Lcd_Write_Char@a:
   664                           	callstack 0
   665   000004                     i2fputc@fp:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x3
   669   000004                     	ds	1
   670   000005                     i2Lcd_Set_Cursor@a:
   671                           	callstack 0
   672   000005                     i2Lcd_Write_String@a:
   673                           	callstack 0
   674   000005                     i2___wmul@product:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x4
   678   000005                     	ds	1
   679   000006                     ??i2_fputc:
   680   000006                     i2Lcd_Set_Cursor@z:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x5
   684   000006                     	ds	1
   685   000007                     ??i2_Lcd_Write_String:
   686   000007                     ?i2_atoi:
   687                           	callstack 0
   688   000007                     i2Lcd_Set_Cursor@y:
   689                           	callstack 0
   690   000007                     i2atoi@s:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x6
   694   000007                     	ds	1
   695   000008                     i2Lcd_Set_Cursor@temp:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x7
   699   000008                     	ds	1
   700   000009                     ??i2_atoi:
   701   000009                     i2Lcd_Write_String@i:
   702                           	callstack 0
   703   000009                     i2___lodiv@divisor:
   704                           	callstack 0
   705   000009                     i2___lomod@divisor:
   706                           	callstack 0
   707                           
   708                           ; 8 bytes @ 0x8
   709   000009                     	ds	2
   710   00000B                     i2fputs@s:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0xA
   714   00000B                     	ds	1
   715   00000C                     i2atoi@neg:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0xB
   719   00000C                     	ds	1
   720   00000D                     i2fputs@fp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0xC
   724   00000D                     	ds	1
   725   00000E                     i2atoi@n:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0xD
   729   00000E                     	ds	1
   730   00000F                     i2fputs@c:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0xE
   734   00000F                     	ds	1
   735   000010                     i2fputs@i:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0xF
   739   000010                     	ds	1
   740   000011                     i2___lomod@counter:
   741                           	callstack 0
   742   000011                     i2___lodiv@quotient:
   743                           	callstack 0
   744                           
   745                           ; 8 bytes @ 0x10
   746   000011                     	ds	1
   747   000012                     i2pad@fp:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x11
   751   000012                     	ds	2
   752   000014                     i2pad@buf:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x13
   756   000014                     	ds	2
   757   000016                     i2pad@p:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x15
   761   000016                     	ds	2
   762   000018                     ??i2_pad:
   763                           
   764                           ; 1 bytes @ 0x17
   765   000018                     	ds	1
   766   000019                     i2___lodiv@counter:
   767                           	callstack 0
   768   000019                     i2pad@i:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x18
   772   000019                     	ds	2
   773   00001B                     i2pad@w:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x1A
   777   00001B                     	ds	2
   778   00001D                     i2utoa@fp:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x1C
   782   00001D                     	ds	2
   783   00001F                     i2utoa@d:
   784                           	callstack 0
   785                           
   786                           ; 8 bytes @ 0x1E
   787   00001F                     	ds	8
   788   000027                     ??i2_utoa:
   789                           
   790                           ; 1 bytes @ 0x26
   791   000027                     	ds	8
   792   00002F                     i2utoa@p:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x2E
   796   00002F                     	ds	2
   797   000031                     i2utoa@w:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x30
   801   000031                     	ds	2
   802   000033                     i2utoa@n:
   803                           	callstack 0
   804                           
   805                           ; 8 bytes @ 0x32
   806   000033                     	ds	8
   807   00003B                     i2utoa@i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x3A
   811   00003B                     	ds	2
   812   00003D                     i2vfpfcnvrt@fp:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x3C
   816   00003D                     	ds	2
   817   00003F                     i2vfpfcnvrt@fmt:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x3E
   821   00003F                     	ds	2
   822   000041                     i2vfpfcnvrt@ap:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x40
   826   000041                     	ds	2
   827   000043                     ??i2_vfpfcnvrt:
   828                           
   829                           ; 1 bytes @ 0x42
   830   000043                     	ds	4
   831   000047                     i2vfpfcnvrt@convarg:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x46
   835   000047                     	ds	8
   836   00004F                     i2vfpfcnvrt@done:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x4E
   840   00004F                     	ds	2
   841   000051                     i2vfpfcnvrt@cp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x50
   845   000051                     	ds	2
   846   000053                     ?i2_vfprintf:
   847                           	callstack 0
   848   000053                     i2vfprintf@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x52
   852   000053                     	ds	2
   853   000055                     i2vfprintf@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x54
   857   000055                     	ds	2
   858   000057                     i2vfprintf@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x56
   862   000057                     	ds	2
   863   000059                     i2vfprintf@cfmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x58
   867   000059                     	ds	2
   868   00005B                     
   869                           ; 1 bytes @ 0x5A
   870 ;;
   871 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   872 ;;
   873 ;; *************** function _main *****************
   874 ;; Defined at:
   875 ;;		line 17 in file "Gpio_Lcd_Buzzer.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  col             1   49[BANK1 ] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  2   48[None  ] int 
   882 ;; Registers used:
   883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   889 ;;      Params:         0       0       0       0       0       0       0       0       0
   890 ;;      Locals:         0       0       1       0       0       0       0       0       0
   891 ;;      Temps:          0       0       2       0       0       0       0       0       0
   892 ;;      Totals:         0       0       3       0       0       0       0       0       0
   893 ;;Total ram usage:        3 bytes
   894 ;; Hardware stack levels required when called: 17
   895 ;; This function calls:
   896 ;;		_Hardware_Init
   897 ;;		_Lcd_Clear
   898 ;;		_Lcd_Set_Cursor
   899 ;;		_Lcd_Write_String
   900 ;;		_sprintf
   901 ;; This function is called by:
   902 ;;		Startup code after reset
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text0
   907   001940                     __ptext0:
   908                           	callstack 0
   909   001940                     _main:
   910                           	callstack 14
   911   001940                     
   912                           ;Gpio_Lcd_Buzzer.c: 19:     Hardware_Init();
   913   001940  EC3B  F011         	call	_Hardware_Init	;wreg free
   914                           
   915                           ;Gpio_Lcd_Buzzer.c: 21:     Lcd_Clear();
   916   001944  EC6C  F011         	call	_Lcd_Clear	;wreg free
   917                           
   918                           ;Gpio_Lcd_Buzzer.c: 22:     Lcd_Set_Cursor(1, 1);
   919   001948  0E01               	movlw	1
   920   00194A  0100               	movlb	0	; () banked
   921   00194C  6F86               	movwf	Lcd_Set_Cursor@b& (0+255),b
   922   00194E  0E01               	movlw	1
   923   001950  EC71  F00E         	call	_Lcd_Set_Cursor
   924   001954                     
   925                           ;Gpio_Lcd_Buzzer.c: 23:     sprintf(strReloj, "Timer:  %02u:%02u:%02u", hours, minutes, 
      +                          seconds);
   926   001954  0E20               	movlw	low _strReloj
   927   001956  0101               	movlb	1	; () banked
   928   001958  6F4C               	movwf	sprintf@s& (0+255),b
   929   00195A  0E01               	movlw	high _strReloj
   930   00195C  6F4D               	movwf	(sprintf@s+1)& (0+255),b
   931   00195E  0E01               	movlw	low STR_1
   932   001960  6F4E               	movwf	sprintf@fmt& (0+255),b
   933   001962  0E08               	movlw	high STR_1
   934   001964  6F4F               	movwf	(sprintf@fmt+1)& (0+255),b
   935   001966  C0DC  F150         	movff	_hours,?_sprintf+4
   936   00196A  6B51               	clrf	(?_sprintf+5)& (0+255),b
   937   00196C  C0DB  F152         	movff	_minutes,?_sprintf+6
   938   001970  6B53               	clrf	(?_sprintf+7)& (0+255),b
   939   001972  C0DA  F154         	movff	_seconds,?_sprintf+8
   940   001976  6B55               	clrf	(?_sprintf+9)& (0+255),b
   941   001978  EC39  F00F         	call	_sprintf	;wreg free
   942   00197C                     
   943                           ;Gpio_Lcd_Buzzer.c: 25:     Lcd_Write_String(strReloj);
   944   00197C  0E20               	movlw	low _strReloj
   945   00197E  0100               	movlb	0	; () banked
   946   001980  6F87               	movwf	Lcd_Write_String@a& (0+255),b
   947   001982  0E01               	movlw	high _strReloj
   948   001984  6F88               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   949   001986  ECB0  F00D         	call	_Lcd_Write_String	;wreg free
   950   00198A                     l4230:
   951                           
   952                           ;Gpio_Lcd_Buzzer.c: 29:         Lcd_Set_Cursor(2, 1);
   953   00198A  0E01               	movlw	1
   954   00198C  0100               	movlb	0	; () banked
   955   00198E  6F86               	movwf	Lcd_Set_Cursor@b& (0+255),b
   956   001990  0E02               	movlw	2
   957   001992  EC71  F00E         	call	_Lcd_Set_Cursor
   958   001996                     
   959                           ;Gpio_Lcd_Buzzer.c: 30:         for (uint8_t col = 1; col <=17; col++) {
   960   001996  0E01               	movlw	1
   961   001998  0101               	movlb	1	; () banked
   962   00199A  6F65               	movwf	main@col& (0+255),b
   963   00199C                     l4238:
   964                           
   965                           ; BSR set to: 1
   966                           ;Gpio_Lcd_Buzzer.c: 31:             Lcd_Set_Cursor(2, col);
   967   00199C  C165  F086         	movff	main@col,Lcd_Set_Cursor@b
   968   0019A0  0E02               	movlw	2
   969   0019A2  EC71  F00E         	call	_Lcd_Set_Cursor
   970   0019A6                     
   971                           ;Gpio_Lcd_Buzzer.c: 32:             Lcd_Write_String("*");
   972   0019A6  0E1A               	movlw	low STR_2
   973   0019A8  0100               	movlb	0	; () banked
   974   0019AA  6F87               	movwf	Lcd_Write_String@a& (0+255),b
   975   0019AC  0E08               	movlw	high STR_2
   976   0019AE  6F88               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   977   0019B0  ECB0  F00D         	call	_Lcd_Write_String	;wreg free
   978   0019B4                     
   979                           ;Gpio_Lcd_Buzzer.c: 33:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   980   0019B4  0E03               	movlw	3
   981   0019B6  0101               	movlb	1	; () banked
   982   0019B8  6F64               	movwf	(??_main+1)& (0+255),b
   983   0019BA  0E8A               	movlw	138
   984   0019BC  6F63               	movwf	??_main& (0+255),b
   985   0019BE  0E55               	movlw	85
   986   0019C0                     u3417:
   987   0019C0  2EE8               	decfsz	wreg,f,c
   988   0019C2  D7FE               	bra	u3417
   989   0019C4  2F63               	decfsz	??_main& (0+255),f,b
   990   0019C6  D7FC               	bra	u3417
   991   0019C8  2F64               	decfsz	(??_main+1)& (0+255),f,b
   992   0019CA  D7FA               	bra	u3417
   993   0019CC  D000               	nop2	
   994   0019CE                     
   995                           ;Gpio_Lcd_Buzzer.c: 34:             Lcd_Set_Cursor(2, col);
   996   0019CE  C165  F086         	movff	main@col,Lcd_Set_Cursor@b
   997   0019D2  0E02               	movlw	2
   998   0019D4  EC71  F00E         	call	_Lcd_Set_Cursor
   999   0019D8                     
  1000                           ;Gpio_Lcd_Buzzer.c: 35:             Lcd_Write_String(" ");
  1001   0019D8  0E18               	movlw	low STR_3
  1002   0019DA  0100               	movlb	0	; () banked
  1003   0019DC  6F87               	movwf	Lcd_Write_String@a& (0+255),b
  1004   0019DE  0E08               	movlw	high STR_3
  1005   0019E0  6F88               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1006   0019E2  ECB0  F00D         	call	_Lcd_Write_String	;wreg free
  1007   0019E6                     
  1008                           ;Gpio_Lcd_Buzzer.c: 36:         }
  1009   0019E6  0101               	movlb	1	; () banked
  1010   0019E8  2B65               	incf	main@col& (0+255),f,b
  1011   0019EA  0E11               	movlw	17
  1012   0019EC  6565               	cpfsgt	main@col& (0+255),b
  1013   0019EE  EFFB  F00C         	goto	u3351
  1014   0019F2  EFFD  F00C         	goto	u3350
  1015   0019F6                     u3351:
  1016   0019F6  EFCE  F00C         	goto	l4238
  1017   0019FA                     u3350:
  1018   0019FA  EFC5  F00C         	goto	l4230
  1019   0019FE  EF8B  F000         	goto	start
  1020   001A02                     __end_of_main:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _sprintf *****************
  1024 ;; Defined at:
  1025 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  s               2   24[BANK1 ] PTR unsigned char 
  1028 ;;		 -> strReloj(20), 
  1029 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  1030 ;;		 -> STR_4(23), STR_1(23), 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  f              11   36[BANK1 ] struct _IO_FILE
  1033 ;;  ap              2   34[BANK1 ] PTR void [1]
  1034 ;;		 -> ?_sprintf(2), 
  1035 ;;  ret             2    0        int 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2   24[BANK1 ] int 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1045 ;;      Params:         0       0      10       0       0       0       0       0       0
  1046 ;;      Locals:         0       0      13       0       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1048 ;;      Totals:         0       0      23       0       0       0       0       0       0
  1049 ;;Total ram usage:       23 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 16
  1052 ;; This function calls:
  1053 ;;		_vfprintf
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text1
  1060   001E72                     __ptext1:
  1061                           	callstack 0
  1062   001E72                     _sprintf:
  1063                           	callstack 14
  1064   001E72  0E50               	movlw	low (?_sprintf+4)
  1065   001E74  0101               	movlb	1	; () banked
  1066   001E76  6F56               	movwf	sprintf@ap& (0+255),b
  1067   001E78  0E01               	movlw	high (?_sprintf+4)
  1068   001E7A  6F57               	movwf	(sprintf@ap+1)& (0+255),b
  1069   001E7C  C14C  F158         	movff	sprintf@s,sprintf@f
  1070   001E80  C14D  F159         	movff	sprintf@s+1,sprintf@f+1
  1071   001E84                     
  1072                           ; BSR set to: 1
  1073   001E84  0E00               	movlw	0
  1074   001E86  6F5C               	movwf	(sprintf@f+4)& (0+255),b
  1075   001E88  0E00               	movlw	0
  1076   001E8A  6F5B               	movwf	(sprintf@f+3)& (0+255),b
  1077   001E8C                     
  1078                           ; BSR set to: 1
  1079   001E8C  0E00               	movlw	0
  1080   001E8E  6F62               	movwf	(sprintf@f+10)& (0+255),b
  1081   001E90  0E00               	movlw	0
  1082   001E92  6F61               	movwf	(sprintf@f+9)& (0+255),b
  1083   001E94                     
  1084                           ; BSR set to: 1
  1085   001E94  0E58               	movlw	low sprintf@f
  1086   001E96  6F44               	movwf	vfprintf@fp& (0+255),b
  1087   001E98  0E01               	movlw	high sprintf@f
  1088   001E9A  6F45               	movwf	(vfprintf@fp+1)& (0+255),b
  1089   001E9C  C14E  F146         	movff	sprintf@fmt,vfprintf@fmt
  1090   001EA0  C14F  F147         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1091   001EA4  0E56               	movlw	low sprintf@ap
  1092   001EA6  6F48               	movwf	vfprintf@ap& (0+255),b
  1093   001EA8  0E01               	movlw	high sprintf@ap
  1094   001EAA  6F49               	movwf	(vfprintf@ap+1)& (0+255),b
  1095   001EAC  EC62  F00F         	call	_vfprintf	;wreg free
  1096   001EB0  0101               	movlb	1	; () banked
  1097   001EB2  515B               	movf	(sprintf@f+3)& (0+255),w,b
  1098   001EB4  254C               	addwf	sprintf@s& (0+255),w,b
  1099   001EB6  6ED9               	movwf	fsr2l,c
  1100   001EB8  515C               	movf	(sprintf@f+4)& (0+255),w,b
  1101   001EBA  214D               	addwfc	(sprintf@s+1)& (0+255),w,b
  1102   001EBC  6EDA               	movwf	fsr2h,c
  1103   001EBE  0E00               	movlw	0
  1104   001EC0  6EDF               	movwf	indf2,c
  1105   001EC2                     
  1106                           ; BSR set to: 1
  1107   001EC2  0012               	return		;funcret
  1108   001EC4                     __end_of_sprintf:
  1109                           	callstack 0
  1110                           
  1111 ;; *************** function _vfprintf *****************
  1112 ;; Defined at:
  1113 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  fp              2   16[BANK1 ] PTR struct _IO_FILE
  1116 ;;		 -> sprintf@f(11), 
  1117 ;;  fmt             2   18[BANK1 ] PTR const unsigned char 
  1118 ;;		 -> STR_4(23), STR_1(23), 
  1119 ;;  ap              2   20[BANK1 ] PTR PTR void 
  1120 ;;		 -> sprintf@ap(2), 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  cfmt            2   22[BANK1 ] PTR unsigned char 
  1123 ;;		 -> STR_4(23), STR_1(23), 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   16[BANK1 ] int 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1133 ;;      Params:         0       0       6       0       0       0       0       0       0
  1134 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1136 ;;      Totals:         0       0       8       0       0       0       0       0       0
  1137 ;;Total ram usage:        8 bytes
  1138 ;; Hardware stack levels used: 1
  1139 ;; Hardware stack levels required when called: 15
  1140 ;; This function calls:
  1141 ;;		_vfpfcnvrt
  1142 ;; This function is called by:
  1143 ;;		_sprintf
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text2
  1148   001EC4                     __ptext2:
  1149                           	callstack 0
  1150   001EC4                     _vfprintf:
  1151                           	callstack 14
  1152   001EC4                     
  1153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1154   001EC4  C146  F14A         	movff	vfprintf@fmt,vfprintf@cfmt
  1155   001EC8  C147  F14B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1158   001ECC  EF77  F00F         	goto	l4150
  1159   001ED0                     l4148:
  1160                           
  1161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1162   001ED0  C144  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  1163   001ED4  C145  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1164   001ED8  0E4A               	movlw	low vfprintf@cfmt
  1165   001EDA  0100               	movlb	0	; () banked
  1166   001EDC  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  1167   001EDE  0E01               	movlw	high vfprintf@cfmt
  1168   001EE0  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1169   001EE2  C148  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  1170   001EE6  C149  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1171   001EEA  EC0F  F004         	call	_vfpfcnvrt	;wreg free
  1172   001EEE                     l4150:
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1175   001EEE  C14A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1176   001EF2  C14B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1177   001EF6                     	if	0	;tblptru may be non-zero
  1178   001EF6                     	endif
  1179   001EF6                     	if	0	;tblptru may be non-zero
  1180   001EF6                     	endif
  1181   001EF6  0008               	tblrd		*
  1182   001EF8  50F5               	movf	tablat,w,c
  1183   001EFA  0900               	iorlw	0
  1184   001EFC  A4D8               	btfss	status,2,c
  1185   001EFE  EF83  F00F         	goto	u3281
  1186   001F02  EF85  F00F         	goto	u3280
  1187   001F06                     u3281:
  1188   001F06  EF68  F00F         	goto	l4148
  1189   001F0A                     u3280:
  1190   001F0A                     
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1192   001F0A  0E00               	movlw	0
  1193   001F0C  0101               	movlb	1	; () banked
  1194   001F0E  6F45               	movwf	(?_vfprintf+1)& (0+255),b
  1195   001F10  0E00               	movlw	0
  1196   001F12  6F44               	movwf	?_vfprintf& (0+255),b
  1197   001F14                     
  1198                           ; BSR set to: 1
  1199   001F14  0012               	return		;funcret
  1200   001F16                     __end_of_vfprintf:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _vfpfcnvrt *****************
  1204 ;; Defined at:
  1205 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  fp              2   95[BANK0 ] PTR struct _IO_FILE
  1208 ;;		 -> sprintf@f(11), 
  1209 ;;  fmt             2   97[BANK0 ] PTR PTR unsigned char 
  1210 ;;		 -> vfprintf@cfmt(2), 
  1211 ;;  ap              2   99[BANK0 ] PTR PTR void 
  1212 ;;		 -> sprintf@ap(2), 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  convarg         8    4[BANK1 ] struct .
  1215 ;;  cp              2   14[BANK1 ] PTR unsigned char 
  1216 ;;		 -> STR_4(23), STR_1(23), 
  1217 ;;  done            2   12[BANK1 ] int 
  1218 ;;  i               2    0        int 
  1219 ;;  c               1    0        unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         0       6       0       0       0       0       0       0       0
  1230 ;;      Locals:         0       0      12       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       4       0       0       0       0       0       0
  1232 ;;      Totals:         0       6      16       0       0       0       0       0       0
  1233 ;;Total ram usage:       22 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 14
  1236 ;; This function calls:
  1237 ;;		_atoi
  1238 ;;		_fputc
  1239 ;;		_isdigit
  1240 ;;		_utoa
  1241 ;; This function is called by:
  1242 ;;		_vfprintf
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text3
  1247   00081E                     __ptext3:
  1248                           	callstack 0
  1249   00081E                     _vfpfcnvrt:
  1250                           	callstack 14
  1251   00081E                     
  1252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1253   00081E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1254   000822  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1255   000826  CFDE FFF6          	movff	postinc2,tblptrl
  1256   00082A  CFDD FFF7          	movff	postdec2,tblptrh
  1257   00082E                     	if	0	;tblptru may be non-zero
  1258   00082E                     	endif
  1259   00082E                     	if	0	;tblptru may be non-zero
  1260   00082E                     	endif
  1261   00082E  0008               	tblrd		*
  1262   000830  50F5               	movf	tablat,w,c
  1263   000832  0A25               	xorlw	37
  1264   000834  A4D8               	btfss	status,2,c
  1265   000836  EF1F  F004         	goto	u3161
  1266   00083A  EF21  F004         	goto	u3160
  1267   00083E                     u3161:
  1268   00083E  EF59  F005         	goto	l3982
  1269   000842                     u3160:
  1270   000842                     
  1271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1272   000842  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1273   000846  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1274   00084A  2ADE               	incf	postinc2,f,c
  1275   00084C  0E00               	movlw	0
  1276   00084E  22DD               	addwfc	postdec2,f,c
  1277   000850                     
  1278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1279   000850  0E00               	movlw	0
  1280   000852  0100               	movlb	0	; () banked
  1281   000854  6FD6               	movwf	(_width+1)& (0+255),b
  1282   000856  0E00               	movlw	0
  1283   000858  6FD5               	movwf	_width& (0+255),b
  1284   00085A  C0D5  F0D9         	movff	_width,_flags
  1285   00085E                     
  1286                           ; BSR set to: 0
  1287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1288   00085E  69D7               	setf	_prec& (0+255),b
  1289   000860  69D8               	setf	(_prec+1)& (0+255),b
  1290   000862                     
  1291                           ; BSR set to: 0
  1292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1293   000862  0E00               	movlw	0
  1294   000864  0101               	movlb	1	; () banked
  1295   000866  6F41               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1296   000868  0E00               	movlw	0
  1297   00086A  6F40               	movwf	vfpfcnvrt@done& (0+255),b
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1300   00086C  EF63  F004         	goto	l3946
  1301   000870                     l3936:
  1302                           
  1303                           ; BSR set to: 1
  1304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1305   000870  0100               	movlb	0	; () banked
  1306   000872  83D9               	bsf	_flags& (0+255),1,b
  1307   000874                     
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1310   000874  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1311   000878  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1312   00087C  2ADE               	incf	postinc2,f,c
  1313   00087E  0E00               	movlw	0
  1314   000880  22DD               	addwfc	postdec2,f,c
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1317   000882  EF63  F004         	goto	l3946
  1318   000886                     l3940:
  1319                           
  1320                           ; BSR set to: 1
  1321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1322   000886  0E00               	movlw	0
  1323   000888  6F41               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1324   00088A  0E01               	movlw	1
  1325   00088C  6F40               	movwf	vfpfcnvrt@done& (0+255),b
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1328   00088E  EF63  F004         	goto	l3946
  1329   000892                     l3944:
  1330                           
  1331                           ; BSR set to: 1
  1332   000892  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1333   000896  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1334   00089A  CFDE FFF6          	movff	postinc2,tblptrl
  1335   00089E  CFDD FFF7          	movff	postdec2,tblptrh
  1336   0008A2                     	if	0	;tblptru may be non-zero
  1337   0008A2                     	endif
  1338   0008A2                     	if	0	;tblptru may be non-zero
  1339   0008A2                     	endif
  1340   0008A2  0008               	tblrd		*
  1341   0008A4  50F5               	movf	tablat,w,c
  1342   0008A6  6F34               	movwf	??_vfpfcnvrt& (0+255),b
  1343   0008A8  6B35               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1344                           
  1345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1346                           ; Switch size 1, requested type "simple"
  1347                           ; Number of cases is 1, Range of values is 0 to 0
  1348                           ; switch strategies available:
  1349                           ; Name         Instructions Cycles
  1350                           ; simple_byte            4     3 (average)
  1351                           ;	Chosen strategy is simple_byte
  1352   0008AA  5135               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1353   0008AC  0A00               	xorlw	0	; case 0
  1354   0008AE  B4D8               	btfsc	status,2,c
  1355   0008B0  EF5C  F004         	goto	l4426
  1356   0008B4  EF43  F004         	goto	l3940
  1357   0008B8                     l4426:
  1358                           
  1359                           ; BSR set to: 1
  1360                           ; Switch size 1, requested type "simple"
  1361                           ; Number of cases is 1, Range of values is 48 to 48
  1362                           ; switch strategies available:
  1363                           ; Name         Instructions Cycles
  1364                           ; simple_byte            4     3 (average)
  1365                           ;	Chosen strategy is simple_byte
  1366   0008B8  5134               	movf	??_vfpfcnvrt& (0+255),w,b
  1367   0008BA  0A30               	xorlw	48	; case 48
  1368   0008BC  B4D8               	btfsc	status,2,c
  1369   0008BE  EF38  F004         	goto	l3936
  1370   0008C2  EF43  F004         	goto	l3940
  1371   0008C6                     l3946:
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1374   0008C6  0101               	movlb	1	; () banked
  1375   0008C8  5140               	movf	vfpfcnvrt@done& (0+255),w,b
  1376   0008CA  1141               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1377   0008CC  B4D8               	btfsc	status,2,c
  1378   0008CE  EF6B  F004         	goto	u3171
  1379   0008D2  EF6D  F004         	goto	u3170
  1380   0008D6                     u3171:
  1381   0008D6  EF49  F004         	goto	l3944
  1382   0008DA                     u3170:
  1383   0008DA                     
  1384                           ; BSR set to: 1
  1385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1386   0008DA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1387   0008DE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1388   0008E2  CFDE FFF6          	movff	postinc2,tblptrl
  1389   0008E6  CFDD FFF7          	movff	postdec2,tblptrh
  1390   0008EA                     	if	0	;tblptru may be non-zero
  1391   0008EA                     	endif
  1392   0008EA                     	if	0	;tblptru may be non-zero
  1393   0008EA                     	endif
  1394   0008EA  0008               	tblrd		*
  1395   0008EC  50F5               	movf	tablat,w,c
  1396   0008EE  0A2A               	xorlw	42
  1397   0008F0  A4D8               	btfss	status,2,c
  1398   0008F2  EF7D  F004         	goto	u3181
  1399   0008F6  EF7F  F004         	goto	u3180
  1400   0008FA                     u3181:
  1401   0008FA  EFA9  F004         	goto	l3956
  1402   0008FE                     u3180:
  1403   0008FE                     
  1404                           ; BSR set to: 1
  1405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1406   0008FE  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1407   000902  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1408   000906  2ADE               	incf	postinc2,f,c
  1409   000908  0E00               	movlw	0
  1410   00090A  22DD               	addwfc	postdec2,f,c
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1413   00090C  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1414   000910  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1415   000914  CFDF F134          	movff	indf2,??_vfpfcnvrt
  1416   000918  0E02               	movlw	2
  1417   00091A  26DE               	addwf	postinc2,f,c
  1418   00091C  CFDF F135          	movff	indf2,??_vfpfcnvrt+1
  1419   000920  0E00               	movlw	0
  1420   000922  22DD               	addwfc	postdec2,f,c
  1421   000924  C134  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1422   000928  C135  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1423   00092C  CFDE F0D5          	movff	postinc2,_width
  1424   000930  CFDD F0D6          	movff	postdec2,_width+1
  1425   000934                     
  1426                           ; BSR set to: 1
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1428   000934  0100               	movlb	0	; () banked
  1429   000936  BFD6               	btfsc	(_width+1)& (0+255),7,b
  1430   000938  EFA2  F004         	goto	u3190
  1431   00093C  EFA0  F004         	goto	u3191
  1432   000940                     u3191:
  1433   000940  EFDD  F004         	goto	l3964
  1434   000944                     u3190:
  1435   000944                     
  1436                           ; BSR set to: 0
  1437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1438   000944  81D9               	bsf	_flags& (0+255),0,b
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1441   000946  6DD5               	negf	_width& (0+255),b
  1442   000948  1FD6               	comf	(_width+1)& (0+255),f,b
  1443   00094A  B0D8               	btfsc	status,0,c
  1444   00094C  2BD6               	incf	(_width+1)& (0+255),f,b
  1445   00094E  EFDD  F004         	goto	l3964
  1446   000952                     l3956:
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1450   000952  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451   000956  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452   00095A  CFDE F089          	movff	postinc2,atoi@s
  1453   00095E  CFDD F08A          	movff	postdec2,atoi@s+1
  1454   000962  ECC7  F008         	call	_atoi	;wreg free
  1455   000966  C089  F0D5         	movff	?_atoi,_width
  1456   00096A  C08A  F0D6         	movff	?_atoi+1,_width+1
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1459   00096E  EFC0  F004         	goto	l3962
  1460   000972                     l3958:
  1461                           
  1462                           ; BSR set to: 1
  1463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1464   000972  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1465   000976  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1466   00097A  2ADE               	incf	postinc2,f,c
  1467   00097C  0E00               	movlw	0
  1468   00097E  22DD               	addwfc	postdec2,f,c
  1469   000980                     l3962:
  1470   000980  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1471   000984  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1472   000988  CFDE FFF6          	movff	postinc2,tblptrl
  1473   00098C  CFDD FFF7          	movff	postdec2,tblptrh
  1474   000990                     	if	0	;tblptru may be non-zero
  1475   000990                     	endif
  1476   000990                     	if	0	;tblptru may be non-zero
  1477   000990                     	endif
  1478   000990  0008               	tblrd		*
  1479   000992  CFF5 F134          	movff	tablat,??_vfpfcnvrt
  1480   000996  0ED0               	movlw	208
  1481   000998  0101               	movlb	1	; () banked
  1482   00099A  2534               	addwf	??_vfpfcnvrt& (0+255),w,b
  1483   00099C  6F35               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1484   00099E  6B36               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  1485   0009A0  0EFF               	movlw	255
  1486   0009A2  2336               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  1487   0009A4  5136               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  1488   0009A6  E109               	bnz	u3200
  1489   0009A8  0E0A               	movlw	10
  1490   0009AA  5D35               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  1491   0009AC  A0D8               	btfss	status,0,c
  1492   0009AE  EFDB  F004         	goto	u3201
  1493   0009B2  EFDD  F004         	goto	u3200
  1494   0009B6                     u3201:
  1495   0009B6  EFB9  F004         	goto	l3958
  1496   0009BA                     u3200:
  1497   0009BA                     l3964:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  1500   0009BA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1501   0009BE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1502   0009C2  CFDE F142          	movff	postinc2,vfpfcnvrt@cp
  1503   0009C6  CFDD F143          	movff	postdec2,vfpfcnvrt@cp+1
  1504   0009CA  C142  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1505   0009CE  C143  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1506   0009D2                     	if	0	;tblptru may be non-zero
  1507   0009D2                     	endif
  1508   0009D2                     	if	0	;tblptru may be non-zero
  1509   0009D2                     	endif
  1510   0009D2  0008               	tblrd		*
  1511   0009D4  50F5               	movf	tablat,w,c
  1512   0009D6  0A75               	xorlw	117
  1513   0009D8  A4D8               	btfss	status,2,c
  1514   0009DA  EFF1  F004         	goto	u3211
  1515   0009DE  EFF3  F004         	goto	u3210
  1516   0009E2                     u3211:
  1517   0009E2  EF50  F005         	goto	l3978
  1518   0009E6                     u3210:
  1519   0009E6                     
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1521   0009E6  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1522   0009EA  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1523   0009EE  CFDF F134          	movff	indf2,??_vfpfcnvrt
  1524   0009F2  0E02               	movlw	2
  1525   0009F4  26DE               	addwf	postinc2,f,c
  1526   0009F6  CFDF F135          	movff	indf2,??_vfpfcnvrt+1
  1527   0009FA  0E00               	movlw	0
  1528   0009FC  22DD               	addwfc	postdec2,f,c
  1529   0009FE  C134  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1530   000A02  C135  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1531   000A06  CFDE F136          	movff	postinc2,??_vfpfcnvrt+2
  1532   000A0A  CFDD F137          	movff	postdec2,??_vfpfcnvrt+3
  1533   000A0E  C136  F138         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  1534   000A12  C137  F139         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  1535   000A16  0101               	movlb	1	; () banked
  1536   000A18  6B3A               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  1537   000A1A  6B3B               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  1538   000A1C  6B3C               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  1539   000A1E  6B3D               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  1540   000A20  6B3E               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  1541   000A22  6B3F               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  1544   000A24  0E01               	movlw	1
  1545   000A26  2542               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1546   000A28  6F34               	movwf	??_vfpfcnvrt& (0+255),b
  1547   000A2A  0E00               	movlw	0
  1548   000A2C  2143               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1549   000A2E  6F35               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1550   000A30  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1551   000A34  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1552   000A38  C134  FFDE         	movff	??_vfpfcnvrt,postinc2
  1553   000A3C  C135  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  1556   000A40  EF3A  F005         	goto	l3976
  1557   000A44                     l3970:
  1558                           
  1559                           ; BSR set to: 1
  1560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  1561   000A44  C0BF  F09F         	movff	vfpfcnvrt@fp,utoa@fp
  1562   000A48  C0C0  F0A0         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1563   000A4C  C138  F0A1         	movff	vfpfcnvrt@convarg,utoa@d
  1564   000A50  C139  F0A2         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1565   000A54  C13A  F0A3         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  1566   000A58  C13B  F0A4         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  1567   000A5C  C13C  F0A5         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  1568   000A60  C13D  F0A6         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  1569   000A64  C13E  F0A7         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  1570   000A68  C13F  F0A8         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  1571   000A6C  ECCA  F006         	call	_utoa	;wreg free
  1572   000A70  EF6E  F005         	goto	l1194
  1573   000A74                     l3976:
  1574                           
  1575                           ; BSR set to: 1
  1576   000A74  C142  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1577   000A78  C143  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1578   000A7C                     	if	0	;tblptru may be non-zero
  1579   000A7C                     	endif
  1580   000A7C                     	if	0	;tblptru may be non-zero
  1581   000A7C                     	endif
  1582   000A7C  0008               	tblrd		*
  1583   000A7E  50F5               	movf	tablat,w,c
  1584   000A80  6F34               	movwf	??_vfpfcnvrt& (0+255),b
  1585   000A82  6B35               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1586                           
  1587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1588                           ; Switch size 1, requested type "simple"
  1589                           ; Number of cases is 1, Range of values is 0 to 0
  1590                           ; switch strategies available:
  1591                           ; Name         Instructions Cycles
  1592                           ; simple_byte            4     3 (average)
  1593                           ;	Chosen strategy is simple_byte
  1594   000A84  5135               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1595   000A86  0A00               	xorlw	0	; case 0
  1596   000A88  B4D8               	btfsc	status,2,c
  1597   000A8A  EF49  F005         	goto	l4428
  1598   000A8E  EF50  F005         	goto	l3978
  1599   000A92                     l4428:
  1600                           
  1601                           ; BSR set to: 1
  1602                           ; Switch size 1, requested type "simple"
  1603                           ; Number of cases is 1, Range of values is 117 to 117
  1604                           ; switch strategies available:
  1605                           ; Name         Instructions Cycles
  1606                           ; simple_byte            4     3 (average)
  1607                           ;	Chosen strategy is simple_byte
  1608   000A92  5134               	movf	??_vfpfcnvrt& (0+255),w,b
  1609   000A94  0A75               	xorlw	117	; case 117
  1610   000A96  B4D8               	btfsc	status,2,c
  1611   000A98  EF22  F005         	goto	l3970
  1612   000A9C  EF50  F005         	goto	l3978
  1613   000AA0                     l3978:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1616   000AA0  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1617   000AA4  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1618   000AA8  2ADE               	incf	postinc2,f,c
  1619   000AAA  0E00               	movlw	0
  1620   000AAC  22DD               	addwfc	postdec2,f,c
  1621   000AAE  EF6E  F005         	goto	l1194
  1622   000AB2                     l3982:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1625   000AB2  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1626   000AB6  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1627   000ABA  CFDE FFF6          	movff	postinc2,tblptrl
  1628   000ABE  CFDD FFF7          	movff	postdec2,tblptrh
  1629   000AC2                     	if	0	;tblptru may be non-zero
  1630   000AC2                     	endif
  1631   000AC2                     	if	0	;tblptru may be non-zero
  1632   000AC2                     	endif
  1633   000AC2  0008               	tblrd		*
  1634   000AC4  50F5               	movf	tablat,w,c
  1635   000AC6  0100               	movlb	0	; () banked
  1636   000AC8  6F84               	movwf	fputc@c& (0+255),b
  1637   000ACA  6B85               	clrf	(fputc@c+1)& (0+255),b
  1638   000ACC  C0BF  F086         	movff	vfpfcnvrt@fp,fputc@fp
  1639   000AD0  C0C0  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1640   000AD4  ECD5  F00B         	call	_fputc	;wreg free
  1641   000AD8  EF50  F005         	goto	l3978
  1642   000ADC                     l1194:
  1643   000ADC  0012               	return		;funcret
  1644   000ADE                     __end_of_vfpfcnvrt:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _utoa *****************
  1648 ;; Defined at:
  1649 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  1652 ;;		 -> sprintf@f(11), 
  1653 ;;  d               8   65[BANK0 ] unsigned long long 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  n               8   85[BANK0 ] unsigned long long 
  1656 ;;  i               2   93[BANK0 ] int 
  1657 ;;  w               2   83[BANK0 ] int 
  1658 ;;  p               2   81[BANK0 ] int 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0      10       0       0       0       0       0       0       0
  1669 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1671 ;;      Totals:         0      32       0       0       0       0       0       0       0
  1672 ;;Total ram usage:       32 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 13
  1675 ;; This function calls:
  1676 ;;		___lodiv
  1677 ;;		___lomod
  1678 ;;		_pad
  1679 ;; This function is called by:
  1680 ;;		_vfpfcnvrt
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text4
  1685   000D94                     __ptext4:
  1686                           	callstack 0
  1687   000D94                     _utoa:
  1688                           	callstack 14
  1689   000D94                     
  1690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  1691   000D94  0100               	movlb	0	; () banked
  1692   000D96  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  1693   000D98  EFD0  F006         	goto	u2941
  1694   000D9C  EFD2  F006         	goto	u2940
  1695   000DA0                     u2941:
  1696   000DA0  EFD3  F006         	goto	l3784
  1697   000DA4                     u2940:
  1698   000DA4                     
  1699                           ; BSR set to: 0
  1700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  1701   000DA4  93D9               	bcf	_flags& (0+255),1,b
  1702   000DA6                     l3784:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  1706   000DA6  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  1707   000DA8  EFE0  F006         	goto	u2950
  1708   000DAC  51D8               	movf	(_prec+1)& (0+255),w,b
  1709   000DAE  E106               	bnz	u2951
  1710   000DB0  05D7               	decf	_prec& (0+255),w,b
  1711   000DB2  B0D8               	btfsc	status,0,c
  1712   000DB4  EFDE  F006         	goto	u2951
  1713   000DB8  EFE0  F006         	goto	u2950
  1714   000DBC                     u2951:
  1715   000DBC  EFE6  F006         	goto	l1160
  1716   000DC0                     u2950:
  1717   000DC0                     
  1718                           ; BSR set to: 0
  1719   000DC0  0E00               	movlw	0
  1720   000DC2  6FB2               	movwf	(utoa@p+1)& (0+255),b
  1721   000DC4  0E01               	movlw	1
  1722   000DC6  6FB1               	movwf	utoa@p& (0+255),b
  1723   000DC8  EFEA  F006         	goto	l1162
  1724   000DCC                     l1160:
  1725                           
  1726                           ; BSR set to: 0
  1727   000DCC  C0D7  F0B1         	movff	_prec,utoa@p
  1728   000DD0  C0D8  F0B2         	movff	_prec+1,utoa@p+1
  1729   000DD4                     l1162:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  1733   000DD4  C0D5  F0B3         	movff	_width,utoa@w
  1734   000DD8  C0D6  F0B4         	movff	_width+1,utoa@w+1
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  1737   000DDC  C0A1  F0B5         	movff	utoa@d,utoa@n
  1738   000DE0  C0A2  F0B6         	movff	utoa@d+1,utoa@n+1
  1739   000DE4  C0A3  F0B7         	movff	utoa@d+2,utoa@n+2
  1740   000DE8  C0A4  F0B8         	movff	utoa@d+3,utoa@n+3
  1741   000DEC  C0A5  F0B9         	movff	utoa@d+4,utoa@n+4
  1742   000DF0  C0A6  F0BA         	movff	utoa@d+5,utoa@n+5
  1743   000DF4  C0A7  F0BB         	movff	utoa@d+6,utoa@n+6
  1744   000DF8  C0A8  F0BC         	movff	utoa@d+7,utoa@n+7
  1745   000DFC                     
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  1748   000DFC  0E00               	movlw	0
  1749   000DFE  6FBE               	movwf	(utoa@i+1)& (0+255),b
  1750   000E00  0E1F               	movlw	31
  1751   000E02  6FBD               	movwf	utoa@i& (0+255),b
  1752   000E04                     
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  1755   000E04  0E00               	movlw	0
  1756   000E06  0101               	movlb	1	; () banked
  1757   000E08  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1760   000E0A  EF7E  F007         	goto	l3802
  1761   000E0E                     l3792:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  1765   000E0E  07BD               	decf	utoa@i& (0+255),f,b
  1766   000E10  A0D8               	btfss	status,0,c
  1767   000E12  07BE               	decf	(utoa@i+1)& (0+255),f,b
  1768   000E14                     
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  1771   000E14  0E00               	movlw	low _dbuf
  1772   000E16  25BD               	addwf	utoa@i& (0+255),w,b
  1773   000E18  6ED9               	movwf	fsr2l,c
  1774   000E1A  0E01               	movlw	high _dbuf
  1775   000E1C  21BE               	addwfc	(utoa@i+1)& (0+255),w,b
  1776   000E1E  6EDA               	movwf	fsr2h,c
  1777   000E20  C0B5  F083         	movff	utoa@n,___lomod@dividend
  1778   000E24  C0B6  F084         	movff	utoa@n+1,___lomod@dividend+1
  1779   000E28  C0B7  F085         	movff	utoa@n+2,___lomod@dividend+2
  1780   000E2C  C0B8  F086         	movff	utoa@n+3,___lomod@dividend+3
  1781   000E30  C0B9  F087         	movff	utoa@n+4,___lomod@dividend+4
  1782   000E34  C0BA  F088         	movff	utoa@n+5,___lomod@dividend+5
  1783   000E38  C0BB  F089         	movff	utoa@n+6,___lomod@dividend+6
  1784   000E3C  C0BC  F08A         	movff	utoa@n+7,___lomod@dividend+7
  1785   000E40  0E0A               	movlw	10
  1786   000E42  6F8B               	movwf	___lomod@divisor& (0+255),b
  1787   000E44  0E00               	movlw	0
  1788   000E46  6F8C               	movwf	(___lomod@divisor+1)& (0+255),b
  1789   000E48  0E00               	movlw	0
  1790   000E4A  6F8D               	movwf	(___lomod@divisor+2)& (0+255),b
  1791   000E4C  0E00               	movlw	0
  1792   000E4E  6F8E               	movwf	(___lomod@divisor+3)& (0+255),b
  1793   000E50  0E00               	movlw	0
  1794   000E52  6F8F               	movwf	(___lomod@divisor+4)& (0+255),b
  1795   000E54  0E00               	movlw	0
  1796   000E56  6F90               	movwf	(___lomod@divisor+5)& (0+255),b
  1797   000E58  0E00               	movlw	0
  1798   000E5A  6F91               	movwf	(___lomod@divisor+6)& (0+255),b
  1799   000E5C  0E00               	movlw	0
  1800   000E5E  6F92               	movwf	(___lomod@divisor+7)& (0+255),b
  1801   000E60  EC04  F00B         	call	___lomod	;wreg free
  1802   000E64  C083  F0A9         	movff	?___lomod,??_utoa
  1803   000E68  C084  F0AA         	movff	?___lomod+1,??_utoa+1
  1804   000E6C  C085  F0AB         	movff	?___lomod+2,??_utoa+2
  1805   000E70  C086  F0AC         	movff	?___lomod+3,??_utoa+3
  1806   000E74  C087  F0AD         	movff	?___lomod+4,??_utoa+4
  1807   000E78  C088  F0AE         	movff	?___lomod+5,??_utoa+5
  1808   000E7C  C089  F0AF         	movff	?___lomod+6,??_utoa+6
  1809   000E80  C08A  F0B0         	movff	?___lomod+7,??_utoa+7
  1810   000E84  0100               	movlb	0	; () banked
  1811   000E86  51A9               	movf	??_utoa& (0+255),w,b
  1812   000E88  0F30               	addlw	48
  1813   000E8A  6EDF               	movwf	indf2,c
  1814   000E8C                     
  1815                           ; BSR set to: 0
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  1817   000E8C  07B1               	decf	utoa@p& (0+255),f,b
  1818   000E8E  A0D8               	btfss	status,0,c
  1819   000E90  07B2               	decf	(utoa@p+1)& (0+255),f,b
  1820   000E92                     
  1821                           ; BSR set to: 0
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  1823   000E92  07B3               	decf	utoa@w& (0+255),f,b
  1824   000E94  A0D8               	btfss	status,0,c
  1825   000E96  07B4               	decf	(utoa@w+1)& (0+255),f,b
  1826   000E98                     
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  1829   000E98  C0B5  F083         	movff	utoa@n,___lodiv@dividend
  1830   000E9C  C0B6  F084         	movff	utoa@n+1,___lodiv@dividend+1
  1831   000EA0  C0B7  F085         	movff	utoa@n+2,___lodiv@dividend+2
  1832   000EA4  C0B8  F086         	movff	utoa@n+3,___lodiv@dividend+3
  1833   000EA8  C0B9  F087         	movff	utoa@n+4,___lodiv@dividend+4
  1834   000EAC  C0BA  F088         	movff	utoa@n+5,___lodiv@dividend+5
  1835   000EB0  C0BB  F089         	movff	utoa@n+6,___lodiv@dividend+6
  1836   000EB4  C0BC  F08A         	movff	utoa@n+7,___lodiv@dividend+7
  1837   000EB8  0E0A               	movlw	10
  1838   000EBA  6F8B               	movwf	___lodiv@divisor& (0+255),b
  1839   000EBC  0E00               	movlw	0
  1840   000EBE  6F8C               	movwf	(___lodiv@divisor+1)& (0+255),b
  1841   000EC0  0E00               	movlw	0
  1842   000EC2  6F8D               	movwf	(___lodiv@divisor+2)& (0+255),b
  1843   000EC4  0E00               	movlw	0
  1844   000EC6  6F8E               	movwf	(___lodiv@divisor+3)& (0+255),b
  1845   000EC8  0E00               	movlw	0
  1846   000ECA  6F8F               	movwf	(___lodiv@divisor+4)& (0+255),b
  1847   000ECC  0E00               	movlw	0
  1848   000ECE  6F90               	movwf	(___lodiv@divisor+5)& (0+255),b
  1849   000ED0  0E00               	movlw	0
  1850   000ED2  6F91               	movwf	(___lodiv@divisor+6)& (0+255),b
  1851   000ED4  0E00               	movlw	0
  1852   000ED6  6F92               	movwf	(___lodiv@divisor+7)& (0+255),b
  1853   000ED8  EC13  F00A         	call	___lodiv	;wreg free
  1854   000EDC  C083  F0B5         	movff	?___lodiv,utoa@n
  1855   000EE0  C084  F0B6         	movff	?___lodiv+1,utoa@n+1
  1856   000EE4  C085  F0B7         	movff	?___lodiv+2,utoa@n+2
  1857   000EE8  C086  F0B8         	movff	?___lodiv+3,utoa@n+3
  1858   000EEC  C087  F0B9         	movff	?___lodiv+4,utoa@n+4
  1859   000EF0  C088  F0BA         	movff	?___lodiv+5,utoa@n+5
  1860   000EF4  C089  F0BB         	movff	?___lodiv+6,utoa@n+6
  1861   000EF8  C08A  F0BC         	movff	?___lodiv+7,utoa@n+7
  1862   000EFC                     l3802:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1865   000EFC  0100               	movlb	0	; () banked
  1866   000EFE  51BD               	movf	utoa@i& (0+255),w,b
  1867   000F00  11BE               	iorwf	(utoa@i+1)& (0+255),w,b
  1868   000F02  B4D8               	btfsc	status,2,c
  1869   000F04  EF86  F007         	goto	u2961
  1870   000F08  EF88  F007         	goto	u2960
  1871   000F0C                     u2961:
  1872   000F0C  EFB8  F007         	goto	l3812
  1873   000F10                     u2960:
  1874   000F10                     
  1875                           ; BSR set to: 0
  1876   000F10  51B5               	movf	utoa@n& (0+255),w,b
  1877   000F12  11B6               	iorwf	(utoa@n+1)& (0+255),w,b
  1878   000F14  11B7               	iorwf	(utoa@n+2)& (0+255),w,b
  1879   000F16  11B8               	iorwf	(utoa@n+3)& (0+255),w,b
  1880   000F18  11B9               	iorwf	(utoa@n+4)& (0+255),w,b
  1881   000F1A  11BA               	iorwf	(utoa@n+5)& (0+255),w,b
  1882   000F1C  11BB               	iorwf	(utoa@n+6)& (0+255),w,b
  1883   000F1E  11BC               	iorwf	(utoa@n+7)& (0+255),w,b
  1884   000F20  A4D8               	btfss	status,2,c
  1885   000F22  EF95  F007         	goto	u2971
  1886   000F26  EF97  F007         	goto	u2970
  1887   000F2A                     u2971:
  1888   000F2A  EF07  F007         	goto	l3792
  1889   000F2E                     u2970:
  1890   000F2E                     
  1891                           ; BSR set to: 0
  1892   000F2E  BFB2               	btfsc	(utoa@p+1)& (0+255),7,b
  1893   000F30  EFA4  F007         	goto	u2980
  1894   000F34  51B2               	movf	(utoa@p+1)& (0+255),w,b
  1895   000F36  E106               	bnz	u2981
  1896   000F38  05B1               	decf	utoa@p& (0+255),w,b
  1897   000F3A  B0D8               	btfsc	status,0,c
  1898   000F3C  EFA2  F007         	goto	u2981
  1899   000F40  EFA4  F007         	goto	u2980
  1900   000F44                     u2981:
  1901   000F44  EF07  F007         	goto	l3792
  1902   000F48                     u2980:
  1903   000F48                     
  1904                           ; BSR set to: 0
  1905   000F48  BFB4               	btfsc	(utoa@w+1)& (0+255),7,b
  1906   000F4A  EFAF  F007         	goto	u2991
  1907   000F4E  51B4               	movf	(utoa@w+1)& (0+255),w,b
  1908   000F50  E108               	bnz	u2990
  1909   000F52  05B3               	decf	utoa@w& (0+255),w,b
  1910   000F54  A0D8               	btfss	status,0,c
  1911   000F56  EFAF  F007         	goto	u2991
  1912   000F5A  EFB1  F007         	goto	u2990
  1913   000F5E                     u2991:
  1914   000F5E  EFB8  F007         	goto	l3812
  1915   000F62                     u2990:
  1916   000F62                     
  1917                           ; BSR set to: 0
  1918   000F62  B3D9               	btfsc	_flags& (0+255),1,b
  1919   000F64  EFB6  F007         	goto	u3001
  1920   000F68  EFB8  F007         	goto	u3000
  1921   000F6C                     u3001:
  1922   000F6C  EF07  F007         	goto	l3792
  1923   000F70                     u3000:
  1924   000F70                     l3812:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1928   000F70  C09F  F094         	movff	utoa@fp,pad@fp
  1929   000F74  C0A0  F095         	movff	utoa@fp+1,pad@fp+1
  1930   000F78  0E00               	movlw	low _dbuf
  1931   000F7A  25BD               	addwf	utoa@i& (0+255),w,b
  1932   000F7C  6F96               	movwf	pad@buf& (0+255),b
  1933   000F7E  0E01               	movlw	high _dbuf
  1934   000F80  21BE               	addwfc	(utoa@i+1)& (0+255),w,b
  1935   000F82  6F97               	movwf	(pad@buf+1)& (0+255),b
  1936   000F84  C0B3  F098         	movff	utoa@w,pad@p
  1937   000F88  C0B4  F099         	movff	utoa@w+1,pad@p+1
  1938   000F8C  EC01  F00D         	call	_pad	;wreg free
  1939   000F90  0012               	return		;funcret
  1940   000F92                     __end_of_utoa:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _pad *****************
  1944 ;; Defined at:
  1945 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  fp              2   52[BANK0 ] PTR struct _IO_FILE
  1948 ;;		 -> sprintf@f(11), 
  1949 ;;  buf             2   54[BANK0 ] PTR unsigned char 
  1950 ;;		 -> dbuf(32), 
  1951 ;;  p               2   56[BANK0 ] int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  w               2   61[BANK0 ] int 
  1954 ;;  i               2   59[BANK0 ] int 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1964 ;;      Params:         0       6       0       0       0       0       0       0       0
  1965 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1966 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1967 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1968 ;;Total ram usage:       11 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 12
  1971 ;; This function calls:
  1972 ;;		_fputc
  1973 ;;		_fputs
  1974 ;; This function is called by:
  1975 ;;		_utoa
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text5
  1980   001A02                     __ptext5:
  1981                           	callstack 0
  1982   001A02                     _pad:
  1983                           	callstack 14
  1984   001A02                     
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  1986   001A02  0100               	movlb	0	; () banked
  1987   001A04  A1D9               	btfss	_flags& (0+255),0,b
  1988   001A06  EF07  F00D         	goto	u2691
  1989   001A0A  EF09  F00D         	goto	u2690
  1990   001A0E                     u2691:
  1991   001A0E  EF13  F00D         	goto	l3652
  1992   001A12                     u2690:
  1993   001A12                     
  1994                           ; BSR set to: 0
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  1996   001A12  C096  F08D         	movff	pad@buf,fputs@s
  1997   001A16  C097  F08E         	movff	pad@buf+1,fputs@s+1
  1998   001A1A  C094  F08F         	movff	pad@fp,fputs@fp
  1999   001A1E  C095  F090         	movff	pad@fp+1,fputs@fp+1
  2000   001A22  ECDB  F00F         	call	_fputs	;wreg free
  2001   001A26                     l3652:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2004   001A26  0100               	movlb	0	; () banked
  2005   001A28  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  2006   001A2A  EF19  F00D         	goto	u2701
  2007   001A2E  EF1B  F00D         	goto	u2700
  2008   001A32                     u2701:
  2009   001A32  EF21  F00D         	goto	l3656
  2010   001A36                     u2700:
  2011   001A36                     
  2012                           ; BSR set to: 0
  2013   001A36  C098  F09D         	movff	pad@p,pad@w
  2014   001A3A  C099  F09E         	movff	pad@p+1,pad@w+1
  2015   001A3E  EF25  F00D         	goto	l1150
  2016   001A42                     l3656:
  2017                           
  2018                           ; BSR set to: 0
  2019   001A42  0E00               	movlw	0
  2020   001A44  6F9E               	movwf	(pad@w+1)& (0+255),b
  2021   001A46  0E00               	movlw	0
  2022   001A48  6F9D               	movwf	pad@w& (0+255),b
  2023   001A4A                     l1150:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2027   001A4A  0E00               	movlw	0
  2028   001A4C  6F9C               	movwf	(pad@i+1)& (0+255),b
  2029   001A4E  0E00               	movlw	0
  2030   001A50  6F9B               	movwf	pad@i& (0+255),b
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2033   001A52  EF38  F00D         	goto	l3662
  2034   001A56                     l3658:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2038   001A56  0E00               	movlw	0
  2039   001A58  6F85               	movwf	(fputc@c+1)& (0+255),b
  2040   001A5A  0E20               	movlw	32
  2041   001A5C  6F84               	movwf	fputc@c& (0+255),b
  2042   001A5E  C094  F086         	movff	pad@fp,fputc@fp
  2043   001A62  C095  F087         	movff	pad@fp+1,fputc@fp+1
  2044   001A66  ECD5  F00B         	call	_fputc	;wreg free
  2045   001A6A                     
  2046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2047   001A6A  0100               	movlb	0	; () banked
  2048   001A6C  4B9B               	infsnz	pad@i& (0+255),f,b
  2049   001A6E  2B9C               	incf	(pad@i+1)& (0+255),f,b
  2050   001A70                     l3662:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2054   001A70  519D               	movf	pad@w& (0+255),w,b
  2055   001A72  5D9B               	subwf	pad@i& (0+255),w,b
  2056   001A74  519C               	movf	(pad@i+1)& (0+255),w,b
  2057   001A76  0A80               	xorlw	128
  2058   001A78  6F9A               	movwf	??_pad& (0+255),b
  2059   001A7A  519E               	movf	(pad@w+1)& (0+255),w,b
  2060   001A7C  0A80               	xorlw	128
  2061   001A7E  599A               	subwfb	??_pad& (0+255),w,b
  2062   001A80  A0D8               	btfss	status,0,c
  2063   001A82  EF45  F00D         	goto	u2711
  2064   001A86  EF47  F00D         	goto	u2710
  2065   001A8A                     u2711:
  2066   001A8A  EF2B  F00D         	goto	l3658
  2067   001A8E                     u2710:
  2068   001A8E                     
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2071   001A8E  B1D9               	btfsc	_flags& (0+255),0,b
  2072   001A90  EF4C  F00D         	goto	u2721
  2073   001A94  EF4E  F00D         	goto	u2720
  2074   001A98                     u2721:
  2075   001A98  EF58  F00D         	goto	l1155
  2076   001A9C                     u2720:
  2077   001A9C                     
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2080   001A9C  C096  F08D         	movff	pad@buf,fputs@s
  2081   001AA0  C097  F08E         	movff	pad@buf+1,fputs@s+1
  2082   001AA4  C094  F08F         	movff	pad@fp,fputs@fp
  2083   001AA8  C095  F090         	movff	pad@fp+1,fputs@fp+1
  2084   001AAC  ECDB  F00F         	call	_fputs	;wreg free
  2085   001AB0                     l1155:
  2086   001AB0  0012               	return		;funcret
  2087   001AB2                     __end_of_pad:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _fputs *****************
  2091 ;; Defined at:
  2092 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  s               2   45[BANK0 ] PTR const unsigned char 
  2095 ;;		 -> dbuf(32), 
  2096 ;;  fp              2   47[BANK0 ] PTR struct _IO_FILE
  2097 ;;		 -> sprintf@f(11), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  i               2   50[BANK0 ] int 
  2100 ;;  c               1   49[BANK0 ] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2   45[BANK0 ] int 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2110 ;;      Params:         0       4       0       0       0       0       0       0       0
  2111 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2113 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2114 ;;Total ram usage:        7 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 11
  2117 ;; This function calls:
  2118 ;;		_fputc
  2119 ;; This function is called by:
  2120 ;;		_pad
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text6
  2125   001FB6                     __ptext6:
  2126                           	callstack 0
  2127   001FB6                     _fputs:
  2128                           	callstack 14
  2129   001FB6  0E00               	movlw	0
  2130   001FB8  0100               	movlb	0	; () banked
  2131   001FBA  6F93               	movwf	(fputs@i+1)& (0+255),b
  2132   001FBC  0E00               	movlw	0
  2133   001FBE  6F92               	movwf	fputs@i& (0+255),b
  2134   001FC0  EFEE  F00F         	goto	l3594
  2135   001FC4                     l3590:
  2136                           
  2137                           ; BSR set to: 0
  2138   001FC4  C091  F084         	movff	fputs@c,fputc@c
  2139   001FC8  6B85               	clrf	(fputc@c+1)& (0+255),b
  2140   001FCA  C08F  F086         	movff	fputs@fp,fputc@fp
  2141   001FCE  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  2142   001FD2  ECD5  F00B         	call	_fputc	;wreg free
  2143   001FD6  0100               	movlb	0	; () banked
  2144   001FD8  4B92               	infsnz	fputs@i& (0+255),f,b
  2145   001FDA  2B93               	incf	(fputs@i+1)& (0+255),f,b
  2146   001FDC                     l3594:
  2147                           
  2148                           ; BSR set to: 0
  2149   001FDC  5192               	movf	fputs@i& (0+255),w,b
  2150   001FDE  258D               	addwf	fputs@s& (0+255),w,b
  2151   001FE0  6ED9               	movwf	fsr2l,c
  2152   001FE2  5193               	movf	(fputs@i+1)& (0+255),w,b
  2153   001FE4  218E               	addwfc	(fputs@s+1)& (0+255),w,b
  2154   001FE6  6EDA               	movwf	fsr2h,c
  2155   001FE8  50DF               	movf	indf2,w,c
  2156   001FEA  6F91               	movwf	fputs@c& (0+255),b
  2157   001FEC  5191               	movf	fputs@c& (0+255),w,b
  2158   001FEE  A4D8               	btfss	status,2,c
  2159   001FF0  EFFC  F00F         	goto	u2601
  2160   001FF4  EFFE  F00F         	goto	u2600
  2161   001FF8                     u2601:
  2162   001FF8  EFE2  F00F         	goto	l3590
  2163   001FFC                     u2600:
  2164   001FFC                     
  2165                           ; BSR set to: 0
  2166   001FFC  0012               	return		;funcret
  2167   001FFE                     __end_of_fputs:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _fputc *****************
  2171 ;; Defined at:
  2172 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  c               2   36[BANK0 ] int 
  2175 ;;  fp              2   38[BANK0 ] PTR struct _IO_FILE
  2176 ;;		 -> sprintf@f(11), 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2   36[BANK0 ] int 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2188 ;;      Params:         0       4       0       0       0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2190 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2191 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2192 ;;Total ram usage:        9 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 10
  2195 ;; This function calls:
  2196 ;;		_putch
  2197 ;; This function is called by:
  2198 ;;		_pad
  2199 ;;		_vfpfcnvrt
  2200 ;;		_fputs
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text7
  2205   0017AA                     __ptext7:
  2206                           	callstack 0
  2207   0017AA                     _fputc:
  2208                           	callstack 14
  2209   0017AA  0100               	movlb	0	; () banked
  2210   0017AC  5186               	movf	fputc@fp& (0+255),w,b
  2211   0017AE  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  2212   0017B0  B4D8               	btfsc	status,2,c
  2213   0017B2  EFDD  F00B         	goto	u2521
  2214   0017B6  EFDF  F00B         	goto	u2520
  2215   0017BA                     u2521:
  2216   0017BA  EFE8  F00B         	goto	l3564
  2217   0017BE                     u2520:
  2218   0017BE                     
  2219                           ; BSR set to: 0
  2220   0017BE  5186               	movf	fputc@fp& (0+255),w,b
  2221   0017C0  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  2222   0017C2  A4D8               	btfss	status,2,c
  2223   0017C4  EFE6  F00B         	goto	u2531
  2224   0017C8  EFE8  F00B         	goto	u2530
  2225   0017CC                     u2531:
  2226   0017CC  EFED  F00B         	goto	l3566
  2227   0017D0                     u2530:
  2228   0017D0                     l3564:
  2229                           
  2230                           ; BSR set to: 0
  2231   0017D0  5184               	movf	fputc@c& (0+255),w,b
  2232   0017D2  EC2F  F011         	call	_putch
  2233   0017D6  EF3A  F00C         	goto	l1252
  2234   0017DA                     l3566:
  2235                           
  2236                           ; BSR set to: 0
  2237   0017DA  EE20 F009          	lfsr	2,9
  2238   0017DE  5186               	movf	fputc@fp& (0+255),w,b
  2239   0017E0  26D9               	addwf	fsr2l,f,c
  2240   0017E2  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2241   0017E4  22DA               	addwfc	fsr2h,f,c
  2242   0017E6  50DE               	movf	postinc2,w,c
  2243   0017E8  10DE               	iorwf	postinc2,w,c
  2244   0017EA  B4D8               	btfsc	status,2,c
  2245   0017EC  EFFA  F00B         	goto	u2541
  2246   0017F0  EFFC  F00B         	goto	u2540
  2247   0017F4                     u2541:
  2248   0017F4  EF17  F00C         	goto	l3570
  2249   0017F8                     u2540:
  2250   0017F8                     
  2251                           ; BSR set to: 0
  2252   0017F8  EE20 F009          	lfsr	2,9
  2253   0017FC  5186               	movf	fputc@fp& (0+255),w,b
  2254   0017FE  26D9               	addwf	fsr2l,f,c
  2255   001800  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2256   001802  22DA               	addwfc	fsr2h,f,c
  2257   001804  EE10 F003          	lfsr	1,3
  2258   001808  5186               	movf	fputc@fp& (0+255),w,b
  2259   00180A  26E1               	addwf	fsr1l,f,c
  2260   00180C  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2261   00180E  22E2               	addwfc	fsr1h,f,c
  2262   001810  50DE               	movf	postinc2,w,c
  2263   001812  5CE6               	subwf	postinc1,w,c
  2264   001814  50E6               	movf	postinc1,w,c
  2265   001816  0A80               	xorlw	128
  2266   001818  6F8C               	movwf	(??_fputc+4)& (0+255),b
  2267   00181A  50DE               	movf	postinc2,w,c
  2268   00181C  0A80               	xorlw	128
  2269   00181E  598C               	subwfb	(??_fputc+4)& (0+255),w,b
  2270   001820  B0D8               	btfsc	status,0,c
  2271   001822  EF15  F00C         	goto	u2551
  2272   001826  EF17  F00C         	goto	u2550
  2273   00182A                     u2551:
  2274   00182A  EF3A  F00C         	goto	l1252
  2275   00182E                     u2550:
  2276   00182E                     l3570:
  2277                           
  2278                           ; BSR set to: 0
  2279   00182E  EE20 F003          	lfsr	2,3
  2280   001832  5186               	movf	fputc@fp& (0+255),w,b
  2281   001834  26D9               	addwf	fsr2l,f,c
  2282   001836  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2283   001838  22DA               	addwfc	fsr2h,f,c
  2284   00183A  CFDE F088          	movff	postinc2,??_fputc
  2285   00183E  CFDD F089          	movff	postdec2,??_fputc+1
  2286   001842  C086  FFD9         	movff	fputc@fp,fsr2l
  2287   001846  C087  FFDA         	movff	fputc@fp+1,fsr2h
  2288   00184A  CFDE F08A          	movff	postinc2,??_fputc+2
  2289   00184E  CFDD F08B          	movff	postdec2,??_fputc+3
  2290   001852  5188               	movf	??_fputc& (0+255),w,b
  2291   001854  258A               	addwf	(??_fputc+2)& (0+255),w,b
  2292   001856  6ED9               	movwf	fsr2l,c
  2293   001858  5189               	movf	(??_fputc+1)& (0+255),w,b
  2294   00185A  218B               	addwfc	(??_fputc+3)& (0+255),w,b
  2295   00185C  6EDA               	movwf	fsr2h,c
  2296   00185E  C084  FFDF         	movff	fputc@c,indf2
  2297   001862  EE20 F003          	lfsr	2,3
  2298   001866  5186               	movf	fputc@fp& (0+255),w,b
  2299   001868  26D9               	addwf	fsr2l,f,c
  2300   00186A  5187               	movf	(fputc@fp+1)& (0+255),w,b
  2301   00186C  22DA               	addwfc	fsr2h,f,c
  2302   00186E  2ADE               	incf	postinc2,f,c
  2303   001870  0E00               	movlw	0
  2304   001872  22DD               	addwfc	postdec2,f,c
  2305   001874                     l1252:
  2306   001874  0012               	return		;funcret
  2307   001876                     __end_of_fputc:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _putch *****************
  2311 ;; Defined at:
  2312 ;;		line 93 in file "lib_pic/usart.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  c               1    wreg     unsigned char 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  c               1   35[BANK0 ] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2326 ;;      Params:         0       0       0       0       0       0       0       0       0
  2327 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2329 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2330 ;;Total ram usage:        1 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 9
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_fputc
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text8
  2341   00225E                     __ptext8:
  2342                           	callstack 0
  2343   00225E                     _putch:
  2344                           	callstack 14
  2345                           
  2346                           ;incstack = 0
  2347                           ;putch@c stored from wreg
  2348   00225E  0100               	movlb	0	; () banked
  2349   002260  6F83               	movwf	putch@c& (0+255),b
  2350   002262                     l441:
  2351   002262  A2AC               	btfss	172,1,c	;volatile
  2352   002264  EF36  F011         	goto	u2501
  2353   002268  EF38  F011         	goto	u2500
  2354   00226C                     u2501:
  2355   00226C  EF31  F011         	goto	l441
  2356   002270                     u2500:
  2357   002270                     
  2358                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  2359   002270  C083  FFAD         	movff	putch@c,4013	;volatile
  2360   002274  0012               	return		;funcret
  2361   002276                     __end_of_putch:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function ___lomod *****************
  2365 ;; Defined at:
  2366 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  dividend        8   35[BANK0 ] unsigned long long 
  2369 ;;  divisor         8   43[BANK0 ] unsigned long long 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  counter         1   51[BANK0 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  8   35[BANK0 ] unsigned long long 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2381 ;;      Params:         0      16       0       0       0       0       0       0       0
  2382 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2384 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2385 ;;Total ram usage:       17 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 9
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_utoa
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text9
  2396   001608                     __ptext9:
  2397                           	callstack 0
  2398   001608                     ___lomod:
  2399                           	callstack 17
  2400   001608  0100               	movlb	0	; () banked
  2401   00160A  518B               	movf	___lomod@divisor& (0+255),w,b
  2402   00160C  118C               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  2403   00160E  118D               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  2404   001610  118E               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  2405   001612  118F               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  2406   001614  1190               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  2407   001616  1191               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  2408   001618  1192               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  2409   00161A  B4D8               	btfsc	status,2,c
  2410   00161C  EF12  F00B         	goto	u2661
  2411   001620  EF14  F00B         	goto	u2660
  2412   001624                     u2661:
  2413   001624  EF5C  F00B         	goto	l895
  2414   001628                     u2660:
  2415   001628                     
  2416                           ; BSR set to: 0
  2417   001628  0E01               	movlw	1
  2418   00162A  6F93               	movwf	___lomod@counter& (0+255),b
  2419   00162C  EF22  F00B         	goto	l3638
  2420   001630                     l3636:
  2421                           
  2422                           ; BSR set to: 0
  2423   001630  90D8               	bcf	status,0,c
  2424   001632  378B               	rlcf	___lomod@divisor& (0+255),f,b
  2425   001634  378C               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  2426   001636  378D               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  2427   001638  378E               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  2428   00163A  378F               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  2429   00163C  3790               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  2430   00163E  3791               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  2431   001640  3792               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  2432   001642  2B93               	incf	___lomod@counter& (0+255),f,b
  2433   001644                     l3638:
  2434                           
  2435                           ; BSR set to: 0
  2436   001644  AF92               	btfss	(___lomod@divisor+7)& (0+255),7,b
  2437   001646  EF27  F00B         	goto	u2671
  2438   00164A  EF29  F00B         	goto	u2670
  2439   00164E                     u2671:
  2440   00164E  EF18  F00B         	goto	l3636
  2441   001652                     u2670:
  2442   001652                     l3640:
  2443                           
  2444                           ; BSR set to: 0
  2445   001652  518B               	movf	___lomod@divisor& (0+255),w,b
  2446   001654  5D83               	subwf	___lomod@dividend& (0+255),w,b
  2447   001656  518C               	movf	(___lomod@divisor+1)& (0+255),w,b
  2448   001658  5984               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  2449   00165A  518D               	movf	(___lomod@divisor+2)& (0+255),w,b
  2450   00165C  5985               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  2451   00165E  518E               	movf	(___lomod@divisor+3)& (0+255),w,b
  2452   001660  5986               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  2453   001662  518F               	movf	(___lomod@divisor+4)& (0+255),w,b
  2454   001664  5987               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  2455   001666  5190               	movf	(___lomod@divisor+5)& (0+255),w,b
  2456   001668  5988               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  2457   00166A  5191               	movf	(___lomod@divisor+6)& (0+255),w,b
  2458   00166C  5989               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  2459   00166E  5192               	movf	(___lomod@divisor+7)& (0+255),w,b
  2460   001670  598A               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  2461   001672  A0D8               	btfss	status,0,c
  2462   001674  EF3E  F00B         	goto	u2681
  2463   001678  EF40  F00B         	goto	u2680
  2464   00167C                     u2681:
  2465   00167C  EF50  F00B         	goto	l3644
  2466   001680                     u2680:
  2467   001680                     
  2468                           ; BSR set to: 0
  2469   001680  518B               	movf	___lomod@divisor& (0+255),w,b
  2470   001682  5F83               	subwf	___lomod@dividend& (0+255),f,b
  2471   001684  518C               	movf	(___lomod@divisor+1)& (0+255),w,b
  2472   001686  5B84               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  2473   001688  518D               	movf	(___lomod@divisor+2)& (0+255),w,b
  2474   00168A  5B85               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  2475   00168C  518E               	movf	(___lomod@divisor+3)& (0+255),w,b
  2476   00168E  5B86               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  2477   001690  518F               	movf	(___lomod@divisor+4)& (0+255),w,b
  2478   001692  5B87               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  2479   001694  5190               	movf	(___lomod@divisor+5)& (0+255),w,b
  2480   001696  5B88               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  2481   001698  5191               	movf	(___lomod@divisor+6)& (0+255),w,b
  2482   00169A  5B89               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  2483   00169C  5192               	movf	(___lomod@divisor+7)& (0+255),w,b
  2484   00169E  5B8A               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  2485   0016A0                     l3644:
  2486                           
  2487                           ; BSR set to: 0
  2488   0016A0  90D8               	bcf	status,0,c
  2489   0016A2  3392               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  2490   0016A4  3391               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  2491   0016A6  3390               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  2492   0016A8  338F               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  2493   0016AA  338E               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  2494   0016AC  338D               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  2495   0016AE  338C               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  2496   0016B0  338B               	rrcf	___lomod@divisor& (0+255),f,b
  2497   0016B2                     
  2498                           ; BSR set to: 0
  2499   0016B2  2F93               	decfsz	___lomod@counter& (0+255),f,b
  2500   0016B4  EF29  F00B         	goto	l3640
  2501   0016B8                     l895:
  2502                           
  2503                           ; BSR set to: 0
  2504   0016B8  C083  F083         	movff	___lomod@dividend,?___lomod
  2505   0016BC  C084  F084         	movff	___lomod@dividend+1,?___lomod+1
  2506   0016C0  C085  F085         	movff	___lomod@dividend+2,?___lomod+2
  2507   0016C4  C086  F086         	movff	___lomod@dividend+3,?___lomod+3
  2508   0016C8  C087  F087         	movff	___lomod@dividend+4,?___lomod+4
  2509   0016CC  C088  F088         	movff	___lomod@dividend+5,?___lomod+5
  2510   0016D0  C089  F089         	movff	___lomod@dividend+6,?___lomod+6
  2511   0016D4  C08A  F08A         	movff	___lomod@dividend+7,?___lomod+7
  2512   0016D8                     
  2513                           ; BSR set to: 0
  2514   0016D8  0012               	return		;funcret
  2515   0016DA                     __end_of___lomod:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function ___lodiv *****************
  2519 ;; Defined at:
  2520 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  dividend        8   35[BANK0 ] unsigned long long 
  2523 ;;  divisor         8   43[BANK0 ] unsigned long long 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  quotient        8   51[BANK0 ] unsigned long long 
  2526 ;;  counter         1   59[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  8   35[BANK0 ] unsigned long long 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         0      16       0       0       0       0       0       0       0
  2537 ;;      Locals:         0       9       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         0      25       0       0       0       0       0       0       0
  2540 ;;Total ram usage:       25 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 9
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_utoa
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text10
  2551   001426                     __ptext10:
  2552                           	callstack 0
  2553   001426                     ___lodiv:
  2554                           	callstack 17
  2555   001426  EE20  F093         	lfsr	2,___lodiv@quotient
  2556   00142A  0E07               	movlw	7
  2557   00142C                     u2621:
  2558   00142C  6ADE               	clrf	postinc2,c
  2559   00142E  06E8               	decf	wreg,f,c
  2560   001430  E2FD               	bc	u2621
  2561   001432  0100               	movlb	0	; () banked
  2562   001434  518B               	movf	___lodiv@divisor& (0+255),w,b
  2563   001436  118C               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  2564   001438  118D               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  2565   00143A  118E               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  2566   00143C  118F               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  2567   00143E  1190               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  2568   001440  1191               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  2569   001442  1192               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  2570   001444  B4D8               	btfsc	status,2,c
  2571   001446  EF27  F00A         	goto	u2631
  2572   00144A  EF29  F00A         	goto	u2630
  2573   00144E                     u2631:
  2574   00144E  EF7B  F00A         	goto	l885
  2575   001452                     u2630:
  2576   001452                     
  2577                           ; BSR set to: 0
  2578   001452  0E01               	movlw	1
  2579   001454  6F9B               	movwf	___lodiv@counter& (0+255),b
  2580   001456  EF37  F00A         	goto	l3618
  2581   00145A                     l3616:
  2582                           
  2583                           ; BSR set to: 0
  2584   00145A  90D8               	bcf	status,0,c
  2585   00145C  378B               	rlcf	___lodiv@divisor& (0+255),f,b
  2586   00145E  378C               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  2587   001460  378D               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  2588   001462  378E               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  2589   001464  378F               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  2590   001466  3790               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  2591   001468  3791               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  2592   00146A  3792               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  2593   00146C  2B9B               	incf	___lodiv@counter& (0+255),f,b
  2594   00146E                     l3618:
  2595                           
  2596                           ; BSR set to: 0
  2597   00146E  AF92               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  2598   001470  EF3C  F00A         	goto	u2641
  2599   001474  EF3E  F00A         	goto	u2640
  2600   001478                     u2641:
  2601   001478  EF2D  F00A         	goto	l3616
  2602   00147C                     u2640:
  2603   00147C                     l3620:
  2604                           
  2605                           ; BSR set to: 0
  2606   00147C  90D8               	bcf	status,0,c
  2607   00147E  3793               	rlcf	___lodiv@quotient& (0+255),f,b
  2608   001480  3794               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  2609   001482  3795               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  2610   001484  3796               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  2611   001486  3797               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  2612   001488  3798               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  2613   00148A  3799               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  2614   00148C  379A               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  2615   00148E                     
  2616                           ; BSR set to: 0
  2617   00148E  518B               	movf	___lodiv@divisor& (0+255),w,b
  2618   001490  5D83               	subwf	___lodiv@dividend& (0+255),w,b
  2619   001492  518C               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2620   001494  5984               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  2621   001496  518D               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2622   001498  5985               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  2623   00149A  518E               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2624   00149C  5986               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  2625   00149E  518F               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2626   0014A0  5987               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  2627   0014A2  5190               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2628   0014A4  5988               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  2629   0014A6  5191               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2630   0014A8  5989               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  2631   0014AA  5192               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2632   0014AC  598A               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  2633   0014AE  A0D8               	btfss	status,0,c
  2634   0014B0  EF5C  F00A         	goto	u2651
  2635   0014B4  EF5E  F00A         	goto	u2650
  2636   0014B8                     u2651:
  2637   0014B8  EF6F  F00A         	goto	l3628
  2638   0014BC                     u2650:
  2639   0014BC                     
  2640                           ; BSR set to: 0
  2641   0014BC  518B               	movf	___lodiv@divisor& (0+255),w,b
  2642   0014BE  5F83               	subwf	___lodiv@dividend& (0+255),f,b
  2643   0014C0  518C               	movf	(___lodiv@divisor+1)& (0+255),w,b
  2644   0014C2  5B84               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  2645   0014C4  518D               	movf	(___lodiv@divisor+2)& (0+255),w,b
  2646   0014C6  5B85               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  2647   0014C8  518E               	movf	(___lodiv@divisor+3)& (0+255),w,b
  2648   0014CA  5B86               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  2649   0014CC  518F               	movf	(___lodiv@divisor+4)& (0+255),w,b
  2650   0014CE  5B87               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  2651   0014D0  5190               	movf	(___lodiv@divisor+5)& (0+255),w,b
  2652   0014D2  5B88               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  2653   0014D4  5191               	movf	(___lodiv@divisor+6)& (0+255),w,b
  2654   0014D6  5B89               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  2655   0014D8  5192               	movf	(___lodiv@divisor+7)& (0+255),w,b
  2656   0014DA  5B8A               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  2657   0014DC                     
  2658                           ; BSR set to: 0
  2659   0014DC  8193               	bsf	___lodiv@quotient& (0+255),0,b
  2660   0014DE                     l3628:
  2661                           
  2662                           ; BSR set to: 0
  2663   0014DE  90D8               	bcf	status,0,c
  2664   0014E0  3392               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  2665   0014E2  3391               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  2666   0014E4  3390               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  2667   0014E6  338F               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  2668   0014E8  338E               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  2669   0014EA  338D               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  2670   0014EC  338C               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  2671   0014EE  338B               	rrcf	___lodiv@divisor& (0+255),f,b
  2672   0014F0                     
  2673                           ; BSR set to: 0
  2674   0014F0  2F9B               	decfsz	___lodiv@counter& (0+255),f,b
  2675   0014F2  EF3E  F00A         	goto	l3620
  2676   0014F6                     l885:
  2677                           
  2678                           ; BSR set to: 0
  2679   0014F6  C093  F083         	movff	___lodiv@quotient,?___lodiv
  2680   0014FA  C094  F084         	movff	___lodiv@quotient+1,?___lodiv+1
  2681   0014FE  C095  F085         	movff	___lodiv@quotient+2,?___lodiv+2
  2682   001502  C096  F086         	movff	___lodiv@quotient+3,?___lodiv+3
  2683   001506  C097  F087         	movff	___lodiv@quotient+4,?___lodiv+4
  2684   00150A  C098  F088         	movff	___lodiv@quotient+5,?___lodiv+5
  2685   00150E  C099  F089         	movff	___lodiv@quotient+6,?___lodiv+6
  2686   001512  C09A  F08A         	movff	___lodiv@quotient+7,?___lodiv+7
  2687   001516                     
  2688                           ; BSR set to: 0
  2689   001516  0012               	return		;funcret
  2690   001518                     __end_of___lodiv:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _atoi *****************
  2694 ;; Defined at:
  2695 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  s               2   41[BANK0 ] PTR const unsigned char 
  2698 ;;		 -> STR_4(23), STR_1(23), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  n               2   48[BANK0 ] int 
  2701 ;;  neg             2   46[BANK0 ] int 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2   41[BANK0 ] int 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       2       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        9 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 10
  2718 ;; This function calls:
  2719 ;;		___wmul
  2720 ;;		_isdigit
  2721 ;;		_isspace
  2722 ;; This function is called by:
  2723 ;;		_vfpfcnvrt
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text11
  2728   00118E                     __ptext11:
  2729                           	callstack 0
  2730   00118E                     _atoi:
  2731                           	callstack 17
  2732   00118E  0E00               	movlw	0
  2733   001190  0100               	movlb	0	; () banked
  2734   001192  6F91               	movwf	(atoi@n+1)& (0+255),b
  2735   001194  0E00               	movlw	0
  2736   001196  6F90               	movwf	atoi@n& (0+255),b
  2737   001198  0E00               	movlw	0
  2738   00119A  6F8F               	movwf	(atoi@neg+1)& (0+255),b
  2739   00119C  0E00               	movlw	0
  2740   00119E  6F8E               	movwf	atoi@neg& (0+255),b
  2741   0011A0  EFD4  F008         	goto	l3822
  2742   0011A4                     l3818:
  2743                           
  2744                           ; BSR set to: 0
  2745   0011A4  4B89               	infsnz	atoi@s& (0+255),f,b
  2746   0011A6  2B8A               	incf	(atoi@s+1)& (0+255),f,b
  2747   0011A8                     l3822:
  2748                           
  2749                           ; BSR set to: 0
  2750   0011A8  C089  FFF6         	movff	atoi@s,tblptrl
  2751   0011AC  C08A  FFF7         	movff	atoi@s+1,tblptrh
  2752   0011B0                     	if	0	;tblptru may be non-zero
  2753   0011B0                     	endif
  2754   0011B0                     	if	0	;tblptru may be non-zero
  2755   0011B0                     	endif
  2756   0011B0  0008               	tblrd		*
  2757   0011B2  50F5               	movf	tablat,w,c
  2758   0011B4  0A20               	xorlw	32
  2759   0011B6  B4D8               	btfsc	status,2,c
  2760   0011B8  EFE0  F008         	goto	u3011
  2761   0011BC  EFE2  F008         	goto	u3010
  2762   0011C0                     u3011:
  2763   0011C0  EFD2  F008         	goto	l3818
  2764   0011C4                     u3010:
  2765   0011C4                     
  2766                           ; BSR set to: 0
  2767   0011C4  C089  FFF6         	movff	atoi@s,tblptrl
  2768   0011C8  C08A  FFF7         	movff	atoi@s+1,tblptrh
  2769   0011CC                     	if	0	;tblptru may be non-zero
  2770   0011CC                     	endif
  2771   0011CC                     	if	0	;tblptru may be non-zero
  2772   0011CC                     	endif
  2773   0011CC  0008               	tblrd		*
  2774   0011CE  CFF5 F08B          	movff	tablat,??_atoi
  2775   0011D2  0EF7               	movlw	247
  2776   0011D4  258B               	addwf	??_atoi& (0+255),w,b
  2777   0011D6  6F8C               	movwf	(??_atoi+1)& (0+255),b
  2778   0011D8  6B8D               	clrf	(??_atoi+2)& (0+255),b
  2779   0011DA  0EFF               	movlw	255
  2780   0011DC  238D               	addwfc	(??_atoi+2)& (0+255),f,b
  2781   0011DE  518D               	movf	(??_atoi+2)& (0+255),w,b
  2782   0011E0  E109               	bnz	u3020
  2783   0011E2  0E05               	movlw	5
  2784   0011E4  5D8C               	subwf	(??_atoi+1)& (0+255),w,b
  2785   0011E6  A0D8               	btfss	status,0,c
  2786   0011E8  EFF8  F008         	goto	u3021
  2787   0011EC  EFFA  F008         	goto	u3020
  2788   0011F0                     u3021:
  2789   0011F0  EFD2  F008         	goto	l3818
  2790   0011F4                     u3020:
  2791   0011F4  EF04  F009         	goto	l3830
  2792   0011F8                     l3826:
  2793                           
  2794                           ; BSR set to: 0
  2795   0011F8  0E00               	movlw	0
  2796   0011FA  6F8F               	movwf	(atoi@neg+1)& (0+255),b
  2797   0011FC  0E01               	movlw	1
  2798   0011FE  6F8E               	movwf	atoi@neg& (0+255),b
  2799   001200                     l3828:
  2800                           
  2801                           ; BSR set to: 0
  2802   001200  4B89               	infsnz	atoi@s& (0+255),f,b
  2803   001202  2B8A               	incf	(atoi@s+1)& (0+255),f,b
  2804   001204  EF3A  F009         	goto	l3838
  2805   001208                     l3830:
  2806                           
  2807                           ; BSR set to: 0
  2808   001208  C089  FFF6         	movff	atoi@s,tblptrl
  2809   00120C  C08A  FFF7         	movff	atoi@s+1,tblptrh
  2810   001210                     	if	0	;tblptru may be non-zero
  2811   001210                     	endif
  2812   001210                     	if	0	;tblptru may be non-zero
  2813   001210                     	endif
  2814   001210  0008               	tblrd		*
  2815   001212  50F5               	movf	tablat,w,c
  2816   001214  6F8B               	movwf	??_atoi& (0+255),b
  2817   001216  6B8C               	clrf	(??_atoi+1)& (0+255),b
  2818                           
  2819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2820                           ; Switch size 1, requested type "simple"
  2821                           ; Number of cases is 1, Range of values is 0 to 0
  2822                           ; switch strategies available:
  2823                           ; Name         Instructions Cycles
  2824                           ; simple_byte            4     3 (average)
  2825                           ;	Chosen strategy is simple_byte
  2826   001218  518C               	movf	(??_atoi+1)& (0+255),w,b
  2827   00121A  0A00               	xorlw	0	; case 0
  2828   00121C  B4D8               	btfsc	status,2,c
  2829   00121E  EF13  F009         	goto	l4430
  2830   001222  EF3A  F009         	goto	l3838
  2831   001226                     l4430:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ; Switch size 1, requested type "simple"
  2835                           ; Number of cases is 2, Range of values is 43 to 45
  2836                           ; switch strategies available:
  2837                           ; Name         Instructions Cycles
  2838                           ; simple_byte            7     4 (average)
  2839                           ;	Chosen strategy is simple_byte
  2840   001226  518B               	movf	??_atoi& (0+255),w,b
  2841   001228  0A2B               	xorlw	43	; case 43
  2842   00122A  B4D8               	btfsc	status,2,c
  2843   00122C  EF00  F009         	goto	l3828
  2844   001230  0A06               	xorlw	6	; case 45
  2845   001232  B4D8               	btfsc	status,2,c
  2846   001234  EFFC  F008         	goto	l3826
  2847   001238  EF3A  F009         	goto	l3838
  2848   00123C                     l3832:
  2849                           
  2850                           ; BSR set to: 0
  2851   00123C  C090  F083         	movff	atoi@n,___wmul@multiplier
  2852   001240  C091  F084         	movff	atoi@n+1,___wmul@multiplier+1
  2853   001244  0E00               	movlw	0
  2854   001246  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2855   001248  0E0A               	movlw	10
  2856   00124A  6F85               	movwf	___wmul@multiplicand& (0+255),b
  2857   00124C  ECD6  F010         	call	___wmul	;wreg free
  2858   001250  C089  FFF6         	movff	atoi@s,tblptrl
  2859   001254  C08A  FFF7         	movff	atoi@s+1,tblptrh
  2860   001258                     	if	0	;tblptru may be non-zero
  2861   001258                     	endif
  2862   001258                     	if	0	;tblptru may be non-zero
  2863   001258                     	endif
  2864   001258  0008               	tblrd		*
  2865   00125A  50F5               	movf	tablat,w,c
  2866   00125C  0100               	movlb	0	; () banked
  2867   00125E  5F83               	subwf	?___wmul& (0+255),f,b
  2868   001260  0E00               	movlw	0
  2869   001262  5B84               	subwfb	(?___wmul+1)& (0+255),f,b
  2870   001264  0E30               	movlw	48
  2871   001266  2583               	addwf	?___wmul& (0+255),w,b
  2872   001268  6F90               	movwf	atoi@n& (0+255),b
  2873   00126A  0E00               	movlw	0
  2874   00126C  2184               	addwfc	(?___wmul+1)& (0+255),w,b
  2875   00126E  6F91               	movwf	(atoi@n+1)& (0+255),b
  2876   001270  EF00  F009         	goto	l3828
  2877   001274                     l3838:
  2878                           
  2879                           ; BSR set to: 0
  2880   001274  C089  FFF6         	movff	atoi@s,tblptrl
  2881   001278  C08A  FFF7         	movff	atoi@s+1,tblptrh
  2882   00127C                     	if	0	;tblptru may be non-zero
  2883   00127C                     	endif
  2884   00127C                     	if	0	;tblptru may be non-zero
  2885   00127C                     	endif
  2886   00127C  0008               	tblrd		*
  2887   00127E  CFF5 F08B          	movff	tablat,??_atoi
  2888   001282  0ED0               	movlw	208
  2889   001284  258B               	addwf	??_atoi& (0+255),w,b
  2890   001286  6F8C               	movwf	(??_atoi+1)& (0+255),b
  2891   001288  6B8D               	clrf	(??_atoi+2)& (0+255),b
  2892   00128A  0EFF               	movlw	255
  2893   00128C  238D               	addwfc	(??_atoi+2)& (0+255),f,b
  2894   00128E  518D               	movf	(??_atoi+2)& (0+255),w,b
  2895   001290  E109               	bnz	u3030
  2896   001292  0E0A               	movlw	10
  2897   001294  5D8C               	subwf	(??_atoi+1)& (0+255),w,b
  2898   001296  A0D8               	btfss	status,0,c
  2899   001298  EF50  F009         	goto	u3031
  2900   00129C  EF52  F009         	goto	u3030
  2901   0012A0                     u3031:
  2902   0012A0  EF1E  F009         	goto	l3832
  2903   0012A4                     u3030:
  2904   0012A4                     
  2905                           ; BSR set to: 0
  2906   0012A4  518E               	movf	atoi@neg& (0+255),w,b
  2907   0012A6  118F               	iorwf	(atoi@neg+1)& (0+255),w,b
  2908   0012A8  A4D8               	btfss	status,2,c
  2909   0012AA  EF59  F009         	goto	u3041
  2910   0012AE  EF5B  F009         	goto	u3040
  2911   0012B2                     u3041:
  2912   0012B2  EF69  F009         	goto	l1223
  2913   0012B6                     u3040:
  2914   0012B6                     
  2915                           ; BSR set to: 0
  2916   0012B6  C090  F08B         	movff	atoi@n,??_atoi
  2917   0012BA  C091  F08C         	movff	atoi@n+1,??_atoi+1
  2918   0012BE  1F8B               	comf	??_atoi& (0+255),f,b
  2919   0012C0  1F8C               	comf	(??_atoi+1)& (0+255),f,b
  2920   0012C2  4B8B               	infsnz	??_atoi& (0+255),f,b
  2921   0012C4  2B8C               	incf	(??_atoi+1)& (0+255),f,b
  2922   0012C6  C08B  F089         	movff	??_atoi,?_atoi
  2923   0012CA  C08C  F08A         	movff	??_atoi+1,?_atoi+1
  2924   0012CE  EF6D  F009         	goto	l1226
  2925   0012D2                     l1223:
  2926                           
  2927                           ; BSR set to: 0
  2928   0012D2  C090  F089         	movff	atoi@n,?_atoi
  2929   0012D6  C091  F08A         	movff	atoi@n+1,?_atoi+1
  2930   0012DA                     l1226:
  2931                           
  2932                           ; BSR set to: 0
  2933   0012DA  0012               	return		;funcret
  2934   0012DC                     __end_of_atoi:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function _isspace *****************
  2938 ;; Defined at:
  2939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  c               2   35[BANK0 ] int 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2   35[BANK0 ] int 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2953 ;;      Params:         0       2       0       0       0       0       0       0       0
  2954 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2955 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2956 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2957 ;;Total ram usage:        5 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 9
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_atoi
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text12
  2968   001FFE                     __ptext12:
  2969                           	callstack 0
  2970   001FFE                     _isspace:
  2971                           	callstack 17
  2972   001FFE  0E01               	movlw	1
  2973   002000  0100               	movlb	0	; () banked
  2974   002002  6F87               	movwf	_isspace$2101& (0+255),b
  2975   002004                     
  2976                           ; BSR set to: 0
  2977   002004  0E20               	movlw	32
  2978   002006  1983               	xorwf	isspace@c& (0+255),w,b
  2979   002008  1184               	iorwf	(isspace@c+1)& (0+255),w,b
  2980   00200A  B4D8               	btfsc	status,2,c
  2981   00200C  EF0A  F010         	goto	u2751
  2982   002010  EF0C  F010         	goto	u2750
  2983   002014                     u2751:
  2984   002014  EF1F  F010         	goto	l3678
  2985   002018                     u2750:
  2986   002018                     
  2987                           ; BSR set to: 0
  2988   002018  0EF7               	movlw	247
  2989   00201A  2583               	addwf	isspace@c& (0+255),w,b
  2990   00201C  6F85               	movwf	??_isspace& (0+255),b
  2991   00201E  0EFF               	movlw	255
  2992   002020  2184               	addwfc	(isspace@c+1)& (0+255),w,b
  2993   002022  6F86               	movwf	(??_isspace+1)& (0+255),b
  2994   002024  5186               	movf	(??_isspace+1)& (0+255),w,b
  2995   002026  E109               	bnz	u2760
  2996   002028  0E05               	movlw	5
  2997   00202A  5D85               	subwf	??_isspace& (0+255),w,b
  2998   00202C  A0D8               	btfss	status,0,c
  2999   00202E  EF1B  F010         	goto	u2761
  3000   002032  EF1D  F010         	goto	u2760
  3001   002036                     u2761:
  3002   002036  EF1F  F010         	goto	l3678
  3003   00203A                     u2760:
  3004   00203A                     
  3005                           ; BSR set to: 0
  3006   00203A  0E00               	movlw	0
  3007   00203C  6F87               	movwf	_isspace$2101& (0+255),b
  3008   00203E                     l3678:
  3009                           
  3010                           ; BSR set to: 0
  3011   00203E  C087  F083         	movff	_isspace$2101,?_isspace
  3012   002042  6B84               	clrf	(?_isspace+1)& (0+255),b
  3013   002044                     
  3014                           ; BSR set to: 0
  3015   002044  0012               	return		;funcret
  3016   002046                     __end_of_isspace:
  3017                           	callstack 0
  3018                           
  3019 ;; *************** function _isdigit *****************
  3020 ;; Defined at:
  3021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  c               2   35[BANK0 ] int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  2   35[BANK0 ] int 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3035 ;;      Params:         0       2       0       0       0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3037 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3038 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3039 ;;Total ram usage:        4 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 9
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_vfpfcnvrt
  3046 ;;		_atoi
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text13
  3051   00217E                     __ptext13:
  3052                           	callstack 0
  3053   00217E                     _isdigit:
  3054                           	callstack 18
  3055   00217E  0ED0               	movlw	208
  3056   002180  0100               	movlb	0	; () banked
  3057   002182  2583               	addwf	isdigit@c& (0+255),w,b
  3058   002184  6F85               	movwf	??_isdigit& (0+255),b
  3059   002186  0EFF               	movlw	255
  3060   002188  2184               	addwfc	(isdigit@c+1)& (0+255),w,b
  3061   00218A  6F86               	movwf	(??_isdigit+1)& (0+255),b
  3062   00218C  5186               	movf	(??_isdigit+1)& (0+255),w,b
  3063   00218E  E10A               	bnz	u2730
  3064   002190  0E0A               	movlw	10
  3065   002192  5D85               	subwf	??_isdigit& (0+255),w,b
  3066   002194  A0D8               	btfss	status,0,c
  3067   002196  EFCF  F010         	goto	u2731
  3068   00219A  EFD2  F010         	goto	u2730
  3069   00219E                     u2731:
  3070   00219E  0E01               	movlw	1
  3071   0021A0  EFD3  F010         	goto	u2740
  3072   0021A4                     u2730:
  3073   0021A4  0E00               	movlw	0
  3074   0021A6                     u2740:
  3075   0021A6  6F83               	movwf	?_isdigit& (0+255),b
  3076   0021A8  6B84               	clrf	(?_isdigit+1)& (0+255),b
  3077   0021AA                     
  3078                           ; BSR set to: 0
  3079   0021AA  0012               	return		;funcret
  3080   0021AC                     __end_of_isdigit:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function ___wmul *****************
  3084 ;; Defined at:
  3085 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  multiplier      2   35[BANK0 ] unsigned int 
  3088 ;;  multiplicand    2   37[BANK0 ] unsigned int 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  product         2   39[BANK0 ] unsigned int 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  2   35[BANK0 ] unsigned int 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, prodl, prodh
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3100 ;;      Params:         0       4       0       0       0       0       0       0       0
  3101 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3103 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3104 ;;Total ram usage:        6 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 9
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_atoi
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text14
  3115   0021AC                     __ptext14:
  3116                           	callstack 0
  3117   0021AC                     ___wmul:
  3118                           	callstack 17
  3119   0021AC  0100               	movlb	0	; () banked
  3120   0021AE  5183               	movf	___wmul@multiplier& (0+255),w,b
  3121   0021B0  0385               	mulwf	___wmul@multiplicand& (0+255),b
  3122   0021B2  CFF3 F087          	movff	prodl,___wmul@product
  3123   0021B6  CFF4 F088          	movff	prodh,___wmul@product+1
  3124   0021BA  5183               	movf	___wmul@multiplier& (0+255),w,b
  3125   0021BC  0386               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3126   0021BE  50F3               	movf	243,w,c
  3127   0021C0  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  3128   0021C2  5184               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3129   0021C4  0385               	mulwf	___wmul@multiplicand& (0+255),b
  3130   0021C6  50F3               	movf	243,w,c
  3131   0021C8  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  3132   0021CA                     
  3133                           ; BSR set to: 0
  3134   0021CA  C087  F083         	movff	___wmul@product,?___wmul
  3135   0021CE  C088  F084         	movff	___wmul@product+1,?___wmul+1
  3136   0021D2                     
  3137                           ; BSR set to: 0
  3138   0021D2  0012               	return		;funcret
  3139   0021D4                     __end_of___wmul:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _Lcd_Write_String *****************
  3143 ;; Defined at:
  3144 ;;		line 113 in file "lib_pic/lcd_2x16.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  a               2   39[BANK0 ] PTR unsigned char 
  3147 ;;		 -> STR_3(2), STR_2(2), strReloj(20), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  i               2   43[BANK0 ] int 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3159 ;;      Params:         0       2       0       0       0       0       0       0       0
  3160 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3161 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3162 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3163 ;;Total ram usage:        6 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 11
  3166 ;; This function calls:
  3167 ;;		_Lcd_Write_Char
  3168 ;; This function is called by:
  3169 ;;		_main
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text15
  3174   001B60                     __ptext15:
  3175                           	callstack 0
  3176   001B60                     _Lcd_Write_String:
  3177                           	callstack 19
  3178   001B60                     
  3179                           ;lib_pic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);lib_pic/lcd_2x16.c: 11
      +                          4: {;lib_pic/lcd_2x16.c: 115:  int i;;lib_pic/lcd_2x16.c: 116:  for(i=0;a[i]!='\0';i++)
  3180   001B60  0E00               	movlw	0
  3181   001B62  0100               	movlb	0	; () banked
  3182   001B64  6F8C               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  3183   001B66  0E00               	movlw	0
  3184   001B68  6F8B               	movwf	Lcd_Write_String@i& (0+255),b
  3185   001B6A  EFD3  F00D         	goto	l4210
  3186   001B6E                     l4206:
  3187                           
  3188                           ;lib_pic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  3189   001B6E  0100               	movlb	0	; () banked
  3190   001B70  518B               	movf	Lcd_Write_String@i& (0+255),w,b
  3191   001B72  2587               	addwf	Lcd_Write_String@a& (0+255),w,b
  3192   001B74  6F89               	movwf	??_Lcd_Write_String& (0+255),b
  3193   001B76  518C               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3194   001B78  2188               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3195   001B7A  6F8A               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  3196   001B7C  C089  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3197   001B80  C08A  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  3198   001B84  6AF8               	clrf	tblptru,c
  3199   001B86  0E07               	movlw	(high __ramtop+-1)
  3200   001B88  64F7               	cpfsgt	tblptrh,c
  3201   001B8A  D003               	bra	u3327
  3202   001B8C  0008               	tblrd		*
  3203   001B8E  50F5               	movf	tablat,w,c
  3204   001B90  D005               	bra	u3320
  3205   001B92                     u3327:
  3206   001B92  CFF6 FFE9          	movff	tblptrl,fsr0l
  3207   001B96  CFF7 FFEA          	movff	tblptrh,fsr0h
  3208   001B9A  50EF               	movf	indf0,w,c
  3209   001B9C                     u3320:
  3210   001B9C  EC68  F010         	call	_Lcd_Write_Char
  3211   001BA0  0100               	movlb	0	; () banked
  3212   001BA2  4B8B               	infsnz	Lcd_Write_String@i& (0+255),f,b
  3213   001BA4  2B8C               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  3214   001BA6                     l4210:
  3215                           
  3216                           ; BSR set to: 0
  3217   001BA6  518B               	movf	Lcd_Write_String@i& (0+255),w,b
  3218   001BA8  2587               	addwf	Lcd_Write_String@a& (0+255),w,b
  3219   001BAA  6F89               	movwf	??_Lcd_Write_String& (0+255),b
  3220   001BAC  518C               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3221   001BAE  2188               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3222   001BB0  6F8A               	movwf	(??_Lcd_Write_String+1)& (0+255),b
  3223   001BB2  C089  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3224   001BB6  C08A  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  3225   001BBA  6AF8               	clrf	tblptru,c
  3226   001BBC  0E07               	movlw	(high __ramtop+-1)
  3227   001BBE  64F7               	cpfsgt	tblptrh,c
  3228   001BC0  D003               	bra	u3337
  3229   001BC2  0008               	tblrd		*
  3230   001BC4  50F5               	movf	tablat,w,c
  3231   001BC6  D005               	bra	u3330
  3232   001BC8                     u3337:
  3233   001BC8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3234   001BCC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3235   001BD0  50EF               	movf	indf0,w,c
  3236   001BD2                     u3330:
  3237   001BD2  0900               	iorlw	0
  3238   001BD4  A4D8               	btfss	status,2,c
  3239   001BD6  EFEF  F00D         	goto	u3341
  3240   001BDA  EFF1  F00D         	goto	u3340
  3241   001BDE                     u3341:
  3242   001BDE  EFB7  F00D         	goto	l4206
  3243   001BE2                     u3340:
  3244   001BE2  0012               	return		;funcret
  3245   001BE4                     __end_of_Lcd_Write_String:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _Lcd_Write_Char *****************
  3249 ;; Defined at:
  3250 ;;		line 96 in file "lib_pic/lcd_2x16.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  a               1    wreg     unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  a               1   38[BANK0 ] unsigned char 
  3255 ;;  y               1   37[BANK0 ] unsigned char 
  3256 ;;  temp            1   36[BANK0 ] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0
  3267 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3269 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        3 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 10
  3273 ;; This function calls:
  3274 ;;		_Lcd_Port
  3275 ;; This function is called by:
  3276 ;;		_Lcd_Write_String
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text16
  3281   0020D0                     __ptext16:
  3282                           	callstack 0
  3283   0020D0                     _Lcd_Write_Char:
  3284                           	callstack 19
  3285                           
  3286                           ;incstack = 0
  3287                           ;Lcd_Write_Char@a stored from wreg
  3288   0020D0  0100               	movlb	0	; () banked
  3289   0020D2  6F86               	movwf	Lcd_Write_Char@a& (0+255),b
  3290   0020D4                     
  3291                           ;lib_pic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);lib_pic/lcd_2x16.c: 97: {;
      +                          lib_pic/lcd_2x16.c: 98:    char temp,y;;lib_pic/lcd_2x16.c: 99:    temp = a&0x0F;
  3292   0020D4  0100               	movlb	0	; () banked
  3293   0020D6  5186               	movf	Lcd_Write_Char@a& (0+255),w,b
  3294   0020D8  0B0F               	andlw	15
  3295   0020DA  6F84               	movwf	Lcd_Write_Char@temp& (0+255),b
  3296                           
  3297                           ;lib_pic/lcd_2x16.c: 100:    y = a&0xF0;
  3298   0020DC  5186               	movf	Lcd_Write_Char@a& (0+255),w,b
  3299   0020DE  0BF0               	andlw	240
  3300   0020E0  6F85               	movwf	Lcd_Write_Char@y& (0+255),b
  3301   0020E2                     
  3302                           ; BSR set to: 0
  3303                           ;lib_pic/lcd_2x16.c: 101:    PORTD |= (1<<2);
  3304   0020E2  8483               	bsf	131,2,c	;volatile
  3305   0020E4                     
  3306                           ; BSR set to: 0
  3307                           ;lib_pic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  3308   0020E4  3985               	swapf	Lcd_Write_Char@y& (0+255),w,b
  3309   0020E6  0B0F               	andlw	15
  3310   0020E8  ECDB  F00E         	call	_Lcd_Port
  3311   0020EC                     
  3312                           ;lib_pic/lcd_2x16.c: 103:    PORTD |= (1<<3);
  3313   0020EC  8683               	bsf	131,3,c	;volatile
  3314   0020EE                     
  3315                           ;lib_pic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  3316   0020EE  0E1A               	movlw	26
  3317   0020F0                     u3427:
  3318   0020F0  2EE8               	decfsz	wreg,f,c
  3319   0020F2  D7FE               	bra	u3427
  3320   0020F4  D000               	nop2	
  3321   0020F6                     
  3322                           ;lib_pic/lcd_2x16.c: 105:    PORTD &= ~(1<<3);
  3323   0020F6  9683               	bcf	131,3,c	;volatile
  3324                           
  3325                           ;lib_pic/lcd_2x16.c: 106:    Lcd_Port(temp);
  3326   0020F8  0100               	movlb	0	; () banked
  3327   0020FA  5184               	movf	Lcd_Write_Char@temp& (0+255),w,b
  3328   0020FC  ECDB  F00E         	call	_Lcd_Port
  3329   002100                     
  3330                           ;lib_pic/lcd_2x16.c: 107:    PORTD |= (1<<3);
  3331   002100  8683               	bsf	131,3,c	;volatile
  3332   002102                     
  3333                           ;lib_pic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  3334   002102  0E1A               	movlw	26
  3335   002104                     u3437:
  3336   002104  2EE8               	decfsz	wreg,f,c
  3337   002106  D7FE               	bra	u3437
  3338   002108  D000               	nop2	
  3339   00210A                     
  3340                           ;lib_pic/lcd_2x16.c: 109:    PORTD &= ~(1<<3);
  3341   00210A  9683               	bcf	131,3,c	;volatile
  3342   00210C  0012               	return		;funcret
  3343   00210E                     __end_of_Lcd_Write_Char:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _Lcd_Set_Cursor *****************
  3347 ;; Defined at:
  3348 ;;		line 50 in file "lib_pic/lcd_2x16.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  a               1    wreg     unsigned char 
  3351 ;;  b               1   38[BANK0 ] unsigned char 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  a               1   39[BANK0 ] unsigned char 
  3354 ;;  temp            1   42[BANK0 ] unsigned char 
  3355 ;;  y               1   41[BANK0 ] unsigned char 
  3356 ;;  z               1   40[BANK0 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3366 ;;      Params:         0       1       0       0       0       0       0       0       0
  3367 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        5 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 11
  3373 ;; This function calls:
  3374 ;;		_Lcd_Cmd
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text17
  3381   001CE2                     __ptext17:
  3382                           	callstack 0
  3383   001CE2                     _Lcd_Set_Cursor:
  3384                           	callstack 19
  3385                           
  3386                           ;incstack = 0
  3387                           ;Lcd_Set_Cursor@a stored from wreg
  3388   001CE2  0100               	movlb	0	; () banked
  3389   001CE4  6F87               	movwf	Lcd_Set_Cursor@a& (0+255),b
  3390   001CE6                     
  3391                           ;lib_pic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/l
      +                          cd_2x16.c: 51: {;lib_pic/lcd_2x16.c: 52:  char temp,z,y;;lib_pic/lcd_2x16.c: 53:  if(a =
      +                          = 1)
  3392   001CE6  0100               	movlb	0	; () banked
  3393   001CE8  0587               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  3394   001CEA  A4D8               	btfss	status,2,c
  3395   001CEC  EF7A  F00E         	goto	u3301
  3396   001CF0  EF7C  F00E         	goto	u3300
  3397   001CF4                     u3301:
  3398   001CF4  EF8E  F00E         	goto	l4184
  3399   001CF8                     u3300:
  3400   001CF8                     
  3401                           ; BSR set to: 0
  3402                           ;lib_pic/lcd_2x16.c: 54:  {;lib_pic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  3403   001CF8  5186               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3404   001CFA  0F7F               	addlw	127
  3405   001CFC  6F8A               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3406                           
  3407                           ;lib_pic/lcd_2x16.c: 56:   z = temp>>4;
  3408   001CFE  398A               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3409   001D00  0B0F               	andlw	15
  3410   001D02  6F88               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3411                           
  3412                           ;lib_pic/lcd_2x16.c: 57:   y = temp & 0x0F;
  3413   001D04  518A               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3414   001D06  0B0F               	andlw	15
  3415   001D08  6F89               	movwf	Lcd_Set_Cursor@y& (0+255),b
  3416   001D0A                     
  3417                           ; BSR set to: 0
  3418                           ;lib_pic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  3419   001D0A  5188               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  3420   001D0C  ECEA  F010         	call	_Lcd_Cmd
  3421   001D10                     
  3422                           ;lib_pic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  3423   001D10  0100               	movlb	0	; () banked
  3424   001D12  5189               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  3425   001D14  ECEA  F010         	call	_Lcd_Cmd
  3426                           
  3427                           ;lib_pic/lcd_2x16.c: 60:  }
  3428   001D18  EFA7  F00E         	goto	l292
  3429   001D1C                     l4184:
  3430                           
  3431                           ; BSR set to: 0
  3432   001D1C  0E02               	movlw	2
  3433   001D1E  1987               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  3434   001D20  A4D8               	btfss	status,2,c
  3435   001D22  EF95  F00E         	goto	u3311
  3436   001D26  EF97  F00E         	goto	u3310
  3437   001D2A                     u3311:
  3438   001D2A  EFA7  F00E         	goto	l292
  3439   001D2E                     u3310:
  3440   001D2E                     
  3441                           ; BSR set to: 0
  3442                           ;lib_pic/lcd_2x16.c: 62:  {;lib_pic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  3443   001D2E  5186               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3444   001D30  0FBF               	addlw	191
  3445   001D32  6F8A               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3446                           
  3447                           ;lib_pic/lcd_2x16.c: 64:   z = temp>>4;
  3448   001D34  398A               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3449   001D36  0B0F               	andlw	15
  3450   001D38  6F88               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3451                           
  3452                           ;lib_pic/lcd_2x16.c: 65:   y = temp & 0x0F;
  3453   001D3A  518A               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3454   001D3C  0B0F               	andlw	15
  3455   001D3E  6F89               	movwf	Lcd_Set_Cursor@y& (0+255),b
  3456   001D40                     
  3457                           ; BSR set to: 0
  3458                           ;lib_pic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  3459   001D40  5188               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  3460   001D42  ECEA  F010         	call	_Lcd_Cmd
  3461   001D46                     
  3462                           ;lib_pic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  3463   001D46  0100               	movlb	0	; () banked
  3464   001D48  5189               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  3465   001D4A  ECEA  F010         	call	_Lcd_Cmd
  3466   001D4E                     l292:
  3467   001D4E  0012               	return		;funcret
  3468   001D50                     __end_of_Lcd_Set_Cursor:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _Lcd_Clear *****************
  3472 ;; Defined at:
  3473 ;;		line 43 in file "lib_pic/lcd_2x16.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 11
  3494 ;; This function calls:
  3495 ;;		_Lcd_Cmd
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text18
  3502   0022D8                     __ptext18:
  3503                           	callstack 0
  3504   0022D8                     _Lcd_Clear:
  3505                           	callstack 19
  3506   0022D8                     
  3507                           ;lib_pic/lcd_2x16.c: 45:  Lcd_Cmd(0);
  3508   0022D8  0E00               	movlw	0
  3509   0022DA  ECEA  F010         	call	_Lcd_Cmd
  3510                           
  3511                           ;lib_pic/lcd_2x16.c: 46:  Lcd_Cmd(1);
  3512   0022DE  0E01               	movlw	1
  3513   0022E0  ECEA  F010         	call	_Lcd_Cmd
  3514   0022E4  0012               	return		;funcret
  3515   0022E6                     __end_of_Lcd_Clear:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _Hardware_Init *****************
  3519 ;; Defined at:
  3520 ;;		line 91 in file "Gpio_Lcd_Buzzer.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 12
  3541 ;; This function calls:
  3542 ;;		_INTERRUPT_Global_Config
  3543 ;;		_Lcd_Init
  3544 ;;		_OSCILADOR_Init
  3545 ;;		_PORT_Init
  3546 ;;		_TMR0_Temporizador_Init
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text19
  3553   002276                     __ptext19:
  3554                           	callstack 0
  3555   002276                     _Hardware_Init:
  3556                           	callstack 18
  3557   002276                     
  3558                           ;Gpio_Lcd_Buzzer.c: 92:     OSCILADOR_Init();
  3559   002276  EC5B  F011         	call	_OSCILADOR_Init	;wreg free
  3560                           
  3561                           ;Gpio_Lcd_Buzzer.c: 93:     PORT_Init();
  3562   00227A  EC51  F011         	call	_PORT_Init	;wreg free
  3563   00227E                     
  3564                           ;Gpio_Lcd_Buzzer.c: 94:     Lcd_Init();
  3565   00227E  ECF2  F00D         	call	_Lcd_Init	;wreg free
  3566   002282                     
  3567                           ;Gpio_Lcd_Buzzer.c: 95:     TMR0_Temporizador_Init();
  3568   002282  EC20  F011         	call	_TMR0_Temporizador_Init	;wreg free
  3569   002286                     
  3570                           ;Gpio_Lcd_Buzzer.c: 96:     INTERRUPT_Global_Config();
  3571   002286  EC73  F011         	call	_INTERRUPT_Global_Config	;wreg free
  3572   00228A  0012               	return		;funcret
  3573   00228C                     __end_of_Hardware_Init:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function _TMR0_Temporizador_Init *****************
  3577 ;; Defined at:
  3578 ;;		line 108 in file "Gpio_Lcd_Buzzer.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 9
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_Hardware_Init
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text20
  3607   002240                     __ptext20:
  3608                           	callstack 0
  3609   002240                     _TMR0_Temporizador_Init:
  3610                           	callstack 20
  3611   002240                     
  3612                           ;Gpio_Lcd_Buzzer.c: 109:     T0CONbits.T08BIT = 0;
  3613   002240  9CD5               	bcf	213,6,c	;volatile
  3614                           
  3615                           ;Gpio_Lcd_Buzzer.c: 110:     T0CONbits.T0CS = 0;
  3616   002242  9AD5               	bcf	213,5,c	;volatile
  3617                           
  3618                           ;Gpio_Lcd_Buzzer.c: 111:     T0CONbits.PSA = 0;
  3619   002244  96D5               	bcf	213,3,c	;volatile
  3620   002246                     
  3621                           ;Gpio_Lcd_Buzzer.c: 112:     T0CONbits.T0PS = 0b101;
  3622   002246  50D5               	movf	213,w,c	;volatile
  3623   002248  0BF8               	andlw	-8
  3624   00224A  0905               	iorlw	5
  3625   00224C  6ED5               	movwf	213,c	;volatile
  3626                           
  3627                           ;Gpio_Lcd_Buzzer.c: 115:     TMR0 = 3036;
  3628   00224E  0E0B               	movlw	11
  3629   002250  6ED7               	movwf	215,c	;volatile
  3630   002252  0EDC               	movlw	220
  3631   002254  6ED6               	movwf	214,c	;volatile
  3632   002256                     
  3633                           ;Gpio_Lcd_Buzzer.c: 118:     INTCONbits.TMR0IE = 1;
  3634   002256  8AF2               	bsf	242,5,c	;volatile
  3635   002258                     
  3636                           ;Gpio_Lcd_Buzzer.c: 119:     INTCONbits.TMR0IF = 0;
  3637   002258  94F2               	bcf	242,2,c	;volatile
  3638   00225A                     
  3639                           ;Gpio_Lcd_Buzzer.c: 122:     T0CONbits.TMR0ON = 1;
  3640   00225A  8ED5               	bsf	213,7,c	;volatile
  3641   00225C  0012               	return		;funcret
  3642   00225E                     __end_of_TMR0_Temporizador_Init:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function _PORT_Init *****************
  3646 ;; Defined at:
  3647 ;;		line 42 in file "Gpio_Lcd_Buzzer.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3665 ;;Total ram usage:        0 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 9
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_Hardware_Init
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text21
  3676   0022A2                     __ptext21:
  3677                           	callstack 0
  3678   0022A2                     _PORT_Init:
  3679                           	callstack 20
  3680   0022A2                     
  3681                           ;Gpio_Lcd_Buzzer.c: 44:     ANSELD = 0x00;
  3682   0022A2  0E00               	movlw	0
  3683   0022A4  010F               	movlb	15	; () banked
  3684   0022A6  6F5E               	movwf	94,b	;volatile
  3685   0022A8                     
  3686                           ; BSR set to: 15
  3687                           ;Gpio_Lcd_Buzzer.c: 47:     ANSELBbits.ANSB0 = 0;
  3688   0022A8  915C               	bcf	92,0,b	;volatile
  3689   0022AA                     
  3690                           ; BSR set to: 15
  3691                           ;Gpio_Lcd_Buzzer.c: 48:     TRISBbits.RB0 = 1;
  3692   0022AA  8093               	bsf	147,0,c	;volatile
  3693   0022AC                     
  3694                           ; BSR set to: 15
  3695                           ;Gpio_Lcd_Buzzer.c: 49:     ANSELBbits.ANSB1 = 0;
  3696   0022AC  935C               	bcf	92,1,b	;volatile
  3697   0022AE                     
  3698                           ; BSR set to: 15
  3699                           ;Gpio_Lcd_Buzzer.c: 50:     TRISBbits.RB1 = 1;
  3700   0022AE  8293               	bsf	147,1,c	;volatile
  3701   0022B0                     
  3702                           ; BSR set to: 15
  3703                           ;Gpio_Lcd_Buzzer.c: 51:     ANSELBbits.ANSB2 = 0;
  3704   0022B0  955C               	bcf	92,2,b	;volatile
  3705   0022B2                     
  3706                           ; BSR set to: 15
  3707                           ;Gpio_Lcd_Buzzer.c: 52:     TRISBbits.RB2 = 1;
  3708   0022B2  8493               	bsf	147,2,c	;volatile
  3709   0022B4                     
  3710                           ; BSR set to: 15
  3711   0022B4  0012               	return		;funcret
  3712   0022B6                     __end_of_PORT_Init:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _OSCILADOR_Init *****************
  3716 ;; Defined at:
  3717 ;;		line 5 in file "lib_pic/configDevice.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 9
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_Hardware_Init
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text22
  3746   0022B6                     __ptext22:
  3747                           	callstack 0
  3748   0022B6                     _OSCILADOR_Init:
  3749                           	callstack 20
  3750   0022B6                     
  3751                           ;lib_pic/configDevice.c: 9:     OSCCONbits.IRCF = 0b110;
  3752   0022B6  50D3               	movf	211,w,c	;volatile
  3753   0022B8  0B8F               	andlw	-113
  3754   0022BA  0960               	iorlw	96
  3755   0022BC  6ED3               	movwf	211,c	;volatile
  3756                           
  3757                           ;lib_pic/configDevice.c: 10:     OSCCONbits.SCS = 0b10;
  3758   0022BE  50D3               	movf	211,w,c	;volatile
  3759   0022C0  0BFC               	andlw	-4
  3760   0022C2  0902               	iorlw	2
  3761   0022C4  6ED3               	movwf	211,c	;volatile
  3762   0022C6  0012               	return		;funcret
  3763   0022C8                     __end_of_OSCILADOR_Init:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _Lcd_Init *****************
  3767 ;; Defined at:
  3768 ;;		line 72 in file "lib_pic/lcd_2x16.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3785 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 11
  3789 ;; This function calls:
  3790 ;;		_Lcd_Cmd
  3791 ;;		_Lcd_Port
  3792 ;; This function is called by:
  3793 ;;		_Hardware_Init
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text23
  3798   001BE4                     __ptext23:
  3799                           	callstack 0
  3800   001BE4                     _Lcd_Init:
  3801                           	callstack 18
  3802   001BE4                     
  3803                           ;lib_pic/lcd_2x16.c: 75:  TRISD &= ~(0xF0);
  3804   001BE4  0E0F               	movlw	15
  3805   001BE6  1695               	andwf	149,f,c	;volatile
  3806                           
  3807                           ;lib_pic/lcd_2x16.c: 76:  TRISD &= ~((1<<3)|(1<<2));
  3808   001BE8  0EF3               	movlw	243
  3809   001BEA  1695               	andwf	149,f,c	;volatile
  3810   001BEC                     
  3811                           ;lib_pic/lcd_2x16.c: 78:  Lcd_Port(0x00);
  3812   001BEC  0E00               	movlw	0
  3813   001BEE  ECDB  F00E         	call	_Lcd_Port
  3814   001BF2                     
  3815                           ;lib_pic/lcd_2x16.c: 79:  _delay((unsigned long)((20)*(8000000UL/4000.0)));
  3816   001BF2  0E34               	movlw	52
  3817   001BF4  0100               	movlb	0	; () banked
  3818   001BF6  6F86               	movwf	??_Lcd_Init& (0+255),b
  3819   001BF8  0EF1               	movlw	241
  3820   001BFA                     u3447:
  3821   001BFA  2EE8               	decfsz	wreg,f,c
  3822   001BFC  D7FE               	bra	u3447
  3823   001BFE  2F86               	decfsz	??_Lcd_Init& (0+255),f,b
  3824   001C00  D7FC               	bra	u3447
  3825   001C02  D000               	nop2	
  3826   001C04                     
  3827                           ;lib_pic/lcd_2x16.c: 80:  Lcd_Cmd(0x03);
  3828   001C04  0E03               	movlw	3
  3829   001C06  ECEA  F010         	call	_Lcd_Cmd
  3830   001C0A                     
  3831                           ;lib_pic/lcd_2x16.c: 81:  _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3832   001C0A  0E0D               	movlw	13
  3833   001C0C  0100               	movlb	0	; () banked
  3834   001C0E  6F86               	movwf	??_Lcd_Init& (0+255),b
  3835   001C10  0EFB               	movlw	251
  3836   001C12                     u3457:
  3837   001C12  2EE8               	decfsz	wreg,f,c
  3838   001C14  D7FE               	bra	u3457
  3839   001C16  2F86               	decfsz	??_Lcd_Init& (0+255),f,b
  3840   001C18  D7FC               	bra	u3457
  3841   001C1A  D000               	nop2	
  3842   001C1C                     
  3843                           ;lib_pic/lcd_2x16.c: 82:  Lcd_Cmd(0x03);
  3844   001C1C  0E03               	movlw	3
  3845   001C1E  ECEA  F010         	call	_Lcd_Cmd
  3846   001C22                     
  3847                           ;lib_pic/lcd_2x16.c: 83:  _delay((unsigned long)((11)*(8000000UL/4000.0)));
  3848   001C22  0E1D               	movlw	29
  3849   001C24  0100               	movlb	0	; () banked
  3850   001C26  6F86               	movwf	??_Lcd_Init& (0+255),b
  3851   001C28  0E91               	movlw	145
  3852   001C2A                     u3467:
  3853   001C2A  2EE8               	decfsz	wreg,f,c
  3854   001C2C  D7FE               	bra	u3467
  3855   001C2E  2F86               	decfsz	??_Lcd_Init& (0+255),f,b
  3856   001C30  D7FC               	bra	u3467
  3857   001C32                     
  3858                           ;lib_pic/lcd_2x16.c: 84:  Lcd_Cmd(0x03);
  3859   001C32  0E03               	movlw	3
  3860   001C34  ECEA  F010         	call	_Lcd_Cmd
  3861   001C38                     
  3862                           ;lib_pic/lcd_2x16.c: 86:  Lcd_Cmd(0x02);
  3863   001C38  0E02               	movlw	2
  3864   001C3A  ECEA  F010         	call	_Lcd_Cmd
  3865   001C3E                     
  3866                           ;lib_pic/lcd_2x16.c: 87:  Lcd_Cmd(0x02);
  3867   001C3E  0E02               	movlw	2
  3868   001C40  ECEA  F010         	call	_Lcd_Cmd
  3869   001C44                     
  3870                           ;lib_pic/lcd_2x16.c: 88:  Lcd_Cmd(0x08);
  3871   001C44  0E08               	movlw	8
  3872   001C46  ECEA  F010         	call	_Lcd_Cmd
  3873   001C4A                     
  3874                           ;lib_pic/lcd_2x16.c: 89:  Lcd_Cmd(0x00);
  3875   001C4A  0E00               	movlw	0
  3876   001C4C  ECEA  F010         	call	_Lcd_Cmd
  3877   001C50                     
  3878                           ;lib_pic/lcd_2x16.c: 90:  Lcd_Cmd(0x0C);
  3879   001C50  0E0C               	movlw	12
  3880   001C52  ECEA  F010         	call	_Lcd_Cmd
  3881   001C56                     
  3882                           ;lib_pic/lcd_2x16.c: 91:  Lcd_Cmd(0x00);
  3883   001C56  0E00               	movlw	0
  3884   001C58  ECEA  F010         	call	_Lcd_Cmd
  3885   001C5C                     
  3886                           ;lib_pic/lcd_2x16.c: 92:  Lcd_Cmd(0x06);
  3887   001C5C  0E06               	movlw	6
  3888   001C5E  ECEA  F010         	call	_Lcd_Cmd
  3889   001C62  0012               	return		;funcret
  3890   001C64                     __end_of_Lcd_Init:
  3891                           	callstack 0
  3892                           
  3893 ;; *************** function _Lcd_Cmd *****************
  3894 ;; Defined at:
  3895 ;;		line 33 in file "lib_pic/lcd_2x16.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  a               1    wreg     unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  a               1   37[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3909 ;;      Params:         0       0       0       0       0       0       0       0       0
  3910 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3911 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3912 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3913 ;;Total ram usage:        2 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 10
  3916 ;; This function calls:
  3917 ;;		_Lcd_Port
  3918 ;; This function is called by:
  3919 ;;		_Lcd_Clear
  3920 ;;		_Lcd_Set_Cursor
  3921 ;;		_Lcd_Init
  3922 ;;		_Lcd_Shift_Right
  3923 ;;		_Lcd_Shift_Left
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text24
  3928   0021D4                     __ptext24:
  3929                           	callstack 0
  3930   0021D4                     _Lcd_Cmd:
  3931                           	callstack 19
  3932                           
  3933                           ;incstack = 0
  3934                           ;Lcd_Cmd@a stored from wreg
  3935   0021D4  0100               	movlb	0	; () banked
  3936   0021D6  6F85               	movwf	Lcd_Cmd@a& (0+255),b
  3937   0021D8                     
  3938                           ;lib_pic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd_2x16.c: 34: {;lib_pic
      +                          /lcd_2x16.c: 35:  PORTD &= ~(1<<2);
  3939   0021D8  9483               	bcf	131,2,c	;volatile
  3940   0021DA                     
  3941                           ;lib_pic/lcd_2x16.c: 36:  Lcd_Port(a);
  3942   0021DA  0100               	movlb	0	; () banked
  3943   0021DC  5185               	movf	Lcd_Cmd@a& (0+255),w,b
  3944   0021DE  ECDB  F00E         	call	_Lcd_Port
  3945   0021E2                     
  3946                           ;lib_pic/lcd_2x16.c: 37:  PORTD |= (1<<3);
  3947   0021E2  8683               	bsf	131,3,c	;volatile
  3948   0021E4                     
  3949                           ;lib_pic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  3950   0021E4  0E0B               	movlw	11
  3951   0021E6  0100               	movlb	0	; () banked
  3952   0021E8  6F84               	movwf	??_Lcd_Cmd& (0+255),b
  3953   0021EA  0E62               	movlw	98
  3954   0021EC                     u3477:
  3955   0021EC  2EE8               	decfsz	wreg,f,c
  3956   0021EE  D7FE               	bra	u3477
  3957   0021F0  2F84               	decfsz	??_Lcd_Cmd& (0+255),f,b
  3958   0021F2  D7FC               	bra	u3477
  3959   0021F4  F000               	nop	
  3960   0021F6                     
  3961                           ;lib_pic/lcd_2x16.c: 39:  PORTD &= ~(1<<3);
  3962   0021F6  9683               	bcf	131,3,c	;volatile
  3963   0021F8  0012               	return		;funcret
  3964   0021FA                     __end_of_Lcd_Cmd:
  3965                           	callstack 0
  3966                           
  3967 ;; *************** function _Lcd_Port *****************
  3968 ;; Defined at:
  3969 ;;		line 5 in file "lib_pic/lcd_2x16.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  a               1    wreg     unsigned char 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  a               1   35[BANK0 ] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0
  3984 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3986 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3987 ;;Total ram usage:        1 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 9
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_Lcd_Cmd
  3994 ;;		_Lcd_Init
  3995 ;;		_Lcd_Write_Char
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text25
  4000   001DB6                     __ptext25:
  4001                           	callstack 0
  4002   001DB6                     _Lcd_Port:
  4003                           	callstack 19
  4004                           
  4005                           ;incstack = 0
  4006                           ;Lcd_Port@a stored from wreg
  4007   001DB6  0100               	movlb	0	; () banked
  4008   001DB8  6F83               	movwf	Lcd_Port@a& (0+255),b
  4009   001DBA                     
  4010                           ;lib_pic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd_2x16.c: 6: {;lib_pic/
      +                          lcd_2x16.c: 7:  if(a & 1)
  4011   001DBA  0100               	movlb	0	; () banked
  4012   001DBC  A183               	btfss	Lcd_Port@a& (0+255),0,b
  4013   001DBE  EFE3  F00E         	goto	u2901
  4014   001DC2  EFE5  F00E         	goto	u2900
  4015   001DC6                     u2901:
  4016   001DC6  EFE8  F00E         	goto	l3760
  4017   001DCA                     u2900:
  4018   001DCA                     
  4019                           ; BSR set to: 0
  4020                           ;lib_pic/lcd_2x16.c: 9:   LATD |= (1<<4);
  4021   001DCA  888C               	bsf	140,4,c	;volatile
  4022   001DCC  EFE9  F00E         	goto	l3762
  4023   001DD0                     l3760:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;lib_pic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  4027   001DD0  988C               	bcf	140,4,c	;volatile
  4028   001DD2                     l3762:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;lib_pic/lcd_2x16.c: 13:  if(a & 2)
  4032   001DD2  A383               	btfss	Lcd_Port@a& (0+255),1,b
  4033   001DD4  EFEE  F00E         	goto	u2911
  4034   001DD8  EFF0  F00E         	goto	u2910
  4035   001DDC                     u2911:
  4036   001DDC  EFF3  F00E         	goto	l3766
  4037   001DE0                     u2910:
  4038   001DE0                     
  4039                           ; BSR set to: 0
  4040                           ;lib_pic/lcd_2x16.c: 15:   LATD |= (1<<5);
  4041   001DE0  8A8C               	bsf	140,5,c	;volatile
  4042   001DE2  EFF4  F00E         	goto	l3768
  4043   001DE6                     l3766:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;lib_pic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  4047   001DE6  9A8C               	bcf	140,5,c	;volatile
  4048   001DE8                     l3768:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;lib_pic/lcd_2x16.c: 19:  if(a & 4)
  4052   001DE8  A583               	btfss	Lcd_Port@a& (0+255),2,b
  4053   001DEA  EFF9  F00E         	goto	u2921
  4054   001DEE  EFFB  F00E         	goto	u2920
  4055   001DF2                     u2921:
  4056   001DF2  EFFE  F00E         	goto	l3772
  4057   001DF6                     u2920:
  4058   001DF6                     
  4059                           ; BSR set to: 0
  4060                           ;lib_pic/lcd_2x16.c: 21:   LATD |= (1<<6);
  4061   001DF6  8C8C               	bsf	140,6,c	;volatile
  4062   001DF8  EFFF  F00E         	goto	l3774
  4063   001DFC                     l3772:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;lib_pic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  4067   001DFC  9C8C               	bcf	140,6,c	;volatile
  4068   001DFE                     l3774:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;lib_pic/lcd_2x16.c: 25:  if(a & 8)
  4072   001DFE  A783               	btfss	Lcd_Port@a& (0+255),3,b
  4073   001E00  EF04  F00F         	goto	u2931
  4074   001E04  EF06  F00F         	goto	u2930
  4075   001E08                     u2931:
  4076   001E08  EF09  F00F         	goto	l3778
  4077   001E0C                     u2930:
  4078   001E0C                     
  4079                           ; BSR set to: 0
  4080                           ;lib_pic/lcd_2x16.c: 27:   LATD |= (1<<7);
  4081   001E0C  8E8C               	bsf	140,7,c	;volatile
  4082   001E0E  EF0A  F00F         	goto	l280
  4083   001E12                     l3778:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;lib_pic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  4087   001E12  9E8C               	bcf	140,7,c	;volatile
  4088   001E14                     l280:
  4089                           
  4090                           ; BSR set to: 0
  4091   001E14  0012               	return		;funcret
  4092   001E16                     __end_of_Lcd_Port:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _INTERRUPT_Global_Config *****************
  4096 ;; Defined at:
  4097 ;;		line 100 in file "Gpio_Lcd_Buzzer.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		None
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4111 ;;      Params:         0       0       0       0       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 9
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_Hardware_Init
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text26
  4126   0022E6                     __ptext26:
  4127                           	callstack 0
  4128   0022E6                     _INTERRUPT_Global_Config:
  4129                           	callstack 20
  4130   0022E6                     
  4131                           ;Gpio_Lcd_Buzzer.c: 101:     RCONbits.IPEN = 0;
  4132   0022E6  9ED0               	bcf	208,7,c	;volatile
  4133                           
  4134                           ;Gpio_Lcd_Buzzer.c: 103:     INTCONbits.GIE = 1;
  4135   0022E8  8EF2               	bsf	242,7,c	;volatile
  4136                           
  4137                           ;Gpio_Lcd_Buzzer.c: 104:     INTCONbits.PEIE = 1;
  4138   0022EA  8CF2               	bsf	242,6,c	;volatile
  4139   0022EC  0012               	return		;funcret
  4140   0022EE                     __end_of_INTERRUPT_Global_Config:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _RutinaServicioInterrupt *****************
  4144 ;; Defined at:
  4145 ;;		line 58 in file "Gpio_Lcd_Buzzer.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4161 ;;      Temps:          0      12       0       0       0       0       0       0       0
  4162 ;;      Totals:         0      12       0       0       0       0       0       0       0
  4163 ;;Total ram usage:       12 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 8
  4166 ;; This function calls:
  4167 ;;		i2_Lcd_Set_Cursor
  4168 ;;		i2_Lcd_Write_String
  4169 ;;		i2_sprintf
  4170 ;; This function is called by:
  4171 ;;		Interrupt level 2
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	intcode
  4176   000008                     __pintcode:
  4177                           	callstack 0
  4178   000008                     _RutinaServicioInterrupt:
  4179                           	callstack 14
  4180                           
  4181                           ;incstack = 0
  4182   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4183   00000A  CFE9 F077          	movff	fsr0l,??_RutinaServicioInterrupt
  4184   00000E  CFEA F078          	movff	fsr0h,??_RutinaServicioInterrupt+1
  4185   000012  CFE1 F079          	movff	fsr1l,??_RutinaServicioInterrupt+2
  4186   000016  CFE2 F07A          	movff	fsr1h,??_RutinaServicioInterrupt+3
  4187   00001A  CFD9 F07B          	movff	fsr2l,??_RutinaServicioInterrupt+4
  4188   00001E  CFDA F07C          	movff	fsr2h,??_RutinaServicioInterrupt+5
  4189   000022  CFF3 F07D          	movff	prodl,??_RutinaServicioInterrupt+6
  4190   000026  CFF4 F07E          	movff	prodh,??_RutinaServicioInterrupt+7
  4191   00002A  CFF6 F07F          	movff	tblptrl,??_RutinaServicioInterrupt+8
  4192   00002E  CFF7 F080          	movff	tblptrh,??_RutinaServicioInterrupt+9
  4193   000032  CFF8 F081          	movff	tblptru,??_RutinaServicioInterrupt+10
  4194   000036  CFF5 F082          	movff	tablat,??_RutinaServicioInterrupt+11
  4195   00003A                     
  4196                           ;Gpio_Lcd_Buzzer.c: 60:     if ( INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1 ) {
  4197   00003A  AAF2               	btfss	242,5,c	;volatile
  4198   00003C  EF22  F000         	goto	i2u336_41
  4199   000040  EF24  F000         	goto	i2u336_40
  4200   000044                     i2u336_41:
  4201   000044  EF71  F000         	goto	i2l66
  4202   000048                     i2u336_40:
  4203   000048  A4F2               	btfss	242,2,c	;volatile
  4204   00004A  EF29  F000         	goto	i2u337_41
  4205   00004E  EF2B  F000         	goto	i2u337_40
  4206   000052                     i2u337_41:
  4207   000052  EF71  F000         	goto	i2l66
  4208   000056                     i2u337_40:
  4209   000056                     
  4210                           ;Gpio_Lcd_Buzzer.c: 62:         TMR0 = 3036;
  4211   000056  0E0B               	movlw	11
  4212   000058  6ED7               	movwf	215,c	;volatile
  4213   00005A  0EDC               	movlw	220
  4214   00005C  6ED6               	movwf	214,c	;volatile
  4215   00005E                     
  4216                           ;Gpio_Lcd_Buzzer.c: 63:         INTCONbits.TMR0IF = 0;
  4217   00005E  94F2               	bcf	242,2,c	;volatile
  4218   000060                     
  4219                           ;Gpio_Lcd_Buzzer.c: 66:         seconds++;
  4220   000060  0100               	movlb	0	; () banked
  4221   000062  2BDA               	incf	_seconds& (0+255),f,b
  4222   000064                     
  4223                           ; BSR set to: 0
  4224                           ;Gpio_Lcd_Buzzer.c: 67:         if ( seconds >= 60 ) {
  4225   000064  0E3B               	movlw	59
  4226   000066  65DA               	cpfsgt	_seconds& (0+255),b
  4227   000068  EF38  F000         	goto	i2u338_41
  4228   00006C  EF3A  F000         	goto	i2u338_40
  4229   000070                     i2u338_41:
  4230   000070  EF52  F000         	goto	i2l4276
  4231   000074                     i2u338_40:
  4232   000074                     
  4233                           ; BSR set to: 0
  4234                           ;Gpio_Lcd_Buzzer.c: 68:             seconds = 0;
  4235   000074  0E00               	movlw	0
  4236   000076  6FDA               	movwf	_seconds& (0+255),b
  4237   000078                     
  4238                           ; BSR set to: 0
  4239                           ;Gpio_Lcd_Buzzer.c: 69:             minutes++;
  4240   000078  2BDB               	incf	_minutes& (0+255),f,b
  4241   00007A                     
  4242                           ; BSR set to: 0
  4243                           ;Gpio_Lcd_Buzzer.c: 70:             if ( minutes >= 60 ) {
  4244   00007A  0E3B               	movlw	59
  4245   00007C  65DB               	cpfsgt	_minutes& (0+255),b
  4246   00007E  EF43  F000         	goto	i2u339_41
  4247   000082  EF45  F000         	goto	i2u339_40
  4248   000086                     i2u339_41:
  4249   000086  EF52  F000         	goto	i2l4276
  4250   00008A                     i2u339_40:
  4251   00008A                     
  4252                           ; BSR set to: 0
  4253                           ;Gpio_Lcd_Buzzer.c: 71:                 minutes = 0;
  4254   00008A  0E00               	movlw	0
  4255   00008C  6FDB               	movwf	_minutes& (0+255),b
  4256   00008E                     
  4257                           ; BSR set to: 0
  4258                           ;Gpio_Lcd_Buzzer.c: 72:                 hours++;
  4259   00008E  2BDC               	incf	_hours& (0+255),f,b
  4260   000090                     
  4261                           ; BSR set to: 0
  4262                           ;Gpio_Lcd_Buzzer.c: 73:                 if ( hours >= 24 ) {
  4263   000090  0E17               	movlw	23
  4264   000092  65DC               	cpfsgt	_hours& (0+255),b
  4265   000094  EF4E  F000         	goto	i2u340_41
  4266   000098  EF50  F000         	goto	i2u340_40
  4267   00009C                     i2u340_41:
  4268   00009C  EF52  F000         	goto	i2l4276
  4269   0000A0                     i2u340_40:
  4270   0000A0                     
  4271                           ; BSR set to: 0
  4272                           ;Gpio_Lcd_Buzzer.c: 74:                     hours = 0;
  4273   0000A0  0E00               	movlw	0
  4274   0000A2  6FDC               	movwf	_hours& (0+255),b
  4275   0000A4                     i2l4276:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;Gpio_Lcd_Buzzer.c: 78:         Lcd_Set_Cursor(1, 1);
  4279   0000A4  0E01               	movlw	1
  4280   0000A6  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  4281   0000A8  0E01               	movlw	1
  4282   0000AA  ECA8  F00E         	call	i2_Lcd_Set_Cursor
  4283   0000AE                     
  4284                           ;Gpio_Lcd_Buzzer.c: 79:         sprintf(strReloj, "Timer:  %02u:%02u:%02u", hours, minut
      +                          es, seconds);
  4285   0000AE  0E20               	movlw	low _strReloj
  4286   0000B0  0100               	movlb	0	; () banked
  4287   0000B2  6F60               	movwf	i2sprintf@s& (0+255),b
  4288   0000B4  0E01               	movlw	high _strReloj
  4289   0000B6  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4290   0000B8  0E01               	movlw	low STR_1
  4291   0000BA  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4292   0000BC  0E08               	movlw	high STR_1
  4293   0000BE  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4294   0000C0  C0DC  F064         	movff	_hours,?i2_sprintf+4
  4295   0000C4  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  4296   0000C6  C0DB  F066         	movff	_minutes,?i2_sprintf+6
  4297   0000CA  6B67               	clrf	(?i2_sprintf+7)& (0+255),b
  4298   0000CC  C0DA  F068         	movff	_seconds,?i2_sprintf+8
  4299   0000D0  6B69               	clrf	(?i2_sprintf+9)& (0+255),b
  4300   0000D2  EC8B  F00F         	call	i2_sprintf	;wreg free
  4301   0000D6                     
  4302                           ;Gpio_Lcd_Buzzer.c: 81:         Lcd_Write_String(strReloj);
  4303   0000D6  0E20               	movlw	low _strReloj
  4304   0000D8  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4305   0000DA  0E01               	movlw	high _strReloj
  4306   0000DC  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  4307   0000DE  EC32  F00E         	call	i2_Lcd_Write_String	;wreg free
  4308   0000E2                     i2l66:
  4309   0000E2  C082  FFF5         	movff	??_RutinaServicioInterrupt+11,tablat
  4310   0000E6  C081  FFF8         	movff	??_RutinaServicioInterrupt+10,tblptru
  4311   0000EA  C080  FFF7         	movff	??_RutinaServicioInterrupt+9,tblptrh
  4312   0000EE  C07F  FFF6         	movff	??_RutinaServicioInterrupt+8,tblptrl
  4313   0000F2  C07E  FFF4         	movff	??_RutinaServicioInterrupt+7,prodh
  4314   0000F6  C07D  FFF3         	movff	??_RutinaServicioInterrupt+6,prodl
  4315   0000FA  C07C  FFDA         	movff	??_RutinaServicioInterrupt+5,fsr2h
  4316   0000FE  C07B  FFD9         	movff	??_RutinaServicioInterrupt+4,fsr2l
  4317   000102  C07A  FFE2         	movff	??_RutinaServicioInterrupt+3,fsr1h
  4318   000106  C079  FFE1         	movff	??_RutinaServicioInterrupt+2,fsr1l
  4319   00010A  C078  FFEA         	movff	??_RutinaServicioInterrupt+1,fsr0h
  4320   00010E  C077  FFE9         	movff	??_RutinaServicioInterrupt,fsr0l
  4321   000112  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4322   000114  0011               	retfie		f
  4323   000116                     __end_of_RutinaServicioInterrupt:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function i2_sprintf *****************
  4327 ;; Defined at:
  4328 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4331 ;;		 -> strReloj(20), 
  4332 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4333 ;;		 -> STR_4(23), STR_1(23), 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  f              11   12[BANK0 ] struct _IO_FILE
  4336 ;;  ap              2   10[BANK0 ] PTR void [1]
  4337 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  4338 ;;  ret             2    0        int 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  2    0[BANK0 ] int 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4348 ;;      Params:         0      10       0       0       0       0       0       0       0
  4349 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4351 ;;      Totals:         0      23       0       0       0       0       0       0       0
  4352 ;;Total ram usage:       23 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 7
  4355 ;; This function calls:
  4356 ;;		i2_vfprintf
  4357 ;; This function is called by:
  4358 ;;		_RutinaServicioInterrupt
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text28
  4363   001F16                     __ptext28:
  4364                           	callstack 0
  4365   001F16                     i2_sprintf:
  4366                           	callstack 14
  4367   001F16  0E64               	movlw	low (?i2_sprintf+4)
  4368   001F18  0100               	movlb	0	; () banked
  4369   001F1A  6F6A               	movwf	i2sprintf@ap& (0+255),b
  4370   001F1C  0E00               	movlw	high (?i2_sprintf+4)
  4371   001F1E  6F6B               	movwf	(i2sprintf@ap+1)& (0+255),b
  4372   001F20  C060  F06C         	movff	i2sprintf@s,i2sprintf@f
  4373   001F24  C061  F06D         	movff	i2sprintf@s+1,i2sprintf@f+1
  4374   001F28                     
  4375                           ; BSR set to: 0
  4376   001F28  0E00               	movlw	0
  4377   001F2A  6F70               	movwf	(i2sprintf@f+4)& (0+255),b
  4378   001F2C  0E00               	movlw	0
  4379   001F2E  6F6F               	movwf	(i2sprintf@f+3)& (0+255),b
  4380   001F30                     
  4381                           ; BSR set to: 0
  4382   001F30  0E00               	movlw	0
  4383   001F32  6F76               	movwf	(i2sprintf@f+10)& (0+255),b
  4384   001F34  0E00               	movlw	0
  4385   001F36  6F75               	movwf	(i2sprintf@f+9)& (0+255),b
  4386   001F38                     
  4387                           ; BSR set to: 0
  4388   001F38  0E6C               	movlw	low i2sprintf@f
  4389   001F3A  6E53               	movwf	i2vfprintf@fp^0,c
  4390   001F3C  0E00               	movlw	high i2sprintf@f
  4391   001F3E  6E54               	movwf	(i2vfprintf@fp+1)^0,c
  4392   001F40  C062  F055         	movff	i2sprintf@fmt,i2vfprintf@fmt
  4393   001F44  C063  F056         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  4394   001F48  0E6A               	movlw	low i2sprintf@ap
  4395   001F4A  6E57               	movwf	i2vfprintf@ap^0,c
  4396   001F4C  0E00               	movlw	high i2sprintf@ap
  4397   001F4E  6E58               	movwf	(i2vfprintf@ap+1)^0,c
  4398   001F50  ECB4  F00F         	call	i2_vfprintf	;wreg free
  4399   001F54  0100               	movlb	0	; () banked
  4400   001F56  516F               	movf	(i2sprintf@f+3)& (0+255),w,b
  4401   001F58  2560               	addwf	i2sprintf@s& (0+255),w,b
  4402   001F5A  6ED9               	movwf	fsr2l,c
  4403   001F5C  5170               	movf	(i2sprintf@f+4)& (0+255),w,b
  4404   001F5E  2161               	addwfc	(i2sprintf@s+1)& (0+255),w,b
  4405   001F60  6EDA               	movwf	fsr2h,c
  4406   001F62  0E00               	movlw	0
  4407   001F64  6EDF               	movwf	indf2,c
  4408   001F66                     
  4409                           ; BSR set to: 0
  4410   001F66  0012               	return		;funcret
  4411   001F68                     __end_ofi2_sprintf:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function i2_vfprintf *****************
  4415 ;; Defined at:
  4416 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  4419 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4420 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  4421 ;;		 -> STR_4(23), STR_1(23), 
  4422 ;;  ap              2   86[COMRAM] PTR PTR void 
  4423 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  4426 ;;		 -> STR_4(23), STR_1(23), 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  2   82[COMRAM] int 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4436 ;;      Params:         6       0       0       0       0       0       0       0       0
  4437 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4439 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4440 ;;Total ram usage:        8 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; Hardware stack levels required when called: 6
  4443 ;; This function calls:
  4444 ;;		i2_vfpfcnvrt
  4445 ;; This function is called by:
  4446 ;;		i2_sprintf
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text29
  4451   001F68                     __ptext29:
  4452                           	callstack 0
  4453   001F68                     i2_vfprintf:
  4454                           	callstack 14
  4455   001F68                     
  4456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4457   001F68  C055  F059         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4458   001F6C  C056  F05A         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4461   001F70  EFC8  F00F         	goto	i2l4160
  4462   001F74                     i2l4158:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4465   001F74  C053  F03D         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4466   001F78  C054  F03E         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4467   001F7C  0E59               	movlw	low i2vfprintf@cfmt
  4468   001F7E  6E3F               	movwf	i2vfpfcnvrt@fmt^0,c
  4469   001F80  0E00               	movlw	high i2vfprintf@cfmt
  4470   001F82  6E40               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  4471   001F84  C057  F041         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4472   001F88  C058  F042         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4473   001F8C  EC6F  F005         	call	i2_vfpfcnvrt	;wreg free
  4474   001F90                     i2l4160:
  4475                           
  4476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4477   001F90  C059  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4478   001F94  C05A  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  4479   001F98                     	if	0	;tblptru may be non-zero
  4480   001F98                     	endif
  4481   001F98                     	if	0	;tblptru may be non-zero
  4482   001F98                     	endif
  4483   001F98  0008               	tblrd		*
  4484   001F9A  50F5               	movf	tablat,w,c
  4485   001F9C  0900               	iorlw	0
  4486   001F9E  A4D8               	btfss	status,2,c
  4487   001FA0  EFD4  F00F         	goto	i2u329_41
  4488   001FA4  EFD6  F00F         	goto	i2u329_40
  4489   001FA8                     i2u329_41:
  4490   001FA8  EFBA  F00F         	goto	i2l4158
  4491   001FAC                     i2u329_40:
  4492   001FAC                     
  4493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4494   001FAC  0E00               	movlw	0
  4495   001FAE  6E54               	movwf	(?i2_vfprintf+1)^0,c
  4496   001FB0  0E00               	movlw	0
  4497   001FB2  6E53               	movwf	?i2_vfprintf^0,c
  4498   001FB4  0012               	return		;funcret
  4499   001FB6                     __end_ofi2_vfprintf:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function i2_vfpfcnvrt *****************
  4503 ;; Defined at:
  4504 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  fp              2   60[COMRAM] PTR struct _IO_FILE
  4507 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4508 ;;  fmt             2   62[COMRAM] PTR PTR unsigned char 
  4509 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  4510 ;;  ap              2   64[COMRAM] PTR PTR void 
  4511 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  convarg         8   70[COMRAM] struct .
  4514 ;;  cp              2   80[COMRAM] PTR unsigned char 
  4515 ;;		 -> STR_4(23), STR_1(23), 
  4516 ;;  done            2   78[COMRAM] int 
  4517 ;;  i               2    0        int 
  4518 ;;  c               1    0        unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4528 ;;      Params:         6       0       0       0       0       0       0       0       0
  4529 ;;      Locals:        12       0       0       0       0       0       0       0       0
  4530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4531 ;;      Totals:        22       0       0       0       0       0       0       0       0
  4532 ;;Total ram usage:       22 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; Hardware stack levels required when called: 5
  4535 ;; This function calls:
  4536 ;;		i2_atoi
  4537 ;;		i2_fputc
  4538 ;;		i2_isdigit
  4539 ;;		i2_utoa
  4540 ;; This function is called by:
  4541 ;;		i2_vfprintf
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text30
  4546   000ADE                     __ptext30:
  4547                           	callstack 0
  4548   000ADE                     i2_vfpfcnvrt:
  4549                           	callstack 14
  4550   000ADE                     
  4551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4552   000ADE  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4553   000AE2  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4554   000AE6  CFDE FFF6          	movff	postinc2,tblptrl
  4555   000AEA  CFDD FFF7          	movff	postdec2,tblptrh
  4556   000AEE                     	if	0	;tblptru may be non-zero
  4557   000AEE                     	endif
  4558   000AEE                     	if	0	;tblptru may be non-zero
  4559   000AEE                     	endif
  4560   000AEE  0008               	tblrd		*
  4561   000AF0  50F5               	movf	tablat,w,c
  4562   000AF2  0A25               	xorlw	37
  4563   000AF4  A4D8               	btfss	status,2,c
  4564   000AF6  EF7F  F005         	goto	i2u322_41
  4565   000AFA  EF81  F005         	goto	i2u322_40
  4566   000AFE                     i2u322_41:
  4567   000AFE  EFB5  F006         	goto	i2l4056
  4568   000B02                     i2u322_40:
  4569   000B02                     
  4570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4571   000B02  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4572   000B06  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4573   000B0A  2ADE               	incf	postinc2,f,c
  4574   000B0C  0E00               	movlw	0
  4575   000B0E  22DD               	addwfc	postdec2,f,c
  4576   000B10                     
  4577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4578   000B10  0E00               	movlw	0
  4579   000B12  0100               	movlb	0	; () banked
  4580   000B14  6FD6               	movwf	(_width+1)& (0+255),b
  4581   000B16  0E00               	movlw	0
  4582   000B18  6FD5               	movwf	_width& (0+255),b
  4583   000B1A  C0D5  F0D9         	movff	_width,_flags
  4584   000B1E                     
  4585                           ; BSR set to: 0
  4586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4587   000B1E  69D7               	setf	_prec& (0+255),b
  4588   000B20  69D8               	setf	(_prec+1)& (0+255),b
  4589   000B22                     
  4590                           ; BSR set to: 0
  4591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  4592   000B22  0E00               	movlw	0
  4593   000B24  6E50               	movwf	(i2vfpfcnvrt@done+1)^0,c
  4594   000B26  0E00               	movlw	0
  4595   000B28  6E4F               	movwf	i2vfpfcnvrt@done^0,c
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4598   000B2A  EFC2  F005         	goto	i2l4020
  4599   000B2E                     i2l4010:
  4600                           
  4601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  4602   000B2E  0100               	movlb	0	; () banked
  4603   000B30  83D9               	bsf	_flags& (0+255),1,b
  4604   000B32                     
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  4607   000B32  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4608   000B36  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4609   000B3A  2ADE               	incf	postinc2,f,c
  4610   000B3C  0E00               	movlw	0
  4611   000B3E  22DD               	addwfc	postdec2,f,c
  4612                           
  4613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  4614   000B40  EFC2  F005         	goto	i2l4020
  4615   000B44                     i2l4014:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  4618   000B44  0E00               	movlw	0
  4619   000B46  6E50               	movwf	(i2vfpfcnvrt@done+1)^0,c
  4620   000B48  0E01               	movlw	1
  4621   000B4A  6E4F               	movwf	i2vfpfcnvrt@done^0,c
  4622                           
  4623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  4624   000B4C  EFC2  F005         	goto	i2l4020
  4625   000B50                     i2l4018:
  4626   000B50  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4627   000B54  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4628   000B58  CFDE FFF6          	movff	postinc2,tblptrl
  4629   000B5C  CFDD FFF7          	movff	postdec2,tblptrh
  4630   000B60                     	if	0	;tblptru may be non-zero
  4631   000B60                     	endif
  4632   000B60                     	if	0	;tblptru may be non-zero
  4633   000B60                     	endif
  4634   000B60  0008               	tblrd		*
  4635   000B62  50F5               	movf	tablat,w,c
  4636   000B64  6E43               	movwf	??i2_vfpfcnvrt^0,c
  4637   000B66  6A44               	clrf	(??i2_vfpfcnvrt+1)^0,c
  4638                           
  4639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4640                           ; Switch size 1, requested type "simple"
  4641                           ; Number of cases is 1, Range of values is 0 to 0
  4642                           ; switch strategies available:
  4643                           ; Name         Instructions Cycles
  4644                           ; simple_byte            4     3 (average)
  4645                           ;	Chosen strategy is simple_byte
  4646   000B68  5044               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  4647   000B6A  0A00               	xorlw	0	; case 0
  4648   000B6C  B4D8               	btfsc	status,2,c
  4649   000B6E  EFBB  F005         	goto	i2l4432
  4650   000B72  EFA2  F005         	goto	i2l4014
  4651   000B76                     i2l4432:
  4652                           
  4653                           ; Switch size 1, requested type "simple"
  4654                           ; Number of cases is 1, Range of values is 48 to 48
  4655                           ; switch strategies available:
  4656                           ; Name         Instructions Cycles
  4657                           ; simple_byte            4     3 (average)
  4658                           ;	Chosen strategy is simple_byte
  4659   000B76  5043               	movf	??i2_vfpfcnvrt^0,w,c
  4660   000B78  0A30               	xorlw	48	; case 48
  4661   000B7A  B4D8               	btfsc	status,2,c
  4662   000B7C  EF97  F005         	goto	i2l4010
  4663   000B80  EFA2  F005         	goto	i2l4014
  4664   000B84                     i2l4020:
  4665                           
  4666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4667   000B84  504F               	movf	i2vfpfcnvrt@done^0,w,c
  4668   000B86  1050               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
  4669   000B88  B4D8               	btfsc	status,2,c
  4670   000B8A  EFC9  F005         	goto	i2u323_41
  4671   000B8E  EFCB  F005         	goto	i2u323_40
  4672   000B92                     i2u323_41:
  4673   000B92  EFA8  F005         	goto	i2l4018
  4674   000B96                     i2u323_40:
  4675   000B96                     
  4676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  4677   000B96  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4678   000B9A  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4679   000B9E  CFDE FFF6          	movff	postinc2,tblptrl
  4680   000BA2  CFDD FFF7          	movff	postdec2,tblptrh
  4681   000BA6                     	if	0	;tblptru may be non-zero
  4682   000BA6                     	endif
  4683   000BA6                     	if	0	;tblptru may be non-zero
  4684   000BA6                     	endif
  4685   000BA6  0008               	tblrd		*
  4686   000BA8  50F5               	movf	tablat,w,c
  4687   000BAA  0A2A               	xorlw	42
  4688   000BAC  A4D8               	btfss	status,2,c
  4689   000BAE  EFDB  F005         	goto	i2u324_41
  4690   000BB2  EFDD  F005         	goto	i2u324_40
  4691   000BB6                     i2u324_41:
  4692   000BB6  EF07  F006         	goto	i2l4030
  4693   000BBA                     i2u324_40:
  4694   000BBA                     
  4695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  4696   000BBA  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4697   000BBE  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4698   000BC2  2ADE               	incf	postinc2,f,c
  4699   000BC4  0E00               	movlw	0
  4700   000BC6  22DD               	addwfc	postdec2,f,c
  4701                           
  4702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4703   000BC8  C041  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4704   000BCC  C042  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4705   000BD0  CFDF F043          	movff	indf2,??i2_vfpfcnvrt
  4706   000BD4  0E02               	movlw	2
  4707   000BD6  26DE               	addwf	postinc2,f,c
  4708   000BD8  CFDF F044          	movff	indf2,??i2_vfpfcnvrt+1
  4709   000BDC  0E00               	movlw	0
  4710   000BDE  22DD               	addwfc	postdec2,f,c
  4711   000BE0  C043  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4712   000BE4  C044  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4713   000BE8  CFDE F0D5          	movff	postinc2,_width
  4714   000BEC  CFDD F0D6          	movff	postdec2,_width+1
  4715   000BF0                     
  4716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  4717   000BF0  0100               	movlb	0	; () banked
  4718   000BF2  BFD6               	btfsc	(_width+1)& (0+255),7,b
  4719   000BF4  EF00  F006         	goto	i2u325_40
  4720   000BF8  EFFE  F005         	goto	i2u325_41
  4721   000BFC                     i2u325_41:
  4722   000BFC  EF3A  F006         	goto	i2l4038
  4723   000C00                     i2u325_40:
  4724   000C00                     
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  4727   000C00  81D9               	bsf	_flags& (0+255),0,b
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  4730   000C02  6DD5               	negf	_width& (0+255),b
  4731   000C04  1FD6               	comf	(_width+1)& (0+255),f,b
  4732   000C06  B0D8               	btfsc	status,0,c
  4733   000C08  2BD6               	incf	(_width+1)& (0+255),f,b
  4734   000C0A  EF3A  F006         	goto	i2l4038
  4735   000C0E                     i2l4030:
  4736                           
  4737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  4738   000C0E  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4739   000C12  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4740   000C16  CFDE F007          	movff	postinc2,i2atoi@s
  4741   000C1A  CFDD F008          	movff	postdec2,i2atoi@s+1
  4742   000C1E  EC6E  F009         	call	i2_atoi	;wreg free
  4743   000C22  C007  F0D5         	movff	?i2_atoi,_width
  4744   000C26  C008  F0D6         	movff	?i2_atoi+1,_width+1
  4745                           
  4746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4747   000C2A  EF1E  F006         	goto	i2l4036
  4748   000C2E                     i2l4032:
  4749                           
  4750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  4751   000C2E  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4752   000C32  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4753   000C36  2ADE               	incf	postinc2,f,c
  4754   000C38  0E00               	movlw	0
  4755   000C3A  22DD               	addwfc	postdec2,f,c
  4756   000C3C                     i2l4036:
  4757   000C3C  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4758   000C40  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4759   000C44  CFDE FFF6          	movff	postinc2,tblptrl
  4760   000C48  CFDD FFF7          	movff	postdec2,tblptrh
  4761   000C4C                     	if	0	;tblptru may be non-zero
  4762   000C4C                     	endif
  4763   000C4C                     	if	0	;tblptru may be non-zero
  4764   000C4C                     	endif
  4765   000C4C  0008               	tblrd		*
  4766   000C4E  CFF5 F043          	movff	tablat,??i2_vfpfcnvrt
  4767   000C52  0ED0               	movlw	208
  4768   000C54  2443               	addwf	??i2_vfpfcnvrt^0,w,c
  4769   000C56  6E44               	movwf	(??i2_vfpfcnvrt+1)^0,c
  4770   000C58  6A45               	clrf	(??i2_vfpfcnvrt+2)^0,c
  4771   000C5A  0EFF               	movlw	255
  4772   000C5C  2245               	addwfc	(??i2_vfpfcnvrt+2)^0,f,c
  4773   000C5E  5045               	movf	(??i2_vfpfcnvrt+2)^0,w,c
  4774   000C60  E109               	bnz	i2u326_40
  4775   000C62  0E0A               	movlw	10
  4776   000C64  5C44               	subwf	(??i2_vfpfcnvrt+1)^0,w,c
  4777   000C66  A0D8               	btfss	status,0,c
  4778   000C68  EF38  F006         	goto	i2u326_41
  4779   000C6C  EF3A  F006         	goto	i2u326_40
  4780   000C70                     i2u326_41:
  4781   000C70  EF17  F006         	goto	i2l4032
  4782   000C74                     i2u326_40:
  4783   000C74                     i2l4038:
  4784                           
  4785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  4786   000C74  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4787   000C78  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4788   000C7C  CFDE F051          	movff	postinc2,i2vfpfcnvrt@cp
  4789   000C80  CFDD F052          	movff	postdec2,i2vfpfcnvrt@cp+1
  4790   000C84  C051  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4791   000C88  C052  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  4792   000C8C                     	if	0	;tblptru may be non-zero
  4793   000C8C                     	endif
  4794   000C8C                     	if	0	;tblptru may be non-zero
  4795   000C8C                     	endif
  4796   000C8C  0008               	tblrd		*
  4797   000C8E  50F5               	movf	tablat,w,c
  4798   000C90  0A75               	xorlw	117
  4799   000C92  A4D8               	btfss	status,2,c
  4800   000C94  EF4E  F006         	goto	i2u327_41
  4801   000C98  EF50  F006         	goto	i2u327_40
  4802   000C9C                     i2u327_41:
  4803   000C9C  EFAC  F006         	goto	i2l4052
  4804   000CA0                     i2u327_40:
  4805   000CA0                     
  4806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4807   000CA0  C041  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4808   000CA4  C042  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4809   000CA8  CFDF F043          	movff	indf2,??i2_vfpfcnvrt
  4810   000CAC  0E02               	movlw	2
  4811   000CAE  26DE               	addwf	postinc2,f,c
  4812   000CB0  CFDF F044          	movff	indf2,??i2_vfpfcnvrt+1
  4813   000CB4  0E00               	movlw	0
  4814   000CB6  22DD               	addwfc	postdec2,f,c
  4815   000CB8  C043  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4816   000CBC  C044  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4817   000CC0  CFDE F045          	movff	postinc2,??i2_vfpfcnvrt+2
  4818   000CC4  CFDD F046          	movff	postdec2,??i2_vfpfcnvrt+3
  4819   000CC8  C045  F047         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@convarg
  4820   000CCC  C046  F048         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@convarg+1
  4821   000CD0  6A49               	clrf	(i2vfpfcnvrt@convarg+2)^0,c
  4822   000CD2  6A4A               	clrf	(i2vfpfcnvrt@convarg+3)^0,c
  4823   000CD4  6A4B               	clrf	(i2vfpfcnvrt@convarg+4)^0,c
  4824   000CD6  6A4C               	clrf	(i2vfpfcnvrt@convarg+5)^0,c
  4825   000CD8  6A4D               	clrf	(i2vfpfcnvrt@convarg+6)^0,c
  4826   000CDA  6A4E               	clrf	(i2vfpfcnvrt@convarg+7)^0,c
  4827                           
  4828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  4829   000CDC  0E01               	movlw	1
  4830   000CDE  2451               	addwf	i2vfpfcnvrt@cp^0,w,c
  4831   000CE0  6E43               	movwf	??i2_vfpfcnvrt^0,c
  4832   000CE2  0E00               	movlw	0
  4833   000CE4  2052               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  4834   000CE6  6E44               	movwf	(??i2_vfpfcnvrt+1)^0,c
  4835   000CE8  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4836   000CEC  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4837   000CF0  C043  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  4838   000CF4  C044  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  4841   000CF8  EF96  F006         	goto	i2l4050
  4842   000CFC                     i2l4044:
  4843                           
  4844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of i2_vfpfcnvrt is never used
  4845   000CFC  C03D  F01D         	movff	i2vfpfcnvrt@fp,i2utoa@fp
  4846   000D00  C03E  F01E         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
  4847   000D04  C047  F01F         	movff	i2vfpfcnvrt@convarg,i2utoa@d
  4848   000D08  C048  F020         	movff	i2vfpfcnvrt@convarg+1,i2utoa@d+1
  4849   000D0C  C049  F021         	movff	i2vfpfcnvrt@convarg+2,i2utoa@d+2
  4850   000D10  C04A  F022         	movff	i2vfpfcnvrt@convarg+3,i2utoa@d+3
  4851   000D14  C04B  F023         	movff	i2vfpfcnvrt@convarg+4,i2utoa@d+4
  4852   000D18  C04C  F024         	movff	i2vfpfcnvrt@convarg+5,i2utoa@d+5
  4853   000D1C  C04D  F025         	movff	i2vfpfcnvrt@convarg+6,i2utoa@d+6
  4854   000D20  C04E  F026         	movff	i2vfpfcnvrt@convarg+7,i2utoa@d+7
  4855   000D24  ECC9  F007         	call	i2_utoa	;wreg free
  4856   000D28  EFC9  F006         	goto	i2l1194
  4857   000D2C                     i2l4050:
  4858   000D2C  C051  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4859   000D30  C052  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  4860   000D34                     	if	0	;tblptru may be non-zero
  4861   000D34                     	endif
  4862   000D34                     	if	0	;tblptru may be non-zero
  4863   000D34                     	endif
  4864   000D34  0008               	tblrd		*
  4865   000D36  50F5               	movf	tablat,w,c
  4866   000D38  6E43               	movwf	??i2_vfpfcnvrt^0,c
  4867   000D3A  6A44               	clrf	(??i2_vfpfcnvrt+1)^0,c
  4868                           
  4869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4870                           ; Switch size 1, requested type "simple"
  4871                           ; Number of cases is 1, Range of values is 0 to 0
  4872                           ; switch strategies available:
  4873                           ; Name         Instructions Cycles
  4874                           ; simple_byte            4     3 (average)
  4875                           ;	Chosen strategy is simple_byte
  4876   000D3C  5044               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  4877   000D3E  0A00               	xorlw	0	; case 0
  4878   000D40  B4D8               	btfsc	status,2,c
  4879   000D42  EFA5  F006         	goto	i2l4434
  4880   000D46  EFAC  F006         	goto	i2l4052
  4881   000D4A                     i2l4434:
  4882                           
  4883                           ; Switch size 1, requested type "simple"
  4884                           ; Number of cases is 1, Range of values is 117 to 117
  4885                           ; switch strategies available:
  4886                           ; Name         Instructions Cycles
  4887                           ; simple_byte            4     3 (average)
  4888                           ;	Chosen strategy is simple_byte
  4889   000D4A  5043               	movf	??i2_vfpfcnvrt^0,w,c
  4890   000D4C  0A75               	xorlw	117	; case 117
  4891   000D4E  B4D8               	btfsc	status,2,c
  4892   000D50  EF7E  F006         	goto	i2l4044
  4893   000D54  EFAC  F006         	goto	i2l4052
  4894   000D58                     i2l4052:
  4895                           
  4896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4897   000D58  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4898   000D5C  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4899   000D60  2ADE               	incf	postinc2,f,c
  4900   000D62  0E00               	movlw	0
  4901   000D64  22DD               	addwfc	postdec2,f,c
  4902   000D66  EFC9  F006         	goto	i2l1194
  4903   000D6A                     i2l4056:
  4904                           
  4905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4906   000D6A  C03F  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4907   000D6E  C040  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4908   000D72  CFDE FFF6          	movff	postinc2,tblptrl
  4909   000D76  CFDD FFF7          	movff	postdec2,tblptrh
  4910   000D7A                     	if	0	;tblptru may be non-zero
  4911   000D7A                     	endif
  4912   000D7A                     	if	0	;tblptru may be non-zero
  4913   000D7A                     	endif
  4914   000D7A  0008               	tblrd		*
  4915   000D7C  50F5               	movf	tablat,w,c
  4916   000D7E  6E02               	movwf	i2fputc@c^0,c
  4917   000D80  6A03               	clrf	(i2fputc@c+1)^0,c
  4918   000D82  C03D  F004         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4919   000D86  C03E  F005         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4920   000D8A  EC3B  F00C         	call	i2_fputc	;wreg free
  4921   000D8E  EFAC  F006         	goto	i2l4052
  4922   000D92                     i2l1194:
  4923   000D92  0012               	return		;funcret
  4924   000D94                     __end_ofi2_vfpfcnvrt:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function i2_utoa *****************
  4928 ;; Defined at:
  4929 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  4932 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4933 ;;  d               8   30[COMRAM] unsigned long long 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  n               8   50[COMRAM] unsigned long long 
  4936 ;;  i               2   58[COMRAM] int 
  4937 ;;  w               2   48[COMRAM] int 
  4938 ;;  p               2   46[COMRAM] int 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4948 ;;      Params:        10       0       0       0       0       0       0       0       0
  4949 ;;      Locals:        14       0       0       0       0       0       0       0       0
  4950 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4951 ;;      Totals:        32       0       0       0       0       0       0       0       0
  4952 ;;Total ram usage:       32 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 4
  4955 ;; This function calls:
  4956 ;;		i2___lodiv
  4957 ;;		i2___lomod
  4958 ;;		i2_pad
  4959 ;; This function is called by:
  4960 ;;		i2_vfpfcnvrt
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text31
  4965   000F92                     __ptext31:
  4966                           	callstack 0
  4967   000F92                     i2_utoa:
  4968                           	callstack 14
  4969   000F92                     
  4970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  4971   000F92  0100               	movlb	0	; () banked
  4972   000F94  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  4973   000F96  EFCF  F007         	goto	i2u305_41
  4974   000F9A  EFD1  F007         	goto	i2u305_40
  4975   000F9E                     i2u305_41:
  4976   000F9E  EFD2  F007         	goto	i2l3852
  4977   000FA2                     i2u305_40:
  4978   000FA2                     
  4979                           ; BSR set to: 0
  4980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  4981   000FA2  93D9               	bcf	_flags& (0+255),1,b
  4982   000FA4                     i2l3852:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  4986   000FA4  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  4987   000FA6  EFDF  F007         	goto	i2u306_40
  4988   000FAA  51D8               	movf	(_prec+1)& (0+255),w,b
  4989   000FAC  E106               	bnz	i2u306_41
  4990   000FAE  05D7               	decf	_prec& (0+255),w,b
  4991   000FB0  B0D8               	btfsc	status,0,c
  4992   000FB2  EFDD  F007         	goto	i2u306_41
  4993   000FB6  EFDF  F007         	goto	i2u306_40
  4994   000FBA                     i2u306_41:
  4995   000FBA  EFE5  F007         	goto	i2l1160
  4996   000FBE                     i2u306_40:
  4997   000FBE                     
  4998                           ; BSR set to: 0
  4999   000FBE  0E00               	movlw	0
  5000   000FC0  6E30               	movwf	(i2utoa@p+1)^0,c
  5001   000FC2  0E01               	movlw	1
  5002   000FC4  6E2F               	movwf	i2utoa@p^0,c
  5003   000FC6  EFE9  F007         	goto	i2l1162
  5004   000FCA                     i2l1160:
  5005                           
  5006                           ; BSR set to: 0
  5007   000FCA  C0D7  F02F         	movff	_prec,i2utoa@p
  5008   000FCE  C0D8  F030         	movff	_prec+1,i2utoa@p+1
  5009   000FD2                     i2l1162:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  5013   000FD2  C0D5  F031         	movff	_width,i2utoa@w
  5014   000FD6  C0D6  F032         	movff	_width+1,i2utoa@w+1
  5015                           
  5016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  5017   000FDA  C01F  F033         	movff	i2utoa@d,i2utoa@n
  5018   000FDE  C020  F034         	movff	i2utoa@d+1,i2utoa@n+1
  5019   000FE2  C021  F035         	movff	i2utoa@d+2,i2utoa@n+2
  5020   000FE6  C022  F036         	movff	i2utoa@d+3,i2utoa@n+3
  5021   000FEA  C023  F037         	movff	i2utoa@d+4,i2utoa@n+4
  5022   000FEE  C024  F038         	movff	i2utoa@d+5,i2utoa@n+5
  5023   000FF2  C025  F039         	movff	i2utoa@d+6,i2utoa@n+6
  5024   000FF6  C026  F03A         	movff	i2utoa@d+7,i2utoa@n+7
  5025   000FFA                     
  5026                           ; BSR set to: 0
  5027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  5028   000FFA  0E00               	movlw	0
  5029   000FFC  6E3C               	movwf	(i2utoa@i+1)^0,c
  5030   000FFE  0E1F               	movlw	31
  5031   001000  6E3B               	movwf	i2utoa@i^0,c
  5032   001002                     
  5033                           ; BSR set to: 0
  5034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  5035   001002  0E00               	movlw	0
  5036   001004  0101               	movlb	1	; () banked
  5037   001006  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5038                           
  5039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5040   001008  EF7C  F008         	goto	i2l3870
  5041   00100C                     i2l3860:
  5042                           
  5043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  5044   00100C  063B               	decf	i2utoa@i^0,f,c
  5045   00100E  A0D8               	btfss	status,0,c
  5046   001010  063C               	decf	(i2utoa@i+1)^0,f,c
  5047   001012                     
  5048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  5049   001012  0E00               	movlw	low _dbuf
  5050   001014  243B               	addwf	i2utoa@i^0,w,c
  5051   001016  6ED9               	movwf	fsr2l,c
  5052   001018  0E01               	movlw	high _dbuf
  5053   00101A  203C               	addwfc	(i2utoa@i+1)^0,w,c
  5054   00101C  6EDA               	movwf	fsr2h,c
  5055   00101E  C033  F001         	movff	i2utoa@n,i2___lomod@dividend
  5056   001022  C034  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
  5057   001026  C035  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
  5058   00102A  C036  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
  5059   00102E  C037  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
  5060   001032  C038  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
  5061   001036  C039  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
  5062   00103A  C03A  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
  5063   00103E  0E0A               	movlw	10
  5064   001040  6E09               	movwf	i2___lomod@divisor^0,c
  5065   001042  0E00               	movlw	0
  5066   001044  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
  5067   001046  0E00               	movlw	0
  5068   001048  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
  5069   00104A  0E00               	movlw	0
  5070   00104C  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
  5071   00104E  0E00               	movlw	0
  5072   001050  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
  5073   001052  0E00               	movlw	0
  5074   001054  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
  5075   001056  0E00               	movlw	0
  5076   001058  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
  5077   00105A  0E00               	movlw	0
  5078   00105C  6E10               	movwf	(i2___lomod@divisor+7)^0,c
  5079   00105E  EC6D  F00B         	call	i2___lomod	;wreg free
  5080   001062  C001  F027         	movff	?i2___lomod,??i2_utoa
  5081   001066  C002  F028         	movff	?i2___lomod+1,??i2_utoa+1
  5082   00106A  C003  F029         	movff	?i2___lomod+2,??i2_utoa+2
  5083   00106E  C004  F02A         	movff	?i2___lomod+3,??i2_utoa+3
  5084   001072  C005  F02B         	movff	?i2___lomod+4,??i2_utoa+4
  5085   001076  C006  F02C         	movff	?i2___lomod+5,??i2_utoa+5
  5086   00107A  C007  F02D         	movff	?i2___lomod+6,??i2_utoa+6
  5087   00107E  C008  F02E         	movff	?i2___lomod+7,??i2_utoa+7
  5088   001082  5027               	movf	??i2_utoa^0,w,c
  5089   001084  0F30               	addlw	48
  5090   001086  6EDF               	movwf	indf2,c
  5091   001088                     
  5092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  5093   001088  062F               	decf	i2utoa@p^0,f,c
  5094   00108A  A0D8               	btfss	status,0,c
  5095   00108C  0630               	decf	(i2utoa@p+1)^0,f,c
  5096   00108E                     
  5097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  5098   00108E  0631               	decf	i2utoa@w^0,f,c
  5099   001090  A0D8               	btfss	status,0,c
  5100   001092  0632               	decf	(i2utoa@w+1)^0,f,c
  5101   001094                     
  5102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  5103   001094  C033  F001         	movff	i2utoa@n,i2___lodiv@dividend
  5104   001098  C034  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
  5105   00109C  C035  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
  5106   0010A0  C036  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
  5107   0010A4  C037  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
  5108   0010A8  C038  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
  5109   0010AC  C039  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
  5110   0010B0  C03A  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
  5111   0010B4  0E0A               	movlw	10
  5112   0010B6  6E09               	movwf	i2___lodiv@divisor^0,c
  5113   0010B8  0E00               	movlw	0
  5114   0010BA  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
  5115   0010BC  0E00               	movlw	0
  5116   0010BE  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
  5117   0010C0  0E00               	movlw	0
  5118   0010C2  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
  5119   0010C4  0E00               	movlw	0
  5120   0010C6  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
  5121   0010C8  0E00               	movlw	0
  5122   0010CA  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
  5123   0010CC  0E00               	movlw	0
  5124   0010CE  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
  5125   0010D0  0E00               	movlw	0
  5126   0010D2  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
  5127   0010D4  EC8C  F00A         	call	i2___lodiv	;wreg free
  5128   0010D8  C001  F033         	movff	?i2___lodiv,i2utoa@n
  5129   0010DC  C002  F034         	movff	?i2___lodiv+1,i2utoa@n+1
  5130   0010E0  C003  F035         	movff	?i2___lodiv+2,i2utoa@n+2
  5131   0010E4  C004  F036         	movff	?i2___lodiv+3,i2utoa@n+3
  5132   0010E8  C005  F037         	movff	?i2___lodiv+4,i2utoa@n+4
  5133   0010EC  C006  F038         	movff	?i2___lodiv+5,i2utoa@n+5
  5134   0010F0  C007  F039         	movff	?i2___lodiv+6,i2utoa@n+6
  5135   0010F4  C008  F03A         	movff	?i2___lodiv+7,i2utoa@n+7
  5136   0010F8                     i2l3870:
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5139   0010F8  503B               	movf	i2utoa@i^0,w,c
  5140   0010FA  103C               	iorwf	(i2utoa@i+1)^0,w,c
  5141   0010FC  B4D8               	btfsc	status,2,c
  5142   0010FE  EF83  F008         	goto	i2u307_41
  5143   001102  EF85  F008         	goto	i2u307_40
  5144   001106                     i2u307_41:
  5145   001106  EFB6  F008         	goto	i2l3880
  5146   00110A                     i2u307_40:
  5147   00110A  5033               	movf	i2utoa@n^0,w,c
  5148   00110C  1034               	iorwf	(i2utoa@n+1)^0,w,c
  5149   00110E  1035               	iorwf	(i2utoa@n+2)^0,w,c
  5150   001110  1036               	iorwf	(i2utoa@n+3)^0,w,c
  5151   001112  1037               	iorwf	(i2utoa@n+4)^0,w,c
  5152   001114  1038               	iorwf	(i2utoa@n+5)^0,w,c
  5153   001116  1039               	iorwf	(i2utoa@n+6)^0,w,c
  5154   001118  103A               	iorwf	(i2utoa@n+7)^0,w,c
  5155   00111A  A4D8               	btfss	status,2,c
  5156   00111C  EF92  F008         	goto	i2u308_41
  5157   001120  EF94  F008         	goto	i2u308_40
  5158   001124                     i2u308_41:
  5159   001124  EF06  F008         	goto	i2l3860
  5160   001128                     i2u308_40:
  5161   001128  BE30               	btfsc	(i2utoa@p+1)^0,7,c
  5162   00112A  EFA1  F008         	goto	i2u309_40
  5163   00112E  5030               	movf	(i2utoa@p+1)^0,w,c
  5164   001130  E106               	bnz	i2u309_41
  5165   001132  042F               	decf	i2utoa@p^0,w,c
  5166   001134  B0D8               	btfsc	status,0,c
  5167   001136  EF9F  F008         	goto	i2u309_41
  5168   00113A  EFA1  F008         	goto	i2u309_40
  5169   00113E                     i2u309_41:
  5170   00113E  EF06  F008         	goto	i2l3860
  5171   001142                     i2u309_40:
  5172   001142  BE32               	btfsc	(i2utoa@w+1)^0,7,c
  5173   001144  EFAC  F008         	goto	i2u310_41
  5174   001148  5032               	movf	(i2utoa@w+1)^0,w,c
  5175   00114A  E108               	bnz	i2u310_40
  5176   00114C  0431               	decf	i2utoa@w^0,w,c
  5177   00114E  A0D8               	btfss	status,0,c
  5178   001150  EFAC  F008         	goto	i2u310_41
  5179   001154  EFAE  F008         	goto	i2u310_40
  5180   001158                     i2u310_41:
  5181   001158  EFB6  F008         	goto	i2l3880
  5182   00115C                     i2u310_40:
  5183   00115C  0100               	movlb	0	; () banked
  5184   00115E  B3D9               	btfsc	_flags& (0+255),1,b
  5185   001160  EFB4  F008         	goto	i2u311_41
  5186   001164  EFB6  F008         	goto	i2u311_40
  5187   001168                     i2u311_41:
  5188   001168  EF06  F008         	goto	i2l3860
  5189   00116C                     i2u311_40:
  5190   00116C                     i2l3880:
  5191                           
  5192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5193   00116C  C01D  F012         	movff	i2utoa@fp,i2pad@fp
  5194   001170  C01E  F013         	movff	i2utoa@fp+1,i2pad@fp+1
  5195   001174  0E00               	movlw	low _dbuf
  5196   001176  243B               	addwf	i2utoa@i^0,w,c
  5197   001178  6E14               	movwf	i2pad@buf^0,c
  5198   00117A  0E01               	movlw	high _dbuf
  5199   00117C  203C               	addwfc	(i2utoa@i+1)^0,w,c
  5200   00117E  6E15               	movwf	(i2pad@buf+1)^0,c
  5201   001180  C031  F016         	movff	i2utoa@w,i2pad@p
  5202   001184  C032  F017         	movff	i2utoa@w+1,i2pad@p+1
  5203   001188  EC59  F00D         	call	i2_pad	;wreg free
  5204   00118C  0012               	return		;funcret
  5205   00118E                     __end_ofi2_utoa:
  5206                           	callstack 0
  5207                           
  5208 ;; *************** function i2_pad *****************
  5209 ;; Defined at:
  5210 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  5213 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5214 ;;  buf             2   19[COMRAM] PTR unsigned char 
  5215 ;;		 -> dbuf(32), 
  5216 ;;  p               2   21[COMRAM] int 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  w               2   26[COMRAM] int 
  5219 ;;  i               2   24[COMRAM] int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5229 ;;      Params:         6       0       0       0       0       0       0       0       0
  5230 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5231 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5232 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5233 ;;Total ram usage:       11 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 3
  5236 ;; This function calls:
  5237 ;;		i2_fputc
  5238 ;;		i2_fputs
  5239 ;; This function is called by:
  5240 ;;		i2_utoa
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text32
  5245   001AB2                     __ptext32:
  5246                           	callstack 0
  5247   001AB2                     i2_pad:
  5248                           	callstack 14
  5249   001AB2                     
  5250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  5251   001AB2  0100               	movlb	0	; () banked
  5252   001AB4  A1D9               	btfss	_flags& (0+255),0,b
  5253   001AB6  EF5F  F00D         	goto	i2u284_41
  5254   001ABA  EF61  F00D         	goto	i2u284_40
  5255   001ABE                     i2u284_41:
  5256   001ABE  EF6B  F00D         	goto	i2l3730
  5257   001AC2                     i2u284_40:
  5258   001AC2                     
  5259                           ; BSR set to: 0
  5260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  5261   001AC2  C014  F00B         	movff	i2pad@buf,i2fputs@s
  5262   001AC6  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  5263   001ACA  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  5264   001ACE  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  5265   001AD2  EC46  F010         	call	i2_fputs	;wreg free
  5266   001AD6                     i2l3730:
  5267                           
  5268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  5269   001AD6  BE17               	btfsc	(i2pad@p+1)^0,7,c
  5270   001AD8  EF70  F00D         	goto	i2u285_41
  5271   001ADC  EF72  F00D         	goto	i2u285_40
  5272   001AE0                     i2u285_41:
  5273   001AE0  EF78  F00D         	goto	i2l3734
  5274   001AE4                     i2u285_40:
  5275   001AE4  C016  F01B         	movff	i2pad@p,i2pad@w
  5276   001AE8  C017  F01C         	movff	i2pad@p+1,i2pad@w+1
  5277   001AEC  EF7C  F00D         	goto	i2l1150
  5278   001AF0                     i2l3734:
  5279   001AF0  0E00               	movlw	0
  5280   001AF2  6E1C               	movwf	(i2pad@w+1)^0,c
  5281   001AF4  0E00               	movlw	0
  5282   001AF6  6E1B               	movwf	i2pad@w^0,c
  5283   001AF8                     i2l1150:
  5284                           
  5285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5286   001AF8  0E00               	movlw	0
  5287   001AFA  6E1A               	movwf	(i2pad@i+1)^0,c
  5288   001AFC  0E00               	movlw	0
  5289   001AFE  6E19               	movwf	i2pad@i^0,c
  5290                           
  5291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5292   001B00  EF8E  F00D         	goto	i2l3740
  5293   001B04                     i2l3736:
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5296   001B04  0E00               	movlw	0
  5297   001B06  6E03               	movwf	(i2fputc@c+1)^0,c
  5298   001B08  0E20               	movlw	32
  5299   001B0A  6E02               	movwf	i2fputc@c^0,c
  5300   001B0C  C012  F004         	movff	i2pad@fp,i2fputc@fp
  5301   001B10  C013  F005         	movff	i2pad@fp+1,i2fputc@fp+1
  5302   001B14  EC3B  F00C         	call	i2_fputc	;wreg free
  5303   001B18                     
  5304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5305   001B18  4A19               	infsnz	i2pad@i^0,f,c
  5306   001B1A  2A1A               	incf	(i2pad@i+1)^0,f,c
  5307   001B1C                     i2l3740:
  5308                           
  5309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5310   001B1C  501B               	movf	i2pad@w^0,w,c
  5311   001B1E  5C19               	subwf	i2pad@i^0,w,c
  5312   001B20  501A               	movf	(i2pad@i+1)^0,w,c
  5313   001B22  0A80               	xorlw	128
  5314   001B24  6E18               	movwf	??i2_pad^0,c
  5315   001B26  501C               	movf	(i2pad@w+1)^0,w,c
  5316   001B28  0A80               	xorlw	128
  5317   001B2A  5818               	subwfb	??i2_pad^0,w,c
  5318   001B2C  A0D8               	btfss	status,0,c
  5319   001B2E  EF9B  F00D         	goto	i2u286_41
  5320   001B32  EF9D  F00D         	goto	i2u286_40
  5321   001B36                     i2u286_41:
  5322   001B36  EF82  F00D         	goto	i2l3736
  5323   001B3A                     i2u286_40:
  5324   001B3A                     
  5325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  5326   001B3A  0100               	movlb	0	; () banked
  5327   001B3C  B1D9               	btfsc	_flags& (0+255),0,b
  5328   001B3E  EFA3  F00D         	goto	i2u287_41
  5329   001B42  EFA5  F00D         	goto	i2u287_40
  5330   001B46                     i2u287_41:
  5331   001B46  EFAF  F00D         	goto	i2l1155
  5332   001B4A                     i2u287_40:
  5333   001B4A                     
  5334                           ; BSR set to: 0
  5335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5336   001B4A  C014  F00B         	movff	i2pad@buf,i2fputs@s
  5337   001B4E  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  5338   001B52  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  5339   001B56  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  5340   001B5A  EC46  F010         	call	i2_fputs	;wreg free
  5341   001B5E                     i2l1155:
  5342   001B5E  0012               	return		;funcret
  5343   001B60                     __end_ofi2_pad:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function i2_fputs *****************
  5347 ;; Defined at:
  5348 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  s               2   10[COMRAM] PTR const unsigned char 
  5351 ;;		 -> dbuf(32), 
  5352 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  5353 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  i               2   15[COMRAM] int 
  5356 ;;  c               1   14[COMRAM] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  2   10[COMRAM] int 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5366 ;;      Params:         4       0       0       0       0       0       0       0       0
  5367 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5369 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5370 ;;Total ram usage:        7 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 2
  5373 ;; This function calls:
  5374 ;;		i2_fputc
  5375 ;; This function is called by:
  5376 ;;		i2_pad
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text33
  5381   00208C                     __ptext33:
  5382                           	callstack 0
  5383   00208C                     i2_fputs:
  5384                           	callstack 14
  5385   00208C  0E00               	movlw	0
  5386   00208E  6E11               	movwf	(i2fputs@i+1)^0,c
  5387   002090  0E00               	movlw	0
  5388   002092  6E10               	movwf	i2fputs@i^0,c
  5389   002094  EF57  F010         	goto	i2l3602
  5390   002098                     i2l3598:
  5391   002098  C00F  F002         	movff	i2fputs@c,i2fputc@c
  5392   00209C  6A03               	clrf	(i2fputc@c+1)^0,c
  5393   00209E  C00D  F004         	movff	i2fputs@fp,i2fputc@fp
  5394   0020A2  C00E  F005         	movff	i2fputs@fp+1,i2fputc@fp+1
  5395   0020A6  EC3B  F00C         	call	i2_fputc	;wreg free
  5396   0020AA  4A10               	infsnz	i2fputs@i^0,f,c
  5397   0020AC  2A11               	incf	(i2fputs@i+1)^0,f,c
  5398   0020AE                     i2l3602:
  5399   0020AE  5010               	movf	i2fputs@i^0,w,c
  5400   0020B0  240B               	addwf	i2fputs@s^0,w,c
  5401   0020B2  6ED9               	movwf	fsr2l,c
  5402   0020B4  5011               	movf	(i2fputs@i+1)^0,w,c
  5403   0020B6  200C               	addwfc	(i2fputs@s+1)^0,w,c
  5404   0020B8  6EDA               	movwf	fsr2h,c
  5405   0020BA  50DF               	movf	indf2,w,c
  5406   0020BC  6E0F               	movwf	i2fputs@c^0,c
  5407   0020BE  500F               	movf	i2fputs@c^0,w,c
  5408   0020C0  A4D8               	btfss	status,2,c
  5409   0020C2  EF65  F010         	goto	i2u261_41
  5410   0020C6  EF67  F010         	goto	i2u261_40
  5411   0020CA                     i2u261_41:
  5412   0020CA  EF4C  F010         	goto	i2l3598
  5413   0020CE                     i2u261_40:
  5414   0020CE  0012               	return		;funcret
  5415   0020D0                     __end_ofi2_fputs:
  5416                           	callstack 0
  5417                           
  5418 ;; *************** function i2_fputc *****************
  5419 ;; Defined at:
  5420 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  c               2    1[COMRAM] int 
  5423 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  5424 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  2    1[COMRAM] int 
  5429 ;; Registers used:
  5430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5436 ;;      Params:         4       0       0       0       0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5438 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5439 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5440 ;;Total ram usage:        9 bytes
  5441 ;; Hardware stack levels used: 1
  5442 ;; Hardware stack levels required when called: 1
  5443 ;; This function calls:
  5444 ;;		i2_putch
  5445 ;; This function is called by:
  5446 ;;		i2_pad
  5447 ;;		i2_vfpfcnvrt
  5448 ;;		i2_fputs
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text34
  5453   001876                     __ptext34:
  5454                           	callstack 0
  5455   001876                     i2_fputc:
  5456                           	callstack 14
  5457   001876  5004               	movf	i2fputc@fp^0,w,c
  5458   001878  1005               	iorwf	(i2fputc@fp+1)^0,w,c
  5459   00187A  B4D8               	btfsc	status,2,c
  5460   00187C  EF42  F00C         	goto	i2u256_41
  5461   001880  EF44  F00C         	goto	i2u256_40
  5462   001884                     i2u256_41:
  5463   001884  EF4D  F00C         	goto	i2l3578
  5464   001888                     i2u256_40:
  5465   001888  5004               	movf	i2fputc@fp^0,w,c
  5466   00188A  1005               	iorwf	(i2fputc@fp+1)^0,w,c
  5467   00188C  A4D8               	btfss	status,2,c
  5468   00188E  EF4B  F00C         	goto	i2u257_41
  5469   001892  EF4D  F00C         	goto	i2u257_40
  5470   001896                     i2u257_41:
  5471   001896  EF52  F00C         	goto	i2l3580
  5472   00189A                     i2u257_40:
  5473   00189A                     i2l3578:
  5474   00189A  5002               	movf	i2fputc@c^0,w,c
  5475   00189C  EC46  F011         	call	i2_putch
  5476   0018A0  EF9F  F00C         	goto	i2l1252
  5477   0018A4                     i2l3580:
  5478   0018A4  EE20 F009          	lfsr	2,9
  5479   0018A8  5004               	movf	i2fputc@fp^0,w,c
  5480   0018AA  26D9               	addwf	fsr2l,f,c
  5481   0018AC  5005               	movf	(i2fputc@fp+1)^0,w,c
  5482   0018AE  22DA               	addwfc	fsr2h,f,c
  5483   0018B0  50DE               	movf	postinc2,w,c
  5484   0018B2  10DE               	iorwf	postinc2,w,c
  5485   0018B4  B4D8               	btfsc	status,2,c
  5486   0018B6  EF5F  F00C         	goto	i2u258_41
  5487   0018BA  EF61  F00C         	goto	i2u258_40
  5488   0018BE                     i2u258_41:
  5489   0018BE  EF7C  F00C         	goto	i2l3584
  5490   0018C2                     i2u258_40:
  5491   0018C2  EE20 F009          	lfsr	2,9
  5492   0018C6  5004               	movf	i2fputc@fp^0,w,c
  5493   0018C8  26D9               	addwf	fsr2l,f,c
  5494   0018CA  5005               	movf	(i2fputc@fp+1)^0,w,c
  5495   0018CC  22DA               	addwfc	fsr2h,f,c
  5496   0018CE  EE10 F003          	lfsr	1,3
  5497   0018D2  5004               	movf	i2fputc@fp^0,w,c
  5498   0018D4  26E1               	addwf	fsr1l,f,c
  5499   0018D6  5005               	movf	(i2fputc@fp+1)^0,w,c
  5500   0018D8  22E2               	addwfc	fsr1h,f,c
  5501   0018DA  50DE               	movf	postinc2,w,c
  5502   0018DC  5CE6               	subwf	postinc1,w,c
  5503   0018DE  50E6               	movf	postinc1,w,c
  5504   0018E0  0A80               	xorlw	128
  5505   0018E2  6E0A               	movwf	(??i2_fputc+4)^0,c
  5506   0018E4  50DE               	movf	postinc2,w,c
  5507   0018E6  0A80               	xorlw	128
  5508   0018E8  580A               	subwfb	(??i2_fputc+4)^0,w,c
  5509   0018EA  B0D8               	btfsc	status,0,c
  5510   0018EC  EF7A  F00C         	goto	i2u259_41
  5511   0018F0  EF7C  F00C         	goto	i2u259_40
  5512   0018F4                     i2u259_41:
  5513   0018F4  EF9F  F00C         	goto	i2l1252
  5514   0018F8                     i2u259_40:
  5515   0018F8                     i2l3584:
  5516   0018F8  EE20 F003          	lfsr	2,3
  5517   0018FC  5004               	movf	i2fputc@fp^0,w,c
  5518   0018FE  26D9               	addwf	fsr2l,f,c
  5519   001900  5005               	movf	(i2fputc@fp+1)^0,w,c
  5520   001902  22DA               	addwfc	fsr2h,f,c
  5521   001904  CFDE F006          	movff	postinc2,??i2_fputc
  5522   001908  CFDD F007          	movff	postdec2,??i2_fputc+1
  5523   00190C  C004  FFD9         	movff	i2fputc@fp,fsr2l
  5524   001910  C005  FFDA         	movff	i2fputc@fp+1,fsr2h
  5525   001914  CFDE F008          	movff	postinc2,??i2_fputc+2
  5526   001918  CFDD F009          	movff	postdec2,??i2_fputc+3
  5527   00191C  5006               	movf	??i2_fputc^0,w,c
  5528   00191E  2408               	addwf	(??i2_fputc+2)^0,w,c
  5529   001920  6ED9               	movwf	fsr2l,c
  5530   001922  5007               	movf	(??i2_fputc+1)^0,w,c
  5531   001924  2009               	addwfc	(??i2_fputc+3)^0,w,c
  5532   001926  6EDA               	movwf	fsr2h,c
  5533   001928  C002  FFDF         	movff	i2fputc@c,indf2
  5534   00192C  EE20 F003          	lfsr	2,3
  5535   001930  5004               	movf	i2fputc@fp^0,w,c
  5536   001932  26D9               	addwf	fsr2l,f,c
  5537   001934  5005               	movf	(i2fputc@fp+1)^0,w,c
  5538   001936  22DA               	addwfc	fsr2h,f,c
  5539   001938  2ADE               	incf	postinc2,f,c
  5540   00193A  0E00               	movlw	0
  5541   00193C  22DD               	addwfc	postdec2,f,c
  5542   00193E                     i2l1252:
  5543   00193E  0012               	return		;funcret
  5544   001940                     __end_ofi2_fputc:
  5545                           	callstack 0
  5546                           
  5547 ;; *************** function i2_putch *****************
  5548 ;; Defined at:
  5549 ;;		line 93 in file "lib_pic/usart.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  c               1    wreg     unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  c               1    0[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0
  5564 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5566 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5567 ;;Total ram usage:        1 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		i2_fputc
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text35
  5577   00228C                     __ptext35:
  5578                           	callstack 0
  5579   00228C                     i2_putch:
  5580                           	callstack 14
  5581                           
  5582                           ;incstack = 0
  5583                           ;i2putch@c stored from wreg
  5584   00228C  6E01               	movwf	i2putch@c^0,c
  5585   00228E                     i2l441:
  5586   00228E  A2AC               	btfss	172,1,c	;volatile
  5587   002290  EF4C  F011         	goto	i2u251_41
  5588   002294  EF4E  F011         	goto	i2u251_40
  5589   002298                     i2u251_41:
  5590   002298  EF47  F011         	goto	i2l441
  5591   00229C                     i2u251_40:
  5592   00229C                     
  5593                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  5594   00229C  C001  FFAD         	movff	i2putch@c,4013	;volatile
  5595   0022A0  0012               	return		;funcret
  5596   0022A2                     __end_ofi2_putch:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function i2___lomod *****************
  5600 ;; Defined at:
  5601 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  dividend        8    0[COMRAM] unsigned long long 
  5604 ;;  divisor         8    8[COMRAM] unsigned long long 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  counter         1   16[COMRAM] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  8    0[COMRAM] unsigned long long 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5616 ;;      Params:        16       0       0       0       0       0       0       0       0
  5617 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5619 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5620 ;;Total ram usage:       17 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		i2_utoa
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text36
  5630   0016DA                     __ptext36:
  5631                           	callstack 0
  5632   0016DA                     i2___lomod:
  5633                           	callstack 17
  5634   0016DA  5009               	movf	i2___lomod@divisor^0,w,c
  5635   0016DC  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
  5636   0016DE  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
  5637   0016E0  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
  5638   0016E2  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
  5639   0016E4  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
  5640   0016E6  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
  5641   0016E8  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
  5642   0016EA  B4D8               	btfsc	status,2,c
  5643   0016EC  EF7A  F00B         	goto	i2u281_41
  5644   0016F0  EF7C  F00B         	goto	i2u281_40
  5645   0016F4                     i2u281_41:
  5646   0016F4  EFC4  F00B         	goto	i2l895
  5647   0016F8                     i2u281_40:
  5648   0016F8  0E01               	movlw	1
  5649   0016FA  6E11               	movwf	i2___lomod@counter^0,c
  5650   0016FC  EF8A  F00B         	goto	i2l3716
  5651   001700                     i2l3714:
  5652   001700  90D8               	bcf	status,0,c
  5653   001702  3609               	rlcf	i2___lomod@divisor^0,f,c
  5654   001704  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
  5655   001706  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
  5656   001708  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
  5657   00170A  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
  5658   00170C  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
  5659   00170E  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
  5660   001710  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
  5661   001712  2A11               	incf	i2___lomod@counter^0,f,c
  5662   001714                     i2l3716:
  5663   001714  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
  5664   001716  EF8F  F00B         	goto	i2u282_41
  5665   00171A  EF91  F00B         	goto	i2u282_40
  5666   00171E                     i2u282_41:
  5667   00171E  EF80  F00B         	goto	i2l3714
  5668   001722                     i2u282_40:
  5669   001722                     i2l3718:
  5670   001722  5009               	movf	i2___lomod@divisor^0,w,c
  5671   001724  5C01               	subwf	i2___lomod@dividend^0,w,c
  5672   001726  500A               	movf	(i2___lomod@divisor+1)^0,w,c
  5673   001728  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
  5674   00172A  500B               	movf	(i2___lomod@divisor+2)^0,w,c
  5675   00172C  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
  5676   00172E  500C               	movf	(i2___lomod@divisor+3)^0,w,c
  5677   001730  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
  5678   001732  500D               	movf	(i2___lomod@divisor+4)^0,w,c
  5679   001734  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
  5680   001736  500E               	movf	(i2___lomod@divisor+5)^0,w,c
  5681   001738  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
  5682   00173A  500F               	movf	(i2___lomod@divisor+6)^0,w,c
  5683   00173C  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
  5684   00173E  5010               	movf	(i2___lomod@divisor+7)^0,w,c
  5685   001740  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
  5686   001742  A0D8               	btfss	status,0,c
  5687   001744  EFA6  F00B         	goto	i2u283_41
  5688   001748  EFA8  F00B         	goto	i2u283_40
  5689   00174C                     i2u283_41:
  5690   00174C  EFB8  F00B         	goto	i2l3722
  5691   001750                     i2u283_40:
  5692   001750  5009               	movf	i2___lomod@divisor^0,w,c
  5693   001752  5E01               	subwf	i2___lomod@dividend^0,f,c
  5694   001754  500A               	movf	(i2___lomod@divisor+1)^0,w,c
  5695   001756  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
  5696   001758  500B               	movf	(i2___lomod@divisor+2)^0,w,c
  5697   00175A  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
  5698   00175C  500C               	movf	(i2___lomod@divisor+3)^0,w,c
  5699   00175E  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
  5700   001760  500D               	movf	(i2___lomod@divisor+4)^0,w,c
  5701   001762  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
  5702   001764  500E               	movf	(i2___lomod@divisor+5)^0,w,c
  5703   001766  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
  5704   001768  500F               	movf	(i2___lomod@divisor+6)^0,w,c
  5705   00176A  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
  5706   00176C  5010               	movf	(i2___lomod@divisor+7)^0,w,c
  5707   00176E  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
  5708   001770                     i2l3722:
  5709   001770  90D8               	bcf	status,0,c
  5710   001772  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
  5711   001774  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
  5712   001776  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
  5713   001778  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
  5714   00177A  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
  5715   00177C  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
  5716   00177E  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
  5717   001780  3209               	rrcf	i2___lomod@divisor^0,f,c
  5718   001782  2E11               	decfsz	i2___lomod@counter^0,f,c
  5719   001784  EF91  F00B         	goto	i2l3718
  5720   001788                     i2l895:
  5721   001788  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
  5722   00178C  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
  5723   001790  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
  5724   001794  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
  5725   001798  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
  5726   00179C  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
  5727   0017A0  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
  5728   0017A4  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
  5729   0017A8  0012               	return		;funcret
  5730   0017AA                     __end_ofi2___lomod:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function i2___lodiv *****************
  5734 ;; Defined at:
  5735 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  dividend        8    0[COMRAM] unsigned long long 
  5738 ;;  divisor         8    8[COMRAM] unsigned long long 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  quotient        8   16[COMRAM] unsigned long long 
  5741 ;;  counter         1   24[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  8    0[COMRAM] unsigned long long 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5751 ;;      Params:        16       0       0       0       0       0       0       0       0
  5752 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5754 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5755 ;;Total ram usage:       25 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		i2_utoa
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text37
  5765   001518                     __ptext37:
  5766                           	callstack 0
  5767   001518                     i2___lodiv:
  5768                           	callstack 17
  5769   001518  EE20  F011         	lfsr	2,i2___lodiv@quotient
  5770   00151C  0E07               	movlw	7
  5771   00151E                     i2u277_41:
  5772   00151E  6ADE               	clrf	postinc2,c
  5773   001520  06E8               	decf	wreg,f,c
  5774   001522  E2FD               	bc	i2u277_41
  5775   001524  5009               	movf	i2___lodiv@divisor^0,w,c
  5776   001526  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
  5777   001528  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
  5778   00152A  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
  5779   00152C  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
  5780   00152E  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
  5781   001530  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
  5782   001532  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
  5783   001534  B4D8               	btfsc	status,2,c
  5784   001536  EF9F  F00A         	goto	i2u278_41
  5785   00153A  EFA1  F00A         	goto	i2u278_40
  5786   00153E                     i2u278_41:
  5787   00153E  EFF3  F00A         	goto	i2l885
  5788   001542                     i2u278_40:
  5789   001542  0E01               	movlw	1
  5790   001544  6E19               	movwf	i2___lodiv@counter^0,c
  5791   001546  EFAF  F00A         	goto	i2l3696
  5792   00154A                     i2l3694:
  5793   00154A  90D8               	bcf	status,0,c
  5794   00154C  3609               	rlcf	i2___lodiv@divisor^0,f,c
  5795   00154E  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
  5796   001550  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
  5797   001552  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
  5798   001554  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
  5799   001556  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
  5800   001558  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
  5801   00155A  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
  5802   00155C  2A19               	incf	i2___lodiv@counter^0,f,c
  5803   00155E                     i2l3696:
  5804   00155E  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
  5805   001560  EFB4  F00A         	goto	i2u279_41
  5806   001564  EFB6  F00A         	goto	i2u279_40
  5807   001568                     i2u279_41:
  5808   001568  EFA5  F00A         	goto	i2l3694
  5809   00156C                     i2u279_40:
  5810   00156C                     i2l3698:
  5811   00156C  90D8               	bcf	status,0,c
  5812   00156E  3611               	rlcf	i2___lodiv@quotient^0,f,c
  5813   001570  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
  5814   001572  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
  5815   001574  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
  5816   001576  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
  5817   001578  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
  5818   00157A  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
  5819   00157C  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
  5820   00157E  5009               	movf	i2___lodiv@divisor^0,w,c
  5821   001580  5C01               	subwf	i2___lodiv@dividend^0,w,c
  5822   001582  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
  5823   001584  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
  5824   001586  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
  5825   001588  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
  5826   00158A  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
  5827   00158C  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
  5828   00158E  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
  5829   001590  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
  5830   001592  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
  5831   001594  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
  5832   001596  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
  5833   001598  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
  5834   00159A  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
  5835   00159C  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
  5836   00159E  A0D8               	btfss	status,0,c
  5837   0015A0  EFD4  F00A         	goto	i2u280_41
  5838   0015A4  EFD6  F00A         	goto	i2u280_40
  5839   0015A8                     i2u280_41:
  5840   0015A8  EFE7  F00A         	goto	i2l3706
  5841   0015AC                     i2u280_40:
  5842   0015AC  5009               	movf	i2___lodiv@divisor^0,w,c
  5843   0015AE  5E01               	subwf	i2___lodiv@dividend^0,f,c
  5844   0015B0  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
  5845   0015B2  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
  5846   0015B4  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
  5847   0015B6  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
  5848   0015B8  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
  5849   0015BA  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
  5850   0015BC  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
  5851   0015BE  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
  5852   0015C0  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
  5853   0015C2  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
  5854   0015C4  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
  5855   0015C6  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
  5856   0015C8  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
  5857   0015CA  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
  5858   0015CC  8011               	bsf	i2___lodiv@quotient^0,0,c
  5859   0015CE                     i2l3706:
  5860   0015CE  90D8               	bcf	status,0,c
  5861   0015D0  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
  5862   0015D2  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
  5863   0015D4  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
  5864   0015D6  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
  5865   0015D8  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
  5866   0015DA  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
  5867   0015DC  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
  5868   0015DE  3209               	rrcf	i2___lodiv@divisor^0,f,c
  5869   0015E0  2E19               	decfsz	i2___lodiv@counter^0,f,c
  5870   0015E2  EFB6  F00A         	goto	i2l3698
  5871   0015E6                     i2l885:
  5872   0015E6  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
  5873   0015EA  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
  5874   0015EE  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
  5875   0015F2  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
  5876   0015F6  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
  5877   0015FA  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
  5878   0015FE  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
  5879   001602  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
  5880   001606  0012               	return		;funcret
  5881   001608                     __end_ofi2___lodiv:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function i2_atoi *****************
  5885 ;; Defined at:
  5886 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5889 ;;		 -> STR_4(23), STR_1(23), 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  n               2   13[COMRAM] int 
  5892 ;;  neg             2   11[COMRAM] int 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  2    6[COMRAM] int 
  5895 ;; Registers used:
  5896 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5902 ;;      Params:         2       0       0       0       0       0       0       0       0
  5903 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5904 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5905 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5906 ;;Total ram usage:        9 bytes
  5907 ;; Hardware stack levels used: 1
  5908 ;; Hardware stack levels required when called: 1
  5909 ;; This function calls:
  5910 ;;		i2___wmul
  5911 ;;		i2_isdigit
  5912 ;;		i2_isspace
  5913 ;; This function is called by:
  5914 ;;		i2_vfpfcnvrt
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text38
  5919   0012DC                     __ptext38:
  5920                           	callstack 0
  5921   0012DC                     i2_atoi:
  5922                           	callstack 17
  5923   0012DC  0E00               	movlw	0
  5924   0012DE  6E0F               	movwf	(i2atoi@n+1)^0,c
  5925   0012E0  0E00               	movlw	0
  5926   0012E2  6E0E               	movwf	i2atoi@n^0,c
  5927   0012E4  0E00               	movlw	0
  5928   0012E6  6E0D               	movwf	(i2atoi@neg+1)^0,c
  5929   0012E8  0E00               	movlw	0
  5930   0012EA  6E0C               	movwf	i2atoi@neg^0,c
  5931   0012EC  EF7A  F009         	goto	i2l3890
  5932   0012F0                     i2l3886:
  5933   0012F0  4A07               	infsnz	i2atoi@s^0,f,c
  5934   0012F2  2A08               	incf	(i2atoi@s+1)^0,f,c
  5935   0012F4                     i2l3890:
  5936   0012F4  C007  FFF6         	movff	i2atoi@s,tblptrl
  5937   0012F8  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5938   0012FC                     	if	0	;tblptru may be non-zero
  5939   0012FC                     	endif
  5940   0012FC                     	if	0	;tblptru may be non-zero
  5941   0012FC                     	endif
  5942   0012FC  0008               	tblrd		*
  5943   0012FE  50F5               	movf	tablat,w,c
  5944   001300  0A20               	xorlw	32
  5945   001302  B4D8               	btfsc	status,2,c
  5946   001304  EF86  F009         	goto	i2u312_41
  5947   001308  EF88  F009         	goto	i2u312_40
  5948   00130C                     i2u312_41:
  5949   00130C  EF78  F009         	goto	i2l3886
  5950   001310                     i2u312_40:
  5951   001310  C007  FFF6         	movff	i2atoi@s,tblptrl
  5952   001314  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5953   001318                     	if	0	;tblptru may be non-zero
  5954   001318                     	endif
  5955   001318                     	if	0	;tblptru may be non-zero
  5956   001318                     	endif
  5957   001318  0008               	tblrd		*
  5958   00131A  CFF5 F009          	movff	tablat,??i2_atoi
  5959   00131E  0EF7               	movlw	247
  5960   001320  2409               	addwf	??i2_atoi^0,w,c
  5961   001322  6E0A               	movwf	(??i2_atoi+1)^0,c
  5962   001324  6A0B               	clrf	(??i2_atoi+2)^0,c
  5963   001326  0EFF               	movlw	255
  5964   001328  220B               	addwfc	(??i2_atoi+2)^0,f,c
  5965   00132A  500B               	movf	(??i2_atoi+2)^0,w,c
  5966   00132C  E109               	bnz	i2u313_40
  5967   00132E  0E05               	movlw	5
  5968   001330  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  5969   001332  A0D8               	btfss	status,0,c
  5970   001334  EF9E  F009         	goto	i2u313_41
  5971   001338  EFA0  F009         	goto	i2u313_40
  5972   00133C                     i2u313_41:
  5973   00133C  EF78  F009         	goto	i2l3886
  5974   001340                     i2u313_40:
  5975   001340  EFAA  F009         	goto	i2l3898
  5976   001344                     i2l3894:
  5977   001344  0E00               	movlw	0
  5978   001346  6E0D               	movwf	(i2atoi@neg+1)^0,c
  5979   001348  0E01               	movlw	1
  5980   00134A  6E0C               	movwf	i2atoi@neg^0,c
  5981   00134C                     i2l3896:
  5982   00134C  4A07               	infsnz	i2atoi@s^0,f,c
  5983   00134E  2A08               	incf	(i2atoi@s+1)^0,f,c
  5984   001350  EFDF  F009         	goto	i2l3906
  5985   001354                     i2l3898:
  5986   001354  C007  FFF6         	movff	i2atoi@s,tblptrl
  5987   001358  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  5988   00135C                     	if	0	;tblptru may be non-zero
  5989   00135C                     	endif
  5990   00135C                     	if	0	;tblptru may be non-zero
  5991   00135C                     	endif
  5992   00135C  0008               	tblrd		*
  5993   00135E  50F5               	movf	tablat,w,c
  5994   001360  6E09               	movwf	??i2_atoi^0,c
  5995   001362  6A0A               	clrf	(??i2_atoi+1)^0,c
  5996                           
  5997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5998                           ; Switch size 1, requested type "simple"
  5999                           ; Number of cases is 1, Range of values is 0 to 0
  6000                           ; switch strategies available:
  6001                           ; Name         Instructions Cycles
  6002                           ; simple_byte            4     3 (average)
  6003                           ;	Chosen strategy is simple_byte
  6004   001364  500A               	movf	(??i2_atoi+1)^0,w,c
  6005   001366  0A00               	xorlw	0	; case 0
  6006   001368  B4D8               	btfsc	status,2,c
  6007   00136A  EFB9  F009         	goto	i2l4436
  6008   00136E  EFDF  F009         	goto	i2l3906
  6009   001372                     i2l4436:
  6010                           
  6011                           ; Switch size 1, requested type "simple"
  6012                           ; Number of cases is 2, Range of values is 43 to 45
  6013                           ; switch strategies available:
  6014                           ; Name         Instructions Cycles
  6015                           ; simple_byte            7     4 (average)
  6016                           ;	Chosen strategy is simple_byte
  6017   001372  5009               	movf	??i2_atoi^0,w,c
  6018   001374  0A2B               	xorlw	43	; case 43
  6019   001376  B4D8               	btfsc	status,2,c
  6020   001378  EFA6  F009         	goto	i2l3896
  6021   00137C  0A06               	xorlw	6	; case 45
  6022   00137E  B4D8               	btfsc	status,2,c
  6023   001380  EFA2  F009         	goto	i2l3894
  6024   001384  EFDF  F009         	goto	i2l3906
  6025   001388                     i2l3900:
  6026   001388  C00E  F001         	movff	i2atoi@n,i2___wmul@multiplier
  6027   00138C  C00F  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  6028   001390  0E00               	movlw	0
  6029   001392  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6030   001394  0E0A               	movlw	10
  6031   001396  6E03               	movwf	i2___wmul@multiplicand^0,c
  6032   001398  ECFD  F010         	call	i2___wmul	;wreg free
  6033   00139C  C007  FFF6         	movff	i2atoi@s,tblptrl
  6034   0013A0  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6035   0013A4                     	if	0	;tblptru may be non-zero
  6036   0013A4                     	endif
  6037   0013A4                     	if	0	;tblptru may be non-zero
  6038   0013A4                     	endif
  6039   0013A4  0008               	tblrd		*
  6040   0013A6  50F5               	movf	tablat,w,c
  6041   0013A8  5E01               	subwf	?i2___wmul^0,f,c
  6042   0013AA  0E00               	movlw	0
  6043   0013AC  5A02               	subwfb	(?i2___wmul+1)^0,f,c
  6044   0013AE  0E30               	movlw	48
  6045   0013B0  2401               	addwf	?i2___wmul^0,w,c
  6046   0013B2  6E0E               	movwf	i2atoi@n^0,c
  6047   0013B4  0E00               	movlw	0
  6048   0013B6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6049   0013B8  6E0F               	movwf	(i2atoi@n+1)^0,c
  6050   0013BA  EFA6  F009         	goto	i2l3896
  6051   0013BE                     i2l3906:
  6052   0013BE  C007  FFF6         	movff	i2atoi@s,tblptrl
  6053   0013C2  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6054   0013C6                     	if	0	;tblptru may be non-zero
  6055   0013C6                     	endif
  6056   0013C6                     	if	0	;tblptru may be non-zero
  6057   0013C6                     	endif
  6058   0013C6  0008               	tblrd		*
  6059   0013C8  CFF5 F009          	movff	tablat,??i2_atoi
  6060   0013CC  0ED0               	movlw	208
  6061   0013CE  2409               	addwf	??i2_atoi^0,w,c
  6062   0013D0  6E0A               	movwf	(??i2_atoi+1)^0,c
  6063   0013D2  6A0B               	clrf	(??i2_atoi+2)^0,c
  6064   0013D4  0EFF               	movlw	255
  6065   0013D6  220B               	addwfc	(??i2_atoi+2)^0,f,c
  6066   0013D8  500B               	movf	(??i2_atoi+2)^0,w,c
  6067   0013DA  E109               	bnz	i2u314_40
  6068   0013DC  0E0A               	movlw	10
  6069   0013DE  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  6070   0013E0  A0D8               	btfss	status,0,c
  6071   0013E2  EFF5  F009         	goto	i2u314_41
  6072   0013E6  EFF7  F009         	goto	i2u314_40
  6073   0013EA                     i2u314_41:
  6074   0013EA  EFC4  F009         	goto	i2l3900
  6075   0013EE                     i2u314_40:
  6076   0013EE  500C               	movf	i2atoi@neg^0,w,c
  6077   0013F0  100D               	iorwf	(i2atoi@neg+1)^0,w,c
  6078   0013F2  A4D8               	btfss	status,2,c
  6079   0013F4  EFFE  F009         	goto	i2u315_41
  6080   0013F8  EF00  F00A         	goto	i2u315_40
  6081   0013FC                     i2u315_41:
  6082   0013FC  EF0E  F00A         	goto	i2l1223
  6083   001400                     i2u315_40:
  6084   001400  C00E  F009         	movff	i2atoi@n,??i2_atoi
  6085   001404  C00F  F00A         	movff	i2atoi@n+1,??i2_atoi+1
  6086   001408  1E09               	comf	??i2_atoi^0,f,c
  6087   00140A  1E0A               	comf	(??i2_atoi+1)^0,f,c
  6088   00140C  4A09               	infsnz	??i2_atoi^0,f,c
  6089   00140E  2A0A               	incf	(??i2_atoi+1)^0,f,c
  6090   001410  C009  F007         	movff	??i2_atoi,?i2_atoi
  6091   001414  C00A  F008         	movff	??i2_atoi+1,?i2_atoi+1
  6092   001418  EF12  F00A         	goto	i2l1226
  6093   00141C                     i2l1223:
  6094   00141C  C00E  F007         	movff	i2atoi@n,?i2_atoi
  6095   001420  C00F  F008         	movff	i2atoi@n+1,?i2_atoi+1
  6096   001424                     i2l1226:
  6097   001424  0012               	return		;funcret
  6098   001426                     __end_ofi2_atoi:
  6099                           	callstack 0
  6100                           
  6101 ;; *************** function i2_isspace *****************
  6102 ;; Defined at:
  6103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  c               2    0[COMRAM] int 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  2    0[COMRAM] int 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6117 ;;      Params:         2       0       0       0       0       0       0       0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6119 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6120 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6121 ;;Total ram usage:        4 bytes
  6122 ;; Hardware stack levels used: 1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		i2_atoi
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text39
  6131   00210E                     __ptext39:
  6132                           	callstack 0
  6133   00210E                     i2_isspace:
  6134                           	callstack 17
  6135   00210E  0E20               	movlw	32
  6136   002110  1801               	xorwf	i2isspace@c^0,w,c
  6137   002112  1002               	iorwf	(i2isspace@c+1)^0,w,c
  6138   002114  B4D8               	btfsc	status,2,c
  6139   002116  EF8F  F010         	goto	i2u288_41
  6140   00211A  EF91  F010         	goto	i2u288_40
  6141   00211E                     i2u288_41:
  6142   00211E  EFA2  F010         	goto	i2l1237
  6143   002122                     i2u288_40:
  6144   002122  0EF7               	movlw	247
  6145   002124  2401               	addwf	i2isspace@c^0,w,c
  6146   002126  6E03               	movwf	??i2_isspace^0,c
  6147   002128  0EFF               	movlw	255
  6148   00212A  2002               	addwfc	(i2isspace@c+1)^0,w,c
  6149   00212C  6E04               	movwf	(??i2_isspace+1)^0,c
  6150   00212E  5004               	movf	(??i2_isspace+1)^0,w,c
  6151   002130  E109               	bnz	i2u289_40
  6152   002132  0E05               	movlw	5
  6153   002134  5C03               	subwf	??i2_isspace^0,w,c
  6154   002136  A0D8               	btfss	status,0,c
  6155   002138  EFA0  F010         	goto	i2u289_41
  6156   00213C  EFA2  F010         	goto	i2u289_40
  6157   002140                     i2u289_41:
  6158   002140  EFA2  F010         	goto	i2l1237
  6159   002144                     i2u289_40:
  6160   002144                     i2l1237:
  6161   002144  0012               	return		;funcret
  6162   002146                     __end_ofi2_isspace:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function i2_isdigit *****************
  6166 ;; Defined at:
  6167 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  c               2    0[COMRAM] int 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  2    0[COMRAM] int 
  6174 ;; Registers used:
  6175 ;;		None
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6181 ;;      Params:         2       0       0       0       0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6184 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:        2 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		i2_vfpfcnvrt
  6191 ;;		i2_atoi
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text40
  6196   0022EE                     __ptext40:
  6197                           	callstack 0
  6198   0022EE                     i2_isdigit:
  6199                           	callstack 18
  6200   0022EE  0012               	return		;funcret
  6201   0022F0                     __end_ofi2_isdigit:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function i2___wmul *****************
  6205 ;; Defined at:
  6206 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  multiplier      2    0[COMRAM] unsigned int 
  6209 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  product         2    4[COMRAM] unsigned int 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  2    0[COMRAM] unsigned int 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0, prodl, prodh
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6221 ;;      Params:         4       0       0       0       0       0       0       0       0
  6222 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6224 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6225 ;;Total ram usage:        6 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		i2_atoi
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text41
  6235   0021FA                     __ptext41:
  6236                           	callstack 0
  6237   0021FA                     i2___wmul:
  6238                           	callstack 17
  6239   0021FA  5001               	movf	i2___wmul@multiplier^0,w,c
  6240   0021FC  0203               	mulwf	i2___wmul@multiplicand^0,c
  6241   0021FE  CFF3 F005          	movff	prodl,i2___wmul@product
  6242   002202  CFF4 F006          	movff	prodh,i2___wmul@product+1
  6243   002206  5001               	movf	i2___wmul@multiplier^0,w,c
  6244   002208  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  6245   00220A  50F3               	movf	243,w,c
  6246   00220C  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6247   00220E  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  6248   002210  0203               	mulwf	i2___wmul@multiplicand^0,c
  6249   002212  50F3               	movf	243,w,c
  6250   002214  2606               	addwf	(i2___wmul@product+1)^0,f,c
  6251   002216  C005  F001         	movff	i2___wmul@product,?i2___wmul
  6252   00221A  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  6253   00221E  0012               	return		;funcret
  6254   002220                     __end_ofi2___wmul:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function i2_Lcd_Write_String *****************
  6258 ;; Defined at:
  6259 ;;		line 113 in file "lib_pic/lcd_2x16.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  a               2    4[COMRAM] PTR unsigned char 
  6262 ;;		 -> STR_3(2), STR_2(2), strReloj(20), 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  i               2    8[COMRAM] int 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6274 ;;      Params:         2       0       0       0       0       0       0       0       0
  6275 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6276 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6277 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6278 ;;Total ram usage:        6 bytes
  6279 ;; Hardware stack levels used: 1
  6280 ;; Hardware stack levels required when called: 2
  6281 ;; This function calls:
  6282 ;;		i2_Lcd_Write_Char
  6283 ;; This function is called by:
  6284 ;;		_RutinaServicioInterrupt
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text42
  6289   001C64                     __ptext42:
  6290                           	callstack 0
  6291   001C64                     i2_Lcd_Write_String:
  6292                           	callstack 19
  6293   001C64                     
  6294                           ;lib_pic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);lib_pic/lcd_2x16.c: 11
      +                          4: {;lib_pic/lcd_2x16.c: 115:  int i;;lib_pic/lcd_2x16.c: 116:  for(i=0;a[i]!='\0';i++)
  6295   001C64  0E00               	movlw	0
  6296   001C66  6E0A               	movwf	(i2Lcd_Write_String@i+1)^0,c
  6297   001C68  0E00               	movlw	0
  6298   001C6A  6E09               	movwf	i2Lcd_Write_String@i^0,c
  6299   001C6C  EF52  F00E         	goto	i2l3272
  6300   001C70                     i2l3268:
  6301                           
  6302                           ;lib_pic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  6303   001C70  5009               	movf	i2Lcd_Write_String@i^0,w,c
  6304   001C72  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  6305   001C74  6E07               	movwf	??i2_Lcd_Write_String^0,c
  6306   001C76  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  6307   001C78  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  6308   001C7A  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  6309   001C7C  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  6310   001C80  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  6311   001C84  6AF8               	clrf	tblptru,c
  6312   001C86  0E07               	movlw	(high __ramtop+-1)
  6313   001C88  64F7               	cpfsgt	tblptrh,c
  6314   001C8A  D003               	bra	i2u237_47
  6315   001C8C  0008               	tblrd		*
  6316   001C8E  50F5               	movf	tablat,w,c
  6317   001C90  D005               	bra	i2u237_40
  6318   001C92                     i2u237_47:
  6319   001C92  CFF6 FFE9          	movff	tblptrl,fsr0l
  6320   001C96  CFF7 FFEA          	movff	tblptrh,fsr0h
  6321   001C9A  50EF               	movf	indf0,w,c
  6322   001C9C                     i2u237_40:
  6323   001C9C  ECA3  F010         	call	i2_Lcd_Write_Char
  6324   001CA0  4A09               	infsnz	i2Lcd_Write_String@i^0,f,c
  6325   001CA2  2A0A               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  6326   001CA4                     i2l3272:
  6327   001CA4  5009               	movf	i2Lcd_Write_String@i^0,w,c
  6328   001CA6  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  6329   001CA8  6E07               	movwf	??i2_Lcd_Write_String^0,c
  6330   001CAA  500A               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  6331   001CAC  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  6332   001CAE  6E08               	movwf	(??i2_Lcd_Write_String+1)^0,c
  6333   001CB0  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  6334   001CB4  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  6335   001CB8  6AF8               	clrf	tblptru,c
  6336   001CBA  0E07               	movlw	(high __ramtop+-1)
  6337   001CBC  64F7               	cpfsgt	tblptrh,c
  6338   001CBE  D003               	bra	i2u238_47
  6339   001CC0  0008               	tblrd		*
  6340   001CC2  50F5               	movf	tablat,w,c
  6341   001CC4  D005               	bra	i2u238_40
  6342   001CC6                     i2u238_47:
  6343   001CC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6344   001CCA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6345   001CCE  50EF               	movf	indf0,w,c
  6346   001CD0                     i2u238_40:
  6347   001CD0  0900               	iorlw	0
  6348   001CD2  A4D8               	btfss	status,2,c
  6349   001CD4  EF6E  F00E         	goto	i2u239_41
  6350   001CD8  EF70  F00E         	goto	i2u239_40
  6351   001CDC                     i2u239_41:
  6352   001CDC  EF38  F00E         	goto	i2l3268
  6353   001CE0                     i2u239_40:
  6354   001CE0  0012               	return		;funcret
  6355   001CE2                     __end_ofi2_Lcd_Write_String:
  6356                           	callstack 0
  6357                           
  6358 ;; *************** function i2_Lcd_Write_Char *****************
  6359 ;; Defined at:
  6360 ;;		line 96 in file "lib_pic/lcd_2x16.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  a               1    wreg     unsigned char 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  a               1    3[COMRAM] unsigned char 
  6365 ;;  y               1    2[COMRAM] unsigned char 
  6366 ;;  temp            1    1[COMRAM] unsigned char 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6379 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:        3 bytes
  6381 ;; Hardware stack levels used: 1
  6382 ;; Hardware stack levels required when called: 1
  6383 ;; This function calls:
  6384 ;;		i2_Lcd_Port
  6385 ;; This function is called by:
  6386 ;;		i2_Lcd_Write_String
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text43
  6391   002146                     __ptext43:
  6392                           	callstack 0
  6393   002146                     i2_Lcd_Write_Char:
  6394                           	callstack 19
  6395                           
  6396                           ;incstack = 0
  6397                           ;i2Lcd_Write_Char@a stored from wreg
  6398   002146  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  6399   002148                     
  6400                           ;lib_pic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);lib_pic/lcd_2x16.c: 97: {;
      +                          lib_pic/lcd_2x16.c: 98:    char temp,y;;lib_pic/lcd_2x16.c: 99:    temp = a&0x0F;
  6401   002148  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6402   00214A  0B0F               	andlw	15
  6403   00214C  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  6404                           
  6405                           ;lib_pic/lcd_2x16.c: 100:    y = a&0xF0;
  6406   00214E  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  6407   002150  0BF0               	andlw	240
  6408   002152  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  6409   002154                     
  6410                           ;lib_pic/lcd_2x16.c: 101:    PORTD |= (1<<2);
  6411   002154  8483               	bsf	131,2,c	;volatile
  6412   002156                     
  6413                           ;lib_pic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  6414   002156  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  6415   002158  0B0F               	andlw	15
  6416   00215A  EC0B  F00F         	call	i2_Lcd_Port
  6417   00215E                     
  6418                           ;lib_pic/lcd_2x16.c: 103:    PORTD |= (1<<3);
  6419   00215E  8683               	bsf	131,3,c	;volatile
  6420   002160                     
  6421                           ;lib_pic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  6422   002160  0E1A               	movlw	26
  6423   002162                     i2u348_47:
  6424   002162  2EE8               	decfsz	wreg,f,c
  6425   002164  D7FE               	bra	i2u348_47
  6426   002166  D000               	nop2	
  6427   002168                     
  6428                           ;lib_pic/lcd_2x16.c: 105:    PORTD &= ~(1<<3);
  6429   002168  9683               	bcf	131,3,c	;volatile
  6430                           
  6431                           ;lib_pic/lcd_2x16.c: 106:    Lcd_Port(temp);
  6432   00216A  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  6433   00216C  EC0B  F00F         	call	i2_Lcd_Port
  6434   002170                     
  6435                           ;lib_pic/lcd_2x16.c: 107:    PORTD |= (1<<3);
  6436   002170  8683               	bsf	131,3,c	;volatile
  6437   002172                     
  6438                           ;lib_pic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  6439   002172  0E1A               	movlw	26
  6440   002174                     i2u349_47:
  6441   002174  2EE8               	decfsz	wreg,f,c
  6442   002176  D7FE               	bra	i2u349_47
  6443   002178  D000               	nop2	
  6444   00217A                     
  6445                           ;lib_pic/lcd_2x16.c: 109:    PORTD &= ~(1<<3);
  6446   00217A  9683               	bcf	131,3,c	;volatile
  6447   00217C  0012               	return		;funcret
  6448   00217E                     __end_ofi2_Lcd_Write_Char:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function i2_Lcd_Set_Cursor *****************
  6452 ;; Defined at:
  6453 ;;		line 50 in file "lib_pic/lcd_2x16.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  a               1    wreg     unsigned char 
  6456 ;;  b               1    3[COMRAM] unsigned char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  a               1    4[COMRAM] unsigned char 
  6459 ;;  temp            1    7[COMRAM] unsigned char 
  6460 ;;  y               1    6[COMRAM] unsigned char 
  6461 ;;  z               1    5[COMRAM] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2, status,0, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6471 ;;      Params:         1       0       0       0       0       0       0       0       0
  6472 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6474 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6475 ;;Total ram usage:        5 bytes
  6476 ;; Hardware stack levels used: 1
  6477 ;; Hardware stack levels required when called: 2
  6478 ;; This function calls:
  6479 ;;		i2_Lcd_Cmd
  6480 ;; This function is called by:
  6481 ;;		_RutinaServicioInterrupt
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text44
  6486   001D50                     __ptext44:
  6487                           	callstack 0
  6488   001D50                     i2_Lcd_Set_Cursor:
  6489                           	callstack 19
  6490                           
  6491                           ;incstack = 0
  6492                           ;i2Lcd_Set_Cursor@a stored from wreg
  6493   001D50  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  6494   001D52                     
  6495                           ;lib_pic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/l
      +                          cd_2x16.c: 51: {;lib_pic/lcd_2x16.c: 52:  char temp,z,y;;lib_pic/lcd_2x16.c: 53:  if(a =
      +                          = 1)
  6496   001D52  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  6497   001D54  A4D8               	btfss	status,2,c
  6498   001D56  EFAF  F00E         	goto	i2u235_41
  6499   001D5A  EFB1  F00E         	goto	i2u235_40
  6500   001D5E                     i2u235_41:
  6501   001D5E  EFC2  F00E         	goto	i2l3258
  6502   001D62                     i2u235_40:
  6503   001D62                     
  6504                           ;lib_pic/lcd_2x16.c: 54:  {;lib_pic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  6505   001D62  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6506   001D64  0F7F               	addlw	127
  6507   001D66  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6508                           
  6509                           ;lib_pic/lcd_2x16.c: 56:   z = temp>>4;
  6510   001D68  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6511   001D6A  0B0F               	andlw	15
  6512   001D6C  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  6513                           
  6514                           ;lib_pic/lcd_2x16.c: 57:   y = temp & 0x0F;
  6515   001D6E  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6516   001D70  0B0F               	andlw	15
  6517   001D72  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  6518   001D74                     
  6519                           ;lib_pic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  6520   001D74  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6521   001D76  EC10  F011         	call	i2_Lcd_Cmd
  6522   001D7A                     
  6523                           ;lib_pic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  6524   001D7A  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6525   001D7C  EC10  F011         	call	i2_Lcd_Cmd
  6526                           
  6527                           ;lib_pic/lcd_2x16.c: 60:  }
  6528   001D80  EFDA  F00E         	goto	i2l292
  6529   001D84                     i2l3258:
  6530   001D84  0E02               	movlw	2
  6531   001D86  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  6532   001D88  A4D8               	btfss	status,2,c
  6533   001D8A  EFC9  F00E         	goto	i2u236_41
  6534   001D8E  EFCB  F00E         	goto	i2u236_40
  6535   001D92                     i2u236_41:
  6536   001D92  EFDA  F00E         	goto	i2l292
  6537   001D96                     i2u236_40:
  6538   001D96                     
  6539                           ;lib_pic/lcd_2x16.c: 62:  {;lib_pic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  6540   001D96  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  6541   001D98  0FBF               	addlw	191
  6542   001D9A  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  6543                           
  6544                           ;lib_pic/lcd_2x16.c: 64:   z = temp>>4;
  6545   001D9C  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  6546   001D9E  0B0F               	andlw	15
  6547   001DA0  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  6548                           
  6549                           ;lib_pic/lcd_2x16.c: 65:   y = temp & 0x0F;
  6550   001DA2  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  6551   001DA4  0B0F               	andlw	15
  6552   001DA6  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  6553   001DA8                     
  6554                           ;lib_pic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  6555   001DA8  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  6556   001DAA  EC10  F011         	call	i2_Lcd_Cmd
  6557   001DAE                     
  6558                           ;lib_pic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  6559   001DAE  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  6560   001DB0  EC10  F011         	call	i2_Lcd_Cmd
  6561   001DB4                     i2l292:
  6562   001DB4  0012               	return		;funcret
  6563   001DB6                     __end_ofi2_Lcd_Set_Cursor:
  6564                           	callstack 0
  6565                           
  6566 ;; *************** function i2_Lcd_Cmd *****************
  6567 ;; Defined at:
  6568 ;;		line 33 in file "lib_pic/lcd_2x16.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  a               1    wreg     unsigned char 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  a               1    2[COMRAM] unsigned char 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, status,0, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0
  6583 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6584 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6585 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6586 ;;Total ram usage:        2 bytes
  6587 ;; Hardware stack levels used: 1
  6588 ;; Hardware stack levels required when called: 1
  6589 ;; This function calls:
  6590 ;;		i2_Lcd_Port
  6591 ;; This function is called by:
  6592 ;;		i2_Lcd_Set_Cursor
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text45
  6597   002220                     __ptext45:
  6598                           	callstack 0
  6599   002220                     i2_Lcd_Cmd:
  6600                           	callstack 19
  6601                           
  6602                           ;incstack = 0
  6603                           ;i2Lcd_Cmd@a stored from wreg
  6604   002220  6E03               	movwf	i2Lcd_Cmd@a^0,c
  6605   002222                     
  6606                           ;lib_pic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd_2x16.c: 34: {;lib_pic
      +                          /lcd_2x16.c: 35:  PORTD &= ~(1<<2);
  6607   002222  9483               	bcf	131,2,c	;volatile
  6608   002224                     
  6609                           ;lib_pic/lcd_2x16.c: 36:  Lcd_Port(a);
  6610   002224  5003               	movf	i2Lcd_Cmd@a^0,w,c
  6611   002226  EC0B  F00F         	call	i2_Lcd_Port
  6612   00222A                     
  6613                           ;lib_pic/lcd_2x16.c: 37:  PORTD |= (1<<3);
  6614   00222A  8683               	bsf	131,3,c	;volatile
  6615   00222C                     
  6616                           ;lib_pic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  6617   00222C  0E0B               	movlw	11
  6618   00222E  6E02               	movwf	??i2_Lcd_Cmd^0,c
  6619   002230  0E62               	movlw	98
  6620   002232                     i2u350_47:
  6621   002232  2EE8               	decfsz	wreg,f,c
  6622   002234  D7FE               	bra	i2u350_47
  6623   002236  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  6624   002238  D7FC               	bra	i2u350_47
  6625   00223A  D000               	nop2	
  6626   00223C                     
  6627                           ;lib_pic/lcd_2x16.c: 39:  PORTD &= ~(1<<3);
  6628   00223C  9683               	bcf	131,3,c	;volatile
  6629   00223E  0012               	return		;funcret
  6630   002240                     __end_ofi2_Lcd_Cmd:
  6631                           	callstack 0
  6632                           
  6633 ;; *************** function i2_Lcd_Port *****************
  6634 ;; Defined at:
  6635 ;;		line 5 in file "lib_pic/lcd_2x16.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  a               1    wreg     unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  a               1    0[COMRAM] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2, status,0
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0
  6650 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6652 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6653 ;;Total ram usage:        1 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; This function calls:
  6656 ;;		Nothing
  6657 ;; This function is called by:
  6658 ;;		i2_Lcd_Cmd
  6659 ;;		i2_Lcd_Write_Char
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text46
  6664   001E16                     __ptext46:
  6665                           	callstack 0
  6666   001E16                     i2_Lcd_Port:
  6667                           	callstack 19
  6668                           
  6669                           ;incstack = 0
  6670                           ;i2Lcd_Port@a stored from wreg
  6671   001E16  6E01               	movwf	i2Lcd_Port@a^0,c
  6672   001E18                     
  6673                           ;lib_pic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd_2x16.c: 6: {;lib_pic/
      +                          lcd_2x16.c: 7:  if(a & 1)
  6674   001E18  A001               	btfss	i2Lcd_Port@a^0,0,c
  6675   001E1A  EF11  F00F         	goto	i2u210_41
  6676   001E1E  EF13  F00F         	goto	i2u210_40
  6677   001E22                     i2u210_41:
  6678   001E22  EF16  F00F         	goto	i2l2942
  6679   001E26                     i2u210_40:
  6680   001E26                     
  6681                           ;lib_pic/lcd_2x16.c: 9:   LATD |= (1<<4);
  6682   001E26  888C               	bsf	140,4,c	;volatile
  6683   001E28  EF17  F00F         	goto	i2l2944
  6684   001E2C                     i2l2942:
  6685                           
  6686                           ;lib_pic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  6687   001E2C  988C               	bcf	140,4,c	;volatile
  6688   001E2E                     i2l2944:
  6689                           
  6690                           ;lib_pic/lcd_2x16.c: 13:  if(a & 2)
  6691   001E2E  A201               	btfss	i2Lcd_Port@a^0,1,c
  6692   001E30  EF1C  F00F         	goto	i2u211_41
  6693   001E34  EF1E  F00F         	goto	i2u211_40
  6694   001E38                     i2u211_41:
  6695   001E38  EF21  F00F         	goto	i2l2948
  6696   001E3C                     i2u211_40:
  6697   001E3C                     
  6698                           ;lib_pic/lcd_2x16.c: 15:   LATD |= (1<<5);
  6699   001E3C  8A8C               	bsf	140,5,c	;volatile
  6700   001E3E  EF22  F00F         	goto	i2l2950
  6701   001E42                     i2l2948:
  6702                           
  6703                           ;lib_pic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  6704   001E42  9A8C               	bcf	140,5,c	;volatile
  6705   001E44                     i2l2950:
  6706                           
  6707                           ;lib_pic/lcd_2x16.c: 19:  if(a & 4)
  6708   001E44  A401               	btfss	i2Lcd_Port@a^0,2,c
  6709   001E46  EF27  F00F         	goto	i2u212_41
  6710   001E4A  EF29  F00F         	goto	i2u212_40
  6711   001E4E                     i2u212_41:
  6712   001E4E  EF2C  F00F         	goto	i2l2954
  6713   001E52                     i2u212_40:
  6714   001E52                     
  6715                           ;lib_pic/lcd_2x16.c: 21:   LATD |= (1<<6);
  6716   001E52  8C8C               	bsf	140,6,c	;volatile
  6717   001E54  EF2D  F00F         	goto	i2l2956
  6718   001E58                     i2l2954:
  6719                           
  6720                           ;lib_pic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  6721   001E58  9C8C               	bcf	140,6,c	;volatile
  6722   001E5A                     i2l2956:
  6723                           
  6724                           ;lib_pic/lcd_2x16.c: 25:  if(a & 8)
  6725   001E5A  A601               	btfss	i2Lcd_Port@a^0,3,c
  6726   001E5C  EF32  F00F         	goto	i2u213_41
  6727   001E60  EF34  F00F         	goto	i2u213_40
  6728   001E64                     i2u213_41:
  6729   001E64  EF37  F00F         	goto	i2l2960
  6730   001E68                     i2u213_40:
  6731   001E68                     
  6732                           ;lib_pic/lcd_2x16.c: 27:   LATD |= (1<<7);
  6733   001E68  8E8C               	bsf	140,7,c	;volatile
  6734   001E6A  EF38  F00F         	goto	i2l280
  6735   001E6E                     i2l2960:
  6736                           
  6737                           ;lib_pic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  6738   001E6E  9E8C               	bcf	140,7,c	;volatile
  6739   001E70                     i2l280:
  6740   001E70  0012               	return		;funcret
  6741   001E72                     __end_ofi2_Lcd_Port:
  6742                           	callstack 0
  6743                           
  6744                           	psect	rparam
  6745   000000                     
  6746                           	psect	temp
  6747   00005B                     btemp:
  6748                           	callstack 0
  6749   00005B                     	ds	1
  6750   000000                     int$flags	set	btemp
  6751   000000                     wtemp8	set	btemp+1
  6752   000000                     ttemp5	set	btemp+1
  6753   000000                     ttemp6	set	btemp+4
  6754   000000                     ttemp7	set	btemp+8
  6755                           
  6756                           	psect	idloc
  6757                           
  6758                           ;Config register IDLOC0 @ 0x200000
  6759                           ;	unspecified, using default values
  6760   200000                     	org	2097152
  6761   200000  FF                 	db	255
  6762                           
  6763                           ;Config register IDLOC1 @ 0x200001
  6764                           ;	unspecified, using default values
  6765   200001                     	org	2097153
  6766   200001  FF                 	db	255
  6767                           
  6768                           ;Config register IDLOC2 @ 0x200002
  6769                           ;	unspecified, using default values
  6770   200002                     	org	2097154
  6771   200002  FF                 	db	255
  6772                           
  6773                           ;Config register IDLOC3 @ 0x200003
  6774                           ;	unspecified, using default values
  6775   200003                     	org	2097155
  6776   200003  FF                 	db	255
  6777                           
  6778                           ;Config register IDLOC4 @ 0x200004
  6779                           ;	unspecified, using default values
  6780   200004                     	org	2097156
  6781   200004  FF                 	db	255
  6782                           
  6783                           ;Config register IDLOC5 @ 0x200005
  6784                           ;	unspecified, using default values
  6785   200005                     	org	2097157
  6786   200005  FF                 	db	255
  6787                           
  6788                           ;Config register IDLOC6 @ 0x200006
  6789                           ;	unspecified, using default values
  6790   200006                     	org	2097158
  6791   200006  FF                 	db	255
  6792                           
  6793                           ;Config register IDLOC7 @ 0x200007
  6794                           ;	unspecified, using default values
  6795   200007                     	org	2097159
  6796   200007  FF                 	db	255
  6797                           
  6798                           	psect	config
  6799                           
  6800                           ;Config register CONFIG1L @ 0x300000
  6801                           ;	PLL Selection
  6802                           ;	PLLSEL = PLL4X, 4x clock multiplier
  6803                           ;	PLL Enable Configuration bit
  6804                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  6805                           ;	CPU System Clock Postscaler
  6806                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  6807                           ;	Low Speed USB mode with 48 MHz system clock
  6808                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  6809   300000                     	org	3145728
  6810   300000  00                 	db	0
  6811                           
  6812                           ;Config register CONFIG1H @ 0x300001
  6813                           ;	Oscillator Selection
  6814                           ;	FOSC = INTOSCIO, Internal oscillator
  6815                           ;	Primary Oscillator Shutdown
  6816                           ;	PCLKEN = ON, Primary oscillator enabled
  6817                           ;	Fail-Safe Clock Monitor
  6818                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6819                           ;	Internal/External Oscillator Switchover
  6820                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6821   300001                     	org	3145729
  6822   300001  28                 	db	40
  6823                           
  6824                           ;Config register CONFIG2L @ 0x300002
  6825                           ;	Power-up Timer Enable
  6826                           ;	nPWRTEN = ON, Power up timer enabled
  6827                           ;	Brown-out Reset Enable
  6828                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  6829                           ;	Brown-out Reset Voltage
  6830                           ;	BORV = 190, BOR set to 1.9V nominal
  6831                           ;	Low-Power Brown-out Reset
  6832                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  6833   300002                     	org	3145730
  6834   300002  5E                 	db	94
  6835                           
  6836                           ;Config register CONFIG2H @ 0x300003
  6837                           ;	Watchdog Timer Enable bits
  6838                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  6839                           ;	Watchdog Timer Postscaler
  6840                           ;	WDTPS = 32768, 1:32768
  6841   300003                     	org	3145731
  6842   300003  3C                 	db	60
  6843                           
  6844                           ; Padding undefined space
  6845   300004                     	org	3145732
  6846   300004  FF                 	db	255
  6847                           
  6848                           ;Config register CONFIG3H @ 0x300005
  6849                           ;	CCP2 MUX bit
  6850                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  6851                           ;	PORTB A/D Enable bit
  6852                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  6853                           ;	Timer3 Clock Input MUX bit
  6854                           ;	T3CMX = RC0, T3CKI function is on RC0
  6855                           ;	SDO Output MUX bit
  6856                           ;	SDOMX = RB3, SDO function is on RB3
  6857                           ;	Master Clear Reset Pin Enable
  6858                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  6859   300005                     	org	3145733
  6860   300005  D1                 	db	209
  6861                           
  6862                           ;Config register CONFIG4L @ 0x300006
  6863                           ;	Stack Full/Underflow Reset
  6864                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6865                           ;	Single-Supply ICSP Enable bit
  6866                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6867                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  6868                           ;	ICPRT = OFF, ICPORT disabled
  6869                           ;	Extended Instruction Set Enable bit
  6870                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  6871                           ;	Background Debugger Enable bit
  6872                           ;	DEBUG = 0x1, unprogrammed default
  6873   300006                     	org	3145734
  6874   300006  85                 	db	133
  6875                           
  6876                           ; Padding undefined space
  6877   300007                     	org	3145735
  6878   300007  FF                 	db	255
  6879                           
  6880                           ;Config register CONFIG5L @ 0x300008
  6881                           ;	Block 0 Code Protect
  6882                           ;	CP0 = OFF, Block 0 is not code-protected
  6883                           ;	Block 1 Code Protect
  6884                           ;	CP1 = OFF, Block 1 is not code-protected
  6885                           ;	Block 2 Code Protect
  6886                           ;	CP2 = OFF, Block 2 is not code-protected
  6887                           ;	Block 3 Code Protect
  6888                           ;	CP3 = OFF, Block 3 is not code-protected
  6889   300008                     	org	3145736
  6890   300008  0F                 	db	15
  6891                           
  6892                           ;Config register CONFIG5H @ 0x300009
  6893                           ;	Boot Block Code Protect
  6894                           ;	CPB = OFF, Boot block is not code-protected
  6895                           ;	Data EEPROM Code Protect
  6896                           ;	CPD = OFF, Data EEPROM is not code-protected
  6897   300009                     	org	3145737
  6898   300009  C0                 	db	192
  6899                           
  6900                           ;Config register CONFIG6L @ 0x30000A
  6901                           ;	Block 0 Write Protect
  6902                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  6903                           ;	Block 1 Write Protect
  6904                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  6905                           ;	Block 2 Write Protect
  6906                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  6907                           ;	Block 3 Write Protect
  6908                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  6909   30000A                     	org	3145738
  6910   30000A  0F                 	db	15
  6911                           
  6912                           ;Config register CONFIG6H @ 0x30000B
  6913                           ;	Configuration Registers Write Protect
  6914                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6915                           ;	Boot Block Write Protect
  6916                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  6917                           ;	Data EEPROM Write Protect
  6918                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6919   30000B                     	org	3145739
  6920   30000B  E0                 	db	224
  6921                           
  6922                           ;Config register CONFIG7L @ 0x30000C
  6923                           ;	Block 0 Table Read Protect
  6924                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  6925                           ;	Block 1 Table Read Protect
  6926                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  6927                           ;	Block 2 Table Read Protect
  6928                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  6929                           ;	Block 3 Table Read Protect
  6930                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  6931   30000C                     	org	3145740
  6932   30000C  0F                 	db	15
  6933                           
  6934                           ;Config register CONFIG7H @ 0x30000D
  6935                           ;	Boot Block Table Read Protect
  6936                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  6937   30000D                     	org	3145741
  6938   30000D  40                 	db	64
  6939                           tosu	equ	0xFFF
  6940                           tosh	equ	0xFFE
  6941                           tosl	equ	0xFFD
  6942                           stkptr	equ	0xFFC
  6943                           pclatu	equ	0xFFB
  6944                           pclath	equ	0xFFA
  6945                           pcl	equ	0xFF9
  6946                           tblptru	equ	0xFF8
  6947                           tblptrh	equ	0xFF7
  6948                           tblptrl	equ	0xFF6
  6949                           tablat	equ	0xFF5
  6950                           prodh	equ	0xFF4
  6951                           prodl	equ	0xFF3
  6952                           indf0	equ	0xFEF
  6953                           postinc0	equ	0xFEE
  6954                           postdec0	equ	0xFED
  6955                           preinc0	equ	0xFEC
  6956                           plusw0	equ	0xFEB
  6957                           fsr0h	equ	0xFEA
  6958                           fsr0l	equ	0xFE9
  6959                           wreg	equ	0xFE8
  6960                           indf1	equ	0xFE7
  6961                           postinc1	equ	0xFE6
  6962                           postdec1	equ	0xFE5
  6963                           preinc1	equ	0xFE4
  6964                           plusw1	equ	0xFE3
  6965                           fsr1h	equ	0xFE2
  6966                           fsr1l	equ	0xFE1
  6967                           bsr	equ	0xFE0
  6968                           indf2	equ	0xFDF
  6969                           postinc2	equ	0xFDE
  6970                           postdec2	equ	0xFDD
  6971                           preinc2	equ	0xFDC
  6972                           plusw2	equ	0xFDB
  6973                           fsr2h	equ	0xFDA
  6974                           fsr2l	equ	0xFD9
  6975                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        16
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      90
    BANK0           160    101     125
    BANK1           256     50     102
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2sprintf@f...source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f...buffer	PTR unsigned char  size(2) Largest target is 0

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_1(CODE[23]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2018$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_1(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strReloj(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1970$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1970$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[2]), STR_2(CODE[2]), strReloj(BANK1[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RutinaServicioInterrupt in COMRAM

    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_utoa
    i2_utoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_atoi->i2___wmul
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Hardware_Init->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RutinaServicioInterrupt in BANK0

    _RutinaServicioInterrupt->i2_sprintf

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _RutinaServicioInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RutinaServicioInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RutinaServicioInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RutinaServicioInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RutinaServicioInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RutinaServicioInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RutinaServicioInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11276
                                             47 BANK1      3     3      0
                      _Hardware_Init
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    9043
                                             24 BANK1     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8408
                                             16 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    7848
                                             95 BANK0      6     0      6
                                              0 BANK1     16    16      0
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4249
                                             63 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2837
                                             52 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1388
                                             45 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     888
                                             36 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      31
                                             35 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             35 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             35 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1404
                                             41 BANK0      9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             35 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             35 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             35 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     709
                                             39 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     254
                                             36 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     960
                                             38 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        0     0      0     279
            _INTERRUPT_Global_Config
                           _Lcd_Init
                     _OSCILADOR_Init
                          _PORT_Init
             _TMR0_Temporizador_Init
 ---------------------------------------------------------------------------------
 (2) _TMR0_Temporizador_Init                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     279
                                             38 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     155
                                             36 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                             35 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Global_Config                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _RutinaServicioInterrupt                             12    12      0    6667
                                             23 BANK0     12    12      0
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (10) i2_sprintf                                          25    15     10    5967
                                              0 BANK0     23    13     10
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (11) i2_vfprintf                                          8     2      6    5585
                                             82 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) i2_vfpfcnvrt                                        25    19      6    5256
                                             60 COMRAM    22    16      6
                             i2_atoi
                            i2_fputc
                          i2_isdigit
                             i2_utoa
 ---------------------------------------------------------------------------------
 (13) i2_utoa                                             32    22     10    2874
                                             28 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (14) i2_pad                                              11     5      6    1792
                                             17 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (15) i2_fputs                                             7     3      4     838
                                             10 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     558
                                              1 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2___lomod                                          17     1     16     302
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (14) i2___lodiv                                          25     9     16     311
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (13) i2_atoi                                              9     7      2     886
                                              6 COMRAM     9     7      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (14) i2_isspace                                           5     3      2     110
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_isdigit                                           2     0      2      77
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Write_String                                  6     4      2     294
                                              4 COMRAM     6     4      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Set_Cursor                                    5     4      1     406
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Cmd                                           2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Hardware_Init
     _INTERRUPT_Global_Config
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _OSCILADOR_Init
     _PORT_Init
     _TMR0_Temporizador_Init
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc

 _RutinaServicioInterrupt (ROOT)
   i2_Lcd_Set_Cursor
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Write_String
     i2_Lcd_Write_Char
       i2_Lcd_Port
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_atoi
           i2___wmul
           i2_isdigit
           i2_isspace
         i2_fputc
           i2_putch
         i2_isdigit
         i2_utoa
           i2___lodiv
           i2___lomod
           i2_pad
             i2_fputc
             i2_fputs
               i2_fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     32      66       7       39.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      7D       5       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5A       1       95.7%
BITBIGSFRhlll       22      0       0      34        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhllll      C      0       0      27        0.0%
BITBIGSFRll          9      0       0      35        0.0%
BITBIGSFRhhllll      7      0       0      26        0.0%
BITBIGSFRhhllll      7      0       0      25        0.0%
BITBIGSFRhhllll      7      0       0      28        0.0%
BITBIGSFRhlhh        6      0       0      29        0.0%
BITBIGSFRhhlllh      6      0       0      24        0.0%
BITBIGSFRhllhhh      4      0       0      31        0.0%
BITBIGSFRhhllhl      2      0       0      23        0.0%
BITBIGSFRhllhhl      1      0       0      32        0.0%
BITBIGSFRhllhl       1      0       0      33        0.0%
BITBIGSFRhlhl        1      0       0      30        0.0%
BITBIGSFRhhllhh      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13D      36        0.0%
DATA                 0      0     13D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 20 14:35:32 2023

                             l72 22EC                               l57 22B4  
                             l75 225C                               l69 228A  
            ___wmul@multiplicand 0085                              l117 22C6  
                            l304 1BE2                              l280 1E14  
                            l441 2262                              l283 21F8  
                            l292 1D4E                              l444 2274  
                            l286 22E4                              l295 1C62  
                            l447 21D2                              l298 210C  
                            l902 16D8                              l892 1516  
                            l885 14F6                              l895 16B8  
                            _pad 1A02  __end_of_INTERRUPT_Global_Config 22EE  
                            wreg 000FE8                       _TXSTA1bits 000FAC  
            __end_ofi2_vfpfcnvrt 0D94                             l1201 1F14  
                           l1125 1EC2                             l1150 1A4A  
                           l1223 12D2                             l1160 0DCC  
                           l1153 1A8E                             l1226 12DA  
                           l1170 0F90                             l1162 0DD4  
                           l1155 1AB0                             l1252 1874  
                           l1260 1FFC                             l1229 21AA  
                           l1237 2044                             l1194 0ADC  
                           l4100 1C32                             l4110 1C50  
                           l4102 1C38                             l4112 1C56  
                           l4104 1C3E                             l4120 2256  
                           l4200 1EB0                             l4114 1C5C  
                           l4106 1C44                             l4122 2258  
                           l4130 20E2                             l4210 1BA6  
                           l4108 1C4A                             l4124 225A  
                           l4116 2240                             l4140 2100  
                           l4132 20E4                             l4204 1B60  
                           l4126 22E6                             l4070 22A2  
                           l4118 2246                             l4142 2102  
                           l4134 20EC                             l4206 1B6E  
                           l4150 1EEE                             l4230 198A  
                           l4080 22B0                             l4072 22A8  
                           l4144 210A                             l4136 20EE  
                           l4128 20D4                             l4208 1BA0  
                           l4152 1F0A                             l4240 19A6  
                           l4232 1996                             l4224 1940  
                           l4090 1BF2                             l4082 22B2  
                           l4074 22AA                             l4170 2282  
                           l4138 20F6                             l3610 1426  
                           l4146 1EC4                             l4242 19B4  
                           l4226 1954                             l4092 1C04  
                           l4084 22B6                             l4076 22AC  
                           l4172 2286                             l4180 1D0A  
                           l3604 21AC                             l3620 147C  
                           l3612 1432                             l4148 1ED0  
                           l4244 19CE                             l4228 197C  
                           l4094 1C0A                             l4086 1BE4  
                           l4078 22AE                             l4166 2276  
                           l4174 22D8                             l4190 1D46  
                           l4182 1D10                             l3606 21CA  
                           l4430 1226                             l3630 14F0  
                           l3622 148E                             l3614 1452  
                           l4246 19D8                             l4238 199C  
                           l4096 1C1C                             l4088 1BEC  
                           l4168 227E                             l4184 1D1C  
                           l4176 1CE6                             l3624 14BC  
                           l3616 145A                             l3640 1652  
                           l3632 1608                             l3552 2262  
                           l3560 17AA                             l3800 0E98  
                           l4192 1E72                             l4248 19E6  
                           l4098 1C22                             l4186 1D2E  
                           l4178 1CF8                             l3626 14DC  
                           l3618 146E                             l3642 1680  
                           l3634 1628                             l3554 2270  
                           l3570 182E                             l3562 17BE  
                           l3650 1A12                             l3810 0F62  
                           l3802 0EFC                             l4426 08B8  
                           l4194 1E84                             l4188 1D40  
                           l3628 14DE                             l3644 16A0  
                           l3636 1630                             l3564 17D0  
                           l3660 1A6A                             l3652 1A26  
                           l3804 0F10                             l3812 0F70  
                           l4428 0A92                             l4196 1E8C  
                           l3670 1FFE                             l3830 1208  
                           l3822 11A8                             l3646 16B2  
                           l3638 1644                             l3566 17DA  
                           l3590 1FC4                             l3662 1A70  
                           l3654 1A36                             l3806 0F2E  
                           l4198 1E94                             ?_pad 0094  
                           l3760 1DD0                             l3920 21E2  
                           l3672 2004                             l3840 12A4  
                           l3832 123C                             l3824 11C4  
                           l3816 118E                             l3568 17F8  
                           l3592 1FD6                             l3664 1A9C  
                           l3656 1A42                             l3648 1A02  
                           l3808 0F48                             l3770 1DF6  
                           l3762 1DD2                             l3922 21E4  
                           l3666 217E                             l3674 2018  
                           l3842 12B6                             l3826 11F8  
                           l3818 11A4                             l3594 1FDC  
                           l3658 1A56                             l3930 0850  
                           l3772 1DFC                             l3764 1DE0  
                           l3756 1DBA                             l3924 21F6  
                           l3916 21D8                             l3676 203A  
                           l3828 1200                             l3588 1FB6  
                           l3780 0D94                             l3940 0886  
                           l3932 085E                             l3774 1DFE  
                           l3766 1DE6                             l3758 1DCA  
                           l3918 21DA                             l3678 203E  
                           l3838 1274                             l3790 0E04  
                           l3782 0DA4                             l3950 08FE  
                           l3934 0862                             l3926 081E  
                           l3776 1E0C                             l3768 1DE8  
                           l3792 0E0E                             l3784 0DA6  
                           l3952 0934                             l3944 0892  
                           l3936 0870                             l3928 0842  
                           l3778 1E12                             l3794 0E14  
                           l3786 0DC0                             l3970 0A44  
                           l3962 0980                             l3954 0944  
                           l3938 0874                             l3946 08C6  
                           l3796 0E8C                             l3788 0DFC  
                           l3964 09BA                             l3956 0952  
                           l3948 08DA                             l3798 0E92  
                           l3966 09CA                             l3958 0972  
                           l3982 0AB2                             l3976 0A74  
                           l3968 09E6                             l3978 0AA0  
                           STR_1 0801                             STR_2 081A  
                           STR_3 0818                             STR_4 0801  
                           u3000 0F70                             u3001 0F6C  
                           u3010 11C4                             u3011 11C0  
                           u3020 11F4                             u3021 11F0  
                           u3030 12A4                             _LATB 000F8A  
                           u3031 12A0                             u3040 12B6  
                           u3200 09BA                             _LATD 000F8C  
                           u3041 12B2                             u3201 09B6  
                           u3210 09E6                             u3211 09E2  
                           u3300 1CF8                             u2500 2270  
                           u3301 1CF4                             u2501 226C  
                           u3310 1D2E                             u3311 1D2A  
                           u3320 1B9C                             u2520 17BE  
                           u2600 1FFC                             u3160 0842  
                           u2521 17BA                             u2601 1FF8  
                           u3161 083E                             u3330 1BD2  
                           u2530 17D0                             u3170 08DA  
                           u2531 17CC                             u3171 08D6  
                           u3340 1BE2                             u2540 17F8  
                           u2700 1A36                             u3180 08FE  
                           u3341 1BDE                             u2621 142C  
                           u2541 17F4                             u2701 1A32  
                           u3181 08FA                             u2630 1452  
                           u2550 182E                             u2710 1A8E  
                           u3190 0944                             u3350 19FA  
                           u3327 1B92                             u2631 144E  
                           u2551 182A                             u2711 1A8A  
                           u3191 0940                             u3351 19F6  
                           u2640 147C                             u2720 1A9C  
                           u3280 1F0A                             u3337 1BC8  
                           u2641 1478                             u2721 1A98  
                           u3281 1F06                             u3417 19C0  
                           u2730 21A4                             u2650 14BC  
                           u3427 20F0                             u2731 219E  
                           u2651 14B8                             u2900 1DCA  
                           u2740 21A6                             u2660 1628  
                           u2901 1DC6                             u3437 2104  
                           u2661 1624                             u2910 1DE0  
                           u2750 2018                             u2670 1652  
                           u2911 1DDC                             u3447 1BFA  
                           u2751 2014                             u2671 164E  
                           u2920 1DF6                             u2760 203A  
                           u2680 1680                             u2921 1DF2  
                           u3457 1C12                             u2761 2036  
                           u2681 167C                             u2930 1E0C  
                           u2690 1A12                             u2931 1E08  
                           u3467 1C2A                             u2691 1A0E  
                           u2940 0DA4                             u3477 21EC  
                           u2941 0DA0                             u2950 0DC0  
                           u2951 0DBC                             u2960 0F10  
                           u2961 0F0C                             u2970 0F2E  
                           u2971 0F2A                             u2980 0F48  
                           u2981 0F44                             u2990 0F62  
                           u2991 0F5E                             i2l66 00E2  
                           _TMR0 000FD6                             _WPUB 000F85  
              ?_Lcd_Write_String 0087                             _dbuf 0100  
                           _atoi 118E                             _main 1940  
                           _prec 00D7                             pad@i 009B  
                           pad@p 0098                             fsr0h 000FEA  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 009D                             fsr2l 000FD9  
                           btemp 005B                             _utoa 0D94  
                           prodh 000FF4                             prodl 000FF3  
                           start 0116               ??_Lcd_Write_String 0089  
                __end_ofi2_fputc 1940                  __end_ofi2_fputs 20D0  
                __end_of_Lcd_Cmd 21FA                  __end_ofi2_putch 22A2  
                   ___param_bank 000000                            ??_pad 009A  
                     i2_vfprintf 1F68                            ?_atoi 0089  
                          ?_main 0001                            ?_utoa 009F  
                __end_of___lodiv 1518                  __end_of___lomod 16DA  
                          i2l304 1CE0                            i2l280 1E70  
                          i2l441 228E                            i2l283 223E  
                          i2l292 1DB4                            i2l444 22A0  
                          i2l447 221E                            i2l298 217C  
                          i2l902 17A8                            i2l892 1606  
                          i2l885 15E6                            i2l895 1788  
                   vfpfcnvrt@fmt 00C1                            _PORTB 000F81  
                          _PORTD 000F83                            _TRISB 000F93  
                          _TRISD 000F95                            i2_pad 1AB2  
                     i2isdigit@c 0001                      ?i2_Lcd_Port 0001  
                          _flags 00D9                            _fputc 17AA  
                          _fputs 1FB6                  __end_of_isdigit 21AC  
                          _hours 00DC                            atoi@n 0090  
                          pad@fp 0094                            atoi@s 0089  
                          _width 00D5                            _putch 225E  
                __end_of_isspace 2046                            tablat 000FF5  
               __end_ofi2___wmul 2220                            ttemp5 005C  
                          ttemp6 005F                            ttemp7 0063  
                          utoa@d 00A1                            utoa@i 00BD  
                          utoa@n 00B5                            utoa@p 00B1  
                          utoa@w 00B3                            status 000FD8  
                     i2isspace@c 0001                            wtemp8 005C  
                __end_of_sprintf 1EC4                 ___lodiv@dividend 0083  
               i2_Lcd_Set_Cursor 1D50                 __end_of_Lcd_Init 1C64  
               __end_of_Lcd_Port 1E16                  __initialization 2046  
                   __end_of_atoi 12DC                     __end_of_main 1A02  
                   __end_of_utoa 0F92                      i2_vfpfcnvrt 0ADE  
                  i2vfpfcnvrt@ap 0041                    i2vfpfcnvrt@cp 0051  
                  i2vfpfcnvrt@fp 003D                           ??_atoi 008B  
                         ??_main 0163                           ??_utoa 00A9  
                  __activetblptr 000002                       i2sprintf@f 006C  
                     i2sprintf@s 0060                           ?i2_pad 0012  
               ___lodiv@quotient 0093                 ??_OSCILADOR_Init 0083  
                         ?_fputc 0084                           ?_fputs 008D  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         ?_putch 0001                           _ANSELD 000F5E  
                         i2l1201 1FB4                           i2l1125 1F66  
                         i2l1150 1AF8                           i2l1223 141C  
                         i2l1160 0FCA                           i2l1153 1B3A  
                         i2l1226 1424                           i2l1170 118C  
                         i2l1162 0FD2                           i2l1155 1B5E  
                         i2l1252 193E                           i2l1260 20CE  
                         i2l1229 22EE                           i2l1237 2144  
                         i2l3120 2224                           i2l4000 0ADE  
                         i2l3122 222A                           i2l3130 2154  
                         i2l1194 0D92                           i2l4010 0B2E  
                         i2l4002 0B02                           i2l3124 222C  
                         i2l3140 2170                           i2l3132 2156  
                         i2l4012 0B32                           i2l4020 0B84  
                         i2l4004 0B10                           i2l3126 223C  
                         i2l3118 2222                           i2l3142 2172  
                         i2l3134 215E                           i2l4030 0C0E  
                         i2l4022 0B96                           i2l4014 0B44  
                         i2l4006 0B1E                           i2l3144 217A  
                         i2l3136 2160                           i2l3128 2148  
                         i2l4040 0C84                           i2l4032 0C2E  
                         i2l4024 0BBA                           i2l4008 0B22  
                         i2l3250 1D52                           i2l3138 2168  
                         i2l4050 0D2C                           i2l4042 0CA0  
                         i2l4026 0BF0                           i2l4018 0B50  
                         i2l3260 1D96                           i2l3252 1D62  
                         i2l4044 0CFC                           i2l4052 0D58  
                         i2l4036 0C3C                           i2l4028 0C00  
                         i2l4220 1F54                           i2l4212 1F16  
                         i2l3262 1DA8                           i2l3254 1D74  
                         i2l3270 1CA0                           i2l4038 0C74  
                         i2l4214 1F28                           i2l3264 1DAE  
                         i2l3256 1D7A                           i2l3272 1CA4  
                         i2l3600 20AA                           i2l4056 0D6A  
                         i2l4160 1F90                           i2l4216 1F30  
                         i2l3258 1D84                           i2l3266 1C64  
                         i2l3602 20AE                           i2l4162 1FAC  
                         i2l4218 1F38                           i2l4250 003A  
                         i2l3268 1C70                           i2l3700 157E  
                         i2l4156 1F68                           i2l4260 0064  
                         i2l4252 0048                           i2l3702 15AC  
                         i2l3710 16DA                           i2l4158 1F74  
                         i2l4270 008E                           i2l4262 0074  
                         i2l4254 0056                           i2l3704 15CC  
                         i2l3720 1750                           i2l3712 16F8  
                         i2l4432 0B76                           i2l4280 00D6  
                         i2l4272 0090                           i2l4264 0078  
                         i2l4256 005E                           i2l3706 15CE  
                         i2l3722 1770                           i2l3714 1700  
                         i2l3730 1AD6                           i2l4434 0D4A  
                         i2l4274 00A0                           i2l4266 007A  
                         i2l4258 0060                           i2l2940 1E26  
                         i2l3900 1388                           i2l4436 1372  
                         i2l3708 15E0                           i2l3724 1782  
                         i2l3716 1714                           i2l3556 228E  
                         i2l3580 18A4                           i2l3740 1B1C  
                         i2l3732 1AE4                           i2l4268 008A  
                         i2l4276 00A4                           i2l2950 1E44  
                         i2l2942 1E2C                           i2l3750 2122  
                         i2l3910 1400                           i2l3718 1722  
                         i2l3558 229C                           i2l3582 18C2  
                         i2l3574 1876                           i2l3742 1B4A  
                         i2l3734 1AF0                           i2l3726 1AB2  
                         i2l4278 00AE                           i2l2960 1E6E  
                         i2l2952 1E52                           i2l2944 1E2E  
                         i2l3744 22EE                           i2l3752 2144  
                         i2l3584 18F8                           i2l3576 1888  
                         i2l3736 1B04                           i2l3728 1AC2  
                         i2l2954 1E58                           i2l2946 1E3C  
                         i2l2938 1E18                           i2l3682 21FA  
                         i2l3746 210E                           i2l3906 13BE  
                         i2l3690 1524                           i2l3578 189A  
                         i2l3738 1B18                           i2l3850 0FA2  
                         i2l2956 1E5A                           i2l2948 1E42  
                         i2l3684 2216                           i2l3748 210E  
                         i2l3908 13EE                           i2l3692 1542  
                         i2l3596 208C                           i2l3860 100C  
                         i2l3852 0FA4                           i2l2958 1E68  
                         i2l3694 154A                           i2l3598 2098  
                         i2l3862 1012                           i2l3870 10F8  
                         i2l3854 0FBE                           i2l3696 155E  
                         i2l3688 1518                           i2l3872 110A  
                         i2l3880 116C                           i2l3864 1088  
                         i2l3856 0FFA                           i2l3848 0F92  
                         i2l3890 12F4                           i2l3698 156C  
                         i2l3874 1128                           i2l3866 108E  
                         i2l3858 1002                           i2l3892 1310  
                         i2l3884 12DC                           i2l3876 1142  
                         i2l3868 1094                           i2l3894 1344  
                         i2l3886 12F0                           i2l3878 115C  
                         i2l3896 134C                           i2l3898 1354  
                      ??i2_fputc 0006                           _RCREG1 000FAE  
                      ??i2_fputs 000F                           _RCSTA1 000FAB  
                      ??_Lcd_Cmd 0084                    vfpfcnvrt@done 0140  
                         _SPBRG1 000FAF                        ??i2_putch 0001  
                         _TXREG1 000FAD                           _TXSTA1 000FAC  
                         i2_atoi 12DC                           i2pad@i 0019  
                         i2pad@p 0016                           i2pad@w 001B  
                         i2_utoa 0F92                     vfprintf@cfmt 014A  
              __end_ofi2_Lcd_Cmd 2240                    i2vfprintf@fmt 0055  
                         ___wmul 21AC                        ??___lodiv 0093  
                      ??___lomod 0093                __end_of_PORT_Init 22B6  
                    ?i2_vfprintf 0053              i2Lcd_Write_String@a 0005  
            i2Lcd_Write_String@i 0009                           clear_0 206C  
                         clear_1 2078                           isa$std 000001  
                         pad@buf 0096                 i2_Lcd_Write_Char 2146  
                         fputc@c 0084                           fputs@c 0091  
                         fputs@i 0092                           fputs@s 008D  
                      ??_isdigit 0085                __end_ofi2___lodiv 1608  
              __end_ofi2___lomod 17AA                     __mediumconst 0000  
                      ??_isspace 0085                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0083                 __end_of_vfprintf 1F16  
              i2___lodiv@divisor 0009                           utoa@fp 009F  
              i2___lodiv@counter 0019                        ??_sprintf 00C5  
                Lcd_Set_Cursor@a 0087                  Lcd_Set_Cursor@b 0086  
                Lcd_Set_Cursor@y 0089                  Lcd_Set_Cursor@z 0088  
              __end_ofi2_isdigit 22F0                       __accesstop 0060  
        __end_of__initialization 207E                __end_ofi2_isspace 2146  
              __end_of_Lcd_Clear 22E6                    ___rparam_used 000001  
              __end_ofi2_sprintf 1F68            __end_of_Hardware_Init 228C  
                  __end_ofi2_pad 1B60                   __pcstackCOMRAM 0001  
                   __pidataBANK0 22C8                    __end_of_fputc 1876  
                  __end_of_fputs 1FFE                    __end_of_putch 2276  
              i2Lcd_Write_Char@a 0004                i2Lcd_Write_Char@y 0003  
                      ?i2___wmul 0001                   _Lcd_Set_Cursor 1CE2  
                        ??i2_pad 0018                   i2vfpfcnvrt@fmt 003F  
                      ?_Lcd_Init 0001                        ?_Lcd_Port 0001  
                        ??_fputc 0088                          ??_fputs 0091  
           i2Lcd_Write_Char@temp 0002                          ??_putch 0083  
                     __pbssBANK0 00D5                       __pbssBANK1 0100  
                    i2sprintf@ap 006A                          ?i2_atoi 0007  
                        ?i2_utoa 001D                          ?___wmul 0083  
           i2Lcd_Set_Cursor@temp 0008           __end_of_Lcd_Set_Cursor 1D50  
                     ??i2___wmul 0005         __end_ofi2_Lcd_Set_Cursor 1DB6  
              i2___lomod@divisor 0009                i2___lomod@counter 0011  
                        _SPBRGH1 000FB0                       ??_Lcd_Init 0086  
                        _SSP1ADD 000FC8                     ??i2_Lcd_Port 0001  
                        _SSP1BUF 000FC9                       ??_Lcd_Port 0083  
               ___lomod@dividend 0083                          i2_fputc 1876  
                        i2_fputs 208C          _RutinaServicioInterrupt 0008  
                 _Lcd_Write_Char 20D0                          _Lcd_Cmd 21D4  
                        i2atoi@n 000E                          i2pad@fp 0012  
                        i2atoi@s 0007                          i2_putch 228C  
       ??_TMR0_Temporizador_Init 0083                          i2utoa@d 001F  
                        i2utoa@i 003B                          i2utoa@n 0033  
                        i2utoa@p 002F                          i2utoa@w 0031  
        _INTERRUPT_Global_Config 22E6                          __Hparam 0000  
                        __Lparam 0000                          ___lodiv 1426  
                        ___lomod 1608                        ?_vfprintf 0144  
                 i2vfprintf@cfmt 0059                     __psmallconst 0800  
             __end_ofi2_Lcd_Port 1E72                     ?i2_vfpfcnvrt 003D  
                        __pcinit 2046                          __ramtop 0800  
                ?_Lcd_Set_Cursor 0086                          __ptext0 1940  
                        __ptext1 1E72                          __ptext2 1EC4  
                        __ptext3 081E                          __ptext4 0D94  
                        __ptext5 1A02                          __ptext6 1FB6  
                        __ptext7 17AA                          __ptext8 225E  
                        __ptext9 1608                        _T0CONbits 000FD5  
                        _isdigit 217E                          _minutes 00DB  
                        _seconds 00DA                          _isspace 1FFE  
                        atoi@neg 008E                          main@col 0165  
                        _sprintf 1E72           __end_of_Lcd_Write_Char 210E  
           end_of_initialization 207E                          fputc@fp 0086  
                  __Lmediumconst 0000                          fputs@fp 008F  
            i2___wmul@multiplier 0001         __end_ofi2_Lcd_Write_Char 217E  
              __end_of_vfpfcnvrt 0ADE                          postdec1 000FE5  
                        postdec2 000FDD               i2___lodiv@dividend 0001  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                 vfpfcnvrt@convarg 0138  
                      Lcd_Port@a 0083                     ??i2_vfprintf 0059  
                     ??_vfprintf 00C5                        i2_Lcd_Cmd 2220  
                      _PORT_Init 22A2                        _TRISBbits 000F93  
                      _TRISCbits 000F94        ??_RutinaServicioInterrupt 0077  
                      i2___lodiv 1518                        i2___lomod 16DA  
                ?_Lcd_Write_Char 0001                Lcd_Write_String@a 0087  
              Lcd_Write_String@i 008B               i2___lodiv@quotient 0011  
      ??_INTERRUPT_Global_Config 0083               __end_ofi2_vfprintf 1FB6  
                      i2_isdigit 22EE                   __end_ofi2_atoi 1426  
                      i2_isspace 210E                   __end_ofi2_utoa 118E  
                      _Lcd_Clear 22D8                        i2atoi@neg 000C  
                      i2_sprintf 1F16                      vfpfcnvrt@ap 00C3  
                    vfpfcnvrt@cp 0142                      vfpfcnvrt@fp 00BF  
                 __end_of___wmul 21D4                 _Lcd_Write_String 1B60  
                     ?i2_Lcd_Cmd 0001                        i2fputc@fp 0004  
                      i2fputs@fp 000D                       ?_PORT_Init 0001  
               i2___wmul@product 0005              start_initialization 2046  
                ___lodiv@divisor 008B                  ___lodiv@counter 009B  
                    __end_of_pad 1AB2                        _Keypad4x4 00C5  
                     ?i2___lodiv 0001                       ?i2___lomod 0001  
                       ??i2_atoi 0009                         ??i2_utoa 0027  
                     ?i2_isdigit 0001                       ?i2_isspace 0001  
                    vfprintf@fmt 0146                     i2vfprintf@ap 0057  
                i2vfpfcnvrt@done 004F                     i2vfprintf@fp 0053  
                     ?_Lcd_Clear 0001  __end_of_RutinaServicioInterrupt 0116  
     __end_ofi2_Lcd_Write_String 1CE2                         ??___wmul 0087  
                     ?i2_sprintf 0060                      __pdataBANK0 00C5  
                Lcd_Write_Char@a 0086                  Lcd_Write_Char@y 0085  
         _TMR0_Temporizador_Init 2240                     i2sprintf@fmt 0062  
                  __pcstackBANK0 0060                    __pcstackBANK1 0134  
              ?i2_Lcd_Set_Cursor 0004               ??i2_Lcd_Set_Cursor 0005  
                       ?i2_fputc 0002                         ?i2_fputs 000B  
                       ?_Lcd_Cmd 0001                         ?i2_putch 0001  
               ??_Lcd_Set_Cursor 0087                        __pintcode 0008  
                       ?___lodiv 0083                         ?___lomod 0083  
                    ??i2_Lcd_Cmd 0002                      ??_PORT_Init 0083  
                ___lomod@divisor 008B                      __smallconst 0800  
                ___lomod@counter 0093                         _BAUDCON1 000FB8  
                       ?_isdigit 0083                         ?_isspace 0083  
                       ?_sprintf 014C                      ??i2___lodiv 0011  
                    ??i2___lomod 0011                   ___wmul@product 0087  
              ?i2_Lcd_Write_Char 0001                         _PIE1bits 000F9D  
             i2___lomod@dividend 0001                      ??i2_isdigit 0003  
                       i2u210_40 1E26                         i2u210_41 1E22  
                       i2u211_40 1E3C                         i2u211_41 1E38  
                       i2u212_40 1E52                         i2u212_41 1E4E  
                       i2u213_40 1E68                         i2u213_41 1E64  
                       i2u310_40 115C                         i2u310_41 1158  
                    ??i2_isspace 0003                         i2u311_40 116C  
                       i2u311_41 1168                         i2u312_40 1310  
                       i2u312_41 130C                         i2u313_40 1340  
                       i2u305_40 0FA2                         i2u313_41 133C  
                       i2u305_41 0F9E                         i2u314_40 13EE  
                       i2u306_40 0FBE                         i2u322_40 0B02  
                       i2u314_41 13EA                         i2u306_41 0FBA  
                       i2u322_41 0AFE                         Lcd_Cmd@a 0085  
                       i2u235_40 1D62                         i2u315_40 1400  
                       i2u251_40 229C                         i2u307_40 110A  
                       i2u323_40 0B96                         i2u235_41 1D5E  
                       i2u315_41 13FC                         i2u251_41 2298  
                       i2u307_41 1106                         i2u323_41 0B92  
                       i2u236_40 1D96                         i2u308_40 1128  
                       i2u324_40 0BBA                         i2u340_40 00A0  
                       i2u236_41 1D92                         i2u308_41 1124  
                       i2u324_41 0BB6                         i2u340_41 009C  
                       i2u237_40 1C9C                         i2u261_40 20CE  
                       i2u309_40 1142                         i2u325_40 0C00  
                       i2u261_41 20CA                         i2u309_41 113E  
                       i2u325_41 0BFC                         i2u237_47 1C92  
                       i2u238_40 1CD0                         i2u326_40 0C74  
                       i2u326_41 0C70                         i2u350_47 2232  
                       i2u238_47 1CC6                         i2u239_40 1CE0  
                       i2u327_40 0CA0                         i2u239_41 1CDC  
                       i2u327_41 0C9C                         i2u280_40 15AC  
                       i2u256_40 1888                         i2u336_40 0048  
                       i2u280_41 15A8                         i2u256_41 1884  
                       i2u336_41 0044                         i2u281_40 16F8  
                       i2u257_40 189A                         i2u329_40 1FAC  
                       i2u337_40 0056                         i2u281_41 16F4  
                       i2u257_41 1896                         i2u329_41 1FA8  
                       i2u337_41 0052                    _Hardware_Init 2276  
                       _PIR1bits 000F9E                         i2u282_40 1722  
                       i2u258_40 18C2                         i2u338_40 0074  
                       i2u282_41 171E                         i2u258_41 18BE  
                       i2u338_41 0070                         i2u283_40 1750  
                       i2u259_40 18F8                         i2u339_40 008A  
                       i2u283_41 174C                         i2u259_41 18F4  
                       i2u339_41 0086                         i2u284_40 1AC2  
                       i2u284_41 1ABE                         i2u348_47 2162  
                       i2u285_40 1AE4                         i2u277_41 151E  
                       i2u285_41 1AE0                         i2u349_47 2174  
                       i2u278_40 1542                         i2u286_40 1B3A  
                       i2u278_41 153E                         i2u286_41 1B36  
                       i2u279_40 156C                         i2u287_40 1B4A  
                       i2u279_41 1568                         i2u287_41 1B46  
             ??i2_Lcd_Write_Char 0002                         i2u288_40 2122  
                       i2u288_41 211E                         i2u289_40 2144  
                       i2u289_41 2140                      ??_Lcd_Clear 0086  
                       _RCONbits 000FD0                         _SSP1CON1 000FC6  
                    ??i2_sprintf 005B                         _SSP1STAT 000FC7  
                      _vfpfcnvrt 081E                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                       _ADCON2bits 000FC0  
              ___wmul@multiplier 0083                         i2___wmul 21FA  
               ??_Lcd_Write_Char 0084                     _isspace$2101 0087  
                       i2pad@buf 0014                         _Lcd_Init 1BE4  
                       _Lcd_Port 1DB6                      _INTCON2bits 000FF1  
                      copy_data0 205A                         i2fputc@c 0002  
                       i2fputs@c 000F                         i2fputs@i 0010  
                       i2fputs@s 000B         __end_of_Lcd_Write_String 1BE4  
                       i2putch@c 0001                         i2utoa@fp 001D  
                 _OSCILADOR_Init 22B6                   ?_Hardware_Init 0001  
                       __Hrparam 0000                       vfprintf@ap 0148  
                       __Lrparam 0000                       vfprintf@fp 0144  
          i2___wmul@multiplicand 0003                       ?_vfpfcnvrt 00BF  
                     _ANSELBbits 000F5C                       _ANSELCbits 000F5D  
             i2vfpfcnvrt@convarg 0047                       sprintf@fmt 014E  
                       __ptext10 1426                         __ptext11 118E  
                       __ptext20 2240                         __ptext12 1FFE  
                       __ptext21 22A2                         __ptext13 217E  
                       __ptext30 0ADE                         __ptext22 22B6  
                       __ptext14 21AC                         __ptext31 0F92  
                       __ptext23 1BE4                         __ptext15 1B60  
                       __ptext40 22EE                         __ptext32 1AB2  
                       __ptext24 21D4                         __ptext16 20D0  
                       __ptext41 21FA                         __ptext33 208C  
                       __ptext25 1DB6                         __ptext17 1CE2  
                       __ptext42 1C64                         __ptext34 1876  
                       __ptext26 22E6                         __ptext18 22D8  
                       __ptext43 2146                         __ptext35 228C  
                       __ptext19 2276                         __ptext44 1D50  
                       __ptext36 16DA                         __ptext28 1F16  
                       __ptext45 2220                         __ptext37 1518  
                       __ptext29 1F68                         __ptext46 1E16  
                       __ptext38 12DC                         __ptext39 210E  
                   _SSP1CON1bits 000FC6                     _SSP1CON2bits 000FC5  
         __end_of_OSCILADOR_Init 22C8                         isa$xinst 000000  
                       int$flags 005B          ?_TMR0_Temporizador_Init 0001  
                    i2Lcd_Port@a 0001                         _vfprintf 1EC4  
                       _strReloj 0120                     _SSP1STATbits 000FC7  
       ?_RutinaServicioInterrupt 0001                       _INTCONbits 000FF2  
             i2_Lcd_Write_String 1C64                         isdigit@c 0083  
       ?_INTERRUPT_Global_Config 0001               Lcd_Write_Char@temp 0084  
                       intlevel2 0000                        sprintf@ap 0156  
            ?i2_Lcd_Write_String 0005                  ?_OSCILADOR_Init 0001  
              i2Lcd_Set_Cursor@a 0005                i2Lcd_Set_Cursor@b 0004  
              i2Lcd_Set_Cursor@y 0007                i2Lcd_Set_Cursor@z 0006  
                       isspace@c 0083                  ??_Hardware_Init 0087  
                     _RCSTA1bits 000FAB                       _OSCCONbits 000FD3  
                     i2Lcd_Cmd@a 0003   __end_of_TMR0_Temporizador_Init 225E  
           ??i2_Lcd_Write_String 0007                    ??i2_vfpfcnvrt 0043  
                    ??_vfpfcnvrt 0134               Lcd_Set_Cursor@temp 008A  
                       sprintf@f 0158                         sprintf@s 014C  
                    _SSPCON2bits 000FC5                       i2_Lcd_Port 1E16  
