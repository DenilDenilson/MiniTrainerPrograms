

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 20 18:20:27 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 09/02/2023 GMT
    61                           ; 
    62                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F45K50 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95                           	psect	idataBANK0
    96   00329A                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for _Keypad4x4
   100   00329A  31                 	db	49
   101   00329B  32                 	db	50
   102   00329C  33                 	db	51
   103   00329D  41                 	db	65
   104   00329E  34                 	db	52
   105   00329F  35                 	db	53
   106   0032A0  36                 	db	54
   107   0032A1  42                 	db	66
   108   0032A2  37                 	db	55
   109   0032A3  38                 	db	56
   110   0032A4  39                 	db	57
   111   0032A5  43                 	db	67
   112   0032A6  2A                 	db	42
   113   0032A7  30                 	db	48
   114   0032A8  23                 	db	35
   115   0032A9  44                 	db	68
   116   000000                     _RCREG1	set	4014
   117   000000                     _TXREG1	set	4013
   118   000000                     _SPBRG1	set	4015
   119   000000                     _BAUDCON1	set	4024
   120   000000                     _TRISCbits	set	3988
   121   000000                     _TRISD	set	3989
   122   000000                     _SSP1CON2bits	set	4037
   123   000000                     _SSP1CON1bits	set	4038
   124   000000                     _SSP1STATbits	set	4039
   125   000000                     _OSCCONbits	set	4051
   126   000000                     _ADRESL	set	4035
   127   000000                     _ADRESH	set	4036
   128   000000                     _ADCON0bits	set	4034
   129                           
   130                           	psect	nvBANK0
   131   0000D7                     __pnvBANK0:
   132                           	callstack 0
   133   0000D7                     _temp:
   134                           	callstack 0
   135   0000D7                     	ds	4
   136   000000                     _RCSTA1bits	set	4011
   137   000000                     _TXSTA1bits	set	4012
   138   000000                     _SSP1CON1	set	4038
   139   000000                     _SSP1STAT	set	4039
   140   000000                     _TRISB	set	3987
   141   000000                     _SSPCON2bits	set	4037
   142   000000                     _ANSELAbits	set	3931
   143   000000                     _ANSELBbits	set	3932
   144   000000                     _TRISBbits	set	3987
   145   000000                     _ADCON2bits	set	4032
   146   000000                     _ADCON1bits	set	4033
   147   000000                     _INTCON2bits	set	4081
   148   000000                     _ANSELEbits	set	3935
   149   000000                     _ANSELCbits	set	3933
   150   000000                     _PORTB	set	3969
   151   000000                     _LATB	set	3978
   152   000000                     _SSP1BUF	set	4041
   153   000000                     _SSP1ADD	set	4040
   154   000000                     _LATD	set	3980
   155   000000                     _PORTD	set	3971
   156   000000                     _LATEbits	set	3981
   157   000000                     _WPUB	set	3973
   158   000000                     _TRISEbits	set	3990
   159   000000                     _PIE1bits	set	3997
   160   000000                     _PIR1bits	set	3998
   161   000000                     _RCSTA1	set	4011
   162   000000                     _TXSTA1	set	4012
   163   000000                     _SPBRGH1	set	4016
   164                           
   165                           	psect	smallconst
   166   000800                     __psmallconst:
   167                           	callstack 0
   168   000800  00                 	db	0
   169   000801                     STR_2:
   170   000801  3E                 	db	62	;'>'
   171   000802  54                 	db	84	;'T'
   172   000803  65                 	db	101	;'e'
   173   000804  6D                 	db	109	;'m'
   174   000805  70                 	db	112	;'p'
   175   000806  2E                 	db	46
   176   000807  20                 	db	32
   177   000808  41                 	db	65	;'A'
   178   000809  6D                 	db	109	;'m'
   179   00080A  62                 	db	98	;'b'
   180   00080B  69                 	db	105	;'i'
   181   00080C  65                 	db	101	;'e'
   182   00080D  6E                 	db	110	;'n'
   183   00080E  74                 	db	116	;'t'
   184   00080F  65                 	db	101	;'e'
   185   000810  3C                 	db	60	;'<'
   186   000811  0D                 	db	13
   187   000812  0A                 	db	10
   188   000813  00                 	db	0
   189   000814                     STR_3:
   190   000814  2D                 	db	45
   191   000815  20                 	db	32
   192   000816  2D                 	db	45
   193   000817  20                 	db	32
   194   000818  2D                 	db	45
   195   000819  20                 	db	32
   196   00081A  2D                 	db	45
   197   00081B  20                 	db	32
   198   00081C  2D                 	db	45
   199   00081D  20                 	db	32
   200   00081E  2D                 	db	45
   201   00081F  20                 	db	32
   202   000820  2D                 	db	45
   203   000821  20                 	db	32
   204   000822  2D                 	db	45
   205   000823  0D                 	db	13
   206   000824  0A                 	db	10
   207   000825  00                 	db	0
   208   000826                     STR_1:
   209   000826  54                 	db	84	;'T'
   210   000827  20                 	db	32
   211   000828  3D                 	db	61	;'='
   212   000829  20                 	db	32
   213   00082A  25                 	db	37
   214   00082B  2E                 	db	46
   215   00082C  32                 	db	50	;'2'
   216   00082D  66                 	db	102	;'f'
   217   00082E  20                 	db	32
   218   00082F  43                 	db	67	;'C'
   219   000830  0D                 	db	13
   220   000831  0A                 	db	10
   221   000832  00                 	db	0
   222   000833                     STR_4:
   223   000833  69                 	db	105	;'i'
   224   000834  6E                 	db	110	;'n'
   225   000835  66                 	db	102	;'f'
   226   000836  00                 	db	0
   227   000837                     STR_7:
   228   000837  6E                 	db	110	;'n'
   229   000838  61                 	db	97	;'a'
   230   000839  6E                 	db	110	;'n'
   231   00083A  00                 	db	0
   232   00083B  00                 	db	0	; dummy byte at the end
   233   000000                     
   234                           ; #config settings
   235                           
   236                           	psect	cinit
   237   003088                     __pcinit:
   238                           	callstack 0
   239   003088                     start_initialization:
   240                           	callstack 0
   241   003088                     __initialization:
   242                           	callstack 0
   243                           
   244                           ; Initialize objects allocated to BANK0 (16 bytes)
   245                           ; load TBLPTR registers with __pidataBANK0
   246   003088  0E9A               	movlw	low __pidataBANK0
   247   00308A  6EF6               	movwf	tblptrl,c
   248   00308C  0E32               	movlw	high __pidataBANK0
   249   00308E  6EF7               	movwf	tblptrh,c
   250   003090  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   251   003092  6EF8               	movwf	tblptru,c
   252   003094  EE00  F0C7         	lfsr	0,__pdataBANK0
   253   003098  EE10 F010          	lfsr	1,16
   254   00309C                     copy_data0:
   255   00309C  0009               	tblrd		*+
   256   00309E  CFF5 FFEE          	movff	tablat,postinc0
   257   0030A2  50E5               	movf	postdec1,w,c
   258   0030A4  50E1               	movf	fsr1l,w,c
   259   0030A6  E1FA               	bnz	copy_data0
   260                           
   261                           ; Clear objects allocated to BANK1 (80 bytes)
   262   0030A8  EE01  F000         	lfsr	0,__pbssBANK1
   263   0030AC  0E50               	movlw	80
   264   0030AE                     clear_0:
   265   0030AE  6AEE               	clrf	postinc0,c
   266   0030B0  06E8               	decf	wreg,f,c
   267   0030B2  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (32 bytes)
   270   0030B4  EE00  F0A7         	lfsr	0,__pbssBANK0
   271   0030B8  0E20               	movlw	32
   272   0030BA                     clear_1:
   273   0030BA  6AEE               	clrf	postinc0,c
   274   0030BC  06E8               	decf	wreg,f,c
   275   0030BE  E1FD               	bnz	clear_1
   276                           
   277                           ; Clear objects allocated to COMRAM (1 bytes)
   278   0030C0  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   279   0030C2                     end_of_initialization:
   280                           	callstack 0
   281   0030C2                     __end_of__initialization:
   282                           	callstack 0
   283   0030C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   284   0030C4  6EF8               	movwf	tblptru,c
   285   0030C6  0100               	movlb	0
   286   0030C8  EFCB  F012         	goto	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMRAM
   289   00005F                     __pbssCOMRAM:
   290                           	callstack 0
   291   00005F                     _flags:
   292                           	callstack 0
   293   00005F                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296   0000A7                     __pbssBANK0:
   297                           	callstack 0
   298   0000A7                     floorf@F526:
   299                           	callstack 0
   300   0000A7                     	ds	4
   301   0000AB                     ___fpclassifyf@F465:
   302                           	callstack 0
   303   0000AB                     	ds	4
   304   0000AF                     _width:
   305                           	callstack 0
   306   0000AF                     	ds	2
   307   0000B1                     _prec:
   308                           	callstack 0
   309   0000B1                     	ds	2
   310   0000B3                     _strTemp:
   311                           	callstack 0
   312   0000B3                     	ds	20
   313                           
   314                           	psect	dataBANK0
   315   0000C7                     __pdataBANK0:
   316                           	callstack 0
   317   0000C7                     _Keypad4x4:
   318                           	callstack 0
   319   0000C7                     	ds	16
   320                           
   321                           	psect	bssBANK1
   322   000100                     __pbssBANK1:
   323                           	callstack 0
   324   000100                     _dbuf:
   325                           	callstack 0
   326   000100                     	ds	80
   327                           
   328                           	psect	cstackBANK0
   329   000060                     __pcstackBANK0:
   330                           	callstack 0
   331   000060                     efgtoa@ne:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x0
   335   000060                     	ds	2
   336   000062                     efgtoa@p:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x2
   340   000062                     	ds	2
   341   000064                     efgtoa@t:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x4
   345   000064                     	ds	2
   346   000066                     _efgtoa$1932:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x6
   350   000066                     	ds	2
   351   000068                     efgtoa@pp:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x8
   355   000068                     	ds	1
   356   000069                     efgtoa@mode:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x9
   360   000069                     	ds	1
   361   00006A                     efgtoa@nmode:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xA
   365   00006A                     	ds	1
   366   00006B                     efgtoa@d:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xB
   370   00006B                     	ds	2
   371   00006D                     efgtoa@m:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xD
   375   00006D                     	ds	2
   376   00006F                     efgtoa@e:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0xF
   380   00006F                     	ds	2
   381   000071                     efgtoa@w:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x11
   385   000071                     	ds	2
   386   000073                     efgtoa@ou:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x13
   390   000073                     	ds	4
   391   000077                     efgtoa@i:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x17
   395   000077                     	ds	2
   396   000079                     efgtoa@h:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x19
   400   000079                     	ds	4
   401   00007D                     efgtoa@l:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x1D
   405   00007D                     	ds	4
   406   000081                     efgtoa@sign:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x21
   410   000081                     	ds	1
   411   000082                     efgtoa@n:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x22
   415   000082                     	ds	2
   416   000084                     efgtoa@g:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x24
   420   000084                     	ds	4
   421   000088                     efgtoa@u:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x28
   425   000088                     	ds	4
   426   00008C                     ?_vfprintf:
   427                           	callstack 0
   428   00008C                     vfprintf@fp:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x2C
   432   00008C                     	ds	2
   433   00008E                     vfprintf@fmt:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x2E
   437   00008E                     	ds	2
   438   000090                     vfprintf@ap:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x30
   442   000090                     	ds	2
   443   000092                     ?_sprintf:
   444                           	callstack 0
   445   000092                     sprintf@s:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x32
   449   000092                     	ds	2
   450   000094                     sprintf@fmt:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x34
   454   000094                     	ds	6
   455   00009A                     sprintf@ap:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x3A
   459   00009A                     	ds	2
   460   00009C                     sprintf@f:
   461                           	callstack 0
   462                           
   463                           ; 11 bytes @ 0x3C
   464   00009C                     	ds	11
   465                           
   466                           	psect	cstackCOMRAM
   467   000001                     __pcstackCOMRAM:
   468                           	callstack 0
   469   000001                     ??_ADC_SelectChannel:
   470   000001                     ?___fpclassifyf:
   471                           	callstack 0
   472   000001                     ?_isdigit:
   473                           	callstack 0
   474   000001                     ?_isspace:
   475                           	callstack 0
   476   000001                     ?___wmul:
   477                           	callstack 0
   478   000001                     ?___fladd:
   479                           	callstack 0
   480   000001                     ?_labs:
   481                           	callstack 0
   482   000001                     ?___lldiv:
   483                           	callstack 0
   484   000001                     ?___flneg:
   485                           	callstack 0
   486   000001                     ?___fltol:
   487                           	callstack 0
   488   000001                     USART_WriteByte@data:
   489                           	callstack 0
   490   000001                     putch@c:
   491                           	callstack 0
   492   000001                     ___wmul@multiplier:
   493                           	callstack 0
   494   000001                     isdigit@c:
   495                           	callstack 0
   496   000001                     isspace@c:
   497                           	callstack 0
   498   000001                     memcpy@d1:
   499                           	callstack 0
   500   000001                     strcpy@dest:
   501                           	callstack 0
   502   000001                     ___lldiv@dividend:
   503                           	callstack 0
   504   000001                     ___fleq@ff1:
   505                           	callstack 0
   506   000001                     ___flneg@f1:
   507                           	callstack 0
   508   000001                     ___fltol@f1:
   509                           	callstack 0
   510   000001                     ___fladd@b:
   511                           	callstack 0
   512   000001                     ___fpclassifyf@x:
   513                           	callstack 0
   514   000001                     labs@a:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x0
   518   000001                     	ds	1
   519   000002                     ADC_SelectChannel@channel:
   520                           	callstack 0
   521   000002                     USART_WriteString@pString:
   522                           	callstack 0
   523   000002                     fputc@c:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x1
   527   000002                     	ds	1
   528   000003                     ??_isdigit:
   529   000003                     ??_isspace:
   530   000003                     ?_ADC_GetConversion:
   531                           	callstack 0
   532   000003                     ___wmul@multiplicand:
   533                           	callstack 0
   534   000003                     memcpy@s1:
   535                           	callstack 0
   536   000003                     strcpy@src:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x2
   540   000003                     	ds	1
   541   000004                     fputc@fp:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x3
   545   000004                     	ds	1
   546   000005                     ??___fpclassifyf:
   547   000005                     ??_labs:
   548   000005                     ??_ADC_GetConversion:
   549   000005                     ??___fltol:
   550   000005                     _isspace$2010:
   551                           	callstack 0
   552   000005                     ___wmul@product:
   553                           	callstack 0
   554   000005                     memcpy@n:
   555                           	callstack 0
   556   000005                     strcpy@s:
   557                           	callstack 0
   558   000005                     ___lldiv@divisor:
   559                           	callstack 0
   560   000005                     ___fleq@ff2:
   561                           	callstack 0
   562   000005                     ___fladd@a:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x4
   566   000005                     	ds	1
   567   000006                     ??_fputc:
   568                           
   569                           ; 1 bytes @ 0x5
   570   000006                     	ds	1
   571   000007                     ?_atoi:
   572                           	callstack 0
   573   000007                     ADC_GetConversion@channel:
   574                           	callstack 0
   575   000007                     atoi@s:
   576                           	callstack 0
   577   000007                     memcpy@d:
   578                           	callstack 0
   579   000007                     strcpy@d:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x6
   583   000007                     	ds	1
   584   000008                     ?___xxtofl:
   585                           	callstack 0
   586   000008                     ___xxtofl@val:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x7
   590   000008                     	ds	1
   591   000009                     ??___fladd:
   592   000009                     ??_atoi:
   593   000009                     ??___fleq:
   594   000009                     ___fltol@sign1:
   595                           	callstack 0
   596   000009                     ___fpclassifyf@e:
   597                           	callstack 0
   598   000009                     memcpy@s:
   599                           	callstack 0
   600   000009                     ___lldiv@quotient:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x8
   604   000009                     	ds	1
   605   00000A                     ___fltol@exp1:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x9
   609   00000A                     	ds	1
   610   00000B                     memcpy@tmp:
   611                           	callstack 0
   612   00000B                     fputs@s:
   613                           	callstack 0
   614   00000B                     ___fpclassifyf@u:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0xA
   618   00000B                     	ds	1
   619   00000C                     ??___xxtofl:
   620   00000C                     atoi@neg:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0xB
   624   00000C                     	ds	1
   625   00000D                     ___lldiv@counter:
   626                           	callstack 0
   627   00000D                     ___fladd@signs:
   628                           	callstack 0
   629   00000D                     fputs@fp:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0xC
   633   00000D                     	ds	1
   634   00000E                     ___fladd@aexp:
   635                           	callstack 0
   636   00000E                     atoi@n:
   637                           	callstack 0
   638   00000E                     USART_SerialBegin@baudios:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0xD
   642   00000E                     	ds	1
   643   00000F                     ___fladd@bexp:
   644                           	callstack 0
   645   00000F                     fputs@c:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0xE
   649   00000F                     	ds	1
   650   000010                     ___fladd@grs:
   651                           	callstack 0
   652   000010                     ___xxtofl@sign:
   653                           	callstack 0
   654   000010                     fputs@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0xF
   658   000010                     	ds	1
   659   000011                     ?___fldiv:
   660                           	callstack 0
   661   000011                     ___xxtofl@exp:
   662                           	callstack 0
   663   000011                     ___fldiv@b:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x10
   667   000011                     	ds	1
   668   000012                     USART_SerialBegin@n:
   669                           	callstack 0
   670   000012                     pad@fp:
   671                           	callstack 0
   672   000012                     ___xxtofl@arg:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x11
   676   000012                     	ds	2
   677   000014                     pad@buf:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x13
   681   000014                     	ds	1
   682   000015                     ___fldiv@a:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x14
   686   000015                     	ds	1
   687   000016                     ?___flmul:
   688                           	callstack 0
   689   000016                     pad@p:
   690                           	callstack 0
   691   000016                     ___flmul@b:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x15
   695   000016                     	ds	2
   696   000018                     ??_pad:
   697                           
   698                           ; 1 bytes @ 0x17
   699   000018                     	ds	1
   700   000019                     ??___fldiv:
   701   000019                     pad@i:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x18
   705   000019                     	ds	1
   706   00001A                     ___flmul@a:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x19
   710   00001A                     	ds	1
   711   00001B                     pad@w:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x1A
   715   00001B                     	ds	2
   716   00001D                     ___fldiv@rem:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x1C
   720   00001D                     	ds	1
   721   00001E                     ??___flmul:
   722                           
   723                           ; 1 bytes @ 0x1D
   724   00001E                     	ds	3
   725   000021                     ___fldiv@sign:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x20
   729   000021                     	ds	1
   730   000022                     ___flmul@sign:
   731                           	callstack 0
   732   000022                     ___fldiv@new_exp:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x21
   736   000022                     	ds	1
   737   000023                     ___flmul@grs:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x22
   741   000023                     	ds	1
   742   000024                     ___fldiv@grs:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x23
   746   000024                     	ds	3
   747   000027                     ___flmul@aexp:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x26
   751   000027                     	ds	1
   752   000028                     ___fldiv@bexp:
   753                           	callstack 0
   754   000028                     ___flmul@bexp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x27
   758   000028                     	ds	1
   759   000029                     ___fldiv@aexp:
   760                           	callstack 0
   761   000029                     ___flmul@prod:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x28
   765   000029                     	ds	1
   766   00002A                     ?_floorf:
   767                           	callstack 0
   768   00002A                     floorf@x:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x29
   772   00002A                     	ds	3
   773   00002D                     ___flmul@temp:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x2C
   777   00002D                     	ds	1
   778   00002E                     ??_floorf:
   779                           
   780                           ; 1 bytes @ 0x2D
   781   00002E                     	ds	1
   782   00002F                     ?___flsub:
   783                           	callstack 0
   784   00002F                     ___flge@ff1:
   785                           	callstack 0
   786   00002F                     ___flsub@b:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x2E
   790   00002F                     	ds	4
   791   000033                     ___flge@ff2:
   792                           	callstack 0
   793   000033                     ___flsub@a:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x32
   797   000033                     	ds	1
   798   000034                     floorf@m:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x33
   802   000034                     	ds	3
   803   000037                     ??___flge:
   804                           
   805                           ; 1 bytes @ 0x36
   806   000037                     	ds	1
   807   000038                     floorf@e:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x37
   811   000038                     	ds	2
   812   00003A                     floorf@u:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x39
   816   00003A                     	ds	4
   817   00003E                     efgtoa@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x3D
   821   00003E                     	ds	2
   822   000040                     efgtoa@f:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x3F
   826   000040                     	ds	4
   827   000044                     efgtoa@c:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x43
   831   000044                     	ds	1
   832   000045                     ??_efgtoa:
   833                           
   834                           ; 1 bytes @ 0x44
   835   000045                     	ds	2
   836   000047                     vfpfcnvrt@fp:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x46
   840   000047                     	ds	2
   841   000049                     vfpfcnvrt@fmt:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x48
   845   000049                     	ds	2
   846   00004B                     vfpfcnvrt@ap:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x4A
   850   00004B                     	ds	2
   851   00004D                     ??_vfpfcnvrt:
   852                           
   853                           ; 1 bytes @ 0x4C
   854   00004D                     	ds	3
   855   000050                     vfpfcnvrt@convarg:
   856                           	callstack 0
   857                           
   858                           ; 8 bytes @ 0x4F
   859   000050                     	ds	8
   860   000058                     vfpfcnvrt@c:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x57
   864   000058                     	ds	1
   865   000059                     vfpfcnvrt@cp:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x58
   869   000059                     	ds	2
   870   00005B                     vfprintf@cfmt:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x5A
   874   00005B                     	ds	2
   875   00005D                     ??_main:
   876                           
   877                           ; 1 bytes @ 0x5C
   878   00005D                     	ds	2
   879                           
   880 ;;
   881 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   882 ;;
   883 ;; *************** function _main *****************
   884 ;; Defined at:
   885 ;;		line 19 in file "Rele_buzzer_uart.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  2  398[None  ] int 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   899 ;;      Params:         0       0       0       0       0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0
   901 ;;      Temps:          2       0       0       0       0       0       0       0       0
   902 ;;      Totals:         2       0       0       0       0       0       0       0       0
   903 ;;Total ram usage:        2 bytes
   904 ;; Hardware stack levels required when called: 8
   905 ;; This function calls:
   906 ;;		_ADC_GetConversion
   907 ;;		_ADC_Init
   908 ;;		_OSCILADOR_Init
   909 ;;		_PORT_Init
   910 ;;		_USART_SerialBegin
   911 ;;		_USART_WriteString
   912 ;;		___fladd
   913 ;;		___fldiv
   914 ;;		___flge
   915 ;;		___flmul
   916 ;;		___xxtofl
   917 ;;		_sprintf
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text0
   924   002596                     __ptext0:
   925                           	callstack 0
   926   002596                     _main:
   927                           	callstack 23
   928   002596                     
   929                           ;Rele_buzzer_uart.c: 21:     OSCILADOR_Init();
   930   002596  EC44  F019         	call	_OSCILADOR_Init	;wreg free
   931   00259A                     
   932                           ;Rele_buzzer_uart.c: 22:     PORT_Init();
   933   00259A  EC55  F019         	call	_PORT_Init	;wreg free
   934   00259E                     
   935                           ;Rele_buzzer_uart.c: 23:     ADC_Init();
   936   00259E  EC0B  F019         	call	_ADC_Init	;wreg free
   937   0025A2                     
   938                           ;Rele_buzzer_uart.c: 24:     USART_SerialBegin(9600);
   939   0025A2  0E80               	movlw	128
   940   0025A4  6E0E               	movwf	USART_SerialBegin@baudios^0,c
   941   0025A6  0E25               	movlw	37
   942   0025A8  6E0F               	movwf	(USART_SerialBegin@baudios+1)^0,c
   943   0025AA  0E00               	movlw	0
   944   0025AC  6E10               	movwf	(USART_SerialBegin@baudios+2)^0,c
   945   0025AE  0E00               	movlw	0
   946   0025B0  6E11               	movwf	(USART_SerialBegin@baudios+3)^0,c
   947   0025B2  EC23  F017         	call	_USART_SerialBegin	;wreg free
   948   0025B6                     l4242:
   949                           
   950                           ;Rele_buzzer_uart.c: 27:     {;Rele_buzzer_uart.c: 28:         temp = (((float)ADC_GetCo
      +                          nversion(0))*(5.0/1023.0));
   951   0025B6  0E00               	movlw	0
   952   0025B8  ECA8  F018         	call	_ADC_GetConversion
   953   0025BC  C003  F008         	movff	?_ADC_GetConversion,___xxtofl@val
   954   0025C0  C004  F009         	movff	?_ADC_GetConversion+1,___xxtofl@val+1
   955   0025C4  6A0A               	clrf	(___xxtofl@val+2)^0,c
   956   0025C6  6A0B               	clrf	(___xxtofl@val+3)^0,c
   957   0025C8  0E00               	movlw	0
   958   0025CA  ECF1  F011         	call	___xxtofl
   959   0025CE  C008  F016         	movff	?___xxtofl,___flmul@b
   960   0025D2  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
   961   0025D6  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
   962   0025DA  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
   963   0025DE  0E0A               	movlw	10
   964   0025E0  6E1A               	movwf	___flmul@a^0,c
   965   0025E2  0E28               	movlw	40
   966   0025E4  6E1B               	movwf	(___flmul@a+1)^0,c
   967   0025E6  0EA0               	movlw	160
   968   0025E8  6E1C               	movwf	(___flmul@a+2)^0,c
   969   0025EA  0E3B               	movlw	59
   970   0025EC  6E1D               	movwf	(___flmul@a+3)^0,c
   971   0025EE  EC7B  F00B         	call	___flmul	;wreg free
   972   0025F2  C016  F0D7         	movff	?___flmul,_temp
   973   0025F6  C017  F0D8         	movff	?___flmul+1,_temp+1
   974   0025FA  C018  F0D9         	movff	?___flmul+2,_temp+2
   975   0025FE  C019  F0DA         	movff	?___flmul+3,_temp+3
   976   002602                     
   977                           ;Rele_buzzer_uart.c: 29:         temp = ((temp - 0.5f)/0.01f);
   978   002602  0E00               	movlw	0
   979   002604  6E05               	movwf	___fladd@a^0,c
   980   002606  0E00               	movlw	0
   981   002608  6E06               	movwf	(___fladd@a+1)^0,c
   982   00260A  0E00               	movlw	0
   983   00260C  6E07               	movwf	(___fladd@a+2)^0,c
   984   00260E  0EBF               	movlw	191
   985   002610  6E08               	movwf	(___fladd@a+3)^0,c
   986   002612  C0D7  F001         	movff	_temp,___fladd@b
   987   002616  C0D8  F002         	movff	_temp+1,___fladd@b+1
   988   00261A  C0D9  F003         	movff	_temp+2,___fladd@b+2
   989   00261E  C0DA  F004         	movff	_temp+3,___fladd@b+3
   990   002622  EC1B  F009         	call	___fladd	;wreg free
   991   002626  C001  F011         	movff	?___fladd,___fldiv@b
   992   00262A  C002  F012         	movff	?___fladd+1,___fldiv@b+1
   993   00262E  C003  F013         	movff	?___fladd+2,___fldiv@b+2
   994   002632  C004  F014         	movff	?___fladd+3,___fldiv@b+3
   995   002636  0E0A               	movlw	10
   996   002638  6E15               	movwf	___fldiv@a^0,c
   997   00263A  0ED7               	movlw	215
   998   00263C  6E16               	movwf	(___fldiv@a+1)^0,c
   999   00263E  0E23               	movlw	35
  1000   002640  6E17               	movwf	(___fldiv@a+2)^0,c
  1001   002642  0E3C               	movlw	60
  1002   002644  6E18               	movwf	(___fldiv@a+3)^0,c
  1003   002646  EC90  F00D         	call	___fldiv	;wreg free
  1004   00264A  C011  F0D7         	movff	?___fldiv,_temp
  1005   00264E  C012  F0D8         	movff	?___fldiv+1,_temp+1
  1006   002652  C013  F0D9         	movff	?___fldiv+2,_temp+2
  1007   002656  C014  F0DA         	movff	?___fldiv+3,_temp+3
  1008   00265A                     
  1009                           ;Rele_buzzer_uart.c: 31:         sprintf(strTemp, "T = %.2f C\r\n", temp);
  1010   00265A  0EB3               	movlw	low _strTemp
  1011   00265C  0100               	movlb	0	; () banked
  1012   00265E  6F92               	movwf	sprintf@s& (0+255),b
  1013   002660  0E00               	movlw	high _strTemp
  1014   002662  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1015   002664  0E26               	movlw	low STR_1
  1016   002666  6F94               	movwf	sprintf@fmt& (0+255),b
  1017   002668  0E08               	movlw	high STR_1
  1018   00266A  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1019   00266C  C0D7  F096         	movff	_temp,?_sprintf+4
  1020   002670  C0D8  F097         	movff	_temp+1,?_sprintf+5
  1021   002674  C0D9  F098         	movff	_temp+2,?_sprintf+6
  1022   002678  C0DA  F099         	movff	_temp+3,?_sprintf+7
  1023   00267C  EC85  F017         	call	_sprintf	;wreg free
  1024   002680                     
  1025                           ;Rele_buzzer_uart.c: 32:         USART_WriteString(">Temp. Ambiente<\r\n");
  1026   002680  0E01               	movlw	low STR_2
  1027   002682  6E02               	movwf	USART_WriteString@pString^0,c
  1028   002684  0E08               	movlw	high STR_2
  1029   002686  6E03               	movwf	(USART_WriteString@pString+1)^0,c
  1030   002688  EC56  F017         	call	_USART_WriteString	;wreg free
  1031   00268C                     
  1032                           ;Rele_buzzer_uart.c: 33:         USART_WriteString(strTemp);
  1033   00268C  0EB3               	movlw	low _strTemp
  1034   00268E  6E02               	movwf	USART_WriteString@pString^0,c
  1035   002690  0E00               	movlw	high _strTemp
  1036   002692  6E03               	movwf	(USART_WriteString@pString+1)^0,c
  1037   002694  EC56  F017         	call	_USART_WriteString	;wreg free
  1038   002698                     
  1039                           ;Rele_buzzer_uart.c: 34:         USART_WriteString("- - - - - - - -\r\n");
  1040   002698  0E14               	movlw	low STR_3
  1041   00269A  6E02               	movwf	USART_WriteString@pString^0,c
  1042   00269C  0E08               	movlw	high STR_3
  1043   00269E  6E03               	movwf	(USART_WriteString@pString+1)^0,c
  1044   0026A0  EC56  F017         	call	_USART_WriteString	;wreg free
  1045   0026A4                     
  1046                           ;Rele_buzzer_uart.c: 36:         if ( temp >= 30.0 ) {
  1047   0026A4  C0D7  F02F         	movff	_temp,___flge@ff1
  1048   0026A8  C0D8  F030         	movff	_temp+1,___flge@ff1+1
  1049   0026AC  C0D9  F031         	movff	_temp+2,___flge@ff1+2
  1050   0026B0  C0DA  F032         	movff	_temp+3,___flge@ff1+3
  1051   0026B4  0E00               	movlw	0
  1052   0026B6  6E33               	movwf	___flge@ff2^0,c
  1053   0026B8  0E00               	movlw	0
  1054   0026BA  6E34               	movwf	(___flge@ff2+1)^0,c
  1055   0026BC  0EF0               	movlw	240
  1056   0026BE  6E35               	movwf	(___flge@ff2+2)^0,c
  1057   0026C0  0E41               	movlw	65
  1058   0026C2  6E36               	movwf	(___flge@ff2+3)^0,c
  1059   0026C4  ECA6  F014         	call	___flge	;wreg free
  1060   0026C8  A0D8               	btfss	status,0,c
  1061   0026CA  EF69  F013         	goto	u4351
  1062   0026CE  EF6B  F013         	goto	u4350
  1063   0026D2                     u4351:
  1064   0026D2  EF6E  F013         	goto	l400
  1065   0026D6                     u4350:
  1066   0026D6                     
  1067                           ;Rele_buzzer_uart.c: 37:             LATEbits.LATE0 = 1;
  1068   0026D6  808D               	bsf	141,0,c	;volatile
  1069                           
  1070                           ;Rele_buzzer_uart.c: 38:         }
  1071   0026D8  EF6F  F013         	goto	l4258
  1072   0026DC                     l400:
  1073                           
  1074                           ;Rele_buzzer_uart.c: 40:             LATEbits.LATE0 = 0;
  1075   0026DC  908D               	bcf	141,0,c	;volatile
  1076   0026DE                     l4258:
  1077                           
  1078                           ;Rele_buzzer_uart.c: 43:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1079   0026DE  0E06               	movlw	6
  1080   0026E0  6E5E               	movwf	(??_main+1)^0,c
  1081   0026E2  0E13               	movlw	19
  1082   0026E4  6E5D               	movwf	??_main^0,c
  1083   0026E6  0EAE               	movlw	174
  1084   0026E8                     u4367:
  1085   0026E8  2EE8               	decfsz	wreg,f,c
  1086   0026EA  D7FE               	bra	u4367
  1087   0026EC  2E5D               	decfsz	??_main^0,f,c
  1088   0026EE  D7FC               	bra	u4367
  1089   0026F0  2E5E               	decfsz	(??_main+1)^0,f,c
  1090   0026F2  D7FA               	bra	u4367
  1091   0026F4  EFDB  F012         	goto	l4242
  1092   0026F8  EF00  F000         	goto	start
  1093   0026FC                     __end_of_main:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _sprintf *****************
  1097 ;; Defined at:
  1098 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  s               2   50[BANK0 ] PTR unsigned char 
  1101 ;;		 -> strTemp(20), 
  1102 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1103 ;;		 -> STR_1(13), 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  f              11   60[BANK0 ] struct _IO_FILE
  1106 ;;  ap              2   58[BANK0 ] PTR void [1]
  1107 ;;		 -> ?_sprintf(2), 
  1108 ;;  ret             2    0        int 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  2   50[BANK0 ] int 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         0       8       0       0       0       0       0       0       0
  1119 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1122 ;;Total ram usage:       21 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 7
  1125 ;; This function calls:
  1126 ;;		_vfprintf
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text1
  1133   002F0A                     __ptext1:
  1134                           	callstack 0
  1135   002F0A                     _sprintf:
  1136                           	callstack 23
  1137   002F0A  0E96               	movlw	low (?_sprintf+4)
  1138   002F0C  0100               	movlb	0	; () banked
  1139   002F0E  6F9A               	movwf	sprintf@ap& (0+255),b
  1140   002F10  0E00               	movlw	high (?_sprintf+4)
  1141   002F12  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  1142   002F14  C092  F09C         	movff	sprintf@s,sprintf@f
  1143   002F18  C093  F09D         	movff	sprintf@s+1,sprintf@f+1
  1144   002F1C                     
  1145                           ; BSR set to: 0
  1146   002F1C  0E00               	movlw	0
  1147   002F1E  6FA0               	movwf	(sprintf@f+4)& (0+255),b
  1148   002F20  0E00               	movlw	0
  1149   002F22  6F9F               	movwf	(sprintf@f+3)& (0+255),b
  1150   002F24                     
  1151                           ; BSR set to: 0
  1152   002F24  0E00               	movlw	0
  1153   002F26  6FA6               	movwf	(sprintf@f+10)& (0+255),b
  1154   002F28  0E00               	movlw	0
  1155   002F2A  6FA5               	movwf	(sprintf@f+9)& (0+255),b
  1156   002F2C                     
  1157                           ; BSR set to: 0
  1158   002F2C  0E9C               	movlw	low sprintf@f
  1159   002F2E  6F8C               	movwf	vfprintf@fp& (0+255),b
  1160   002F30  0E00               	movlw	high sprintf@f
  1161   002F32  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1162   002F34  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1163   002F38  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1164   002F3C  0E9A               	movlw	low sprintf@ap
  1165   002F3E  6F90               	movwf	vfprintf@ap& (0+255),b
  1166   002F40  0E00               	movlw	high sprintf@ap
  1167   002F42  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1168   002F44  ECAE  F017         	call	_vfprintf	;wreg free
  1169   002F48  0100               	movlb	0	; () banked
  1170   002F4A  519F               	movf	(sprintf@f+3)& (0+255),w,b
  1171   002F4C  2592               	addwf	sprintf@s& (0+255),w,b
  1172   002F4E  6ED9               	movwf	fsr2l,c
  1173   002F50  51A0               	movf	(sprintf@f+4)& (0+255),w,b
  1174   002F52  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  1175   002F54  6EDA               	movwf	fsr2h,c
  1176   002F56  0E00               	movlw	0
  1177   002F58  6EDF               	movwf	indf2,c
  1178   002F5A                     
  1179                           ; BSR set to: 0
  1180   002F5A  0012               	return		;funcret
  1181   002F5C                     __end_of_sprintf:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _vfprintf *****************
  1185 ;; Defined at:
  1186 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1189 ;;		 -> sprintf@f(11), 
  1190 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1191 ;;		 -> STR_1(13), 
  1192 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1193 ;;		 -> sprintf@ap(2), 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  1196 ;;		 -> STR_1(13), 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2   44[BANK0 ] int 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1206 ;;      Params:         0       6       0       0       0       0       0       0       0
  1207 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1209 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1210 ;;Total ram usage:        8 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 6
  1213 ;; This function calls:
  1214 ;;		_vfpfcnvrt
  1215 ;; This function is called by:
  1216 ;;		_sprintf
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text2
  1221   002F5C                     __ptext2:
  1222                           	callstack 0
  1223   002F5C                     _vfprintf:
  1224                           	callstack 23
  1225   002F5C                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1227   002F5C  C08E  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  1228   002F60  C08F  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1229                           
  1230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1231   002F64  EFC2  F017         	goto	l4012
  1232   002F68                     l4010:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1235   002F68  C08C  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  1236   002F6C  C08D  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1237   002F70  0E5B               	movlw	low vfprintf@cfmt
  1238   002F72  6E49               	movwf	vfpfcnvrt@fmt^0,c
  1239   002F74  0E00               	movlw	high vfprintf@cfmt
  1240   002F76  6E4A               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1241   002F78  C090  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1242   002F7C  C091  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1243   002F80  EC5D  F00F         	call	_vfpfcnvrt	;wreg free
  1244   002F84                     l4012:
  1245                           
  1246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1247   002F84  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1248   002F88  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1249   002F8C                     	if	0	;tblptru may be non-zero
  1250   002F8C                     	endif
  1251   002F8C                     	if	0	;tblptru may be non-zero
  1252   002F8C                     	endif
  1253   002F8C  0008               	tblrd		*
  1254   002F8E  50F5               	movf	tablat,w,c
  1255   002F90  0900               	iorlw	0
  1256   002F92  A4D8               	btfss	status,2,c
  1257   002F94  EFCE  F017         	goto	u4071
  1258   002F98  EFD0  F017         	goto	u4070
  1259   002F9C                     u4071:
  1260   002F9C  EFB4  F017         	goto	l4010
  1261   002FA0                     u4070:
  1262   002FA0                     
  1263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1264   002FA0  0E00               	movlw	0
  1265   002FA2  0100               	movlb	0	; () banked
  1266   002FA4  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1267   002FA6  0E00               	movlw	0
  1268   002FA8  6F8C               	movwf	?_vfprintf& (0+255),b
  1269   002FAA                     
  1270                           ; BSR set to: 0
  1271   002FAA  0012               	return		;funcret
  1272   002FAC                     __end_of_vfprintf:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function _vfpfcnvrt *****************
  1276 ;; Defined at:
  1277 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  1280 ;;		 -> sprintf@f(11), 
  1281 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  1282 ;;		 -> vfprintf@cfmt(2), 
  1283 ;;  ap              2   74[COMRAM] PTR PTR void 
  1284 ;;		 -> sprintf@ap(2), 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  convarg         8   79[COMRAM] struct .
  1287 ;;  cp              2   88[COMRAM] PTR unsigned char 
  1288 ;;		 -> STR_1(13), 
  1289 ;;  i               2    0        int 
  1290 ;;  done            2    0        int 
  1291 ;;  c               1   87[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1301 ;;      Params:         6       0       0       0       0       0       0       0       0
  1302 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1303 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1304 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1305 ;;Total ram usage:       20 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 5
  1308 ;; This function calls:
  1309 ;;		_atoi
  1310 ;;		_efgtoa
  1311 ;;		_fputc
  1312 ;;		_isdigit
  1313 ;; This function is called by:
  1314 ;;		_vfprintf
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text3
  1319   001EBA                     __ptext3:
  1320                           	callstack 0
  1321   001EBA                     _vfpfcnvrt:
  1322                           	callstack 23
  1323   001EBA                     
  1324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1325   001EBA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1326   001EBE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1327   001EC2  CFDE FFF6          	movff	postinc2,tblptrl
  1328   001EC6  CFDD FFF7          	movff	postdec2,tblptrh
  1329   001ECA                     	if	0	;tblptru may be non-zero
  1330   001ECA                     	endif
  1331   001ECA                     	if	0	;tblptru may be non-zero
  1332   001ECA                     	endif
  1333   001ECA  0008               	tblrd		*
  1334   001ECC  50F5               	movf	tablat,w,c
  1335   001ECE  0A25               	xorlw	37
  1336   001ED0  A4D8               	btfss	status,2,c
  1337   001ED2  EF6D  F00F         	goto	u3971
  1338   001ED6  EF6F  F00F         	goto	u3970
  1339   001EDA                     u3971:
  1340   001EDA  EFD3  F010         	goto	l3952
  1341   001EDE                     u3970:
  1342   001EDE                     
  1343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1344   001EDE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1345   001EE2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1346   001EE6  2ADE               	incf	postinc2,f,c
  1347   001EE8  0E00               	movlw	0
  1348   001EEA  22DD               	addwfc	postdec2,f,c
  1349   001EEC                     
  1350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1351   001EEC  0E00               	movlw	0
  1352   001EEE  0100               	movlb	0	; () banked
  1353   001EF0  6FB0               	movwf	(_width+1)& (0+255),b
  1354   001EF2  0E00               	movlw	0
  1355   001EF4  6FAF               	movwf	_width& (0+255),b
  1356   001EF6  C0AF  F05F         	movff	_width,_flags
  1357   001EFA                     
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1360   001EFA  69B1               	setf	_prec& (0+255),b
  1361   001EFC  69B2               	setf	(_prec+1)& (0+255),b
  1362   001EFE                     
  1363                           ; BSR set to: 0
  1364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1365   001EFE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1366   001F02  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1367   001F06  CFDE FFF6          	movff	postinc2,tblptrl
  1368   001F0A  CFDD FFF7          	movff	postdec2,tblptrh
  1369   001F0E                     	if	0	;tblptru may be non-zero
  1370   001F0E                     	endif
  1371   001F0E                     	if	0	;tblptru may be non-zero
  1372   001F0E                     	endif
  1373   001F0E  0008               	tblrd		*
  1374   001F10  50F5               	movf	tablat,w,c
  1375   001F12  0A2E               	xorlw	46
  1376   001F14  A4D8               	btfss	status,2,c
  1377   001F16  EF8F  F00F         	goto	u3981
  1378   001F1A  EF91  F00F         	goto	u3980
  1379   001F1E                     u3981:
  1380   001F1E  EFFE  F00F         	goto	l3914
  1381   001F22                     u3980:
  1382   001F22                     
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1385   001F22  0E00               	movlw	0
  1386   001F24  6FB2               	movwf	(_prec+1)& (0+255),b
  1387   001F26  0E00               	movlw	0
  1388   001F28  6FB1               	movwf	_prec& (0+255),b
  1389   001F2A                     
  1390                           ; BSR set to: 0
  1391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1392   001F2A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393   001F2E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394   001F32  2ADE               	incf	postinc2,f,c
  1395   001F34  0E00               	movlw	0
  1396   001F36  22DD               	addwfc	postdec2,f,c
  1397   001F38                     
  1398                           ; BSR set to: 0
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1400   001F38  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401   001F3C  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402   001F40  CFDE FFF6          	movff	postinc2,tblptrl
  1403   001F44  CFDD FFF7          	movff	postdec2,tblptrh
  1404   001F48                     	if	0	;tblptru may be non-zero
  1405   001F48                     	endif
  1406   001F48                     	if	0	;tblptru may be non-zero
  1407   001F48                     	endif
  1408   001F48  0008               	tblrd		*
  1409   001F4A  50F5               	movf	tablat,w,c
  1410   001F4C  0A2A               	xorlw	42
  1411   001F4E  A4D8               	btfss	status,2,c
  1412   001F50  EFAC  F00F         	goto	u3991
  1413   001F54  EFAE  F00F         	goto	u3990
  1414   001F58                     u3991:
  1415   001F58  EFCB  F00F         	goto	l3906
  1416   001F5C                     u3990:
  1417   001F5C                     
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1420   001F5C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1421   001F60  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1422   001F64  2ADE               	incf	postinc2,f,c
  1423   001F66  0E00               	movlw	0
  1424   001F68  22DD               	addwfc	postdec2,f,c
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1427   001F6A  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1428   001F6E  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1429   001F72  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1430   001F76  0E02               	movlw	2
  1431   001F78  26DE               	addwf	postinc2,f,c
  1432   001F7A  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1433   001F7E  0E00               	movlw	0
  1434   001F80  22DD               	addwfc	postdec2,f,c
  1435   001F82  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1436   001F86  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1437   001F8A  CFDE F0B1          	movff	postinc2,_prec
  1438   001F8E  CFDD F0B2          	movff	postdec2,_prec+1
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1441   001F92  EFFE  F00F         	goto	l3914
  1442   001F96                     l3906:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1446   001F96  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1447   001F9A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1448   001F9E  CFDE F007          	movff	postinc2,atoi@s
  1449   001FA2  CFDD F008          	movff	postdec2,atoi@s+1
  1450   001FA6  EC7E  F013         	call	_atoi	;wreg free
  1451   001FAA  C007  F0B1         	movff	?_atoi,_prec
  1452   001FAE  C008  F0B2         	movff	?_atoi+1,_prec+1
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1455   001FB2  EFE2  F00F         	goto	l3912
  1456   001FB6                     l3908:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1459   001FB6  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1460   001FBA  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1461   001FBE  2ADE               	incf	postinc2,f,c
  1462   001FC0  0E00               	movlw	0
  1463   001FC2  22DD               	addwfc	postdec2,f,c
  1464   001FC4                     l3912:
  1465   001FC4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1466   001FC8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1467   001FCC  CFDE FFF6          	movff	postinc2,tblptrl
  1468   001FD0  CFDD FFF7          	movff	postdec2,tblptrh
  1469   001FD4                     	if	0	;tblptru may be non-zero
  1470   001FD4                     	endif
  1471   001FD4                     	if	0	;tblptru may be non-zero
  1472   001FD4                     	endif
  1473   001FD4  0008               	tblrd		*
  1474   001FD6  CFF5 F04D          	movff	tablat,??_vfpfcnvrt
  1475   001FDA  0ED0               	movlw	208
  1476   001FDC  244D               	addwf	??_vfpfcnvrt^0,w,c
  1477   001FDE  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  1478   001FE0  6A4F               	clrf	(??_vfpfcnvrt+2)^0,c
  1479   001FE2  0EFF               	movlw	255
  1480   001FE4  224F               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1481   001FE6  504F               	movf	(??_vfpfcnvrt+2)^0,w,c
  1482   001FE8  E109               	bnz	u4000
  1483   001FEA  0E0A               	movlw	10
  1484   001FEC  5C4E               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1485   001FEE  A0D8               	btfss	status,0,c
  1486   001FF0  EFFC  F00F         	goto	u4001
  1487   001FF4  EFFE  F00F         	goto	u4000
  1488   001FF8                     u4001:
  1489   001FF8  EFDB  F00F         	goto	l3908
  1490   001FFC                     u4000:
  1491   001FFC                     l3914:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1494   001FFC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1495   002000  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1496   002004  CFDE F059          	movff	postinc2,vfpfcnvrt@cp
  1497   002008  CFDD F05A          	movff	postdec2,vfpfcnvrt@cp+1
  1498   00200C                     
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1500   00200C  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1501   002010  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1502   002014                     	if	0	;tblptru may be non-zero
  1503   002014                     	endif
  1504   002014                     	if	0	;tblptru may be non-zero
  1505   002014                     	endif
  1506   002014  0008               	tblrd		*
  1507   002016  CFF5 F058          	movff	tablat,vfpfcnvrt@c
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1510   00201A  EF1B  F010         	goto	l3926
  1511   00201E                     l3918:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1514   00201E  4A59               	infsnz	vfpfcnvrt@cp^0,f,c
  1515   002020  2A5A               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1518   002022  EF34  F010         	goto	l3928
  1519   002026                     l3920:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1522   002026  0E6C               	movlw	108
  1523   002028  6E58               	movwf	vfpfcnvrt@c^0,c
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1526   00202A  EF34  F010         	goto	l3928
  1527   00202E                     l3922:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1530   00202E  0E00               	movlw	0
  1531   002030  6E58               	movwf	vfpfcnvrt@c^0,c
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1534   002032  EF34  F010         	goto	l3928
  1535   002036                     l3926:
  1536   002036  5058               	movf	vfpfcnvrt@c^0,w,c
  1537   002038  6E4D               	movwf	??_vfpfcnvrt^0,c
  1538   00203A  6A4E               	clrf	(??_vfpfcnvrt+1)^0,c
  1539                           
  1540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1541                           ; Switch size 1, requested type "simple"
  1542                           ; Number of cases is 1, Range of values is 0 to 0
  1543                           ; switch strategies available:
  1544                           ; Name         Instructions Cycles
  1545                           ; simple_byte            4     3 (average)
  1546                           ;	Chosen strategy is simple_byte
  1547   00203C  504E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1548   00203E  0A00               	xorlw	0	; case 0
  1549   002040  B4D8               	btfsc	status,2,c
  1550   002042  EF25  F010         	goto	l4340
  1551   002046  EF17  F010         	goto	l3922
  1552   00204A                     l4340:
  1553                           
  1554                           ; Switch size 1, requested type "simple"
  1555                           ; Number of cases is 3, Range of values is 76 to 108
  1556                           ; switch strategies available:
  1557                           ; Name         Instructions Cycles
  1558                           ; simple_byte           10     6 (average)
  1559                           ;	Chosen strategy is simple_byte
  1560   00204A  504D               	movf	??_vfpfcnvrt^0,w,c
  1561   00204C  0A4C               	xorlw	76	; case 76
  1562   00204E  B4D8               	btfsc	status,2,c
  1563   002050  EF0F  F010         	goto	l3918
  1564   002054  0A2A               	xorlw	42	; case 102
  1565   002056  B4D8               	btfsc	status,2,c
  1566   002058  EF13  F010         	goto	l3920
  1567   00205C  0A0A               	xorlw	10	; case 108
  1568   00205E  B4D8               	btfsc	status,2,c
  1569   002060  EF0F  F010         	goto	l3918
  1570   002064  EF17  F010         	goto	l3922
  1571   002068                     l3928:
  1572   002068  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1573   00206C  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1574   002070                     	if	0	;tblptru may be non-zero
  1575   002070                     	endif
  1576   002070                     	if	0	;tblptru may be non-zero
  1577   002070                     	endif
  1578   002070  0008               	tblrd		*
  1579   002072  50F5               	movf	tablat,w,c
  1580   002074  0A66               	xorlw	102
  1581   002076  A4D8               	btfss	status,2,c
  1582   002078  EF40  F010         	goto	u4011
  1583   00207C  EF42  F010         	goto	u4010
  1584   002080                     u4011:
  1585   002080  EFCA  F010         	goto	l3948
  1586   002084                     u4010:
  1587   002084  EF78  F010         	goto	l3936
  1588   002088                     l3930:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1591   002088  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1592   00208C  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1593   002090  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1594   002094  0E04               	movlw	4
  1595   002096  26DE               	addwf	postinc2,f,c
  1596   002098  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1597   00209C  0E00               	movlw	0
  1598   00209E  22DD               	addwfc	postdec2,f,c
  1599   0020A0  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1600   0020A4  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1601   0020A8  CFDE F050          	movff	postinc2,vfpfcnvrt@convarg
  1602   0020AC  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg+1
  1603   0020B0  CFDE F052          	movff	postinc2,vfpfcnvrt@convarg+2
  1604   0020B4  CFDE F053          	movff	postinc2,vfpfcnvrt@convarg+3
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1607   0020B8  EF8D  F010         	goto	l3938
  1608   0020BC                     l3932:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1611   0020BC  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1612   0020C0  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1613   0020C4  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1614   0020C8  0E04               	movlw	4
  1615   0020CA  26DE               	addwf	postinc2,f,c
  1616   0020CC  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1617   0020D0  0E00               	movlw	0
  1618   0020D2  22DD               	addwfc	postdec2,f,c
  1619   0020D4  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1620   0020D8  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1621   0020DC  CFDE F050          	movff	postinc2,vfpfcnvrt@convarg
  1622   0020E0  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg+1
  1623   0020E4  CFDE F052          	movff	postinc2,vfpfcnvrt@convarg+2
  1624   0020E8  CFDE F053          	movff	postinc2,vfpfcnvrt@convarg+3
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1627   0020EC  EF8D  F010         	goto	l3938
  1628   0020F0                     l3936:
  1629   0020F0  5058               	movf	vfpfcnvrt@c^0,w,c
  1630   0020F2  6E4D               	movwf	??_vfpfcnvrt^0,c
  1631   0020F4  6A4E               	clrf	(??_vfpfcnvrt+1)^0,c
  1632                           
  1633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1634                           ; Switch size 1, requested type "simple"
  1635                           ; Number of cases is 1, Range of values is 0 to 0
  1636                           ; switch strategies available:
  1637                           ; Name         Instructions Cycles
  1638                           ; simple_byte            4     3 (average)
  1639                           ;	Chosen strategy is simple_byte
  1640   0020F6  504E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1641   0020F8  0A00               	xorlw	0	; case 0
  1642   0020FA  B4D8               	btfsc	status,2,c
  1643   0020FC  EF82  F010         	goto	l4342
  1644   002100  EF8D  F010         	goto	l3938
  1645   002104                     l4342:
  1646                           
  1647                           ; Switch size 1, requested type "simple"
  1648                           ; Number of cases is 2, Range of values is 76 to 108
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte            7     4 (average)
  1652                           ;	Chosen strategy is simple_byte
  1653   002104  504D               	movf	??_vfpfcnvrt^0,w,c
  1654   002106  0A4C               	xorlw	76	; case 76
  1655   002108  B4D8               	btfsc	status,2,c
  1656   00210A  EF5E  F010         	goto	l3932
  1657   00210E  0A20               	xorlw	32	; case 108
  1658   002110  B4D8               	btfsc	status,2,c
  1659   002112  EF44  F010         	goto	l3930
  1660   002116  EF8D  F010         	goto	l3938
  1661   00211A                     l3938:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1664   00211A  0E01               	movlw	1
  1665   00211C  2459               	addwf	vfpfcnvrt@cp^0,w,c
  1666   00211E  6E4D               	movwf	??_vfpfcnvrt^0,c
  1667   002120  0E00               	movlw	0
  1668   002122  205A               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1669   002124  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  1670   002126  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1671   00212A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1672   00212E  C04D  FFDE         	movff	??_vfpfcnvrt,postinc2
  1673   002132  C04E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1676   002136  EFB4  F010         	goto	l3946
  1677   00213A                     l3940:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1680   00213A  C047  F03E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1681   00213E  C048  F03F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1682   002142  C050  F040         	movff	vfpfcnvrt@convarg,efgtoa@f
  1683   002146  C051  F041         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1684   00214A  C052  F042         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1685   00214E  C053  F043         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1686   002152  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1687   002156  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1688   00215A                     	if	0	;tblptru may be non-zero
  1689   00215A                     	endif
  1690   00215A                     	if	0	;tblptru may be non-zero
  1691   00215A                     	endif
  1692   00215A  0008               	tblrd		*
  1693   00215C  CFF5 F044          	movff	tablat,efgtoa@c
  1694   002160  EC1E  F004         	call	_efgtoa	;wreg free
  1695   002164  EFE7  F010         	goto	l1205
  1696   002168                     l3946:
  1697   002168  C059  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1698   00216C  C05A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1699   002170                     	if	0	;tblptru may be non-zero
  1700   002170                     	endif
  1701   002170                     	if	0	;tblptru may be non-zero
  1702   002170                     	endif
  1703   002170  0008               	tblrd		*
  1704   002172  50F5               	movf	tablat,w,c
  1705   002174  6E4D               	movwf	??_vfpfcnvrt^0,c
  1706   002176  6A4E               	clrf	(??_vfpfcnvrt+1)^0,c
  1707                           
  1708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1709                           ; Switch size 1, requested type "simple"
  1710                           ; Number of cases is 1, Range of values is 0 to 0
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; simple_byte            4     3 (average)
  1714                           ;	Chosen strategy is simple_byte
  1715   002178  504E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1716   00217A  0A00               	xorlw	0	; case 0
  1717   00217C  B4D8               	btfsc	status,2,c
  1718   00217E  EFC3  F010         	goto	l4344
  1719   002182  EFCA  F010         	goto	l3948
  1720   002186                     l4344:
  1721                           
  1722                           ; Switch size 1, requested type "simple"
  1723                           ; Number of cases is 1, Range of values is 102 to 102
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte            4     3 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728   002186  504D               	movf	??_vfpfcnvrt^0,w,c
  1729   002188  0A66               	xorlw	102	; case 102
  1730   00218A  B4D8               	btfsc	status,2,c
  1731   00218C  EF9D  F010         	goto	l3940
  1732   002190  EFCA  F010         	goto	l3948
  1733   002194                     l3948:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1736   002194  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1737   002198  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1738   00219C  2ADE               	incf	postinc2,f,c
  1739   00219E  0E00               	movlw	0
  1740   0021A0  22DD               	addwfc	postdec2,f,c
  1741   0021A2  EFE7  F010         	goto	l1205
  1742   0021A6                     l3952:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1745   0021A6  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1746   0021AA  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1747   0021AE  CFDE FFF6          	movff	postinc2,tblptrl
  1748   0021B2  CFDD FFF7          	movff	postdec2,tblptrh
  1749   0021B6                     	if	0	;tblptru may be non-zero
  1750   0021B6                     	endif
  1751   0021B6                     	if	0	;tblptru may be non-zero
  1752   0021B6                     	endif
  1753   0021B6  0008               	tblrd		*
  1754   0021B8  50F5               	movf	tablat,w,c
  1755   0021BA  6E02               	movwf	fputc@c^0,c
  1756   0021BC  6A03               	clrf	(fputc@c+1)^0,c
  1757   0021BE  C047  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1758   0021C2  C048  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1759   0021C6  ECA7  F015         	call	_fputc	;wreg free
  1760   0021CA  EFCA  F010         	goto	l3948
  1761   0021CE                     l1205:
  1762   0021CE  0012               	return		;funcret
  1763   0021D0                     __end_of_vfpfcnvrt:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _efgtoa *****************
  1767 ;; Defined at:
  1768 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1771 ;;		 -> sprintf@f(11), 
  1772 ;;  f               4   63[COMRAM] PTR struct _IO_FILE
  1773 ;;  c               1   67[COMRAM] unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  u               4   40[BANK0 ] struct flui
  1776 ;;  g               4   36[BANK0 ] struct flui
  1777 ;;  l               4   29[BANK0 ] struct flui
  1778 ;;  h               4   25[BANK0 ] struct flui
  1779 ;;  ou              4   19[BANK0 ] struct flui
  1780 ;;  n               2   34[BANK0 ] int 
  1781 ;;  i               2   23[BANK0 ] int 
  1782 ;;  w               2   17[BANK0 ] int 
  1783 ;;  e               2   15[BANK0 ] int 
  1784 ;;  m               2   13[BANK0 ] int 
  1785 ;;  d               2   11[BANK0 ] int 
  1786 ;;  t               2    4[BANK0 ] int 
  1787 ;;  p               2    2[BANK0 ] int 
  1788 ;;  ne              2    0[BANK0 ] int 
  1789 ;;  sign            1   33[BANK0 ] unsigned char 
  1790 ;;  nmode           1   10[BANK0 ] unsigned char 
  1791 ;;  mode            1    9[BANK0 ] unsigned char 
  1792 ;;  pp              1    8[BANK0 ] unsigned char 
  1793 ;;  esign           1    0        unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         7       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1805 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1807 ;;Total ram usage:       53 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 4
  1810 ;; This function calls:
  1811 ;;		___fladd
  1812 ;;		___fldiv
  1813 ;;		___fleq
  1814 ;;		___flge
  1815 ;;		___flmul
  1816 ;;		___flneg
  1817 ;;		___flsub
  1818 ;;		___fltol
  1819 ;;		___fpclassifyf
  1820 ;;		_floorf
  1821 ;;		_labs
  1822 ;;		_memcpy
  1823 ;;		_pad
  1824 ;;		_strcpy
  1825 ;; This function is called by:
  1826 ;;		_vfpfcnvrt
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text4
  1831   00083C                     __ptext4:
  1832                           	callstack 0
  1833   00083C                     _efgtoa:
  1834                           	callstack 23
  1835   00083C                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1837   00083C  0E00               	movlw	0
  1838   00083E  0100               	movlb	0	; () banked
  1839   000840  6F81               	movwf	efgtoa@sign& (0+255),b
  1840   000842                     
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1843   000842  C040  F084         	movff	efgtoa@f,efgtoa@g
  1844   000846  C041  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1845   00084A  C042  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1846   00084E  C043  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1847   000852                     
  1848                           ; BSR set to: 0
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1850   000852  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1851   000854  EF30  F004         	goto	u3610
  1852   000858  EF2E  F004         	goto	u3611
  1853   00085C                     u3611:
  1854   00085C  EF44  F004         	goto	l3644
  1855   000860                     u3610:
  1856   000860                     
  1857                           ; BSR set to: 0
  1858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1859   000860  0E01               	movlw	1
  1860   000862  6F81               	movwf	efgtoa@sign& (0+255),b
  1861   000864                     
  1862                           ; BSR set to: 0
  1863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1864   000864  C084  F001         	movff	efgtoa@g,___flneg@f1
  1865   000868  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1866   00086C  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1867   000870  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1868   000874  ECC6  F018         	call	___flneg	;wreg free
  1869   000878  C001  F084         	movff	?___flneg,efgtoa@g
  1870   00087C  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1871   000880  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1872   000884  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1873   000888                     l3644:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1876   000888  0E00               	movlw	0
  1877   00088A  0100               	movlb	0	; () banked
  1878   00088C  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1879   00088E  0E00               	movlw	0
  1880   000890  6F82               	movwf	efgtoa@n& (0+255),b
  1881   000892                     
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1884   000892  C0AF  F071         	movff	_width,efgtoa@w
  1885   000896  C0B0  F072         	movff	_width+1,efgtoa@w+1
  1886   00089A                     
  1887                           ; BSR set to: 0
  1888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1889   00089A  5181               	movf	efgtoa@sign& (0+255),w,b
  1890   00089C  B4D8               	btfsc	status,2,c
  1891   00089E  EF53  F004         	goto	u3621
  1892   0008A2  EF55  F004         	goto	u3620
  1893   0008A6                     u3621:
  1894   0008A6  EF69  F004         	goto	l3658
  1895   0008AA                     u3620:
  1896   0008AA                     
  1897                           ; BSR set to: 0
  1898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1899   0008AA  5181               	movf	efgtoa@sign& (0+255),w,b
  1900   0008AC  A4D8               	btfss	status,2,c
  1901   0008AE  EF5B  F004         	goto	u3631
  1902   0008B2  EF5D  F004         	goto	u3630
  1903   0008B6                     u3631:
  1904   0008B6  EF63  F004         	goto	l3654
  1905   0008BA                     u3630:
  1906   0008BA                     
  1907                           ; BSR set to: 0
  1908   0008BA  0E00               	movlw	0
  1909   0008BC  6F67               	movwf	(_efgtoa$1932+1)& (0+255),b
  1910   0008BE  0E2B               	movlw	43
  1911   0008C0  6F66               	movwf	_efgtoa$1932& (0+255),b
  1912   0008C2  EF67  F004         	goto	l3656
  1913   0008C6                     l3654:
  1914                           
  1915                           ; BSR set to: 0
  1916   0008C6  0E00               	movlw	0
  1917   0008C8  6F67               	movwf	(_efgtoa$1932+1)& (0+255),b
  1918   0008CA  0E2D               	movlw	45
  1919   0008CC  6F66               	movwf	_efgtoa$1932& (0+255),b
  1920   0008CE                     l3656:
  1921                           
  1922                           ; BSR set to: 0
  1923   0008CE  C066  F081         	movff	_efgtoa$1932,efgtoa@sign
  1924   0008D2                     l3658:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1928   0008D2  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1929   0008D6  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1930   0008DA  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1931   0008DE  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1932   0008E2  EC28  F015         	call	___fpclassifyf	;wreg free
  1933   0008E6  0401               	decf	?___fpclassifyf^0,w,c
  1934   0008E8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1935   0008EA  A4D8               	btfss	status,2,c
  1936   0008EC  EF7A  F004         	goto	u3641
  1937   0008F0  EF7C  F004         	goto	u3640
  1938   0008F4                     u3641:
  1939   0008F4  EFAF  F004         	goto	l3676
  1940   0008F8                     u3640:
  1941   0008F8                     
  1942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1943   0008F8  0100               	movlb	0	; () banked
  1944   0008FA  5181               	movf	efgtoa@sign& (0+255),w,b
  1945   0008FC  B4D8               	btfsc	status,2,c
  1946   0008FE  EF83  F004         	goto	u3651
  1947   000902  EF85  F004         	goto	u3650
  1948   000906                     u3651:
  1949   000906  EF8E  F004         	goto	l3668
  1950   00090A                     u3650:
  1951   00090A                     
  1952                           ; BSR set to: 0
  1953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1954   00090A  C081  F100         	movff	efgtoa@sign,_dbuf
  1955   00090E                     
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1958   00090E  0771               	decf	efgtoa@w& (0+255),f,b
  1959   000910  A0D8               	btfss	status,0,c
  1960   000912  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1961   000914                     
  1962                           ; BSR set to: 0
  1963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1964   000914  0E00               	movlw	0
  1965   000916  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1966   000918  0E01               	movlw	1
  1967   00091A  6F82               	movwf	efgtoa@n& (0+255),b
  1968   00091C                     l3668:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1972   00091C  0E00               	movlw	low _dbuf
  1973   00091E  2582               	addwf	efgtoa@n& (0+255),w,b
  1974   000920  6E01               	movwf	strcpy@dest^0,c
  1975   000922  0E01               	movlw	high _dbuf
  1976   000924  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1977   000926  6E02               	movwf	(strcpy@dest+1)^0,c
  1978   000928  0E33               	movlw	low STR_4
  1979   00092A  6E03               	movwf	strcpy@src^0,c
  1980   00092C  0E08               	movlw	high STR_4
  1981   00092E  6E04               	movwf	(strcpy@src+1)^0,c
  1982   000930  EC88  F018         	call	_strcpy	;wreg free
  1983   000934                     l3670:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1986   000934  0100               	movlb	0	; () banked
  1987   000936  0EFD               	movlw	253
  1988   000938  2771               	addwf	efgtoa@w& (0+255),f,b
  1989   00093A  0EFF               	movlw	255
  1990   00093C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1991   00093E                     
  1992                           ; BSR set to: 0
  1993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1994   00093E  C03E  F012         	movff	efgtoa@fp,pad@fp
  1995   000942  C03F  F013         	movff	efgtoa@fp+1,pad@fp+1
  1996   000946  0E00               	movlw	low _dbuf
  1997   000948  6E14               	movwf	pad@buf^0,c
  1998   00094A  0E01               	movlw	high _dbuf
  1999   00094C  6E15               	movwf	(pad@buf+1)^0,c
  2000   00094E  C071  F016         	movff	efgtoa@w,pad@p
  2001   000952  C072  F017         	movff	efgtoa@w+1,pad@p+1
  2002   000956  ECB3  F016         	call	_pad	;wreg free
  2003   00095A  EF1A  F009         	goto	l1137
  2004   00095E                     l3676:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2007   00095E  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2008   000962  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2009   000966  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2010   00096A  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2011   00096E  EC28  F015         	call	___fpclassifyf	;wreg free
  2012   000972  5001               	movf	?___fpclassifyf^0,w,c
  2013   000974  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2014   000976  A4D8               	btfss	status,2,c
  2015   000978  EFC0  F004         	goto	u3661
  2016   00097C  EFC2  F004         	goto	u3660
  2017   000980                     u3661:
  2018   000980  EFE2  F004         	goto	l3694
  2019   000984                     u3660:
  2020   000984                     
  2021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2022   000984  0100               	movlb	0	; () banked
  2023   000986  5181               	movf	efgtoa@sign& (0+255),w,b
  2024   000988  B4D8               	btfsc	status,2,c
  2025   00098A  EFC9  F004         	goto	u3671
  2026   00098E  EFCB  F004         	goto	u3670
  2027   000992                     u3671:
  2028   000992  EFD4  F004         	goto	l3686
  2029   000996                     u3670:
  2030   000996                     
  2031                           ; BSR set to: 0
  2032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2033   000996  C081  F100         	movff	efgtoa@sign,_dbuf
  2034   00099A                     
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2037   00099A  0771               	decf	efgtoa@w& (0+255),f,b
  2038   00099C  A0D8               	btfss	status,0,c
  2039   00099E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2040   0009A0                     
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2043   0009A0  0E00               	movlw	0
  2044   0009A2  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2045   0009A4  0E01               	movlw	1
  2046   0009A6  6F82               	movwf	efgtoa@n& (0+255),b
  2047   0009A8                     l3686:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2051   0009A8  0E00               	movlw	low _dbuf
  2052   0009AA  2582               	addwf	efgtoa@n& (0+255),w,b
  2053   0009AC  6E01               	movwf	strcpy@dest^0,c
  2054   0009AE  0E01               	movlw	high _dbuf
  2055   0009B0  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2056   0009B2  6E02               	movwf	(strcpy@dest+1)^0,c
  2057   0009B4  0E37               	movlw	low STR_7
  2058   0009B6  6E03               	movwf	strcpy@src^0,c
  2059   0009B8  0E08               	movlw	high STR_7
  2060   0009BA  6E04               	movwf	(strcpy@src+1)^0,c
  2061   0009BC  EC88  F018         	call	_strcpy	;wreg free
  2062   0009C0  EF9A  F004         	goto	l3670
  2063   0009C4                     l3694:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2066   0009C4  0E00               	movlw	0
  2067   0009C6  0100               	movlb	0	; () banked
  2068   0009C8  6F88               	movwf	efgtoa@u& (0+255),b
  2069   0009CA  0E00               	movlw	0
  2070   0009CC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2071   0009CE  0E80               	movlw	128
  2072   0009D0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2073   0009D2  0E3F               	movlw	63
  2074   0009D4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2077   0009D6  0E00               	movlw	0
  2078   0009D8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2079   0009DA  0E00               	movlw	0
  2080   0009DC  6F6F               	movwf	efgtoa@e& (0+255),b
  2081   0009DE                     
  2082                           ; BSR set to: 0
  2083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2084   0009DE  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2085   0009E2  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2086   0009E6  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2087   0009EA  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2088   0009EE  0E00               	movlw	0
  2089   0009F0  6E05               	movwf	___fleq@ff2^0,c
  2090   0009F2  0E00               	movlw	0
  2091   0009F4  6E06               	movwf	(___fleq@ff2+1)^0,c
  2092   0009F6  0E00               	movlw	0
  2093   0009F8  6E07               	movwf	(___fleq@ff2+2)^0,c
  2094   0009FA  0E00               	movlw	0
  2095   0009FC  6E08               	movwf	(___fleq@ff2+3)^0,c
  2096   0009FE  EC0C  F016         	call	___fleq	;wreg free
  2097   000A02  B0D8               	btfsc	status,0,c
  2098   000A04  EF06  F005         	goto	u3681
  2099   000A08  EF08  F005         	goto	u3680
  2100   000A0C                     u3681:
  2101   000A0C  EFE7  F005         	goto	l1140
  2102   000A10                     u3680:
  2103   000A10  EF15  F005         	goto	l3702
  2104   000A14                     l1142:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2107   000A14  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2108   000A18  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2109   000A1C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2110   000A20  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2111   000A24                     
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2113   000A24  0100               	movlb	0	; () banked
  2114   000A26  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2115   000A28  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2116   000A2A                     l3702:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2119   000A2A  C088  F016         	movff	efgtoa@u,___flmul@b
  2120   000A2E  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2121   000A32  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2122   000A36  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2123   000A3A  0E00               	movlw	0
  2124   000A3C  6E1A               	movwf	___flmul@a^0,c
  2125   000A3E  0E00               	movlw	0
  2126   000A40  6E1B               	movwf	(___flmul@a+1)^0,c
  2127   000A42  0E20               	movlw	32
  2128   000A44  6E1C               	movwf	(___flmul@a+2)^0,c
  2129   000A46  0E41               	movlw	65
  2130   000A48  6E1D               	movwf	(___flmul@a+3)^0,c
  2131   000A4A  EC7B  F00B         	call	___flmul	;wreg free
  2132   000A4E  C016  F073         	movff	?___flmul,efgtoa@ou
  2133   000A52  C017  F074         	movff	?___flmul+1,efgtoa@ou+1
  2134   000A56  C018  F075         	movff	?___flmul+2,efgtoa@ou+2
  2135   000A5A  C019  F076         	movff	?___flmul+3,efgtoa@ou+3
  2136   000A5E  0100               	movlb	0	; () banked
  2137   000A60  5173               	movf	efgtoa@ou& (0+255),w,b
  2138   000A62  5D84               	subwf	efgtoa@g& (0+255),w,b
  2139   000A64  6E01               	movwf	labs@a^0,c
  2140   000A66  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2141   000A68  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2142   000A6A  6E02               	movwf	(labs@a+1)^0,c
  2143   000A6C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2144   000A6E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2145   000A70  6E03               	movwf	(labs@a+2)^0,c
  2146   000A72  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2147   000A74  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2148   000A76  6E04               	movwf	(labs@a+3)^0,c
  2149   000A78  ECF0  F016         	call	_labs	;wreg free
  2150   000A7C  BE04               	btfsc	(?_labs+3)^0,7,c
  2151   000A7E  EF4C  F005         	goto	u3691
  2152   000A82  5004               	movf	(?_labs+3)^0,w,c
  2153   000A84  1003               	iorwf	(?_labs+2)^0,w,c
  2154   000A86  1002               	iorwf	(?_labs+1)^0,w,c
  2155   000A88  E109               	bnz	u3690
  2156   000A8A  0E02               	movlw	2
  2157   000A8C  5C01               	subwf	?_labs^0,w,c
  2158   000A8E  A0D8               	btfss	status,0,c
  2159   000A90  EF4C  F005         	goto	u3691
  2160   000A94  EF4E  F005         	goto	u3690
  2161   000A98                     u3691:
  2162   000A98  EF0A  F005         	goto	l1142
  2163   000A9C                     u3690:
  2164   000A9C  C073  F02F         	movff	efgtoa@ou,___flge@ff1
  2165   000AA0  C074  F030         	movff	efgtoa@ou+1,___flge@ff1+1
  2166   000AA4  C075  F031         	movff	efgtoa@ou+2,___flge@ff1+2
  2167   000AA8  C076  F032         	movff	efgtoa@ou+3,___flge@ff1+3
  2168   000AAC  C084  F033         	movff	efgtoa@g,___flge@ff2
  2169   000AB0  C085  F034         	movff	efgtoa@g+1,___flge@ff2+1
  2170   000AB4  C086  F035         	movff	efgtoa@g+2,___flge@ff2+2
  2171   000AB8  C087  F036         	movff	efgtoa@g+3,___flge@ff2+3
  2172   000ABC  ECA6  F014         	call	___flge	;wreg free
  2173   000AC0  A0D8               	btfss	status,0,c
  2174   000AC2  EF65  F005         	goto	u3701
  2175   000AC6  EF67  F005         	goto	u3700
  2176   000ACA                     u3701:
  2177   000ACA  EF0A  F005         	goto	l1142
  2178   000ACE                     u3700:
  2179   000ACE                     
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2181   000ACE  0100               	movlb	0	; () banked
  2182   000AD0  5188               	movf	efgtoa@u& (0+255),w,b
  2183   000AD2  5D84               	subwf	efgtoa@g& (0+255),w,b
  2184   000AD4  6E01               	movwf	labs@a^0,c
  2185   000AD6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2186   000AD8  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2187   000ADA  6E02               	movwf	(labs@a+1)^0,c
  2188   000ADC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2189   000ADE  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2190   000AE0  6E03               	movwf	(labs@a+2)^0,c
  2191   000AE2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2192   000AE4  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2193   000AE6  6E04               	movwf	(labs@a+3)^0,c
  2194   000AE8  ECF0  F016         	call	_labs	;wreg free
  2195   000AEC  BE04               	btfsc	(?_labs+3)^0,7,c
  2196   000AEE  EF86  F005         	goto	u3710
  2197   000AF2  5004               	movf	(?_labs+3)^0,w,c
  2198   000AF4  1003               	iorwf	(?_labs+2)^0,w,c
  2199   000AF6  1002               	iorwf	(?_labs+1)^0,w,c
  2200   000AF8  E107               	bnz	u3711
  2201   000AFA  0E02               	movlw	2
  2202   000AFC  5C01               	subwf	?_labs^0,w,c
  2203   000AFE  B0D8               	btfsc	status,0,c
  2204   000B00  EF84  F005         	goto	u3711
  2205   000B04  EF86  F005         	goto	u3710
  2206   000B08                     u3711:
  2207   000B08  EFCE  F005         	goto	l3720
  2208   000B0C                     u3710:
  2209   000B0C                     l3710:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2212   000B0C  C088  F084         	movff	efgtoa@u,efgtoa@g
  2213   000B10  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2214   000B14  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2215   000B18  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2218   000B1C  EFE7  F005         	goto	l1140
  2219   000B20                     l3712:
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2222   000B20  C088  F011         	movff	efgtoa@u,___fldiv@b
  2223   000B24  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  2224   000B28  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  2225   000B2C  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  2226   000B30  0E00               	movlw	0
  2227   000B32  6E15               	movwf	___fldiv@a^0,c
  2228   000B34  0E00               	movlw	0
  2229   000B36  6E16               	movwf	(___fldiv@a+1)^0,c
  2230   000B38  0E20               	movlw	32
  2231   000B3A  6E17               	movwf	(___fldiv@a+2)^0,c
  2232   000B3C  0E41               	movlw	65
  2233   000B3E  6E18               	movwf	(___fldiv@a+3)^0,c
  2234   000B40  EC90  F00D         	call	___fldiv	;wreg free
  2235   000B44  C011  F088         	movff	?___fldiv,efgtoa@u
  2236   000B48  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  2237   000B4C  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2238   000B50  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2239   000B54                     
  2240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2241   000B54  0100               	movlb	0	; () banked
  2242   000B56  076F               	decf	efgtoa@e& (0+255),f,b
  2243   000B58  A0D8               	btfss	status,0,c
  2244   000B5A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2245   000B5C                     
  2246                           ; BSR set to: 0
  2247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2248   000B5C  5188               	movf	efgtoa@u& (0+255),w,b
  2249   000B5E  5D84               	subwf	efgtoa@g& (0+255),w,b
  2250   000B60  6E01               	movwf	labs@a^0,c
  2251   000B62  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2252   000B64  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2253   000B66  6E02               	movwf	(labs@a+1)^0,c
  2254   000B68  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2255   000B6A  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2256   000B6C  6E03               	movwf	(labs@a+2)^0,c
  2257   000B6E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2258   000B70  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2259   000B72  6E04               	movwf	(labs@a+3)^0,c
  2260   000B74  ECF0  F016         	call	_labs	;wreg free
  2261   000B78  BE04               	btfsc	(?_labs+3)^0,7,c
  2262   000B7A  EFCC  F005         	goto	u3720
  2263   000B7E  5004               	movf	(?_labs+3)^0,w,c
  2264   000B80  1003               	iorwf	(?_labs+2)^0,w,c
  2265   000B82  1002               	iorwf	(?_labs+1)^0,w,c
  2266   000B84  E107               	bnz	u3721
  2267   000B86  0E02               	movlw	2
  2268   000B88  5C01               	subwf	?_labs^0,w,c
  2269   000B8A  B0D8               	btfsc	status,0,c
  2270   000B8C  EFCA  F005         	goto	u3721
  2271   000B90  EFCC  F005         	goto	u3720
  2272   000B94                     u3721:
  2273   000B94  EFCE  F005         	goto	l3720
  2274   000B98                     u3720:
  2275   000B98  EF86  F005         	goto	l3710
  2276   000B9C                     l3720:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2279   000B9C  C084  F02F         	movff	efgtoa@g,___flge@ff1
  2280   000BA0  C085  F030         	movff	efgtoa@g+1,___flge@ff1+1
  2281   000BA4  C086  F031         	movff	efgtoa@g+2,___flge@ff1+2
  2282   000BA8  C087  F032         	movff	efgtoa@g+3,___flge@ff1+3
  2283   000BAC  C088  F033         	movff	efgtoa@u,___flge@ff2
  2284   000BB0  C089  F034         	movff	efgtoa@u+1,___flge@ff2+1
  2285   000BB4  C08A  F035         	movff	efgtoa@u+2,___flge@ff2+2
  2286   000BB8  C08B  F036         	movff	efgtoa@u+3,___flge@ff2+3
  2287   000BBC  ECA6  F014         	call	___flge	;wreg free
  2288   000BC0  A0D8               	btfss	status,0,c
  2289   000BC2  EFE5  F005         	goto	u3731
  2290   000BC6  EFE7  F005         	goto	u3730
  2291   000BCA                     u3731:
  2292   000BCA  EF90  F005         	goto	l3712
  2293   000BCE                     u3730:
  2294   000BCE                     l1140:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2297   000BCE  C044  F069         	movff	efgtoa@c,efgtoa@mode
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2300   000BD2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2301   000BD6                     
  2302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2303   000BD6  0100               	movlb	0	; () banked
  2304   000BD8  BFB2               	btfsc	(_prec+1)& (0+255),7,b
  2305   000BDA  EFF1  F005         	goto	u3741
  2306   000BDE  EFF3  F005         	goto	u3740
  2307   000BE2                     u3741:
  2308   000BE2  EFF9  F005         	goto	l3726
  2309   000BE6                     u3740:
  2310   000BE6                     
  2311                           ; BSR set to: 0
  2312   000BE6  C0B1  F062         	movff	_prec,efgtoa@p
  2313   000BEA  C0B2  F063         	movff	_prec+1,efgtoa@p+1
  2314   000BEE  EFFD  F005         	goto	l3728
  2315   000BF2                     l3726:
  2316                           
  2317                           ; BSR set to: 0
  2318   000BF2  0E00               	movlw	0
  2319   000BF4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2320   000BF6  0E06               	movlw	6
  2321   000BF8  6F62               	movwf	efgtoa@p& (0+255),b
  2322   000BFA                     l3728:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2326   000BFA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2327   000BFE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2328   000C02                     
  2329                           ; BSR set to: 0
  2330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2331   000C02  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2332   000C04  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2333   000C06                     
  2334                           ; BSR set to: 0
  2335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2336   000C06  0E66               	movlw	102
  2337   000C08  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2338   000C0A  A4D8               	btfss	status,2,c
  2339   000C0C  EF0A  F006         	goto	u3751
  2340   000C10  EF0C  F006         	goto	u3750
  2341   000C14                     u3751:
  2342   000C14  EF2C  F006         	goto	l3742
  2343   000C18                     u3750:
  2344   000C18                     
  2345                           ; BSR set to: 0
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2347   000C18  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2348   000C1A  EF13  F006         	goto	u3760
  2349   000C1E  EF11  F006         	goto	u3761
  2350   000C22                     u3761:
  2351   000C22  EF1F  F006         	goto	l3738
  2352   000C26                     u3760:
  2353   000C26                     
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2356   000C26  0E00               	movlw	0
  2357   000C28  6F88               	movwf	efgtoa@u& (0+255),b
  2358   000C2A  0E00               	movlw	0
  2359   000C2C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2360   000C2E  0E80               	movlw	128
  2361   000C30  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2362   000C32  0E3F               	movlw	63
  2363   000C34  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2366   000C36  0E00               	movlw	0
  2367   000C38  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2368   000C3A  0E00               	movlw	0
  2369   000C3C  6F6F               	movwf	efgtoa@e& (0+255),b
  2370   000C3E                     l3738:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2374   000C3E  0E67               	movlw	103
  2375   000C40  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2376   000C42  B4D8               	btfsc	status,2,c
  2377   000C44  EF26  F006         	goto	u3771
  2378   000C48  EF28  F006         	goto	u3770
  2379   000C4C                     u3771:
  2380   000C4C  EF2C  F006         	goto	l3742
  2381   000C50                     u3770:
  2382   000C50                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2385   000C50  516F               	movf	efgtoa@e& (0+255),w,b
  2386   000C52  276D               	addwf	efgtoa@m& (0+255),f,b
  2387   000C54  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2388   000C56  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2389   000C58                     l3742:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2393   000C58  0E00               	movlw	0
  2394   000C5A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2395   000C5C  0E00               	movlw	0
  2396   000C5E  6F77               	movwf	efgtoa@i& (0+255),b
  2397   000C60                     
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2400   000C60  C084  F079         	movff	efgtoa@g,efgtoa@h
  2401   000C64  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2402   000C68  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2403   000C6C  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2404   000C70                     
  2405                           ; BSR set to: 0
  2406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2407   000C70  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2408   000C74  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2409   000C78  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2410   000C7C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2413   000C80  EFBD  F006         	goto	l3756
  2414   000C84                     l3748:
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2418   000C84  C079  F011         	movff	efgtoa@h,___fldiv@b
  2419   000C88  C07A  F012         	movff	efgtoa@h+1,___fldiv@b+1
  2420   000C8C  C07B  F013         	movff	efgtoa@h+2,___fldiv@b+2
  2421   000C90  C07C  F014         	movff	efgtoa@h+3,___fldiv@b+3
  2422   000C94  C088  F015         	movff	efgtoa@u,___fldiv@a
  2423   000C98  C089  F016         	movff	efgtoa@u+1,___fldiv@a+1
  2424   000C9C  C08A  F017         	movff	efgtoa@u+2,___fldiv@a+2
  2425   000CA0  C08B  F018         	movff	efgtoa@u+3,___fldiv@a+3
  2426   000CA4  EC90  F00D         	call	___fldiv	;wreg free
  2427   000CA8  C011  F02A         	movff	?___fldiv,floorf@x
  2428   000CAC  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  2429   000CB0  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  2430   000CB4  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  2431   000CB8  ECE8  F010         	call	_floorf	;wreg free
  2432   000CBC  C02A  F07D         	movff	?_floorf,efgtoa@l
  2433   000CC0  C02B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2434   000CC4  C02C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2435   000CC8  C02D  F080         	movff	?_floorf+3,efgtoa@l+3
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2438   000CCC  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2439   000CD0  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2440   000CD4  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2441   000CD8  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2442   000CDC  EC23  F014         	call	___fltol	;wreg free
  2443   000CE0  C001  F06B         	movff	?___fltol,efgtoa@d
  2444   000CE4  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2445   000CE8                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2447   000CE8  C079  F02F         	movff	efgtoa@h,___flsub@b
  2448   000CEC  C07A  F030         	movff	efgtoa@h+1,___flsub@b+1
  2449   000CF0  C07B  F031         	movff	efgtoa@h+2,___flsub@b+2
  2450   000CF4  C07C  F032         	movff	efgtoa@h+3,___flsub@b+3
  2451   000CF8  C07D  F01A         	movff	efgtoa@l,___flmul@a
  2452   000CFC  C07E  F01B         	movff	efgtoa@l+1,___flmul@a+1
  2453   000D00  C07F  F01C         	movff	efgtoa@l+2,___flmul@a+2
  2454   000D04  C080  F01D         	movff	efgtoa@l+3,___flmul@a+3
  2455   000D08  C088  F016         	movff	efgtoa@u,___flmul@b
  2456   000D0C  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2457   000D10  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2458   000D14  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2459   000D18  EC7B  F00B         	call	___flmul	;wreg free
  2460   000D1C  C016  F033         	movff	?___flmul,___flsub@a
  2461   000D20  C017  F034         	movff	?___flmul+1,___flsub@a+1
  2462   000D24  C018  F035         	movff	?___flmul+2,___flsub@a+2
  2463   000D28  C019  F036         	movff	?___flmul+3,___flsub@a+3
  2464   000D2C  ECFE  F017         	call	___flsub	;wreg free
  2465   000D30  C02F  F079         	movff	?___flsub,efgtoa@h
  2466   000D34  C030  F07A         	movff	?___flsub+1,efgtoa@h+1
  2467   000D38  C031  F07B         	movff	?___flsub+2,efgtoa@h+2
  2468   000D3C  C032  F07C         	movff	?___flsub+3,efgtoa@h+3
  2469   000D40                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2471   000D40  C088  F011         	movff	efgtoa@u,___fldiv@b
  2472   000D44  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  2473   000D48  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  2474   000D4C  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  2475   000D50  0E00               	movlw	0
  2476   000D52  6E15               	movwf	___fldiv@a^0,c
  2477   000D54  0E00               	movlw	0
  2478   000D56  6E16               	movwf	(___fldiv@a+1)^0,c
  2479   000D58  0E20               	movlw	32
  2480   000D5A  6E17               	movwf	(___fldiv@a+2)^0,c
  2481   000D5C  0E41               	movlw	65
  2482   000D5E  6E18               	movwf	(___fldiv@a+3)^0,c
  2483   000D60  EC90  F00D         	call	___fldiv	;wreg free
  2484   000D64  C011  F088         	movff	?___fldiv,efgtoa@u
  2485   000D68  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  2486   000D6C  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2487   000D70  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2488   000D74                     
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2490   000D74  0100               	movlb	0	; () banked
  2491   000D76  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2492   000D78  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2493   000D7A                     l3756:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2497   000D7A  516D               	movf	efgtoa@m& (0+255),w,b
  2498   000D7C  5D77               	subwf	efgtoa@i& (0+255),w,b
  2499   000D7E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2500   000D80  0A80               	xorlw	128
  2501   000D82  6E45               	movwf	??_efgtoa^0,c
  2502   000D84  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2503   000D86  0A80               	xorlw	128
  2504   000D88  5845               	subwfb	??_efgtoa^0,w,c
  2505   000D8A  A0D8               	btfss	status,0,c
  2506   000D8C  EFCA  F006         	goto	u3781
  2507   000D90  EFCC  F006         	goto	u3780
  2508   000D94                     u3781:
  2509   000D94  EF42  F006         	goto	l3748
  2510   000D98                     u3780:
  2511   000D98                     
  2512                           ; BSR set to: 0
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2514   000D98  C088  F016         	movff	efgtoa@u,___flmul@b
  2515   000D9C  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2516   000DA0  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2517   000DA4  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2518   000DA8  0E00               	movlw	0
  2519   000DAA  6E1A               	movwf	___flmul@a^0,c
  2520   000DAC  0E00               	movlw	0
  2521   000DAE  6E1B               	movwf	(___flmul@a+1)^0,c
  2522   000DB0  0EA0               	movlw	160
  2523   000DB2  6E1C               	movwf	(___flmul@a+2)^0,c
  2524   000DB4  0E40               	movlw	64
  2525   000DB6  6E1D               	movwf	(___flmul@a+3)^0,c
  2526   000DB8  EC7B  F00B         	call	___flmul	;wreg free
  2527   000DBC  C016  F07D         	movff	?___flmul,efgtoa@l
  2528   000DC0  C017  F07E         	movff	?___flmul+1,efgtoa@l+1
  2529   000DC4  C018  F07F         	movff	?___flmul+2,efgtoa@l+2
  2530   000DC8  C019  F080         	movff	?___flmul+3,efgtoa@l+3
  2531   000DCC                     
  2532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2533   000DCC  C079  F02F         	movff	efgtoa@h,___flge@ff1
  2534   000DD0  C07A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  2535   000DD4  C07B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  2536   000DD8  C07C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  2537   000DDC  C07D  F033         	movff	efgtoa@l,___flge@ff2
  2538   000DE0  C07E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  2539   000DE4  C07F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  2540   000DE8  C080  F036         	movff	efgtoa@l+3,___flge@ff2+3
  2541   000DEC  ECA6  F014         	call	___flge	;wreg free
  2542   000DF0  B0D8               	btfsc	status,0,c
  2543   000DF2  EFFD  F006         	goto	u3791
  2544   000DF6  EFFF  F006         	goto	u3790
  2545   000DFA                     u3791:
  2546   000DFA  EF0A  F007         	goto	l3764
  2547   000DFE                     u3790:
  2548   000DFE                     
  2549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2550   000DFE  0E00               	movlw	0
  2551   000E00  0100               	movlb	0	; () banked
  2552   000E02  6F7D               	movwf	efgtoa@l& (0+255),b
  2553   000E04  0E00               	movlw	0
  2554   000E06  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2555   000E08  0E00               	movlw	0
  2556   000E0A  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2557   000E0C  0E00               	movlw	0
  2558   000E0E  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2561   000E10  EF33  F007         	goto	l3770
  2562   000E14                     l3764:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2565   000E14  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2566   000E18  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2567   000E1C  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2568   000E20  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2569   000E24  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2570   000E28  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2571   000E2C  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2572   000E30  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2573   000E34  EC0C  F016         	call	___fleq	;wreg free
  2574   000E38  A0D8               	btfss	status,0,c
  2575   000E3A  EF21  F007         	goto	u3801
  2576   000E3E  EF23  F007         	goto	u3800
  2577   000E42                     u3801:
  2578   000E42  EF33  F007         	goto	l3770
  2579   000E46                     u3800:
  2580   000E46  0100               	movlb	0	; () banked
  2581   000E48  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2582   000E4A  EF29  F007         	goto	u3811
  2583   000E4E  EF2B  F007         	goto	u3810
  2584   000E52                     u3811:
  2585   000E52  EF33  F007         	goto	l3770
  2586   000E56                     u3810:
  2587   000E56                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2590   000E56  0E00               	movlw	0
  2591   000E58  6F7D               	movwf	efgtoa@l& (0+255),b
  2592   000E5A  0E00               	movlw	0
  2593   000E5C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2594   000E5E  0E00               	movlw	0
  2595   000E60  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2596   000E62  0E00               	movlw	0
  2597   000E64  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2598   000E66                     l3770:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2601   000E66  C084  F001         	movff	efgtoa@g,___fladd@b
  2602   000E6A  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2603   000E6E  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2604   000E72  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2605   000E76  C07D  F005         	movff	efgtoa@l,___fladd@a
  2606   000E7A  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2607   000E7E  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2608   000E82  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2609   000E86  EC1B  F009         	call	___fladd	;wreg free
  2610   000E8A  C001  F079         	movff	?___fladd,efgtoa@h
  2611   000E8E  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2612   000E92  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2613   000E96  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2614   000E9A                     
  2615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2616   000E9A  C079  F02F         	movff	efgtoa@h,___flge@ff1
  2617   000E9E  C07A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  2618   000EA2  C07B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  2619   000EA6  C07C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  2620   000EAA  0E00               	movlw	0
  2621   000EAC  6E1A               	movwf	___flmul@a^0,c
  2622   000EAE  0E00               	movlw	0
  2623   000EB0  6E1B               	movwf	(___flmul@a+1)^0,c
  2624   000EB2  0E20               	movlw	32
  2625   000EB4  6E1C               	movwf	(___flmul@a+2)^0,c
  2626   000EB6  0E41               	movlw	65
  2627   000EB8  6E1D               	movwf	(___flmul@a+3)^0,c
  2628   000EBA  C073  F016         	movff	efgtoa@ou,___flmul@b
  2629   000EBE  C074  F017         	movff	efgtoa@ou+1,___flmul@b+1
  2630   000EC2  C075  F018         	movff	efgtoa@ou+2,___flmul@b+2
  2631   000EC6  C076  F019         	movff	efgtoa@ou+3,___flmul@b+3
  2632   000ECA  EC7B  F00B         	call	___flmul	;wreg free
  2633   000ECE  C016  F033         	movff	?___flmul,___flge@ff2
  2634   000ED2  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  2635   000ED6  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  2636   000EDA  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  2637   000EDE  ECA6  F014         	call	___flge	;wreg free
  2638   000EE2  A0D8               	btfss	status,0,c
  2639   000EE4  EF76  F007         	goto	u3821
  2640   000EE8  EF78  F007         	goto	u3820
  2641   000EEC                     u3821:
  2642   000EEC  EFA1  F007         	goto	l3782
  2643   000EF0                     u3820:
  2644   000EF0                     
  2645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2646   000EF0  0100               	movlb	0	; () banked
  2647   000EF2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2648   000EF4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2649   000EF6                     
  2650                           ; BSR set to: 0
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2652   000EF6  C073  F016         	movff	efgtoa@ou,___flmul@b
  2653   000EFA  C074  F017         	movff	efgtoa@ou+1,___flmul@b+1
  2654   000EFE  C075  F018         	movff	efgtoa@ou+2,___flmul@b+2
  2655   000F02  C076  F019         	movff	efgtoa@ou+3,___flmul@b+3
  2656   000F06  0E00               	movlw	0
  2657   000F08  6E1A               	movwf	___flmul@a^0,c
  2658   000F0A  0E00               	movlw	0
  2659   000F0C  6E1B               	movwf	(___flmul@a+1)^0,c
  2660   000F0E  0E20               	movlw	32
  2661   000F10  6E1C               	movwf	(___flmul@a+2)^0,c
  2662   000F12  0E41               	movlw	65
  2663   000F14  6E1D               	movwf	(___flmul@a+3)^0,c
  2664   000F16  EC7B  F00B         	call	___flmul	;wreg free
  2665   000F1A  C016  F073         	movff	?___flmul,efgtoa@ou
  2666   000F1E  C017  F074         	movff	?___flmul+1,efgtoa@ou+1
  2667   000F22  C018  F075         	movff	?___flmul+2,efgtoa@ou+2
  2668   000F26  C019  F076         	movff	?___flmul+3,efgtoa@ou+3
  2669   000F2A                     
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2671   000F2A  0E66               	movlw	102
  2672   000F2C  0100               	movlb	0	; () banked
  2673   000F2E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2674   000F30  A4D8               	btfss	status,2,c
  2675   000F32  EF9D  F007         	goto	u3831
  2676   000F36  EF9F  F007         	goto	u3830
  2677   000F3A                     u3831:
  2678   000F3A  EFA1  F007         	goto	l3782
  2679   000F3E                     u3830:
  2680   000F3E                     
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2683   000F3E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2684   000F40  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2685   000F42                     l3782:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2688   000F42  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2689   000F46  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2690   000F4A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2691   000F4E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2692   000F52                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2694   000F52  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2695   000F56  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2696   000F5A                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2698   000F5A  0E00               	movlw	0
  2699   000F5C  0100               	movlb	0	; () banked
  2700   000F5E  6F68               	movwf	efgtoa@pp& (0+255),b
  2701   000F60                     
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2704   000F60  0E00               	movlw	0
  2705   000F62  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2706   000F64  0E00               	movlw	0
  2707   000F66  6F64               	movwf	efgtoa@t& (0+255),b
  2708   000F68                     
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2711   000F68  0E00               	movlw	0
  2712   000F6A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2713   000F6C  0E00               	movlw	0
  2714   000F6E  6F77               	movwf	efgtoa@i& (0+255),b
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2717   000F70  EF9F  F008         	goto	l3832
  2718   000F74                     l3792:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2722   000F74  C079  F011         	movff	efgtoa@h,___fldiv@b
  2723   000F78  C07A  F012         	movff	efgtoa@h+1,___fldiv@b+1
  2724   000F7C  C07B  F013         	movff	efgtoa@h+2,___fldiv@b+2
  2725   000F80  C07C  F014         	movff	efgtoa@h+3,___fldiv@b+3
  2726   000F84  C088  F015         	movff	efgtoa@u,___fldiv@a
  2727   000F88  C089  F016         	movff	efgtoa@u+1,___fldiv@a+1
  2728   000F8C  C08A  F017         	movff	efgtoa@u+2,___fldiv@a+2
  2729   000F90  C08B  F018         	movff	efgtoa@u+3,___fldiv@a+3
  2730   000F94  EC90  F00D         	call	___fldiv	;wreg free
  2731   000F98  C011  F02A         	movff	?___fldiv,floorf@x
  2732   000F9C  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  2733   000FA0  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  2734   000FA4  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  2735   000FA8  ECE8  F010         	call	_floorf	;wreg free
  2736   000FAC  C02A  F07D         	movff	?_floorf,efgtoa@l
  2737   000FB0  C02B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2738   000FB4  C02C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2739   000FB8  C02D  F080         	movff	?_floorf+3,efgtoa@l+3
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2742   000FBC  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2743   000FC0  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2744   000FC4  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2745   000FC8  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2746   000FCC  EC23  F014         	call	___fltol	;wreg free
  2747   000FD0  BE02               	btfsc	(?___fltol+1)^0,7,c
  2748   000FD2  EFF6  F007         	goto	u3840
  2749   000FD6  5002               	movf	(?___fltol+1)^0,w,c
  2750   000FD8  E107               	bnz	u3841
  2751   000FDA  0E0A               	movlw	10
  2752   000FDC  5C01               	subwf	?___fltol^0,w,c
  2753   000FDE  B0D8               	btfsc	status,0,c
  2754   000FE0  EFF4  F007         	goto	u3841
  2755   000FE4  EFF6  F007         	goto	u3840
  2756   000FE8                     u3841:
  2757   000FE8  EF06  F008         	goto	l3796
  2758   000FEC                     u3840:
  2759   000FEC  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2760   000FF0  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2761   000FF4  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2762   000FF8  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2763   000FFC  EC23  F014         	call	___fltol	;wreg free
  2764   001000  C001  F06B         	movff	?___fltol,efgtoa@d
  2765   001004  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2766   001008  EF0B  F008         	goto	l1170
  2767   00100C                     l3796:
  2768   00100C  0E00               	movlw	0
  2769   00100E  0100               	movlb	0	; () banked
  2770   001010  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2771   001012  0E09               	movlw	9
  2772   001014  6F6B               	movwf	efgtoa@d& (0+255),b
  2773   001016                     l1170:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2776   001016  0100               	movlb	0	; () banked
  2777   001018  5168               	movf	efgtoa@pp& (0+255),w,b
  2778   00101A  A4D8               	btfss	status,2,c
  2779   00101C  EF12  F008         	goto	u3851
  2780   001020  EF14  F008         	goto	u3850
  2781   001024                     u3851:
  2782   001024  EF3C  F008         	goto	l3816
  2783   001028                     u3850:
  2784   001028                     
  2785                           ; BSR set to: 0
  2786   001028  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2787   00102A  EF1B  F008         	goto	u3860
  2788   00102E  EF19  F008         	goto	u3861
  2789   001032                     u3861:
  2790   001032  EF3C  F008         	goto	l3816
  2791   001036                     u3860:
  2792   001036                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2795   001036  0E00               	movlw	low _dbuf
  2796   001038  2582               	addwf	efgtoa@n& (0+255),w,b
  2797   00103A  6ED9               	movwf	fsr2l,c
  2798   00103C  0E01               	movlw	high _dbuf
  2799   00103E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2800   001040  6EDA               	movwf	fsr2h,c
  2801   001042  0E2E               	movlw	46
  2802   001044  6EDF               	movwf	indf2,c
  2803   001046                     
  2804                           ; BSR set to: 0
  2805   001046  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2806   001048  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2807   00104A                     
  2808                           ; BSR set to: 0
  2809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2810   00104A  0771               	decf	efgtoa@w& (0+255),f,b
  2811   00104C  A0D8               	btfss	status,0,c
  2812   00104E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2813   001050                     
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2816   001050  0E01               	movlw	1
  2817   001052  6F68               	movwf	efgtoa@pp& (0+255),b
  2818   001054  EF3C  F008         	goto	l3816
  2819   001058                     l3808:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2823   001058  0E00               	movlw	low _dbuf
  2824   00105A  2582               	addwf	efgtoa@n& (0+255),w,b
  2825   00105C  6ED9               	movwf	fsr2l,c
  2826   00105E  0E01               	movlw	high _dbuf
  2827   001060  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2828   001062  6EDA               	movwf	fsr2h,c
  2829   001064  0E30               	movlw	48
  2830   001066  6EDF               	movwf	indf2,c
  2831   001068                     
  2832                           ; BSR set to: 0
  2833   001068  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2834   00106A  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2835   00106C                     
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2838   00106C  0771               	decf	efgtoa@w& (0+255),f,b
  2839   00106E  A0D8               	btfss	status,0,c
  2840   001070  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2841   001072                     
  2842                           ; BSR set to: 0
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2844   001072  0764               	decf	efgtoa@t& (0+255),f,b
  2845   001074  A0D8               	btfss	status,0,c
  2846   001076  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2847   001078                     l3816:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2851   001078  5164               	movf	efgtoa@t& (0+255),w,b
  2852   00107A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2853   00107C  A4D8               	btfss	status,2,c
  2854   00107E  EF43  F008         	goto	u3871
  2855   001082  EF45  F008         	goto	u3870
  2856   001086                     u3871:
  2857   001086  EF2C  F008         	goto	l3808
  2858   00108A                     u3870:
  2859   00108A                     
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2862   00108A  0E00               	movlw	low _dbuf
  2863   00108C  2582               	addwf	efgtoa@n& (0+255),w,b
  2864   00108E  6ED9               	movwf	fsr2l,c
  2865   001090  0E01               	movlw	high _dbuf
  2866   001092  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2867   001094  6EDA               	movwf	fsr2h,c
  2868   001096  516B               	movf	efgtoa@d& (0+255),w,b
  2869   001098  0F30               	addlw	48
  2870   00109A  6EDF               	movwf	indf2,c
  2871   00109C                     
  2872                           ; BSR set to: 0
  2873   00109C  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2874   00109E  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2875   0010A0                     
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2878   0010A0  0771               	decf	efgtoa@w& (0+255),f,b
  2879   0010A2  A0D8               	btfss	status,0,c
  2880   0010A4  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2881   0010A6                     
  2882                           ; BSR set to: 0
  2883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2884   0010A6  C079  F02F         	movff	efgtoa@h,___flsub@b
  2885   0010AA  C07A  F030         	movff	efgtoa@h+1,___flsub@b+1
  2886   0010AE  C07B  F031         	movff	efgtoa@h+2,___flsub@b+2
  2887   0010B2  C07C  F032         	movff	efgtoa@h+3,___flsub@b+3
  2888   0010B6  C07D  F01A         	movff	efgtoa@l,___flmul@a
  2889   0010BA  C07E  F01B         	movff	efgtoa@l+1,___flmul@a+1
  2890   0010BE  C07F  F01C         	movff	efgtoa@l+2,___flmul@a+2
  2891   0010C2  C080  F01D         	movff	efgtoa@l+3,___flmul@a+3
  2892   0010C6  C088  F016         	movff	efgtoa@u,___flmul@b
  2893   0010CA  C089  F017         	movff	efgtoa@u+1,___flmul@b+1
  2894   0010CE  C08A  F018         	movff	efgtoa@u+2,___flmul@b+2
  2895   0010D2  C08B  F019         	movff	efgtoa@u+3,___flmul@b+3
  2896   0010D6  EC7B  F00B         	call	___flmul	;wreg free
  2897   0010DA  C016  F033         	movff	?___flmul,___flsub@a
  2898   0010DE  C017  F034         	movff	?___flmul+1,___flsub@a+1
  2899   0010E2  C018  F035         	movff	?___flmul+2,___flsub@a+2
  2900   0010E6  C019  F036         	movff	?___flmul+3,___flsub@a+3
  2901   0010EA  ECFE  F017         	call	___flsub	;wreg free
  2902   0010EE  C02F  F079         	movff	?___flsub,efgtoa@h
  2903   0010F2  C030  F07A         	movff	?___flsub+1,efgtoa@h+1
  2904   0010F6  C031  F07B         	movff	?___flsub+2,efgtoa@h+2
  2905   0010FA  C032  F07C         	movff	?___flsub+3,efgtoa@h+3
  2906   0010FE                     
  2907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2908   0010FE  C088  F011         	movff	efgtoa@u,___fldiv@b
  2909   001102  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  2910   001106  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  2911   00110A  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  2912   00110E  0E00               	movlw	0
  2913   001110  6E15               	movwf	___fldiv@a^0,c
  2914   001112  0E00               	movlw	0
  2915   001114  6E16               	movwf	(___fldiv@a+1)^0,c
  2916   001116  0E20               	movlw	32
  2917   001118  6E17               	movwf	(___fldiv@a+2)^0,c
  2918   00111A  0E41               	movlw	65
  2919   00111C  6E18               	movwf	(___fldiv@a+3)^0,c
  2920   00111E  EC90  F00D         	call	___fldiv	;wreg free
  2921   001122  C011  F088         	movff	?___fldiv,efgtoa@u
  2922   001126  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  2923   00112A  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2924   00112E  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2925   001132                     
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2927   001132  0100               	movlb	0	; () banked
  2928   001134  0760               	decf	efgtoa@ne& (0+255),f,b
  2929   001136  A0D8               	btfss	status,0,c
  2930   001138  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2931   00113A                     
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2934   00113A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2935   00113C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2936   00113E                     l3832:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2940   00113E  516D               	movf	efgtoa@m& (0+255),w,b
  2941   001140  5D77               	subwf	efgtoa@i& (0+255),w,b
  2942   001142  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2943   001144  0A80               	xorlw	128
  2944   001146  6E45               	movwf	??_efgtoa^0,c
  2945   001148  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2946   00114A  0A80               	xorlw	128
  2947   00114C  5845               	subwfb	??_efgtoa^0,w,c
  2948   00114E  B0D8               	btfsc	status,0,c
  2949   001150  EFAC  F008         	goto	u3881
  2950   001154  EFAE  F008         	goto	u3880
  2951   001158                     u3881:
  2952   001158  EFBC  F008         	goto	l3836
  2953   00115C                     u3880:
  2954   00115C                     
  2955                           ; BSR set to: 0
  2956   00115C  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2957   00115E  EFBA  F008         	goto	u3891
  2958   001162  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2959   001164  E109               	bnz	u3890
  2960   001166  0E4B               	movlw	75
  2961   001168  5D82               	subwf	efgtoa@n& (0+255),w,b
  2962   00116A  A0D8               	btfss	status,0,c
  2963   00116C  EFBA  F008         	goto	u3891
  2964   001170  EFBC  F008         	goto	u3890
  2965   001174                     u3891:
  2966   001174  EFBA  F007         	goto	l3792
  2967   001178                     u3890:
  2968   001178                     l3836:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2972   001178  0E00               	movlw	0
  2973   00117A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2974   00117C  0E4F               	movlw	79
  2975   00117E  6F77               	movwf	efgtoa@i& (0+255),b
  2976   001180                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2979   001180  0E00               	movlw	low _dbuf
  2980   001182  2577               	addwf	efgtoa@i& (0+255),w,b
  2981   001184  6ED9               	movwf	fsr2l,c
  2982   001186  0E01               	movlw	high _dbuf
  2983   001188  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2984   00118A  6EDA               	movwf	fsr2h,c
  2985   00118C  0E00               	movlw	0
  2986   00118E  6EDF               	movwf	indf2,c
  2987   001190                     
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2990   001190  0E00               	movlw	low _dbuf
  2991   001192  6E45               	movwf	??_efgtoa^0,c
  2992   001194  0E01               	movlw	high _dbuf
  2993   001196  6E46               	movwf	(??_efgtoa+1)^0,c
  2994   001198  5182               	movf	efgtoa@n& (0+255),w,b
  2995   00119A  5E45               	subwf	??_efgtoa^0,f,c
  2996   00119C  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2997   00119E  5A46               	subwfb	(??_efgtoa+1)^0,f,c
  2998   0011A0  5177               	movf	efgtoa@i& (0+255),w,b
  2999   0011A2  2445               	addwf	??_efgtoa^0,w,c
  3000   0011A4  6E01               	movwf	memcpy@d1^0,c
  3001   0011A6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3002   0011A8  2046               	addwfc	(??_efgtoa+1)^0,w,c
  3003   0011AA  6E02               	movwf	(memcpy@d1+1)^0,c
  3004   0011AC  0E00               	movlw	low _dbuf
  3005   0011AE  6E03               	movwf	memcpy@s1^0,c
  3006   0011B0  0E01               	movlw	high _dbuf
  3007   0011B2  6E04               	movwf	(memcpy@s1+1)^0,c
  3008   0011B4  C082  F005         	movff	efgtoa@n,memcpy@n
  3009   0011B8  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  3010   0011BC  ECD6  F017         	call	_memcpy	;wreg free
  3011   0011C0                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3013   0011C0  0100               	movlb	0	; () banked
  3014   0011C2  5182               	movf	efgtoa@n& (0+255),w,b
  3015   0011C4  5D77               	subwf	efgtoa@i& (0+255),w,b
  3016   0011C6  6F82               	movwf	efgtoa@n& (0+255),b
  3017   0011C8  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3018   0011CA  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3019   0011CC  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3020   0011CE                     
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3023   0011CE  5181               	movf	efgtoa@sign& (0+255),w,b
  3024   0011D0  A4D8               	btfss	status,2,c
  3025   0011D2  EFED  F008         	goto	u3901
  3026   0011D6  EFF0  F008         	goto	u3900
  3027   0011DA                     u3901:
  3028   0011DA  0E01               	movlw	1
  3029   0011DC  EFF1  F008         	goto	u3910
  3030   0011E0                     u3900:
  3031   0011E0  0E00               	movlw	0
  3032   0011E2                     u3910:
  3033   0011E2  6F77               	movwf	efgtoa@i& (0+255),b
  3034   0011E4  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3035   0011E6                     
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3038   0011E6  5181               	movf	efgtoa@sign& (0+255),w,b
  3039   0011E8  B4D8               	btfsc	status,2,c
  3040   0011EA  EFF9  F008         	goto	u3921
  3041   0011EE  EFFB  F008         	goto	u3920
  3042   0011F2                     u3921:
  3043   0011F2  EF06  F009         	goto	l3850
  3044   0011F6                     u3920:
  3045   0011F6                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3048   0011F6  0782               	decf	efgtoa@n& (0+255),f,b
  3049   0011F8  A0D8               	btfss	status,0,c
  3050   0011FA  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3051   0011FC  0E00               	movlw	low _dbuf
  3052   0011FE  2582               	addwf	efgtoa@n& (0+255),w,b
  3053   001200  6ED9               	movwf	fsr2l,c
  3054   001202  0E01               	movlw	high _dbuf
  3055   001204  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3056   001206  6EDA               	movwf	fsr2h,c
  3057   001208  C081  FFDF         	movff	efgtoa@sign,indf2
  3058   00120C                     l3850:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3062   00120C  5177               	movf	efgtoa@i& (0+255),w,b
  3063   00120E  5F71               	subwf	efgtoa@w& (0+255),f,b
  3064   001210  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3065   001212  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3066   001214                     
  3067                           ; BSR set to: 0
  3068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3069   001214  C03E  F012         	movff	efgtoa@fp,pad@fp
  3070   001218  C03F  F013         	movff	efgtoa@fp+1,pad@fp+1
  3071   00121C  0E00               	movlw	low _dbuf
  3072   00121E  2582               	addwf	efgtoa@n& (0+255),w,b
  3073   001220  6E14               	movwf	pad@buf^0,c
  3074   001222  0E01               	movlw	high _dbuf
  3075   001224  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3076   001226  6E15               	movwf	(pad@buf+1)^0,c
  3077   001228  C071  F016         	movff	efgtoa@w,pad@p
  3078   00122C  C072  F017         	movff	efgtoa@w+1,pad@p+1
  3079   001230  ECB3  F016         	call	_pad	;wreg free
  3080   001234                     l1137:
  3081   001234  0012               	return		;funcret
  3082   001236                     __end_of_efgtoa:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _strcpy *****************
  3086 ;; Defined at:
  3087 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3090 ;;		 -> dbuf(80), 
  3091 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3092 ;;		 -> STR_7(4), STR_4(4), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  d               2    6[COMRAM] PTR unsigned char 
  3095 ;;		 -> dbuf(80), 
  3096 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3097 ;;		 -> STR_7(4), STR_4(4), 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2    0[COMRAM] PTR unsigned char 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3107 ;;      Params:         4       0       0       0       0       0       0       0       0
  3108 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3110 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3111 ;;Total ram usage:        8 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_efgtoa
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text5
  3121   003110                     __ptext5:
  3122                           	callstack 0
  3123   003110                     _strcpy:
  3124                           	callstack 26
  3125   003110  C003  F005         	movff	strcpy@src,strcpy@s
  3126   003114  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3127   003118  C001  F007         	movff	strcpy@dest,strcpy@d
  3128   00311C  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3129   003120                     l3572:
  3130   003120  C005  FFF6         	movff	strcpy@s,tblptrl
  3131   003124  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3132   003128  4A05               	infsnz	strcpy@s^0,f,c
  3133   00312A  2A06               	incf	(strcpy@s+1)^0,f,c
  3134   00312C                     	if	0	;tblptru may be non-zero
  3135   00312C                     	endif
  3136   00312C                     	if	0	;tblptru may be non-zero
  3137   00312C                     	endif
  3138   00312C  C007  FFD9         	movff	strcpy@d,fsr2l
  3139   003130  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3140   003134  4A07               	infsnz	strcpy@d^0,f,c
  3141   003136  2A08               	incf	(strcpy@d+1)^0,f,c
  3142   003138  0008               	tblrd		*
  3143   00313A  CFF5 FFDF          	movff	tablat,indf2
  3144   00313E  50DF               	movf	indf2,w,c
  3145   003140  A4D8               	btfss	status,2,c
  3146   003142  EFA5  F018         	goto	u3441
  3147   003146  EFA7  F018         	goto	u3440
  3148   00314A                     u3441:
  3149   00314A  EF90  F018         	goto	l3572
  3150   00314E                     u3440:
  3151   00314E  0012               	return		;funcret
  3152   003150                     __end_of_strcpy:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _pad *****************
  3156 ;; Defined at:
  3157 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3160 ;;		 -> sprintf@f(11), 
  3161 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3162 ;;		 -> dbuf(80), 
  3163 ;;  p               2   21[COMRAM] int 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  w               2   26[COMRAM] int 
  3166 ;;  i               2   24[COMRAM] int 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3176 ;;      Params:         6       0       0       0       0       0       0       0       0
  3177 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3178 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3179 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3180 ;;Total ram usage:       11 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 3
  3183 ;; This function calls:
  3184 ;;		_fputc
  3185 ;;		_fputs
  3186 ;; This function is called by:
  3187 ;;		_efgtoa
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text6
  3192   002D66                     __ptext6:
  3193                           	callstack 0
  3194   002D66                     _pad:
  3195                           	callstack 23
  3196   002D66                     
  3197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3198   002D66  BE17               	btfsc	(pad@p+1)^0,7,c
  3199   002D68  EFB8  F016         	goto	u3351
  3200   002D6C  EFBA  F016         	goto	u3350
  3201   002D70                     u3351:
  3202   002D70  EFC0  F016         	goto	l3538
  3203   002D74                     u3350:
  3204   002D74  C016  F01B         	movff	pad@p,pad@w
  3205   002D78  C017  F01C         	movff	pad@p+1,pad@w+1
  3206   002D7C  EFC4  F016         	goto	l1122
  3207   002D80                     l3538:
  3208   002D80  0E00               	movlw	0
  3209   002D82  6E1C               	movwf	(pad@w+1)^0,c
  3210   002D84  0E00               	movlw	0
  3211   002D86  6E1B               	movwf	pad@w^0,c
  3212   002D88                     l1122:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3215   002D88  0E00               	movlw	0
  3216   002D8A  6E1A               	movwf	(pad@i+1)^0,c
  3217   002D8C  0E00               	movlw	0
  3218   002D8E  6E19               	movwf	pad@i^0,c
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3221   002D90  EFD6  F016         	goto	l3544
  3222   002D94                     l3540:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3225   002D94  0E00               	movlw	0
  3226   002D96  6E03               	movwf	(fputc@c+1)^0,c
  3227   002D98  0E20               	movlw	32
  3228   002D9A  6E02               	movwf	fputc@c^0,c
  3229   002D9C  C012  F004         	movff	pad@fp,fputc@fp
  3230   002DA0  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3231   002DA4  ECA7  F015         	call	_fputc	;wreg free
  3232   002DA8                     
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3234   002DA8  4A19               	infsnz	pad@i^0,f,c
  3235   002DAA  2A1A               	incf	(pad@i+1)^0,f,c
  3236   002DAC                     l3544:
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3239   002DAC  501B               	movf	pad@w^0,w,c
  3240   002DAE  5C19               	subwf	pad@i^0,w,c
  3241   002DB0  501A               	movf	(pad@i+1)^0,w,c
  3242   002DB2  0A80               	xorlw	128
  3243   002DB4  6E18               	movwf	??_pad^0,c
  3244   002DB6  501C               	movf	(pad@w+1)^0,w,c
  3245   002DB8  0A80               	xorlw	128
  3246   002DBA  5818               	subwfb	??_pad^0,w,c
  3247   002DBC  A0D8               	btfss	status,0,c
  3248   002DBE  EFE3  F016         	goto	u3361
  3249   002DC2  EFE5  F016         	goto	u3360
  3250   002DC6                     u3361:
  3251   002DC6  EFCA  F016         	goto	l3540
  3252   002DCA                     u3360:
  3253   002DCA                     
  3254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3255   002DCA  C014  F00B         	movff	pad@buf,fputs@s
  3256   002DCE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3257   002DD2  C012  F00D         	movff	pad@fp,fputs@fp
  3258   002DD6  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3259   002DDA  EC66  F018         	call	_fputs	;wreg free
  3260   002DDE  0012               	return		;funcret
  3261   002DE0                     __end_of_pad:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _fputs *****************
  3265 ;; Defined at:
  3266 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3269 ;;		 -> dbuf(80), 
  3270 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3271 ;;		 -> sprintf@f(11), 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  i               2   15[COMRAM] int 
  3274 ;;  c               1   14[COMRAM] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  2   10[COMRAM] int 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3284 ;;      Params:         4       0       0       0       0       0       0       0       0
  3285 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3287 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3288 ;;Total ram usage:        7 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 2
  3291 ;; This function calls:
  3292 ;;		_fputc
  3293 ;; This function is called by:
  3294 ;;		_pad
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text7
  3299   0030CC                     __ptext7:
  3300                           	callstack 0
  3301   0030CC                     _fputs:
  3302                           	callstack 23
  3303   0030CC  0E00               	movlw	0
  3304   0030CE  6E11               	movwf	(fputs@i+1)^0,c
  3305   0030D0  0E00               	movlw	0
  3306   0030D2  6E10               	movwf	fputs@i^0,c
  3307   0030D4  EF77  F018         	goto	l3162
  3308   0030D8                     l3158:
  3309   0030D8  C00F  F002         	movff	fputs@c,fputc@c
  3310   0030DC  6A03               	clrf	(fputc@c+1)^0,c
  3311   0030DE  C00D  F004         	movff	fputs@fp,fputc@fp
  3312   0030E2  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3313   0030E6  ECA7  F015         	call	_fputc	;wreg free
  3314   0030EA  4A10               	infsnz	fputs@i^0,f,c
  3315   0030EC  2A11               	incf	(fputs@i+1)^0,f,c
  3316   0030EE                     l3162:
  3317   0030EE  5010               	movf	fputs@i^0,w,c
  3318   0030F0  240B               	addwf	fputs@s^0,w,c
  3319   0030F2  6ED9               	movwf	fsr2l,c
  3320   0030F4  5011               	movf	(fputs@i+1)^0,w,c
  3321   0030F6  200C               	addwfc	(fputs@s+1)^0,w,c
  3322   0030F8  6EDA               	movwf	fsr2h,c
  3323   0030FA  50DF               	movf	indf2,w,c
  3324   0030FC  6E0F               	movwf	fputs@c^0,c
  3325   0030FE  500F               	movf	fputs@c^0,w,c
  3326   003100  A4D8               	btfss	status,2,c
  3327   003102  EF85  F018         	goto	u2761
  3328   003106  EF87  F018         	goto	u2760
  3329   00310A                     u2761:
  3330   00310A  EF6C  F018         	goto	l3158
  3331   00310E                     u2760:
  3332   00310E  0012               	return		;funcret
  3333   003110                     __end_of_fputs:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _fputc *****************
  3337 ;; Defined at:
  3338 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  c               2    1[COMRAM] int 
  3341 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3342 ;;		 -> sprintf@f(11), 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    1[COMRAM] int 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3354 ;;      Params:         4       0       0       0       0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3356 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3357 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3358 ;;Total ram usage:        9 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 1
  3361 ;; This function calls:
  3362 ;;		_putch
  3363 ;; This function is called by:
  3364 ;;		_pad
  3365 ;;		_vfpfcnvrt
  3366 ;;		_fputs
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text8
  3371   002B4E                     __ptext8:
  3372                           	callstack 0
  3373   002B4E                     _fputc:
  3374                           	callstack 26
  3375   002B4E  5004               	movf	fputc@fp^0,w,c
  3376   002B50  1005               	iorwf	(fputc@fp+1)^0,w,c
  3377   002B52  B4D8               	btfsc	status,2,c
  3378   002B54  EFAE  F015         	goto	u2331
  3379   002B58  EFB0  F015         	goto	u2330
  3380   002B5C                     u2331:
  3381   002B5C  EFB9  F015         	goto	l2944
  3382   002B60                     u2330:
  3383   002B60  5004               	movf	fputc@fp^0,w,c
  3384   002B62  1005               	iorwf	(fputc@fp+1)^0,w,c
  3385   002B64  A4D8               	btfss	status,2,c
  3386   002B66  EFB7  F015         	goto	u2341
  3387   002B6A  EFB9  F015         	goto	u2340
  3388   002B6E                     u2341:
  3389   002B6E  EFBE  F015         	goto	l2946
  3390   002B72                     u2340:
  3391   002B72                     l2944:
  3392   002B72  5002               	movf	fputc@c^0,w,c
  3393   002B74  EC19  F019         	call	_putch
  3394   002B78  EF0B  F016         	goto	l1300
  3395   002B7C                     l2946:
  3396   002B7C  EE20 F009          	lfsr	2,9
  3397   002B80  5004               	movf	fputc@fp^0,w,c
  3398   002B82  26D9               	addwf	fsr2l,f,c
  3399   002B84  5005               	movf	(fputc@fp+1)^0,w,c
  3400   002B86  22DA               	addwfc	fsr2h,f,c
  3401   002B88  50DE               	movf	postinc2,w,c
  3402   002B8A  10DE               	iorwf	postinc2,w,c
  3403   002B8C  B4D8               	btfsc	status,2,c
  3404   002B8E  EFCB  F015         	goto	u2351
  3405   002B92  EFCD  F015         	goto	u2350
  3406   002B96                     u2351:
  3407   002B96  EFE8  F015         	goto	l2950
  3408   002B9A                     u2350:
  3409   002B9A  EE20 F009          	lfsr	2,9
  3410   002B9E  5004               	movf	fputc@fp^0,w,c
  3411   002BA0  26D9               	addwf	fsr2l,f,c
  3412   002BA2  5005               	movf	(fputc@fp+1)^0,w,c
  3413   002BA4  22DA               	addwfc	fsr2h,f,c
  3414   002BA6  EE10 F003          	lfsr	1,3
  3415   002BAA  5004               	movf	fputc@fp^0,w,c
  3416   002BAC  26E1               	addwf	fsr1l,f,c
  3417   002BAE  5005               	movf	(fputc@fp+1)^0,w,c
  3418   002BB0  22E2               	addwfc	fsr1h,f,c
  3419   002BB2  50DE               	movf	postinc2,w,c
  3420   002BB4  5CE6               	subwf	postinc1,w,c
  3421   002BB6  50E6               	movf	postinc1,w,c
  3422   002BB8  0A80               	xorlw	128
  3423   002BBA  6E0A               	movwf	(??_fputc+4)^0,c
  3424   002BBC  50DE               	movf	postinc2,w,c
  3425   002BBE  0A80               	xorlw	128
  3426   002BC0  580A               	subwfb	(??_fputc+4)^0,w,c
  3427   002BC2  B0D8               	btfsc	status,0,c
  3428   002BC4  EFE6  F015         	goto	u2361
  3429   002BC8  EFE8  F015         	goto	u2360
  3430   002BCC                     u2361:
  3431   002BCC  EF0B  F016         	goto	l1300
  3432   002BD0                     u2360:
  3433   002BD0                     l2950:
  3434   002BD0  EE20 F003          	lfsr	2,3
  3435   002BD4  5004               	movf	fputc@fp^0,w,c
  3436   002BD6  26D9               	addwf	fsr2l,f,c
  3437   002BD8  5005               	movf	(fputc@fp+1)^0,w,c
  3438   002BDA  22DA               	addwfc	fsr2h,f,c
  3439   002BDC  CFDE F006          	movff	postinc2,??_fputc
  3440   002BE0  CFDD F007          	movff	postdec2,??_fputc+1
  3441   002BE4  C004  FFD9         	movff	fputc@fp,fsr2l
  3442   002BE8  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3443   002BEC  CFDE F008          	movff	postinc2,??_fputc+2
  3444   002BF0  CFDD F009          	movff	postdec2,??_fputc+3
  3445   002BF4  5006               	movf	??_fputc^0,w,c
  3446   002BF6  2408               	addwf	(??_fputc+2)^0,w,c
  3447   002BF8  6ED9               	movwf	fsr2l,c
  3448   002BFA  5007               	movf	(??_fputc+1)^0,w,c
  3449   002BFC  2009               	addwfc	(??_fputc+3)^0,w,c
  3450   002BFE  6EDA               	movwf	fsr2h,c
  3451   002C00  C002  FFDF         	movff	fputc@c,indf2
  3452   002C04  EE20 F003          	lfsr	2,3
  3453   002C08  5004               	movf	fputc@fp^0,w,c
  3454   002C0A  26D9               	addwf	fsr2l,f,c
  3455   002C0C  5005               	movf	(fputc@fp+1)^0,w,c
  3456   002C0E  22DA               	addwfc	fsr2h,f,c
  3457   002C10  2ADE               	incf	postinc2,f,c
  3458   002C12  0E00               	movlw	0
  3459   002C14  22DD               	addwfc	postdec2,f,c
  3460   002C16                     l1300:
  3461   002C16  0012               	return		;funcret
  3462   002C18                     __end_of_fputc:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _putch *****************
  3466 ;; Defined at:
  3467 ;;		line 93 in file "lib_pic/usart.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  c               1    wreg     unsigned char 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  c               1    0[COMRAM] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0
  3482 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3484 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3485 ;;Total ram usage:        1 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_fputc
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text9
  3495   003232                     __ptext9:
  3496                           	callstack 0
  3497   003232                     _putch:
  3498                           	callstack 26
  3499                           
  3500                           ;incstack = 0
  3501                           ;putch@c stored from wreg
  3502   003232  6E01               	movwf	putch@c^0,c
  3503   003234                     l363:
  3504   003234  A2AC               	btfss	172,1,c	;volatile
  3505   003236  EF1F  F019         	goto	u2321
  3506   00323A  EF21  F019         	goto	u2320
  3507   00323E                     u2321:
  3508   00323E  EF1A  F019         	goto	l363
  3509   003242                     u2320:
  3510   003242                     
  3511                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  3512   003242  C001  FFAD         	movff	putch@c,4013	;volatile
  3513   003246  0012               	return		;funcret
  3514   003248                     __end_of_putch:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _memcpy *****************
  3518 ;; Defined at:
  3519 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  d1              2    0[COMRAM] PTR void 
  3522 ;;		 -> dbuf(80), 
  3523 ;;  s1              2    2[COMRAM] PTR const void 
  3524 ;;		 -> dbuf(80), 
  3525 ;;  n               2    4[COMRAM] unsigned int 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3528 ;;		 -> dbuf(80), 
  3529 ;;  d               2    6[COMRAM] PTR unsigned char 
  3530 ;;		 -> dbuf(80), 
  3531 ;;  tmp             1   10[COMRAM] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    0[COMRAM] PTR void 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3541 ;;      Params:         6       0       0       0       0       0       0       0       0
  3542 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3544 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3545 ;;Total ram usage:       11 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_efgtoa
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text10
  3555   002FAC                     __ptext10:
  3556                           	callstack 0
  3557   002FAC                     _memcpy:
  3558                           	callstack 26
  3559   002FAC  C003  F009         	movff	memcpy@s1,memcpy@s
  3560   002FB0  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3561   002FB4  C001  F007         	movff	memcpy@d1,memcpy@d
  3562   002FB8  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3563   002FBC  EFF0  F017         	goto	l3616
  3564   002FC0                     l3608:
  3565   002FC0  C009  FFD9         	movff	memcpy@s,fsr2l
  3566   002FC4  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3567   002FC8  50DF               	movf	indf2,w,c
  3568   002FCA  6E0B               	movwf	memcpy@tmp^0,c
  3569   002FCC  4A09               	infsnz	memcpy@s^0,f,c
  3570   002FCE  2A0A               	incf	(memcpy@s+1)^0,f,c
  3571   002FD0  C007  FFD9         	movff	memcpy@d,fsr2l
  3572   002FD4  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3573   002FD8  C00B  FFDF         	movff	memcpy@tmp,indf2
  3574   002FDC  4A07               	infsnz	memcpy@d^0,f,c
  3575   002FDE  2A08               	incf	(memcpy@d+1)^0,f,c
  3576   002FE0                     l3616:
  3577   002FE0  0605               	decf	memcpy@n^0,f,c
  3578   002FE2  A0D8               	btfss	status,0,c
  3579   002FE4  0606               	decf	(memcpy@n+1)^0,f,c
  3580   002FE6  2805               	incf	memcpy@n^0,w,c
  3581   002FE8  E106               	bnz	u3561
  3582   002FEA  2806               	incf	(memcpy@n+1)^0,w,c
  3583   002FEC  A4D8               	btfss	status,2,c
  3584   002FEE  EFFB  F017         	goto	u3561
  3585   002FF2  EFFD  F017         	goto	u3560
  3586   002FF6                     u3561:
  3587   002FF6  EFE0  F017         	goto	l3608
  3588   002FFA                     u3560:
  3589   002FFA  0012               	return		;funcret
  3590   002FFC                     __end_of_memcpy:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _labs *****************
  3594 ;; Defined at:
  3595 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  a               4    0[COMRAM] long 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  4    0[COMRAM] long 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3609 ;;      Params:         4       0       0       0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3611 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3612 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3613 ;;Total ram usage:        8 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_efgtoa
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text11
  3623   002DE0                     __ptext11:
  3624                           	callstack 0
  3625   002DE0                     _labs:
  3626                           	callstack 26
  3627   002DE0  BE04               	btfsc	(labs@a+3)^0,7,c
  3628   002DE2  EFFF  F016         	goto	u3450
  3629   002DE6  5004               	movf	(labs@a+3)^0,w,c
  3630   002DE8  1003               	iorwf	(labs@a+2)^0,w,c
  3631   002DEA  1002               	iorwf	(labs@a+1)^0,w,c
  3632   002DEC  E106               	bnz	u3451
  3633   002DEE  0401               	decf	labs@a^0,w,c
  3634   002DF0  B0D8               	btfsc	status,0,c
  3635   002DF2  EFFD  F016         	goto	u3451
  3636   002DF6  EFFF  F016         	goto	u3450
  3637   002DFA                     u3451:
  3638   002DFA  EF1A  F017         	goto	l1279
  3639   002DFE                     u3450:
  3640   002DFE  C001  F005         	movff	labs@a,??_labs
  3641   002E02  C002  F006         	movff	labs@a+1,??_labs+1
  3642   002E06  C003  F007         	movff	labs@a+2,??_labs+2
  3643   002E0A  C004  F008         	movff	labs@a+3,??_labs+3
  3644   002E0E  1E05               	comf	??_labs^0,f,c
  3645   002E10  1E06               	comf	(??_labs+1)^0,f,c
  3646   002E12  1E07               	comf	(??_labs+2)^0,f,c
  3647   002E14  1E08               	comf	(??_labs+3)^0,f,c
  3648   002E16  2A05               	incf	??_labs^0,f,c
  3649   002E18  0E00               	movlw	0
  3650   002E1A  2206               	addwfc	(??_labs+1)^0,f,c
  3651   002E1C  2207               	addwfc	(??_labs+2)^0,f,c
  3652   002E1E  2208               	addwfc	(??_labs+3)^0,f,c
  3653   002E20  C005  F001         	movff	??_labs,?_labs
  3654   002E24  C006  F002         	movff	??_labs+1,?_labs+1
  3655   002E28  C007  F003         	movff	??_labs+2,?_labs+2
  3656   002E2C  C008  F004         	movff	??_labs+3,?_labs+3
  3657   002E30  EF22  F017         	goto	l1282
  3658   002E34                     l1279:
  3659   002E34  C001  F001         	movff	labs@a,?_labs
  3660   002E38  C002  F002         	movff	labs@a+1,?_labs+1
  3661   002E3C  C003  F003         	movff	labs@a+2,?_labs+2
  3662   002E40  C004  F004         	movff	labs@a+3,?_labs+3
  3663   002E44                     l1282:
  3664   002E44  0012               	return		;funcret
  3665   002E46                     __end_of_labs:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _floorf *****************
  3669 ;; Defined at:
  3670 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  x               4   41[COMRAM] float 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  u               4   57[COMRAM] struct .
  3675 ;;  m               4   51[COMRAM] unsigned long 
  3676 ;;  e               2   55[COMRAM] int 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  4   41[COMRAM] float 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3686 ;;      Params:         4       0       0       0       0       0       0       0       0
  3687 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3688 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3689 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3690 ;;Total ram usage:       20 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_efgtoa
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text12
  3700   0021D0                     __ptext12:
  3701                           	callstack 0
  3702   0021D0                     _floorf:
  3703                           	callstack 26
  3704   0021D0  C0A7  F03A         	movff	floorf@F526,floorf@u
  3705   0021D4  C0A8  F03B         	movff	floorf@F526+1,floorf@u+1
  3706   0021D8  C0A9  F03C         	movff	floorf@F526+2,floorf@u+2
  3707   0021DC  C0AA  F03D         	movff	floorf@F526+3,floorf@u+3
  3708   0021E0  C02A  F03A         	movff	floorf@x,floorf@u
  3709   0021E4  C02B  F03B         	movff	floorf@x+1,floorf@u+1
  3710   0021E8  C02C  F03C         	movff	floorf@x+2,floorf@u+2
  3711   0021EC  C02D  F03D         	movff	floorf@x+3,floorf@u+3
  3712   0021F0  0E81               	movlw	129
  3713   0021F2  6E2E               	movwf	??_floorf^0,c
  3714   0021F4  0EFF               	movlw	255
  3715   0021F6  6E2F               	movwf	(??_floorf+1)^0,c
  3716   0021F8  C03A  F030         	movff	floorf@u,??_floorf+2
  3717   0021FC  C03B  F031         	movff	floorf@u+1,??_floorf+3
  3718   002200  C03C  F032         	movff	floorf@u+2,??_floorf+4
  3719   002204  C03D  F033         	movff	floorf@u+3,??_floorf+5
  3720   002208  0E18               	movlw	24
  3721   00220A  EF0C  F011         	goto	u3460
  3722   00220E                     u3465:
  3723   00220E  90D8               	bcf	status,0,c
  3724   002210  3233               	rrcf	(??_floorf+5)^0,f,c
  3725   002212  3232               	rrcf	(??_floorf+4)^0,f,c
  3726   002214  3231               	rrcf	(??_floorf+3)^0,f,c
  3727   002216  3230               	rrcf	(??_floorf+2)^0,f,c
  3728   002218                     u3460:
  3729   002218  2EE8               	decfsz	wreg,f,c
  3730   00221A  EF07  F011         	goto	u3465
  3731   00221E  5030               	movf	(??_floorf+2)^0,w,c
  3732   002220  242E               	addwf	??_floorf^0,w,c
  3733   002222  6E38               	movwf	floorf@e^0,c
  3734   002224  0E00               	movlw	0
  3735   002226  202F               	addwfc	(??_floorf+1)^0,w,c
  3736   002228  6E39               	movwf	(floorf@e+1)^0,c
  3737   00222A  BE39               	btfsc	(floorf@e+1)^0,7,c
  3738   00222C  EF21  F011         	goto	u3471
  3739   002230  5039               	movf	(floorf@e+1)^0,w,c
  3740   002232  E109               	bnz	u3470
  3741   002234  0E17               	movlw	23
  3742   002236  5C38               	subwf	floorf@e^0,w,c
  3743   002238  A0D8               	btfss	status,0,c
  3744   00223A  EF21  F011         	goto	u3471
  3745   00223E  EF23  F011         	goto	u3470
  3746   002242                     u3471:
  3747   002242  EF2D  F011         	goto	l3584
  3748   002246                     u3470:
  3749   002246                     l3582:
  3750   002246  C02A  F02A         	movff	floorf@x,?_floorf
  3751   00224A  C02B  F02B         	movff	floorf@x+1,?_floorf+1
  3752   00224E  C02C  F02C         	movff	floorf@x+2,?_floorf+2
  3753   002252  C02D  F02D         	movff	floorf@x+3,?_floorf+3
  3754   002256  EFF0  F011         	goto	l1254
  3755   00225A                     l3584:
  3756   00225A  BE39               	btfsc	(floorf@e+1)^0,7,c
  3757   00225C  EF32  F011         	goto	u3481
  3758   002260  EF34  F011         	goto	u3480
  3759   002264                     u3481:
  3760   002264  EFA4  F011         	goto	l3594
  3761   002268                     u3480:
  3762   002268  C038  F02E         	movff	floorf@e,??_floorf
  3763   00226C  0EFF               	movlw	255
  3764   00226E  6E2F               	movwf	(??_floorf+1)^0,c
  3765   002270  0EFF               	movlw	255
  3766   002272  6E30               	movwf	(??_floorf+2)^0,c
  3767   002274  0E7F               	movlw	127
  3768   002276  6E31               	movwf	(??_floorf+3)^0,c
  3769   002278  0E00               	movlw	0
  3770   00227A  6E32               	movwf	(??_floorf+4)^0,c
  3771   00227C                     u3495:
  3772   00227C  662E               	tstfsz	??_floorf^0,c
  3773   00227E  EF43  F011         	goto	u3496
  3774   002282  EF4B  F011         	goto	u3497
  3775   002286                     u3496:
  3776   002286  3432               	rlcf	(??_floorf+4)^0,w,c
  3777   002288  3232               	rrcf	(??_floorf+4)^0,f,c
  3778   00228A  3231               	rrcf	(??_floorf+3)^0,f,c
  3779   00228C  3230               	rrcf	(??_floorf+2)^0,f,c
  3780   00228E  322F               	rrcf	(??_floorf+1)^0,f,c
  3781   002290  2E2E               	decfsz	??_floorf^0,f,c
  3782   002292  EF3E  F011         	goto	u3495
  3783   002296                     u3497:
  3784   002296  C02F  F034         	movff	??_floorf+1,floorf@m
  3785   00229A  C030  F035         	movff	??_floorf+2,floorf@m+1
  3786   00229E  C031  F036         	movff	??_floorf+3,floorf@m+2
  3787   0022A2  C032  F037         	movff	??_floorf+4,floorf@m+3
  3788   0022A6  5034               	movf	floorf@m^0,w,c
  3789   0022A8  143A               	andwf	floorf@u^0,w,c
  3790   0022AA  6E2E               	movwf	??_floorf^0,c
  3791   0022AC  5035               	movf	(floorf@m+1)^0,w,c
  3792   0022AE  143B               	andwf	(floorf@u+1)^0,w,c
  3793   0022B0  6E2F               	movwf	(??_floorf+1)^0,c
  3794   0022B2  5036               	movf	(floorf@m+2)^0,w,c
  3795   0022B4  143C               	andwf	(floorf@u+2)^0,w,c
  3796   0022B6  6E30               	movwf	(??_floorf+2)^0,c
  3797   0022B8  5037               	movf	(floorf@m+3)^0,w,c
  3798   0022BA  143D               	andwf	(floorf@u+3)^0,w,c
  3799   0022BC  6E31               	movwf	(??_floorf+3)^0,c
  3800   0022BE  502E               	movf	??_floorf^0,w,c
  3801   0022C0  102F               	iorwf	(??_floorf+1)^0,w,c
  3802   0022C2  1030               	iorwf	(??_floorf+2)^0,w,c
  3803   0022C4  1031               	iorwf	(??_floorf+3)^0,w,c
  3804   0022C6  A4D8               	btfss	status,2,c
  3805   0022C8  EF68  F011         	goto	u3501
  3806   0022CC  EF6A  F011         	goto	u3500
  3807   0022D0                     u3501:
  3808   0022D0  EF6C  F011         	goto	l3590
  3809   0022D4                     u3500:
  3810   0022D4  EF23  F011         	goto	l3582
  3811   0022D8                     l3590:
  3812   0022D8  C03A  F02E         	movff	floorf@u,??_floorf
  3813   0022DC  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  3814   0022E0  C03C  F030         	movff	floorf@u+2,??_floorf+2
  3815   0022E4  C03D  F031         	movff	floorf@u+3,??_floorf+3
  3816   0022E8  0E20               	movlw	32
  3817   0022EA  EF7C  F011         	goto	u3510
  3818   0022EE                     u3515:
  3819   0022EE  90D8               	bcf	status,0,c
  3820   0022F0  3231               	rrcf	(??_floorf+3)^0,f,c
  3821   0022F2  3230               	rrcf	(??_floorf+2)^0,f,c
  3822   0022F4  322F               	rrcf	(??_floorf+1)^0,f,c
  3823   0022F6  322E               	rrcf	??_floorf^0,f,c
  3824   0022F8                     u3510:
  3825   0022F8  2EE8               	decfsz	wreg,f,c
  3826   0022FA  EF77  F011         	goto	u3515
  3827   0022FE  502E               	movf	??_floorf^0,w,c
  3828   002300  102F               	iorwf	(??_floorf+1)^0,w,c
  3829   002302  1030               	iorwf	(??_floorf+2)^0,w,c
  3830   002304  1031               	iorwf	(??_floorf+3)^0,w,c
  3831   002306  B4D8               	btfsc	status,2,c
  3832   002308  EF88  F011         	goto	u3521
  3833   00230C  EF8A  F011         	goto	u3520
  3834   002310                     u3521:
  3835   002310  EF92  F011         	goto	l1257
  3836   002314                     u3520:
  3837   002314  5034               	movf	floorf@m^0,w,c
  3838   002316  263A               	addwf	floorf@u^0,f,c
  3839   002318  5035               	movf	(floorf@m+1)^0,w,c
  3840   00231A  223B               	addwfc	(floorf@u+1)^0,f,c
  3841   00231C  5036               	movf	(floorf@m+2)^0,w,c
  3842   00231E  223C               	addwfc	(floorf@u+2)^0,f,c
  3843   002320  5037               	movf	(floorf@m+3)^0,w,c
  3844   002322  223D               	addwfc	(floorf@u+3)^0,f,c
  3845   002324                     l1257:
  3846   002324  1C34               	comf	floorf@m^0,w,c
  3847   002326  6E2E               	movwf	??_floorf^0,c
  3848   002328  1C35               	comf	(floorf@m+1)^0,w,c
  3849   00232A  6E2F               	movwf	(??_floorf+1)^0,c
  3850   00232C  1C36               	comf	(floorf@m+2)^0,w,c
  3851   00232E  6E30               	movwf	(??_floorf+2)^0,c
  3852   002330  1C37               	comf	(floorf@m+3)^0,w,c
  3853   002332  6E31               	movwf	(??_floorf+3)^0,c
  3854   002334  502E               	movf	??_floorf^0,w,c
  3855   002336  163A               	andwf	floorf@u^0,f,c
  3856   002338  502F               	movf	(??_floorf+1)^0,w,c
  3857   00233A  163B               	andwf	(floorf@u+1)^0,f,c
  3858   00233C  5030               	movf	(??_floorf+2)^0,w,c
  3859   00233E  163C               	andwf	(floorf@u+2)^0,f,c
  3860   002340  5031               	movf	(??_floorf+3)^0,w,c
  3861   002342  163D               	andwf	(floorf@u+3)^0,f,c
  3862   002344  EFE8  F011         	goto	l3602
  3863   002348                     l3594:
  3864   002348  C03A  F02E         	movff	floorf@u,??_floorf
  3865   00234C  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  3866   002350  C03C  F030         	movff	floorf@u+2,??_floorf+2
  3867   002354  C03D  F031         	movff	floorf@u+3,??_floorf+3
  3868   002358  0E20               	movlw	32
  3869   00235A  EFB4  F011         	goto	u3530
  3870   00235E                     u3535:
  3871   00235E  90D8               	bcf	status,0,c
  3872   002360  3231               	rrcf	(??_floorf+3)^0,f,c
  3873   002362  3230               	rrcf	(??_floorf+2)^0,f,c
  3874   002364  322F               	rrcf	(??_floorf+1)^0,f,c
  3875   002366  322E               	rrcf	??_floorf^0,f,c
  3876   002368                     u3530:
  3877   002368  2EE8               	decfsz	wreg,f,c
  3878   00236A  EFAF  F011         	goto	u3535
  3879   00236E  502E               	movf	??_floorf^0,w,c
  3880   002370  102F               	iorwf	(??_floorf+1)^0,w,c
  3881   002372  1030               	iorwf	(??_floorf+2)^0,w,c
  3882   002374  1031               	iorwf	(??_floorf+3)^0,w,c
  3883   002376  A4D8               	btfss	status,2,c
  3884   002378  EFC0  F011         	goto	u3541
  3885   00237C  EFC2  F011         	goto	u3540
  3886   002380                     u3541:
  3887   002380  EFCC  F011         	goto	l3598
  3888   002384                     u3540:
  3889   002384  0E00               	movlw	0
  3890   002386  6E3A               	movwf	floorf@u^0,c
  3891   002388  0E00               	movlw	0
  3892   00238A  6E3B               	movwf	(floorf@u+1)^0,c
  3893   00238C  0E00               	movlw	0
  3894   00238E  6E3C               	movwf	(floorf@u+2)^0,c
  3895   002390  0E00               	movlw	0
  3896   002392  6E3D               	movwf	(floorf@u+3)^0,c
  3897   002394  EFE8  F011         	goto	l3602
  3898   002398                     l3598:
  3899   002398  90D8               	bcf	status,0,c
  3900   00239A  343A               	rlcf	floorf@u^0,w,c
  3901   00239C  6E2E               	movwf	??_floorf^0,c
  3902   00239E  343B               	rlcf	(floorf@u+1)^0,w,c
  3903   0023A0  6E2F               	movwf	(??_floorf+1)^0,c
  3904   0023A2  343C               	rlcf	(floorf@u+2)^0,w,c
  3905   0023A4  6E30               	movwf	(??_floorf+2)^0,c
  3906   0023A6  343D               	rlcf	(floorf@u+3)^0,w,c
  3907   0023A8  6E31               	movwf	(??_floorf+3)^0,c
  3908   0023AA  502E               	movf	??_floorf^0,w,c
  3909   0023AC  102F               	iorwf	(??_floorf+1)^0,w,c
  3910   0023AE  1030               	iorwf	(??_floorf+2)^0,w,c
  3911   0023B0  1031               	iorwf	(??_floorf+3)^0,w,c
  3912   0023B2  B4D8               	btfsc	status,2,c
  3913   0023B4  EFDE  F011         	goto	u3551
  3914   0023B8  EFE0  F011         	goto	u3550
  3915   0023BC                     u3551:
  3916   0023BC  EFE8  F011         	goto	l3602
  3917   0023C0                     u3550:
  3918   0023C0  0E00               	movlw	0
  3919   0023C2  6E3A               	movwf	floorf@u^0,c
  3920   0023C4  0E00               	movlw	0
  3921   0023C6  6E3B               	movwf	(floorf@u+1)^0,c
  3922   0023C8  0E80               	movlw	128
  3923   0023CA  6E3C               	movwf	(floorf@u+2)^0,c
  3924   0023CC  0EBF               	movlw	191
  3925   0023CE  6E3D               	movwf	(floorf@u+3)^0,c
  3926   0023D0                     l3602:
  3927   0023D0  C03A  F02A         	movff	floorf@u,?_floorf
  3928   0023D4  C03B  F02B         	movff	floorf@u+1,?_floorf+1
  3929   0023D8  C03C  F02C         	movff	floorf@u+2,?_floorf+2
  3930   0023DC  C03D  F02D         	movff	floorf@u+3,?_floorf+3
  3931   0023E0                     l1254:
  3932   0023E0  0012               	return		;funcret
  3933   0023E2                     __end_of_floorf:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function ___fpclassifyf *****************
  3937 ;; Defined at:
  3938 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  x               4    0[COMRAM] float 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  u               4   10[COMRAM] struct .
  3943 ;;  e               2    8[COMRAM] int 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  2    0[COMRAM] int 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3953 ;;      Params:         4       0       0       0       0       0       0       0       0
  3954 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3955 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3956 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3957 ;;Total ram usage:       14 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_efgtoa
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text13
  3967   002A50                     __ptext13:
  3968                           	callstack 0
  3969   002A50                     ___fpclassifyf:
  3970                           	callstack 26
  3971   002A50  C0AB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3972   002A54  C0AC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3973   002A58  C0AD  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3974   002A5C  C0AE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3975   002A60  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3976   002A64  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3977   002A68  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3978   002A6C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3979   002A70  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3980   002A74  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3981   002A78  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3982   002A7C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3983   002A80  0E18               	movlw	24
  3984   002A82  EF48  F015         	goto	u3370
  3985   002A86                     u3375:
  3986   002A86  90D8               	bcf	status,0,c
  3987   002A88  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3988   002A8A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3989   002A8C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3990   002A8E  3205               	rrcf	??___fpclassifyf^0,f,c
  3991   002A90                     u3370:
  3992   002A90  2EE8               	decfsz	wreg,f,c
  3993   002A92  EF43  F015         	goto	u3375
  3994   002A96  5005               	movf	??___fpclassifyf^0,w,c
  3995   002A98  6E09               	movwf	___fpclassifyf@e^0,c
  3996   002A9A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3997   002A9C  5009               	movf	___fpclassifyf@e^0,w,c
  3998   002A9E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3999   002AA0  A4D8               	btfss	status,2,c
  4000   002AA2  EF55  F015         	goto	u3381
  4001   002AA6  EF57  F015         	goto	u3380
  4002   002AAA                     u3381:
  4003   002AAA  EF77  F015         	goto	l3560
  4004   002AAE                     u3380:
  4005   002AAE  90D8               	bcf	status,0,c
  4006   002AB0  340B               	rlcf	___fpclassifyf@u^0,w,c
  4007   002AB2  6E05               	movwf	??___fpclassifyf^0,c
  4008   002AB4  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4009   002AB6  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4010   002AB8  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4011   002ABA  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4012   002ABC  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4013   002ABE  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4014   002AC0  5005               	movf	??___fpclassifyf^0,w,c
  4015   002AC2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4016   002AC4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4017   002AC6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4018   002AC8  A4D8               	btfss	status,2,c
  4019   002ACA  EF69  F015         	goto	u3391
  4020   002ACE  EF6B  F015         	goto	u3390
  4021   002AD2                     u3391:
  4022   002AD2  EF71  F015         	goto	l3556
  4023   002AD6                     u3390:
  4024   002AD6  0E00               	movlw	0
  4025   002AD8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4026   002ADA  0E02               	movlw	2
  4027   002ADC  6E01               	movwf	?___fpclassifyf^0,c
  4028   002ADE  EFA6  F015         	goto	l1222
  4029   002AE2                     l3556:
  4030   002AE2  0E00               	movlw	0
  4031   002AE4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4032   002AE6  0E03               	movlw	3
  4033   002AE8  6E01               	movwf	?___fpclassifyf^0,c
  4034   002AEA  EFA6  F015         	goto	l1222
  4035   002AEE                     l3560:
  4036   002AEE  2809               	incf	___fpclassifyf@e^0,w,c
  4037   002AF0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4038   002AF2  A4D8               	btfss	status,2,c
  4039   002AF4  EF7E  F015         	goto	u3401
  4040   002AF8  EF80  F015         	goto	u3400
  4041   002AFC                     u3401:
  4042   002AFC  EFA2  F015         	goto	l3566
  4043   002B00                     u3400:
  4044   002B00  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4045   002B04  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4046   002B08  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4047   002B0C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4048   002B10  0E09               	movlw	9
  4049   002B12                     u3415:
  4050   002B12  90D8               	bcf	status,0,c
  4051   002B14  3605               	rlcf	??___fpclassifyf^0,f,c
  4052   002B16  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4053   002B18  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4054   002B1A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4055   002B1C  2EE8               	decfsz	wreg,f,c
  4056   002B1E  EF89  F015         	goto	u3415
  4057   002B22  5005               	movf	??___fpclassifyf^0,w,c
  4058   002B24  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4059   002B26  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4060   002B28  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4061   002B2A  B4D8               	btfsc	status,2,c
  4062   002B2C  EF9A  F015         	goto	u3421
  4063   002B30  EF9D  F015         	goto	u3420
  4064   002B34                     u3421:
  4065   002B34  0E01               	movlw	1
  4066   002B36  EF9E  F015         	goto	u3430
  4067   002B3A                     u3420:
  4068   002B3A  0E00               	movlw	0
  4069   002B3C                     u3430:
  4070   002B3C  6E01               	movwf	?___fpclassifyf^0,c
  4071   002B3E  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4072   002B40  EFA6  F015         	goto	l1222
  4073   002B44                     l3566:
  4074   002B44  0E00               	movlw	0
  4075   002B46  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4076   002B48  0E04               	movlw	4
  4077   002B4A  6E01               	movwf	?___fpclassifyf^0,c
  4078   002B4C                     l1222:
  4079   002B4C  0012               	return		;funcret
  4080   002B4E                     __end_of___fpclassifyf:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function ___fltol *****************
  4084 ;; Defined at:
  4085 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  f1              4    0[COMRAM] int 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  exp1            1    9[COMRAM] unsigned char 
  4090 ;;  sign1           1    8[COMRAM] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  4    0[COMRAM] long 
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4100 ;;      Params:         4       0       0       0       0       0       0       0       0
  4101 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4102 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4103 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4104 ;;Total ram usage:       10 bytes
  4105 ;; Hardware stack levels used: 1
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_efgtoa
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text14
  4114   002846                     __ptext14:
  4115                           	callstack 0
  4116   002846                     ___fltol:
  4117                           	callstack 26
  4118   002846  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4119   002848  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4120   00284A  6E0A               	movwf	___fltol@exp1^0,c
  4121   00284C  500A               	movf	___fltol@exp1^0,w,c
  4122   00284E  A4D8               	btfss	status,2,c
  4123   002850  EF2C  F014         	goto	u3281
  4124   002854  EF2E  F014         	goto	u3280
  4125   002858                     u3281:
  4126   002858  EF38  F014         	goto	l3496
  4127   00285C                     u3280:
  4128   00285C                     l3492:
  4129   00285C  0E00               	movlw	0
  4130   00285E  6E01               	movwf	?___fltol^0,c
  4131   002860  0E00               	movlw	0
  4132   002862  6E02               	movwf	(?___fltol+1)^0,c
  4133   002864  0E00               	movlw	0
  4134   002866  6E03               	movwf	(?___fltol+2)^0,c
  4135   002868  0E00               	movlw	0
  4136   00286A  6E04               	movwf	(?___fltol+3)^0,c
  4137   00286C  EFA5  F014         	goto	l707
  4138   002870                     l3496:
  4139   002870  C001  F005         	movff	___fltol@f1,??___fltol
  4140   002874  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4141   002878  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4142   00287C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4143   002880  0E20               	movlw	32
  4144   002882  EF48  F014         	goto	u3290
  4145   002886                     u3295:
  4146   002886  90D8               	bcf	status,0,c
  4147   002888  3208               	rrcf	(??___fltol+3)^0,f,c
  4148   00288A  3207               	rrcf	(??___fltol+2)^0,f,c
  4149   00288C  3206               	rrcf	(??___fltol+1)^0,f,c
  4150   00288E  3205               	rrcf	??___fltol^0,f,c
  4151   002890                     u3290:
  4152   002890  2EE8               	decfsz	wreg,f,c
  4153   002892  EF43  F014         	goto	u3295
  4154   002896  5005               	movf	??___fltol^0,w,c
  4155   002898  6E09               	movwf	___fltol@sign1^0,c
  4156   00289A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4157   00289C  0EFF               	movlw	255
  4158   00289E  1601               	andwf	___fltol@f1^0,f,c
  4159   0028A0  0EFF               	movlw	255
  4160   0028A2  1602               	andwf	(___fltol@f1+1)^0,f,c
  4161   0028A4  0EFF               	movlw	255
  4162   0028A6  1603               	andwf	(___fltol@f1+2)^0,f,c
  4163   0028A8  0E00               	movlw	0
  4164   0028AA  1604               	andwf	(___fltol@f1+3)^0,f,c
  4165   0028AC  0E96               	movlw	150
  4166   0028AE  5E0A               	subwf	___fltol@exp1^0,f,c
  4167   0028B0  BE0A               	btfsc	___fltol@exp1^0,7,c
  4168   0028B2  EF5F  F014         	goto	u3300
  4169   0028B6  EF5D  F014         	goto	u3301
  4170   0028BA                     u3301:
  4171   0028BA  EF75  F014         	goto	l3516
  4172   0028BE                     u3300:
  4173   0028BE  500A               	movf	___fltol@exp1^0,w,c
  4174   0028C0  0A80               	xorlw	128
  4175   0028C2  0F97               	addlw	151
  4176   0028C4  B0D8               	btfsc	status,0,c
  4177   0028C6  EF67  F014         	goto	u3311
  4178   0028CA  EF69  F014         	goto	u3310
  4179   0028CE                     u3311:
  4180   0028CE  EF6B  F014         	goto	l3512
  4181   0028D2                     u3310:
  4182   0028D2  EF2E  F014         	goto	l3492
  4183   0028D6                     l3512:
  4184   0028D6  90D8               	bcf	status,0,c
  4185   0028D8  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4186   0028DA  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4187   0028DC  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4188   0028DE  3201               	rrcf	___fltol@f1^0,f,c
  4189   0028E0  3E0A               	incfsz	___fltol@exp1^0,f,c
  4190   0028E2  EF6B  F014         	goto	l3512
  4191   0028E6  EF8D  F014         	goto	l3526
  4192   0028EA                     l3516:
  4193   0028EA  0E1F               	movlw	31
  4194   0028EC  640A               	cpfsgt	___fltol@exp1^0,c
  4195   0028EE  EF7B  F014         	goto	u3321
  4196   0028F2  EF7D  F014         	goto	u3320
  4197   0028F6                     u3321:
  4198   0028F6  EF85  F014         	goto	l3524
  4199   0028FA                     u3320:
  4200   0028FA  EF2E  F014         	goto	l3492
  4201   0028FE                     l3522:
  4202   0028FE  90D8               	bcf	status,0,c
  4203   002900  3601               	rlcf	___fltol@f1^0,f,c
  4204   002902  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4205   002904  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4206   002906  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4207   002908  060A               	decf	___fltol@exp1^0,f,c
  4208   00290A                     l3524:
  4209   00290A  500A               	movf	___fltol@exp1^0,w,c
  4210   00290C  A4D8               	btfss	status,2,c
  4211   00290E  EF8B  F014         	goto	u3331
  4212   002912  EF8D  F014         	goto	u3330
  4213   002916                     u3331:
  4214   002916  EF7F  F014         	goto	l3522
  4215   00291A                     u3330:
  4216   00291A                     l3526:
  4217   00291A  5009               	movf	___fltol@sign1^0,w,c
  4218   00291C  B4D8               	btfsc	status,2,c
  4219   00291E  EF93  F014         	goto	u3341
  4220   002922  EF95  F014         	goto	u3340
  4221   002926                     u3341:
  4222   002926  EF9D  F014         	goto	l3530
  4223   00292A                     u3340:
  4224   00292A  1E04               	comf	(___fltol@f1+3)^0,f,c
  4225   00292C  1E03               	comf	(___fltol@f1+2)^0,f,c
  4226   00292E  1E02               	comf	(___fltol@f1+1)^0,f,c
  4227   002930  6C01               	negf	___fltol@f1^0,c
  4228   002932  0E00               	movlw	0
  4229   002934  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4230   002936  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4231   002938  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4232   00293A                     l3530:
  4233   00293A  C001  F001         	movff	___fltol@f1,?___fltol
  4234   00293E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4235   002942  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4236   002946  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4237   00294A                     l707:
  4238   00294A  0012               	return		;funcret
  4239   00294C                     __end_of___fltol:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function ___flsub *****************
  4243 ;; Defined at:
  4244 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  b               4   46[COMRAM] long 
  4247 ;;  a               4   50[COMRAM] long 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  4   46[COMRAM] long 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4259 ;;      Params:         8       0       0       0       0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4262 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4263 ;;Total ram usage:        8 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 1
  4266 ;; This function calls:
  4267 ;;		___fladd
  4268 ;; This function is called by:
  4269 ;;		_efgtoa
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text15
  4274   002FFC                     __ptext15:
  4275                           	callstack 0
  4276   002FFC                     ___flsub:
  4277                           	callstack 25
  4278   002FFC  0E00               	movlw	0
  4279   002FFE  1A33               	xorwf	___flsub@a^0,f,c
  4280   003000  0E00               	movlw	0
  4281   003002  1A34               	xorwf	(___flsub@a+1)^0,f,c
  4282   003004  0E00               	movlw	0
  4283   003006  1A35               	xorwf	(___flsub@a+2)^0,f,c
  4284   003008  0E80               	movlw	128
  4285   00300A  1A36               	xorwf	(___flsub@a+3)^0,f,c
  4286   00300C  C02F  F001         	movff	___flsub@b,___fladd@b
  4287   003010  C030  F002         	movff	___flsub@b+1,___fladd@b+1
  4288   003014  C031  F003         	movff	___flsub@b+2,___fladd@b+2
  4289   003018  C032  F004         	movff	___flsub@b+3,___fladd@b+3
  4290   00301C  C033  F005         	movff	___flsub@a,___fladd@a
  4291   003020  C034  F006         	movff	___flsub@a+1,___fladd@a+1
  4292   003024  C035  F007         	movff	___flsub@a+2,___fladd@a+2
  4293   003028  C036  F008         	movff	___flsub@a+3,___fladd@a+3
  4294   00302C  EC1B  F009         	call	___fladd	;wreg free
  4295   003030  C001  F02F         	movff	?___fladd,?___flsub
  4296   003034  C002  F030         	movff	?___fladd+1,?___flsub+1
  4297   003038  C003  F031         	movff	?___fladd+2,?___flsub+2
  4298   00303C  C004  F032         	movff	?___fladd+3,?___flsub+3
  4299   003040  0012               	return		;funcret
  4300   003042                     __end_of___flsub:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function ___fladd *****************
  4304 ;; Defined at:
  4305 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  b               4    0[COMRAM] long 
  4308 ;;  a               4    4[COMRAM] long 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  grs             1   15[COMRAM] unsigned char 
  4311 ;;  bexp            1   14[COMRAM] unsigned char 
  4312 ;;  aexp            1   13[COMRAM] unsigned char 
  4313 ;;  signs           1   12[COMRAM] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  4    0[COMRAM] unsigned char 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4323 ;;      Params:         8       0       0       0       0       0       0       0       0
  4324 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4325 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4326 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:       16 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;;		___flsub
  4334 ;;		_efgtoa
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text16
  4339   001236                     __ptext16:
  4340                           	callstack 0
  4341   001236                     ___fladd:
  4342                           	callstack 25
  4343   001236  5004               	movf	(___fladd@b+3)^0,w,c
  4344   001238  0B80               	andlw	128
  4345   00123A  6E0D               	movwf	___fladd@signs^0,c
  4346   00123C  5004               	movf	(___fladd@b+3)^0,w,c
  4347   00123E  2404               	addwf	(___fladd@b+3)^0,w,c
  4348   001240  6E0F               	movwf	___fladd@bexp^0,c
  4349   001242  AE03               	btfss	(___fladd@b+2)^0,7,c
  4350   001244  EF26  F009         	goto	u2371
  4351   001248  EF28  F009         	goto	u2370
  4352   00124C                     u2371:
  4353   00124C  EF29  F009         	goto	l2960
  4354   001250                     u2370:
  4355   001250  800F               	bsf	___fladd@bexp^0,0,c
  4356   001252                     l2960:
  4357   001252  500F               	movf	___fladd@bexp^0,w,c
  4358   001254  B4D8               	btfsc	status,2,c
  4359   001256  EF2F  F009         	goto	u2381
  4360   00125A  EF31  F009         	goto	u2380
  4361   00125E                     u2381:
  4362   00125E  EF46  F009         	goto	l2970
  4363   001262                     u2380:
  4364   001262  280F               	incf	___fladd@bexp^0,w,c
  4365   001264  A4D8               	btfss	status,2,c
  4366   001266  EF37  F009         	goto	u2391
  4367   00126A  EF39  F009         	goto	u2390
  4368   00126E                     u2391:
  4369   00126E  EF41  F009         	goto	l2966
  4370   001272                     u2390:
  4371   001272  0E00               	movlw	0
  4372   001274  6E01               	movwf	___fladd@b^0,c
  4373   001276  0E00               	movlw	0
  4374   001278  6E02               	movwf	(___fladd@b+1)^0,c
  4375   00127A  0E00               	movlw	0
  4376   00127C  6E03               	movwf	(___fladd@b+2)^0,c
  4377   00127E  0E00               	movlw	0
  4378   001280  6E04               	movwf	(___fladd@b+3)^0,c
  4379   001282                     l2966:
  4380   001282  8E03               	bsf	(___fladd@b+2)^0,7,c
  4381   001284  0E00               	movlw	0
  4382   001286  6E04               	movwf	(___fladd@b+3)^0,c
  4383   001288  EF4E  F009         	goto	l2972
  4384   00128C                     l2970:
  4385   00128C  0E00               	movlw	0
  4386   00128E  6E01               	movwf	___fladd@b^0,c
  4387   001290  0E00               	movlw	0
  4388   001292  6E02               	movwf	(___fladd@b+1)^0,c
  4389   001294  0E00               	movlw	0
  4390   001296  6E03               	movwf	(___fladd@b+2)^0,c
  4391   001298  0E00               	movlw	0
  4392   00129A  6E04               	movwf	(___fladd@b+3)^0,c
  4393   00129C                     l2972:
  4394   00129C  5008               	movf	(___fladd@a+3)^0,w,c
  4395   00129E  0B80               	andlw	128
  4396   0012A0  6E0E               	movwf	___fladd@aexp^0,c
  4397   0012A2  500D               	movf	___fladd@signs^0,w,c
  4398   0012A4  180E               	xorwf	___fladd@aexp^0,w,c
  4399   0012A6  B4D8               	btfsc	status,2,c
  4400   0012A8  EF58  F009         	goto	u2401
  4401   0012AC  EF5A  F009         	goto	u2400
  4402   0012B0                     u2401:
  4403   0012B0  EF5B  F009         	goto	l2978
  4404   0012B4                     u2400:
  4405   0012B4  8C0D               	bsf	___fladd@signs^0,6,c
  4406   0012B6                     l2978:
  4407   0012B6  5008               	movf	(___fladd@a+3)^0,w,c
  4408   0012B8  2408               	addwf	(___fladd@a+3)^0,w,c
  4409   0012BA  6E0E               	movwf	___fladd@aexp^0,c
  4410   0012BC  AE07               	btfss	(___fladd@a+2)^0,7,c
  4411   0012BE  EF63  F009         	goto	u2411
  4412   0012C2  EF65  F009         	goto	u2410
  4413   0012C6                     u2411:
  4414   0012C6  EF66  F009         	goto	l2984
  4415   0012CA                     u2410:
  4416   0012CA  800E               	bsf	___fladd@aexp^0,0,c
  4417   0012CC                     l2984:
  4418   0012CC  500E               	movf	___fladd@aexp^0,w,c
  4419   0012CE  B4D8               	btfsc	status,2,c
  4420   0012D0  EF6C  F009         	goto	u2421
  4421   0012D4  EF6E  F009         	goto	u2420
  4422   0012D8                     u2421:
  4423   0012D8  EF83  F009         	goto	l2994
  4424   0012DC                     u2420:
  4425   0012DC  280E               	incf	___fladd@aexp^0,w,c
  4426   0012DE  A4D8               	btfss	status,2,c
  4427   0012E0  EF74  F009         	goto	u2431
  4428   0012E4  EF76  F009         	goto	u2430
  4429   0012E8                     u2431:
  4430   0012E8  EF7E  F009         	goto	l2990
  4431   0012EC                     u2430:
  4432   0012EC  0E00               	movlw	0
  4433   0012EE  6E05               	movwf	___fladd@a^0,c
  4434   0012F0  0E00               	movlw	0
  4435   0012F2  6E06               	movwf	(___fladd@a+1)^0,c
  4436   0012F4  0E00               	movlw	0
  4437   0012F6  6E07               	movwf	(___fladd@a+2)^0,c
  4438   0012F8  0E00               	movlw	0
  4439   0012FA  6E08               	movwf	(___fladd@a+3)^0,c
  4440   0012FC                     l2990:
  4441   0012FC  8E07               	bsf	(___fladd@a+2)^0,7,c
  4442   0012FE  0E00               	movlw	0
  4443   001300  6E08               	movwf	(___fladd@a+3)^0,c
  4444   001302  EF8B  F009         	goto	l2996
  4445   001306                     l2994:
  4446   001306  0E00               	movlw	0
  4447   001308  6E05               	movwf	___fladd@a^0,c
  4448   00130A  0E00               	movlw	0
  4449   00130C  6E06               	movwf	(___fladd@a+1)^0,c
  4450   00130E  0E00               	movlw	0
  4451   001310  6E07               	movwf	(___fladd@a+2)^0,c
  4452   001312  0E00               	movlw	0
  4453   001314  6E08               	movwf	(___fladd@a+3)^0,c
  4454   001316                     l2996:
  4455   001316  500F               	movf	___fladd@bexp^0,w,c
  4456   001318  5C0E               	subwf	___fladd@aexp^0,w,c
  4457   00131A  B0D8               	btfsc	status,0,c
  4458   00131C  EF92  F009         	goto	u2441
  4459   001320  EF94  F009         	goto	u2440
  4460   001324                     u2441:
  4461   001324  EFBB  F009         	goto	l3032
  4462   001328                     u2440:
  4463   001328  AC0D               	btfss	___fladd@signs^0,6,c
  4464   00132A  EF99  F009         	goto	u2451
  4465   00132E  EF9B  F009         	goto	u2450
  4466   001332                     u2451:
  4467   001332  EF9D  F009         	goto	l3002
  4468   001336                     u2450:
  4469   001336  0E80               	movlw	128
  4470   001338  1A0D               	xorwf	___fladd@signs^0,f,c
  4471   00133A                     l3002:
  4472   00133A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4473   00133E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4474   001342  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4475   001346  C001  F010         	movff	___fladd@b,___fladd@grs
  4476   00134A  C005  F001         	movff	___fladd@a,___fladd@b
  4477   00134E  C010  F005         	movff	___fladd@grs,___fladd@a
  4478   001352  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4479   001356  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4480   00135A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4481   00135E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4482   001362  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4483   001366  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4484   00136A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4485   00136E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4486   001372  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4487   001376                     l3032:
  4488   001376  0E00               	movlw	0
  4489   001378  6E10               	movwf	___fladd@grs^0,c
  4490   00137A  500F               	movf	___fladd@bexp^0,w,c
  4491   00137C  C00E  F009         	movff	___fladd@aexp,??___fladd
  4492   001380  6A0A               	clrf	(??___fladd+1)^0,c
  4493   001382  5E09               	subwf	??___fladd^0,f,c
  4494   001384  0E00               	movlw	0
  4495   001386  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4496   001388  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4497   00138A  EFD0  F009         	goto	u2461
  4498   00138E  500A               	movf	(??___fladd+1)^0,w,c
  4499   001390  E109               	bnz	u2460
  4500   001392  0E1A               	movlw	26
  4501   001394  5C09               	subwf	??___fladd^0,w,c
  4502   001396  A0D8               	btfss	status,0,c
  4503   001398  EFD0  F009         	goto	u2461
  4504   00139C  EFD2  F009         	goto	u2460
  4505   0013A0                     u2461:
  4506   0013A0  EF09  F00A         	goto	l939
  4507   0013A4                     u2460:
  4508   0013A4  5001               	movf	___fladd@b^0,w,c
  4509   0013A6  1002               	iorwf	(___fladd@b+1)^0,w,c
  4510   0013A8  1003               	iorwf	(___fladd@b+2)^0,w,c
  4511   0013AA  1004               	iorwf	(___fladd@b+3)^0,w,c
  4512   0013AC  A4D8               	btfss	status,2,c
  4513   0013AE  EFDB  F009         	goto	u2471
  4514   0013B2  EFDE  F009         	goto	u2470
  4515   0013B6                     u2471:
  4516   0013B6  0E01               	movlw	1
  4517   0013B8  EFDF  F009         	goto	u2480
  4518   0013BC                     u2470:
  4519   0013BC  0E00               	movlw	0
  4520   0013BE                     u2480:
  4521   0013BE  6E10               	movwf	___fladd@grs^0,c
  4522   0013C0  0E00               	movlw	0
  4523   0013C2  6E01               	movwf	___fladd@b^0,c
  4524   0013C4  0E00               	movlw	0
  4525   0013C6  6E02               	movwf	(___fladd@b+1)^0,c
  4526   0013C8  0E00               	movlw	0
  4527   0013CA  6E03               	movwf	(___fladd@b+2)^0,c
  4528   0013CC  0E00               	movlw	0
  4529   0013CE  6E04               	movwf	(___fladd@b+3)^0,c
  4530   0013D0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4531   0013D4  EF12  F00A         	goto	l938
  4532   0013D8                     l940:
  4533   0013D8  A010               	btfss	___fladd@grs^0,0,c
  4534   0013DA  EFF1  F009         	goto	u2491
  4535   0013DE  EFF3  F009         	goto	u2490
  4536   0013E2                     u2491:
  4537   0013E2  EFF9  F009         	goto	l3044
  4538   0013E6                     u2490:
  4539   0013E6  90D8               	bcf	status,0,c
  4540   0013E8  3010               	rrcf	___fladd@grs^0,w,c
  4541   0013EA  0901               	iorlw	1
  4542   0013EC  6E10               	movwf	___fladd@grs^0,c
  4543   0013EE  EFFB  F009         	goto	l3046
  4544   0013F2                     l3044:
  4545   0013F2  90D8               	bcf	status,0,c
  4546   0013F4  3210               	rrcf	___fladd@grs^0,f,c
  4547   0013F6                     l3046:
  4548   0013F6  A001               	btfss	___fladd@b^0,0,c
  4549   0013F8  EF00  F00A         	goto	u2501
  4550   0013FC  EF02  F00A         	goto	u2500
  4551   001400                     u2501:
  4552   001400  EF03  F00A         	goto	l3050
  4553   001404                     u2500:
  4554   001404  8E10               	bsf	___fladd@grs^0,7,c
  4555   001406                     l3050:
  4556   001406  3404               	rlcf	(___fladd@b+3)^0,w,c
  4557   001408  3204               	rrcf	(___fladd@b+3)^0,f,c
  4558   00140A  3203               	rrcf	(___fladd@b+2)^0,f,c
  4559   00140C  3202               	rrcf	(___fladd@b+1)^0,f,c
  4560   00140E  3201               	rrcf	___fladd@b^0,f,c
  4561   001410  2A0F               	incf	___fladd@bexp^0,f,c
  4562   001412                     l939:
  4563   001412  500E               	movf	___fladd@aexp^0,w,c
  4564   001414  5C0F               	subwf	___fladd@bexp^0,w,c
  4565   001416  A0D8               	btfss	status,0,c
  4566   001418  EF10  F00A         	goto	u2511
  4567   00141C  EF12  F00A         	goto	u2510
  4568   001420                     u2511:
  4569   001420  EFEC  F009         	goto	l940
  4570   001424                     u2510:
  4571   001424                     l938:
  4572   001424  BC0D               	btfsc	___fladd@signs^0,6,c
  4573   001426  EF17  F00A         	goto	u2521
  4574   00142A  EF19  F00A         	goto	u2520
  4575   00142E                     u2521:
  4576   00142E  EF59  F00A         	goto	l3078
  4577   001432                     u2520:
  4578   001432  500F               	movf	___fladd@bexp^0,w,c
  4579   001434  A4D8               	btfss	status,2,c
  4580   001436  EF1F  F00A         	goto	u2531
  4581   00143A  EF21  F00A         	goto	u2530
  4582   00143E                     u2531:
  4583   00143E  EF2B  F00A         	goto	l3060
  4584   001442                     u2530:
  4585   001442  0E00               	movlw	0
  4586   001444  6E01               	movwf	?___fladd^0,c
  4587   001446  0E00               	movlw	0
  4588   001448  6E02               	movwf	(?___fladd+1)^0,c
  4589   00144A  0E00               	movlw	0
  4590   00144C  6E03               	movwf	(?___fladd+2)^0,c
  4591   00144E  0E00               	movlw	0
  4592   001450  6E04               	movwf	(?___fladd+3)^0,c
  4593   001452  EF7A  F00B         	goto	l947
  4594   001456                     l3060:
  4595   001456  5005               	movf	___fladd@a^0,w,c
  4596   001458  2601               	addwf	___fladd@b^0,f,c
  4597   00145A  5006               	movf	(___fladd@a+1)^0,w,c
  4598   00145C  2202               	addwfc	(___fladd@b+1)^0,f,c
  4599   00145E  5007               	movf	(___fladd@a+2)^0,w,c
  4600   001460  2203               	addwfc	(___fladd@b+2)^0,f,c
  4601   001462  5008               	movf	(___fladd@a+3)^0,w,c
  4602   001464  2204               	addwfc	(___fladd@b+3)^0,f,c
  4603   001466  A004               	btfss	(___fladd@b+3)^0,0,c
  4604   001468  EF38  F00A         	goto	u2541
  4605   00146C  EF3A  F00A         	goto	u2540
  4606   001470                     u2541:
  4607   001470  EFE6  F00A         	goto	l3114
  4608   001474                     u2540:
  4609   001474  A010               	btfss	___fladd@grs^0,0,c
  4610   001476  EF3F  F00A         	goto	u2551
  4611   00147A  EF41  F00A         	goto	u2550
  4612   00147E                     u2551:
  4613   00147E  EF47  F00A         	goto	l3068
  4614   001482                     u2550:
  4615   001482  90D8               	bcf	status,0,c
  4616   001484  3010               	rrcf	___fladd@grs^0,w,c
  4617   001486  0901               	iorlw	1
  4618   001488  6E10               	movwf	___fladd@grs^0,c
  4619   00148A  EF49  F00A         	goto	l3070
  4620   00148E                     l3068:
  4621   00148E  90D8               	bcf	status,0,c
  4622   001490  3210               	rrcf	___fladd@grs^0,f,c
  4623   001492                     l3070:
  4624   001492  A001               	btfss	___fladd@b^0,0,c
  4625   001494  EF4E  F00A         	goto	u2561
  4626   001498  EF50  F00A         	goto	u2560
  4627   00149C                     u2561:
  4628   00149C  EF51  F00A         	goto	l3074
  4629   0014A0                     u2560:
  4630   0014A0  8E10               	bsf	___fladd@grs^0,7,c
  4631   0014A2                     l3074:
  4632   0014A2  3404               	rlcf	(___fladd@b+3)^0,w,c
  4633   0014A4  3204               	rrcf	(___fladd@b+3)^0,f,c
  4634   0014A6  3203               	rrcf	(___fladd@b+2)^0,f,c
  4635   0014A8  3202               	rrcf	(___fladd@b+1)^0,f,c
  4636   0014AA  3201               	rrcf	___fladd@b^0,f,c
  4637   0014AC  2A0F               	incf	___fladd@bexp^0,f,c
  4638   0014AE  EFE6  F00A         	goto	l3114
  4639   0014B2                     l3078:
  4640   0014B2  5005               	movf	___fladd@a^0,w,c
  4641   0014B4  5C01               	subwf	___fladd@b^0,w,c
  4642   0014B6  5006               	movf	(___fladd@a+1)^0,w,c
  4643   0014B8  5802               	subwfb	(___fladd@b+1)^0,w,c
  4644   0014BA  5007               	movf	(___fladd@a+2)^0,w,c
  4645   0014BC  5803               	subwfb	(___fladd@b+2)^0,w,c
  4646   0014BE  5004               	movf	(___fladd@b+3)^0,w,c
  4647   0014C0  0A80               	xorlw	128
  4648   0014C2  6E09               	movwf	??___fladd^0,c
  4649   0014C4  5008               	movf	(___fladd@a+3)^0,w,c
  4650   0014C6  0A80               	xorlw	128
  4651   0014C8  5809               	subwfb	??___fladd^0,w,c
  4652   0014CA  B0D8               	btfsc	status,0,c
  4653   0014CC  EF6A  F00A         	goto	u2571
  4654   0014D0  EF6C  F00A         	goto	u2570
  4655   0014D4                     u2571:
  4656   0014D4  EF97  F00A         	goto	l3088
  4657   0014D8                     u2570:
  4658   0014D8  5001               	movf	___fladd@b^0,w,c
  4659   0014DA  5C05               	subwf	___fladd@a^0,w,c
  4660   0014DC  6E09               	movwf	??___fladd^0,c
  4661   0014DE  5002               	movf	(___fladd@b+1)^0,w,c
  4662   0014E0  5806               	subwfb	(___fladd@a+1)^0,w,c
  4663   0014E2  6E0A               	movwf	(??___fladd+1)^0,c
  4664   0014E4  5003               	movf	(___fladd@b+2)^0,w,c
  4665   0014E6  5807               	subwfb	(___fladd@a+2)^0,w,c
  4666   0014E8  6E0B               	movwf	(??___fladd+2)^0,c
  4667   0014EA  5004               	movf	(___fladd@b+3)^0,w,c
  4668   0014EC  5808               	subwfb	(___fladd@a+3)^0,w,c
  4669   0014EE  6E0C               	movwf	(??___fladd+3)^0,c
  4670   0014F0  0EFF               	movlw	255
  4671   0014F2  2409               	addwf	??___fladd^0,w,c
  4672   0014F4  6E01               	movwf	___fladd@b^0,c
  4673   0014F6  0EFF               	movlw	255
  4674   0014F8  200A               	addwfc	(??___fladd+1)^0,w,c
  4675   0014FA  6E02               	movwf	(___fladd@b+1)^0,c
  4676   0014FC  0EFF               	movlw	255
  4677   0014FE  200B               	addwfc	(??___fladd+2)^0,w,c
  4678   001500  6E03               	movwf	(___fladd@b+2)^0,c
  4679   001502  0EFF               	movlw	255
  4680   001504  200C               	addwfc	(??___fladd+3)^0,w,c
  4681   001506  6E04               	movwf	(___fladd@b+3)^0,c
  4682   001508  0E80               	movlw	128
  4683   00150A  1A0D               	xorwf	___fladd@signs^0,f,c
  4684   00150C  6C10               	negf	___fladd@grs^0,c
  4685   00150E  5010               	movf	___fladd@grs^0,w,c
  4686   001510  A4D8               	btfss	status,2,c
  4687   001512  EF8D  F00A         	goto	u2581
  4688   001516  EF8F  F00A         	goto	u2580
  4689   00151A                     u2581:
  4690   00151A  EF9F  F00A         	goto	l955
  4691   00151E                     u2580:
  4692   00151E  0E01               	movlw	1
  4693   001520  2601               	addwf	___fladd@b^0,f,c
  4694   001522  0E00               	movlw	0
  4695   001524  2202               	addwfc	(___fladd@b+1)^0,f,c
  4696   001526  2203               	addwfc	(___fladd@b+2)^0,f,c
  4697   001528  2204               	addwfc	(___fladd@b+3)^0,f,c
  4698   00152A  EF9F  F00A         	goto	l955
  4699   00152E                     l3088:
  4700   00152E  5005               	movf	___fladd@a^0,w,c
  4701   001530  5E01               	subwf	___fladd@b^0,f,c
  4702   001532  5006               	movf	(___fladd@a+1)^0,w,c
  4703   001534  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4704   001536  5007               	movf	(___fladd@a+2)^0,w,c
  4705   001538  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4706   00153A  5008               	movf	(___fladd@a+3)^0,w,c
  4707   00153C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4708   00153E                     l955:
  4709   00153E  5001               	movf	___fladd@b^0,w,c
  4710   001540  1002               	iorwf	(___fladd@b+1)^0,w,c
  4711   001542  1003               	iorwf	(___fladd@b+2)^0,w,c
  4712   001544  1004               	iorwf	(___fladd@b+3)^0,w,c
  4713   001546  A4D8               	btfss	status,2,c
  4714   001548  EFA8  F00A         	goto	u2591
  4715   00154C  EFAA  F00A         	goto	u2590
  4716   001550                     u2591:
  4717   001550  EFDF  F00A         	goto	l3112
  4718   001554                     u2590:
  4719   001554  5010               	movf	___fladd@grs^0,w,c
  4720   001556  A4D8               	btfss	status,2,c
  4721   001558  EFB0  F00A         	goto	u2601
  4722   00155C  EFB2  F00A         	goto	u2600
  4723   001560                     u2601:
  4724   001560  EFDF  F00A         	goto	l3112
  4725   001564                     u2600:
  4726   001564  0E00               	movlw	0
  4727   001566  6E01               	movwf	?___fladd^0,c
  4728   001568  0E00               	movlw	0
  4729   00156A  6E02               	movwf	(?___fladd+1)^0,c
  4730   00156C  0E00               	movlw	0
  4731   00156E  6E03               	movwf	(?___fladd+2)^0,c
  4732   001570  0E00               	movlw	0
  4733   001572  6E04               	movwf	(?___fladd+3)^0,c
  4734   001574  EF7A  F00B         	goto	l947
  4735   001578                     l3096:
  4736   001578  90D8               	bcf	status,0,c
  4737   00157A  3601               	rlcf	___fladd@b^0,f,c
  4738   00157C  3602               	rlcf	(___fladd@b+1)^0,f,c
  4739   00157E  3603               	rlcf	(___fladd@b+2)^0,f,c
  4740   001580  3604               	rlcf	(___fladd@b+3)^0,f,c
  4741   001582  AE10               	btfss	___fladd@grs^0,7,c
  4742   001584  EFC6  F00A         	goto	u2611
  4743   001588  EFC8  F00A         	goto	u2610
  4744   00158C                     u2611:
  4745   00158C  EFC9  F00A         	goto	l3102
  4746   001590                     u2610:
  4747   001590  8001               	bsf	___fladd@b^0,0,c
  4748   001592                     l3102:
  4749   001592  A010               	btfss	___fladd@grs^0,0,c
  4750   001594  EFCE  F00A         	goto	u2621
  4751   001598  EFD0  F00A         	goto	u2620
  4752   00159C                     u2621:
  4753   00159C  EFD4  F00A         	goto	l3106
  4754   0015A0                     u2620:
  4755   0015A0  80D8               	bsf	status,0,c
  4756   0015A2  3610               	rlcf	___fladd@grs^0,f,c
  4757   0015A4  EFD6  F00A         	goto	l3108
  4758   0015A8                     l3106:
  4759   0015A8  90D8               	bcf	status,0,c
  4760   0015AA  3610               	rlcf	___fladd@grs^0,f,c
  4761   0015AC                     l3108:
  4762   0015AC  500F               	movf	___fladd@bexp^0,w,c
  4763   0015AE  B4D8               	btfsc	status,2,c
  4764   0015B0  EFDC  F00A         	goto	u2631
  4765   0015B4  EFDE  F00A         	goto	u2630
  4766   0015B8                     u2631:
  4767   0015B8  EFDF  F00A         	goto	l3112
  4768   0015BC                     u2630:
  4769   0015BC  060F               	decf	___fladd@bexp^0,f,c
  4770   0015BE                     l3112:
  4771   0015BE  AE03               	btfss	(___fladd@b+2)^0,7,c
  4772   0015C0  EFE4  F00A         	goto	u2641
  4773   0015C4  EFE6  F00A         	goto	u2640
  4774   0015C8                     u2641:
  4775   0015C8  EFBC  F00A         	goto	l3096
  4776   0015CC                     u2640:
  4777   0015CC                     l3114:
  4778   0015CC  0E00               	movlw	0
  4779   0015CE  6E0E               	movwf	___fladd@aexp^0,c
  4780   0015D0  AE10               	btfss	___fladd@grs^0,7,c
  4781   0015D2  EFED  F00A         	goto	u2651
  4782   0015D6  EFEF  F00A         	goto	u2650
  4783   0015DA                     u2651:
  4784   0015DA  EF07  F00B         	goto	l964
  4785   0015DE                     u2650:
  4786   0015DE  C010  F009         	movff	___fladd@grs,??___fladd
  4787   0015E2  0E7F               	movlw	127
  4788   0015E4  1609               	andwf	??___fladd^0,f,c
  4789   0015E6  B4D8               	btfsc	status,2,c
  4790   0015E8  EFF8  F00A         	goto	u2661
  4791   0015EC  EFFA  F00A         	goto	u2660
  4792   0015F0                     u2661:
  4793   0015F0  EFFE  F00A         	goto	l965
  4794   0015F4                     u2660:
  4795   0015F4                     l3120:
  4796   0015F4  0E01               	movlw	1
  4797   0015F6  6E0E               	movwf	___fladd@aexp^0,c
  4798   0015F8  EF07  F00B         	goto	l964
  4799   0015FC                     l965:
  4800   0015FC  A001               	btfss	___fladd@b^0,0,c
  4801   0015FE  EF03  F00B         	goto	u2671
  4802   001602  EF05  F00B         	goto	u2670
  4803   001606                     u2671:
  4804   001606  EF07  F00B         	goto	l964
  4805   00160A                     u2670:
  4806   00160A  EFFA  F00A         	goto	l3120
  4807   00160E                     l964:
  4808   00160E  500E               	movf	___fladd@aexp^0,w,c
  4809   001610  B4D8               	btfsc	status,2,c
  4810   001612  EF0D  F00B         	goto	u2681
  4811   001616  EF0F  F00B         	goto	u2680
  4812   00161A                     u2681:
  4813   00161A  EF3A  F00B         	goto	l3132
  4814   00161E                     u2680:
  4815   00161E  0E01               	movlw	1
  4816   001620  2601               	addwf	___fladd@b^0,f,c
  4817   001622  0E00               	movlw	0
  4818   001624  2202               	addwfc	(___fladd@b+1)^0,f,c
  4819   001626  2203               	addwfc	(___fladd@b+2)^0,f,c
  4820   001628  2204               	addwfc	(___fladd@b+3)^0,f,c
  4821   00162A  A004               	btfss	(___fladd@b+3)^0,0,c
  4822   00162C  EF1A  F00B         	goto	u2691
  4823   001630  EF1C  F00B         	goto	u2690
  4824   001634                     u2691:
  4825   001634  EF3A  F00B         	goto	l3132
  4826   001638                     u2690:
  4827   001638  C001  F009         	movff	___fladd@b,??___fladd
  4828   00163C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4829   001640  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4830   001644  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4831   001648  340C               	rlcf	(??___fladd+3)^0,w,c
  4832   00164A  320C               	rrcf	(??___fladd+3)^0,f,c
  4833   00164C  320B               	rrcf	(??___fladd+2)^0,f,c
  4834   00164E  320A               	rrcf	(??___fladd+1)^0,f,c
  4835   001650  3209               	rrcf	??___fladd^0,f,c
  4836   001652  C009  F001         	movff	??___fladd,___fladd@b
  4837   001656  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4838   00165A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4839   00165E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4840   001662  280F               	incf	___fladd@bexp^0,w,c
  4841   001664  B4D8               	btfsc	status,2,c
  4842   001666  EF37  F00B         	goto	u2701
  4843   00166A  EF39  F00B         	goto	u2700
  4844   00166E                     u2701:
  4845   00166E  EF3A  F00B         	goto	l3132
  4846   001672                     u2700:
  4847   001672  2A0F               	incf	___fladd@bexp^0,f,c
  4848   001674                     l3132:
  4849   001674  280F               	incf	___fladd@bexp^0,w,c
  4850   001676  B4D8               	btfsc	status,2,c
  4851   001678  EF40  F00B         	goto	u2711
  4852   00167C  EF42  F00B         	goto	u2710
  4853   001680                     u2711:
  4854   001680  EF4A  F00B         	goto	l3136
  4855   001684                     u2710:
  4856   001684  500F               	movf	___fladd@bexp^0,w,c
  4857   001686  A4D8               	btfss	status,2,c
  4858   001688  EF48  F00B         	goto	u2721
  4859   00168C  EF4A  F00B         	goto	u2720
  4860   001690                     u2721:
  4861   001690  EF5C  F00B         	goto	l3140
  4862   001694                     u2720:
  4863   001694                     l3136:
  4864   001694  0E00               	movlw	0
  4865   001696  6E01               	movwf	___fladd@b^0,c
  4866   001698  0E00               	movlw	0
  4867   00169A  6E02               	movwf	(___fladd@b+1)^0,c
  4868   00169C  0E00               	movlw	0
  4869   00169E  6E03               	movwf	(___fladd@b+2)^0,c
  4870   0016A0  0E00               	movlw	0
  4871   0016A2  6E04               	movwf	(___fladd@b+3)^0,c
  4872   0016A4  500F               	movf	___fladd@bexp^0,w,c
  4873   0016A6  A4D8               	btfss	status,2,c
  4874   0016A8  EF58  F00B         	goto	u2731
  4875   0016AC  EF5A  F00B         	goto	u2730
  4876   0016B0                     u2731:
  4877   0016B0  EF5C  F00B         	goto	l3140
  4878   0016B4                     u2730:
  4879   0016B4  0E00               	movlw	0
  4880   0016B6  6E0D               	movwf	___fladd@signs^0,c
  4881   0016B8                     l3140:
  4882   0016B8  A00F               	btfss	___fladd@bexp^0,0,c
  4883   0016BA  EF61  F00B         	goto	u2741
  4884   0016BE  EF63  F00B         	goto	u2740
  4885   0016C2                     u2741:
  4886   0016C2  EF66  F00B         	goto	l3144
  4887   0016C6                     u2740:
  4888   0016C6  8E03               	bsf	(___fladd@b+2)^0,7,c
  4889   0016C8  EF67  F00B         	goto	l3146
  4890   0016CC                     l3144:
  4891   0016CC  9E03               	bcf	(___fladd@b+2)^0,7,c
  4892   0016CE                     l3146:
  4893   0016CE  90D8               	bcf	status,0,c
  4894   0016D0  300F               	rrcf	___fladd@bexp^0,w,c
  4895   0016D2  6E04               	movwf	(___fladd@b+3)^0,c
  4896   0016D4  AE0D               	btfss	___fladd@signs^0,7,c
  4897   0016D6  EF6F  F00B         	goto	u2751
  4898   0016DA  EF71  F00B         	goto	u2750
  4899   0016DE                     u2751:
  4900   0016DE  EF72  F00B         	goto	l3152
  4901   0016E2                     u2750:
  4902   0016E2  8E04               	bsf	(___fladd@b+3)^0,7,c
  4903   0016E4                     l3152:
  4904   0016E4  C001  F001         	movff	___fladd@b,?___fladd
  4905   0016E8  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4906   0016EC  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4907   0016F0  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4908   0016F4                     l947:
  4909   0016F4  0012               	return		;funcret
  4910   0016F6                     __end_of___fladd:
  4911                           	callstack 0
  4912                           
  4913 ;; *************** function ___flneg *****************
  4914 ;; Defined at:
  4915 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  f1              4    0[COMRAM] unsigned char 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;		None
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  4    0[COMRAM] unsigned char 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4929 ;;      Params:         4       0       0       0       0       0       0       0       0
  4930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4932 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4933 ;;Total ram usage:        4 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_efgtoa
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text17
  4943   00318C                     __ptext17:
  4944                           	callstack 0
  4945   00318C                     ___flneg:
  4946                           	callstack 26
  4947   00318C  5001               	movf	___flneg@f1^0,w,c
  4948   00318E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4949   003190  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4950   003192  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4951   003194  B4D8               	btfsc	status,2,c
  4952   003196  EFCF  F018         	goto	u3271
  4953   00319A  EFD1  F018         	goto	u3270
  4954   00319E                     u3271:
  4955   00319E  EFD9  F018         	goto	l3486
  4956   0031A2                     u3270:
  4957   0031A2  0E00               	movlw	0
  4958   0031A4  1A01               	xorwf	___flneg@f1^0,f,c
  4959   0031A6  0E00               	movlw	0
  4960   0031A8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4961   0031AA  0E00               	movlw	0
  4962   0031AC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4963   0031AE  0E80               	movlw	128
  4964   0031B0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4965   0031B2                     l3486:
  4966   0031B2  C001  F001         	movff	___flneg@f1,?___flneg
  4967   0031B6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4968   0031BA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4969   0031BE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4970   0031C2  0012               	return		;funcret
  4971   0031C4                     __end_of___flneg:
  4972                           	callstack 0
  4973                           
  4974 ;; *************** function ___flmul *****************
  4975 ;; Defined at:
  4976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  b               4   21[COMRAM] unsigned char 
  4979 ;;  a               4   25[COMRAM] unsigned char 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  prod            4   40[COMRAM] struct .
  4982 ;;  grs             4   34[COMRAM] unsigned long 
  4983 ;;  temp            2   44[COMRAM] struct .
  4984 ;;  bexp            1   39[COMRAM] unsigned char 
  4985 ;;  aexp            1   38[COMRAM] unsigned char 
  4986 ;;  sign            1   33[COMRAM] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  4   21[COMRAM] unsigned char 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0, prodl, prodh
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4996 ;;      Params:         8       0       0       0       0       0       0       0       0
  4997 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4998 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4999 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5000 ;;Total ram usage:       25 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_main
  5006 ;;		_efgtoa
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text18
  5011   0016F6                     __ptext18:
  5012                           	callstack 0
  5013   0016F6                     ___flmul:
  5014                           	callstack 26
  5015   0016F6  5019               	movf	(___flmul@b+3)^0,w,c
  5016   0016F8  0B80               	andlw	128
  5017   0016FA  6E22               	movwf	___flmul@sign^0,c
  5018   0016FC  5019               	movf	(___flmul@b+3)^0,w,c
  5019   0016FE  2419               	addwf	(___flmul@b+3)^0,w,c
  5020   001700  6E28               	movwf	___flmul@bexp^0,c
  5021   001702  AE18               	btfss	(___flmul@b+2)^0,7,c
  5022   001704  EF86  F00B         	goto	u3001
  5023   001708  EF88  F00B         	goto	u3000
  5024   00170C                     u3001:
  5025   00170C  EF89  F00B         	goto	l3314
  5026   001710                     u3000:
  5027   001710  8028               	bsf	___flmul@bexp^0,0,c
  5028   001712                     l3314:
  5029   001712  5028               	movf	___flmul@bexp^0,w,c
  5030   001714  B4D8               	btfsc	status,2,c
  5031   001716  EF8F  F00B         	goto	u3011
  5032   00171A  EF91  F00B         	goto	u3010
  5033   00171E                     u3011:
  5034   00171E  EFA4  F00B         	goto	l3322
  5035   001722                     u3010:
  5036   001722  2828               	incf	___flmul@bexp^0,w,c
  5037   001724  A4D8               	btfss	status,2,c
  5038   001726  EF97  F00B         	goto	u3021
  5039   00172A  EF99  F00B         	goto	u3020
  5040   00172E                     u3021:
  5041   00172E  EFA1  F00B         	goto	l3320
  5042   001732                     u3020:
  5043   001732  0E00               	movlw	0
  5044   001734  6E16               	movwf	___flmul@b^0,c
  5045   001736  0E00               	movlw	0
  5046   001738  6E17               	movwf	(___flmul@b+1)^0,c
  5047   00173A  0E00               	movlw	0
  5048   00173C  6E18               	movwf	(___flmul@b+2)^0,c
  5049   00173E  0E00               	movlw	0
  5050   001740  6E19               	movwf	(___flmul@b+3)^0,c
  5051   001742                     l3320:
  5052   001742  8E18               	bsf	(___flmul@b+2)^0,7,c
  5053   001744  EFAC  F00B         	goto	l3324
  5054   001748                     l3322:
  5055   001748  0E00               	movlw	0
  5056   00174A  6E16               	movwf	___flmul@b^0,c
  5057   00174C  0E00               	movlw	0
  5058   00174E  6E17               	movwf	(___flmul@b+1)^0,c
  5059   001750  0E00               	movlw	0
  5060   001752  6E18               	movwf	(___flmul@b+2)^0,c
  5061   001754  0E00               	movlw	0
  5062   001756  6E19               	movwf	(___flmul@b+3)^0,c
  5063   001758                     l3324:
  5064   001758  501D               	movf	(___flmul@a+3)^0,w,c
  5065   00175A  0B80               	andlw	128
  5066   00175C  1A22               	xorwf	___flmul@sign^0,f,c
  5067   00175E  501D               	movf	(___flmul@a+3)^0,w,c
  5068   001760  241D               	addwf	(___flmul@a+3)^0,w,c
  5069   001762  6E27               	movwf	___flmul@aexp^0,c
  5070   001764  AE1C               	btfss	(___flmul@a+2)^0,7,c
  5071   001766  EFB7  F00B         	goto	u3031
  5072   00176A  EFB9  F00B         	goto	u3030
  5073   00176E                     u3031:
  5074   00176E  EFBA  F00B         	goto	l3332
  5075   001772                     u3030:
  5076   001772  8027               	bsf	___flmul@aexp^0,0,c
  5077   001774                     l3332:
  5078   001774  5027               	movf	___flmul@aexp^0,w,c
  5079   001776  B4D8               	btfsc	status,2,c
  5080   001778  EFC0  F00B         	goto	u3041
  5081   00177C  EFC2  F00B         	goto	u3040
  5082   001780                     u3041:
  5083   001780  EFD5  F00B         	goto	l3340
  5084   001784                     u3040:
  5085   001784  2827               	incf	___flmul@aexp^0,w,c
  5086   001786  A4D8               	btfss	status,2,c
  5087   001788  EFC8  F00B         	goto	u3051
  5088   00178C  EFCA  F00B         	goto	u3050
  5089   001790                     u3051:
  5090   001790  EFD2  F00B         	goto	l3338
  5091   001794                     u3050:
  5092   001794  0E00               	movlw	0
  5093   001796  6E1A               	movwf	___flmul@a^0,c
  5094   001798  0E00               	movlw	0
  5095   00179A  6E1B               	movwf	(___flmul@a+1)^0,c
  5096   00179C  0E00               	movlw	0
  5097   00179E  6E1C               	movwf	(___flmul@a+2)^0,c
  5098   0017A0  0E00               	movlw	0
  5099   0017A2  6E1D               	movwf	(___flmul@a+3)^0,c
  5100   0017A4                     l3338:
  5101   0017A4  8E1C               	bsf	(___flmul@a+2)^0,7,c
  5102   0017A6  EFDD  F00B         	goto	l1024
  5103   0017AA                     l3340:
  5104   0017AA  0E00               	movlw	0
  5105   0017AC  6E1A               	movwf	___flmul@a^0,c
  5106   0017AE  0E00               	movlw	0
  5107   0017B0  6E1B               	movwf	(___flmul@a+1)^0,c
  5108   0017B2  0E00               	movlw	0
  5109   0017B4  6E1C               	movwf	(___flmul@a+2)^0,c
  5110   0017B6  0E00               	movlw	0
  5111   0017B8  6E1D               	movwf	(___flmul@a+3)^0,c
  5112   0017BA                     l1024:
  5113   0017BA  5027               	movf	___flmul@aexp^0,w,c
  5114   0017BC  B4D8               	btfsc	status,2,c
  5115   0017BE  EFE3  F00B         	goto	u3061
  5116   0017C2  EFE5  F00B         	goto	u3060
  5117   0017C6                     u3061:
  5118   0017C6  EFED  F00B         	goto	l3344
  5119   0017CA                     u3060:
  5120   0017CA  5028               	movf	___flmul@bexp^0,w,c
  5121   0017CC  A4D8               	btfss	status,2,c
  5122   0017CE  EFEB  F00B         	goto	u3071
  5123   0017D2  EFED  F00B         	goto	u3070
  5124   0017D6                     u3071:
  5125   0017D6  EFF7  F00B         	goto	l3348
  5126   0017DA                     u3070:
  5127   0017DA                     l3344:
  5128   0017DA  0E00               	movlw	0
  5129   0017DC  6E16               	movwf	?___flmul^0,c
  5130   0017DE  0E00               	movlw	0
  5131   0017E0  6E17               	movwf	(?___flmul+1)^0,c
  5132   0017E2  0E00               	movlw	0
  5133   0017E4  6E18               	movwf	(?___flmul+2)^0,c
  5134   0017E6  0E00               	movlw	0
  5135   0017E8  6E19               	movwf	(?___flmul+3)^0,c
  5136   0017EA  EF8F  F00D         	goto	l1028
  5137   0017EE                     l3348:
  5138   0017EE  501C               	movf	(___flmul@a+2)^0,w,c
  5139   0017F0  0216               	mulwf	___flmul@b^0,c
  5140   0017F2  CFF3 F02D          	movff	prodl,___flmul@temp
  5141   0017F6  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5142   0017FA  502D               	movf	___flmul@temp^0,w,c
  5143   0017FC  6E23               	movwf	___flmul@grs^0,c
  5144   0017FE  6A24               	clrf	(___flmul@grs+1)^0,c
  5145   001800  6A25               	clrf	(___flmul@grs+2)^0,c
  5146   001802  6A26               	clrf	(___flmul@grs+3)^0,c
  5147   001804  502E               	movf	(___flmul@temp+1)^0,w,c
  5148   001806  6E29               	movwf	___flmul@prod^0,c
  5149   001808  6A2A               	clrf	(___flmul@prod+1)^0,c
  5150   00180A  6A2B               	clrf	(___flmul@prod+2)^0,c
  5151   00180C  6A2C               	clrf	(___flmul@prod+3)^0,c
  5152   00180E  501B               	movf	(___flmul@a+1)^0,w,c
  5153   001810  0217               	mulwf	(___flmul@b+1)^0,c
  5154   001812  CFF3 F02D          	movff	prodl,___flmul@temp
  5155   001816  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5156   00181A  502D               	movf	___flmul@temp^0,w,c
  5157   00181C  2623               	addwf	___flmul@grs^0,f,c
  5158   00181E  0E00               	movlw	0
  5159   001820  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5160   001822  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5161   001824  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5162   001826  502E               	movf	(___flmul@temp+1)^0,w,c
  5163   001828  2629               	addwf	___flmul@prod^0,f,c
  5164   00182A  0E00               	movlw	0
  5165   00182C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5166   00182E  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5167   001830  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5168   001832  501A               	movf	___flmul@a^0,w,c
  5169   001834  0218               	mulwf	(___flmul@b+2)^0,c
  5170   001836  CFF3 F02D          	movff	prodl,___flmul@temp
  5171   00183A  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5172   00183E  502D               	movf	___flmul@temp^0,w,c
  5173   001840  2623               	addwf	___flmul@grs^0,f,c
  5174   001842  0E00               	movlw	0
  5175   001844  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5176   001846  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5177   001848  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5178   00184A  502E               	movf	(___flmul@temp+1)^0,w,c
  5179   00184C  2629               	addwf	___flmul@prod^0,f,c
  5180   00184E  0E00               	movlw	0
  5181   001850  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5182   001852  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5183   001854  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5184   001856  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  5185   00185A  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  5186   00185E  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  5187   001862  6A23               	clrf	___flmul@grs^0,c
  5188   001864  501A               	movf	___flmul@a^0,w,c
  5189   001866  0217               	mulwf	(___flmul@b+1)^0,c
  5190   001868  CFF3 F02D          	movff	prodl,___flmul@temp
  5191   00186C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5192   001870  502D               	movf	___flmul@temp^0,w,c
  5193   001872  2623               	addwf	___flmul@grs^0,f,c
  5194   001874  502E               	movf	(___flmul@temp+1)^0,w,c
  5195   001876  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5196   001878  0E00               	movlw	0
  5197   00187A  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5198   00187C  0E00               	movlw	0
  5199   00187E  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5200   001880  501B               	movf	(___flmul@a+1)^0,w,c
  5201   001882  0216               	mulwf	___flmul@b^0,c
  5202   001884  CFF3 F02D          	movff	prodl,___flmul@temp
  5203   001888  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5204   00188C  502D               	movf	___flmul@temp^0,w,c
  5205   00188E  2623               	addwf	___flmul@grs^0,f,c
  5206   001890  502E               	movf	(___flmul@temp+1)^0,w,c
  5207   001892  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5208   001894  0E00               	movlw	0
  5209   001896  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5210   001898  0E00               	movlw	0
  5211   00189A  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5212   00189C  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  5213   0018A0  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  5214   0018A4  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  5215   0018A8  6A23               	clrf	___flmul@grs^0,c
  5216   0018AA  501A               	movf	___flmul@a^0,w,c
  5217   0018AC  0216               	mulwf	___flmul@b^0,c
  5218   0018AE  CFF3 F02D          	movff	prodl,___flmul@temp
  5219   0018B2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5220   0018B6  502D               	movf	___flmul@temp^0,w,c
  5221   0018B8  2623               	addwf	___flmul@grs^0,f,c
  5222   0018BA  502E               	movf	(___flmul@temp+1)^0,w,c
  5223   0018BC  2224               	addwfc	(___flmul@grs+1)^0,f,c
  5224   0018BE  0E00               	movlw	0
  5225   0018C0  2225               	addwfc	(___flmul@grs+2)^0,f,c
  5226   0018C2  0E00               	movlw	0
  5227   0018C4  2226               	addwfc	(___flmul@grs+3)^0,f,c
  5228   0018C6  501C               	movf	(___flmul@a+2)^0,w,c
  5229   0018C8  0217               	mulwf	(___flmul@b+1)^0,c
  5230   0018CA  CFF3 F02D          	movff	prodl,___flmul@temp
  5231   0018CE  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5232   0018D2  502D               	movf	___flmul@temp^0,w,c
  5233   0018D4  2629               	addwf	___flmul@prod^0,f,c
  5234   0018D6  502E               	movf	(___flmul@temp+1)^0,w,c
  5235   0018D8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5236   0018DA  0E00               	movlw	0
  5237   0018DC  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5238   0018DE  0E00               	movlw	0
  5239   0018E0  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5240   0018E2  501B               	movf	(___flmul@a+1)^0,w,c
  5241   0018E4  0218               	mulwf	(___flmul@b+2)^0,c
  5242   0018E6  CFF3 F02D          	movff	prodl,___flmul@temp
  5243   0018EA  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5244   0018EE  502D               	movf	___flmul@temp^0,w,c
  5245   0018F0  2629               	addwf	___flmul@prod^0,f,c
  5246   0018F2  502E               	movf	(___flmul@temp+1)^0,w,c
  5247   0018F4  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5248   0018F6  0E00               	movlw	0
  5249   0018F8  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5250   0018FA  0E00               	movlw	0
  5251   0018FC  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5252   0018FE  501C               	movf	(___flmul@a+2)^0,w,c
  5253   001900  0218               	mulwf	(___flmul@b+2)^0,c
  5254   001902  CFF3 F02D          	movff	prodl,___flmul@temp
  5255   001906  CFF4 F02E          	movff	prodh,___flmul@temp+1
  5256   00190A  502D               	movf	___flmul@temp^0,w,c
  5257   00190C  6E1E               	movwf	??___flmul^0,c
  5258   00190E  502E               	movf	(___flmul@temp+1)^0,w,c
  5259   001910  6E1F               	movwf	(??___flmul+1)^0,c
  5260   001912  6A20               	clrf	(??___flmul+2)^0,c
  5261   001914  6A21               	clrf	(??___flmul+3)^0,c
  5262   001916  C020  F021         	movff	??___flmul+2,??___flmul+3
  5263   00191A  C01F  F020         	movff	??___flmul+1,??___flmul+2
  5264   00191E  C01E  F01F         	movff	??___flmul,??___flmul+1
  5265   001922  6A1E               	clrf	??___flmul^0,c
  5266   001924  501E               	movf	??___flmul^0,w,c
  5267   001926  2629               	addwf	___flmul@prod^0,f,c
  5268   001928  501F               	movf	(??___flmul+1)^0,w,c
  5269   00192A  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5270   00192C  5020               	movf	(??___flmul+2)^0,w,c
  5271   00192E  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5272   001930  5021               	movf	(??___flmul+3)^0,w,c
  5273   001932  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5274   001934  C023  F01E         	movff	___flmul@grs,??___flmul
  5275   001938  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  5276   00193C  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  5277   001940  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  5278   001944  0E19               	movlw	25
  5279   001946  EFAA  F00C         	goto	u3080
  5280   00194A                     u3085:
  5281   00194A  90D8               	bcf	status,0,c
  5282   00194C  3221               	rrcf	(??___flmul+3)^0,f,c
  5283   00194E  3220               	rrcf	(??___flmul+2)^0,f,c
  5284   001950  321F               	rrcf	(??___flmul+1)^0,f,c
  5285   001952  321E               	rrcf	??___flmul^0,f,c
  5286   001954                     u3080:
  5287   001954  2EE8               	decfsz	wreg,f,c
  5288   001956  EFA5  F00C         	goto	u3085
  5289   00195A  501E               	movf	??___flmul^0,w,c
  5290   00195C  2629               	addwf	___flmul@prod^0,f,c
  5291   00195E  501F               	movf	(??___flmul+1)^0,w,c
  5292   001960  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5293   001962  5020               	movf	(??___flmul+2)^0,w,c
  5294   001964  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5295   001966  5021               	movf	(??___flmul+3)^0,w,c
  5296   001968  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5297   00196A  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  5298   00196E  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  5299   001972  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  5300   001976  6A23               	clrf	___flmul@grs^0,c
  5301   001978  5027               	movf	___flmul@aexp^0,w,c
  5302   00197A  C028  F01E         	movff	___flmul@bexp,??___flmul
  5303   00197E  6A1F               	clrf	(??___flmul+1)^0,c
  5304   001980  261E               	addwf	??___flmul^0,f,c
  5305   001982  0E00               	movlw	0
  5306   001984  221F               	addwfc	(??___flmul+1)^0,f,c
  5307   001986  0E82               	movlw	130
  5308   001988  241E               	addwf	??___flmul^0,w,c
  5309   00198A  6E2D               	movwf	___flmul@temp^0,c
  5310   00198C  0EFF               	movlw	255
  5311   00198E  201F               	addwfc	(??___flmul+1)^0,w,c
  5312   001990  6E2E               	movwf	(___flmul@temp+1)^0,c
  5313   001992  EFE0  F00C         	goto	l3396
  5314   001996                     l3390:
  5315   001996  90D8               	bcf	status,0,c
  5316   001998  3629               	rlcf	___flmul@prod^0,f,c
  5317   00199A  362A               	rlcf	(___flmul@prod+1)^0,f,c
  5318   00199C  362B               	rlcf	(___flmul@prod+2)^0,f,c
  5319   00199E  362C               	rlcf	(___flmul@prod+3)^0,f,c
  5320   0019A0  AE26               	btfss	(___flmul@grs+3)^0,7,c
  5321   0019A2  EFD5  F00C         	goto	u3091
  5322   0019A6  EFD7  F00C         	goto	u3090
  5323   0019AA                     u3091:
  5324   0019AA  EFD8  F00C         	goto	l1031
  5325   0019AE                     u3090:
  5326   0019AE  8029               	bsf	___flmul@prod^0,0,c
  5327   0019B0                     l1031:
  5328   0019B0  90D8               	bcf	status,0,c
  5329   0019B2  3623               	rlcf	___flmul@grs^0,f,c
  5330   0019B4  3624               	rlcf	(___flmul@grs+1)^0,f,c
  5331   0019B6  3625               	rlcf	(___flmul@grs+2)^0,f,c
  5332   0019B8  3626               	rlcf	(___flmul@grs+3)^0,f,c
  5333   0019BA  062D               	decf	___flmul@temp^0,f,c
  5334   0019BC  A0D8               	btfss	status,0,c
  5335   0019BE  062E               	decf	(___flmul@temp+1)^0,f,c
  5336   0019C0                     l3396:
  5337   0019C0  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  5338   0019C2  EFE5  F00C         	goto	u3101
  5339   0019C6  EFE7  F00C         	goto	u3100
  5340   0019CA                     u3101:
  5341   0019CA  EFCB  F00C         	goto	l3390
  5342   0019CE                     u3100:
  5343   0019CE  0E00               	movlw	0
  5344   0019D0  6E27               	movwf	___flmul@aexp^0,c
  5345   0019D2  AE26               	btfss	(___flmul@grs+3)^0,7,c
  5346   0019D4  EFEE  F00C         	goto	u3111
  5347   0019D8  EFF0  F00C         	goto	u3110
  5348   0019DC                     u3111:
  5349   0019DC  EF14  F00D         	goto	l1033
  5350   0019E0                     u3110:
  5351   0019E0  0EFF               	movlw	255
  5352   0019E2  1423               	andwf	___flmul@grs^0,w,c
  5353   0019E4  6E1E               	movwf	??___flmul^0,c
  5354   0019E6  0EFF               	movlw	255
  5355   0019E8  1424               	andwf	(___flmul@grs+1)^0,w,c
  5356   0019EA  6E1F               	movwf	(??___flmul+1)^0,c
  5357   0019EC  0EFF               	movlw	255
  5358   0019EE  1425               	andwf	(___flmul@grs+2)^0,w,c
  5359   0019F0  6E20               	movwf	(??___flmul+2)^0,c
  5360   0019F2  0E7F               	movlw	127
  5361   0019F4  1426               	andwf	(___flmul@grs+3)^0,w,c
  5362   0019F6  6E21               	movwf	(??___flmul+3)^0,c
  5363   0019F8  501E               	movf	??___flmul^0,w,c
  5364   0019FA  101F               	iorwf	(??___flmul+1)^0,w,c
  5365   0019FC  1020               	iorwf	(??___flmul+2)^0,w,c
  5366   0019FE  1021               	iorwf	(??___flmul+3)^0,w,c
  5367   001A00  B4D8               	btfsc	status,2,c
  5368   001A02  EF05  F00D         	goto	u3121
  5369   001A06  EF07  F00D         	goto	u3120
  5370   001A0A                     u3121:
  5371   001A0A  EF0B  F00D         	goto	l1034
  5372   001A0E                     u3120:
  5373   001A0E                     l3404:
  5374   001A0E  0E01               	movlw	1
  5375   001A10  6E27               	movwf	___flmul@aexp^0,c
  5376   001A12  EF14  F00D         	goto	l1033
  5377   001A16                     l1034:
  5378   001A16  A029               	btfss	___flmul@prod^0,0,c
  5379   001A18  EF10  F00D         	goto	u3131
  5380   001A1C  EF12  F00D         	goto	u3130
  5381   001A20                     u3131:
  5382   001A20  EF14  F00D         	goto	l1033
  5383   001A24                     u3130:
  5384   001A24  EF07  F00D         	goto	l3404
  5385   001A28                     l1033:
  5386   001A28  5027               	movf	___flmul@aexp^0,w,c
  5387   001A2A  B4D8               	btfsc	status,2,c
  5388   001A2C  EF1A  F00D         	goto	u3141
  5389   001A30  EF1C  F00D         	goto	u3140
  5390   001A34                     u3141:
  5391   001A34  EF40  F00D         	goto	l3416
  5392   001A38                     u3140:
  5393   001A38  0E01               	movlw	1
  5394   001A3A  2629               	addwf	___flmul@prod^0,f,c
  5395   001A3C  0E00               	movlw	0
  5396   001A3E  222A               	addwfc	(___flmul@prod+1)^0,f,c
  5397   001A40  222B               	addwfc	(___flmul@prod+2)^0,f,c
  5398   001A42  222C               	addwfc	(___flmul@prod+3)^0,f,c
  5399   001A44  A02C               	btfss	(___flmul@prod+3)^0,0,c
  5400   001A46  EF27  F00D         	goto	u3151
  5401   001A4A  EF29  F00D         	goto	u3150
  5402   001A4E                     u3151:
  5403   001A4E  EF40  F00D         	goto	l3416
  5404   001A52                     u3150:
  5405   001A52  C029  F01E         	movff	___flmul@prod,??___flmul
  5406   001A56  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  5407   001A5A  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  5408   001A5E  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  5409   001A62  3421               	rlcf	(??___flmul+3)^0,w,c
  5410   001A64  3221               	rrcf	(??___flmul+3)^0,f,c
  5411   001A66  3220               	rrcf	(??___flmul+2)^0,f,c
  5412   001A68  321F               	rrcf	(??___flmul+1)^0,f,c
  5413   001A6A  321E               	rrcf	??___flmul^0,f,c
  5414   001A6C  C01E  F029         	movff	??___flmul,___flmul@prod
  5415   001A70  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  5416   001A74  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  5417   001A78  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  5418   001A7C  4A2D               	infsnz	___flmul@temp^0,f,c
  5419   001A7E  2A2E               	incf	(___flmul@temp+1)^0,f,c
  5420   001A80                     l3416:
  5421   001A80  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  5422   001A82  EF4B  F00D         	goto	u3161
  5423   001A86  502E               	movf	(___flmul@temp+1)^0,w,c
  5424   001A88  E108               	bnz	u3160
  5425   001A8A  282D               	incf	___flmul@temp^0,w,c
  5426   001A8C  A0D8               	btfss	status,0,c
  5427   001A8E  EF4B  F00D         	goto	u3161
  5428   001A92  EF4D  F00D         	goto	u3160
  5429   001A96                     u3161:
  5430   001A96  EF57  F00D         	goto	l3420
  5431   001A9A                     u3160:
  5432   001A9A  0E00               	movlw	0
  5433   001A9C  6E29               	movwf	___flmul@prod^0,c
  5434   001A9E  0E00               	movlw	0
  5435   001AA0  6E2A               	movwf	(___flmul@prod+1)^0,c
  5436   001AA2  0E80               	movlw	128
  5437   001AA4  6E2B               	movwf	(___flmul@prod+2)^0,c
  5438   001AA6  0E7F               	movlw	127
  5439   001AA8  6E2C               	movwf	(___flmul@prod+3)^0,c
  5440   001AAA  EF85  F00D         	goto	l3432
  5441   001AAE                     l3420:
  5442   001AAE  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  5443   001AB0  EF64  F00D         	goto	u3170
  5444   001AB4  502E               	movf	(___flmul@temp+1)^0,w,c
  5445   001AB6  E106               	bnz	u3171
  5446   001AB8  042D               	decf	___flmul@temp^0,w,c
  5447   001ABA  B0D8               	btfsc	status,0,c
  5448   001ABC  EF62  F00D         	goto	u3171
  5449   001AC0  EF64  F00D         	goto	u3170
  5450   001AC4                     u3171:
  5451   001AC4  EF70  F00D         	goto	l1041
  5452   001AC8                     u3170:
  5453   001AC8  0E00               	movlw	0
  5454   001ACA  6E29               	movwf	___flmul@prod^0,c
  5455   001ACC  0E00               	movlw	0
  5456   001ACE  6E2A               	movwf	(___flmul@prod+1)^0,c
  5457   001AD0  0E00               	movlw	0
  5458   001AD2  6E2B               	movwf	(___flmul@prod+2)^0,c
  5459   001AD4  0E00               	movlw	0
  5460   001AD6  6E2C               	movwf	(___flmul@prod+3)^0,c
  5461   001AD8  0E00               	movlw	0
  5462   001ADA  6E22               	movwf	___flmul@sign^0,c
  5463   001ADC  EF85  F00D         	goto	l3432
  5464   001AE0                     l1041:
  5465   001AE0  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  5466   001AE4  0EFF               	movlw	255
  5467   001AE6  1629               	andwf	___flmul@prod^0,f,c
  5468   001AE8  0EFF               	movlw	255
  5469   001AEA  162A               	andwf	(___flmul@prod+1)^0,f,c
  5470   001AEC  0E7F               	movlw	127
  5471   001AEE  162B               	andwf	(___flmul@prod+2)^0,f,c
  5472   001AF0  0E00               	movlw	0
  5473   001AF2  162C               	andwf	(___flmul@prod+3)^0,f,c
  5474   001AF4  A028               	btfss	___flmul@bexp^0,0,c
  5475   001AF6  EF7F  F00D         	goto	u3181
  5476   001AFA  EF81  F00D         	goto	u3180
  5477   001AFE                     u3181:
  5478   001AFE  EF82  F00D         	goto	l3430
  5479   001B02                     u3180:
  5480   001B02  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  5481   001B04                     l3430:
  5482   001B04  90D8               	bcf	status,0,c
  5483   001B06  3028               	rrcf	___flmul@bexp^0,w,c
  5484   001B08  6E2C               	movwf	(___flmul@prod+3)^0,c
  5485   001B0A                     l3432:
  5486   001B0A  5022               	movf	___flmul@sign^0,w,c
  5487   001B0C  122C               	iorwf	(___flmul@prod+3)^0,f,c
  5488   001B0E  C029  F016         	movff	___flmul@prod,?___flmul
  5489   001B12  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  5490   001B16  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  5491   001B1A  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  5492   001B1E                     l1028:
  5493   001B1E  0012               	return		;funcret
  5494   001B20                     __end_of___flmul:
  5495                           	callstack 0
  5496                           
  5497 ;; *************** function ___flge *****************
  5498 ;; Defined at:
  5499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  ff1             4   46[COMRAM] unsigned char 
  5502 ;;  ff2             4   50[COMRAM] unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;		None               void
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5514 ;;      Params:         8       0       0       0       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5516 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5517 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5518 ;;Total ram usage:       12 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;;		_efgtoa
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text19
  5529   00294C                     __ptext19:
  5530                           	callstack 0
  5531   00294C                     ___flge:
  5532                           	callstack 26
  5533   00294C  0E00               	movlw	0
  5534   00294E  142F               	andwf	___flge@ff1^0,w,c
  5535   002950  6E37               	movwf	??___flge^0,c
  5536   002952  0E00               	movlw	0
  5537   002954  1430               	andwf	(___flge@ff1+1)^0,w,c
  5538   002956  6E38               	movwf	(??___flge+1)^0,c
  5539   002958  0E80               	movlw	128
  5540   00295A  1431               	andwf	(___flge@ff1+2)^0,w,c
  5541   00295C  6E39               	movwf	(??___flge+2)^0,c
  5542   00295E  0E7F               	movlw	127
  5543   002960  1432               	andwf	(___flge@ff1+3)^0,w,c
  5544   002962  6E3A               	movwf	(??___flge+3)^0,c
  5545   002964  5037               	movf	??___flge^0,w,c
  5546   002966  1038               	iorwf	(??___flge+1)^0,w,c
  5547   002968  1039               	iorwf	(??___flge+2)^0,w,c
  5548   00296A  103A               	iorwf	(??___flge+3)^0,w,c
  5549   00296C  A4D8               	btfss	status,2,c
  5550   00296E  EFBB  F014         	goto	u3221
  5551   002972  EFBD  F014         	goto	u3220
  5552   002976                     u3221:
  5553   002976  EFC5  F014         	goto	l3464
  5554   00297A                     u3220:
  5555   00297A  0E00               	movlw	0
  5556   00297C  6E2F               	movwf	___flge@ff1^0,c
  5557   00297E  0E00               	movlw	0
  5558   002980  6E30               	movwf	(___flge@ff1+1)^0,c
  5559   002982  0E00               	movlw	0
  5560   002984  6E31               	movwf	(___flge@ff1+2)^0,c
  5561   002986  0E00               	movlw	0
  5562   002988  6E32               	movwf	(___flge@ff1+3)^0,c
  5563   00298A                     l3464:
  5564   00298A  0E00               	movlw	0
  5565   00298C  1433               	andwf	___flge@ff2^0,w,c
  5566   00298E  6E37               	movwf	??___flge^0,c
  5567   002990  0E00               	movlw	0
  5568   002992  1434               	andwf	(___flge@ff2+1)^0,w,c
  5569   002994  6E38               	movwf	(??___flge+1)^0,c
  5570   002996  0E80               	movlw	128
  5571   002998  1435               	andwf	(___flge@ff2+2)^0,w,c
  5572   00299A  6E39               	movwf	(??___flge+2)^0,c
  5573   00299C  0E7F               	movlw	127
  5574   00299E  1436               	andwf	(___flge@ff2+3)^0,w,c
  5575   0029A0  6E3A               	movwf	(??___flge+3)^0,c
  5576   0029A2  5037               	movf	??___flge^0,w,c
  5577   0029A4  1038               	iorwf	(??___flge+1)^0,w,c
  5578   0029A6  1039               	iorwf	(??___flge+2)^0,w,c
  5579   0029A8  103A               	iorwf	(??___flge+3)^0,w,c
  5580   0029AA  A4D8               	btfss	status,2,c
  5581   0029AC  EFDA  F014         	goto	u3231
  5582   0029B0  EFDC  F014         	goto	u3230
  5583   0029B4                     u3231:
  5584   0029B4  EFE4  F014         	goto	l3468
  5585   0029B8                     u3230:
  5586   0029B8  0E00               	movlw	0
  5587   0029BA  6E33               	movwf	___flge@ff2^0,c
  5588   0029BC  0E00               	movlw	0
  5589   0029BE  6E34               	movwf	(___flge@ff2+1)^0,c
  5590   0029C0  0E00               	movlw	0
  5591   0029C2  6E35               	movwf	(___flge@ff2+2)^0,c
  5592   0029C4  0E00               	movlw	0
  5593   0029C6  6E36               	movwf	(___flge@ff2+3)^0,c
  5594   0029C8                     l3468:
  5595   0029C8  AE32               	btfss	(___flge@ff1+3)^0,7,c
  5596   0029CA  EFE9  F014         	goto	u3241
  5597   0029CE  EFEB  F014         	goto	u3240
  5598   0029D2                     u3241:
  5599   0029D2  EFF4  F014         	goto	l3472
  5600   0029D6                     u3240:
  5601   0029D6  6C2F               	negf	___flge@ff1^0,c
  5602   0029D8  1E30               	comf	(___flge@ff1+1)^0,f,c
  5603   0029DA  B0D8               	btfsc	status,0,c
  5604   0029DC  2A30               	incf	(___flge@ff1+1)^0,f,c
  5605   0029DE  1E31               	comf	(___flge@ff1+2)^0,f,c
  5606   0029E0  B0D8               	btfsc	status,0,c
  5607   0029E2  2A31               	incf	(___flge@ff1+2)^0,f,c
  5608   0029E4  0E80               	movlw	128
  5609   0029E6  5632               	subfwb	(___flge@ff1+3)^0,f,c
  5610   0029E8                     l3472:
  5611   0029E8  AE36               	btfss	(___flge@ff2+3)^0,7,c
  5612   0029EA  EFF9  F014         	goto	u3251
  5613   0029EE  EFFB  F014         	goto	u3250
  5614   0029F2                     u3251:
  5615   0029F2  EF04  F015         	goto	l675
  5616   0029F6                     u3250:
  5617   0029F6  6C33               	negf	___flge@ff2^0,c
  5618   0029F8  1E34               	comf	(___flge@ff2+1)^0,f,c
  5619   0029FA  B0D8               	btfsc	status,0,c
  5620   0029FC  2A34               	incf	(___flge@ff2+1)^0,f,c
  5621   0029FE  1E35               	comf	(___flge@ff2+2)^0,f,c
  5622   002A00  B0D8               	btfsc	status,0,c
  5623   002A02  2A35               	incf	(___flge@ff2+2)^0,f,c
  5624   002A04  0E80               	movlw	128
  5625   002A06  5636               	subfwb	(___flge@ff2+3)^0,f,c
  5626   002A08                     l675:
  5627   002A08  0E00               	movlw	0
  5628   002A0A  1A2F               	xorwf	___flge@ff1^0,f,c
  5629   002A0C  0E00               	movlw	0
  5630   002A0E  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  5631   002A10  0E00               	movlw	0
  5632   002A12  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  5633   002A14  0E80               	movlw	128
  5634   002A16  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  5635   002A18  0E00               	movlw	0
  5636   002A1A  1A33               	xorwf	___flge@ff2^0,f,c
  5637   002A1C  0E00               	movlw	0
  5638   002A1E  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  5639   002A20  0E00               	movlw	0
  5640   002A22  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  5641   002A24  0E80               	movlw	128
  5642   002A26  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  5643   002A28  5033               	movf	___flge@ff2^0,w,c
  5644   002A2A  5C2F               	subwf	___flge@ff1^0,w,c
  5645   002A2C  5034               	movf	(___flge@ff2+1)^0,w,c
  5646   002A2E  5830               	subwfb	(___flge@ff1+1)^0,w,c
  5647   002A30  5035               	movf	(___flge@ff2+2)^0,w,c
  5648   002A32  5831               	subwfb	(___flge@ff1+2)^0,w,c
  5649   002A34  5036               	movf	(___flge@ff2+3)^0,w,c
  5650   002A36  5832               	subwfb	(___flge@ff1+3)^0,w,c
  5651   002A38  B0D8               	btfsc	status,0,c
  5652   002A3A  EF21  F015         	goto	u3261
  5653   002A3E  EF23  F015         	goto	u3260
  5654   002A42                     u3261:
  5655   002A42  EF26  F015         	goto	l3478
  5656   002A46                     u3260:
  5657   002A46  90D8               	bcf	status,0,c
  5658   002A48  EF27  F015         	goto	l680
  5659   002A4C                     l3478:
  5660   002A4C  80D8               	bsf	status,0,c
  5661   002A4E                     l680:
  5662   002A4E  0012               	return		;funcret
  5663   002A50                     __end_of___flge:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function ___fleq *****************
  5667 ;; Defined at:
  5668 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  ff1             4    0[COMRAM] unsigned char 
  5671 ;;  ff2             4    4[COMRAM] unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;		None               void
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5683 ;;      Params:         8       0       0       0       0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5685 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5686 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5687 ;;Total ram usage:       12 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_efgtoa
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text20
  5697   002C18                     __ptext20:
  5698                           	callstack 0
  5699   002C18                     ___fleq:
  5700                           	callstack 26
  5701   002C18  0E00               	movlw	0
  5702   002C1A  1401               	andwf	___fleq@ff1^0,w,c
  5703   002C1C  6E09               	movwf	??___fleq^0,c
  5704   002C1E  0E00               	movlw	0
  5705   002C20  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5706   002C22  6E0A               	movwf	(??___fleq+1)^0,c
  5707   002C24  0E80               	movlw	128
  5708   002C26  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5709   002C28  6E0B               	movwf	(??___fleq+2)^0,c
  5710   002C2A  0E7F               	movlw	127
  5711   002C2C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5712   002C2E  6E0C               	movwf	(??___fleq+3)^0,c
  5713   002C30  5009               	movf	??___fleq^0,w,c
  5714   002C32  100A               	iorwf	(??___fleq+1)^0,w,c
  5715   002C34  100B               	iorwf	(??___fleq+2)^0,w,c
  5716   002C36  100C               	iorwf	(??___fleq+3)^0,w,c
  5717   002C38  A4D8               	btfss	status,2,c
  5718   002C3A  EF21  F016         	goto	u3191
  5719   002C3E  EF23  F016         	goto	u3190
  5720   002C42                     u3191:
  5721   002C42  EF2B  F016         	goto	l3448
  5722   002C46                     u3190:
  5723   002C46  0E00               	movlw	0
  5724   002C48  6E01               	movwf	___fleq@ff1^0,c
  5725   002C4A  0E00               	movlw	0
  5726   002C4C  6E02               	movwf	(___fleq@ff1+1)^0,c
  5727   002C4E  0E00               	movlw	0
  5728   002C50  6E03               	movwf	(___fleq@ff1+2)^0,c
  5729   002C52  0E00               	movlw	0
  5730   002C54  6E04               	movwf	(___fleq@ff1+3)^0,c
  5731   002C56                     l3448:
  5732   002C56  0E00               	movlw	0
  5733   002C58  1405               	andwf	___fleq@ff2^0,w,c
  5734   002C5A  6E09               	movwf	??___fleq^0,c
  5735   002C5C  0E00               	movlw	0
  5736   002C5E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5737   002C60  6E0A               	movwf	(??___fleq+1)^0,c
  5738   002C62  0E80               	movlw	128
  5739   002C64  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5740   002C66  6E0B               	movwf	(??___fleq+2)^0,c
  5741   002C68  0E7F               	movlw	127
  5742   002C6A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5743   002C6C  6E0C               	movwf	(??___fleq+3)^0,c
  5744   002C6E  5009               	movf	??___fleq^0,w,c
  5745   002C70  100A               	iorwf	(??___fleq+1)^0,w,c
  5746   002C72  100B               	iorwf	(??___fleq+2)^0,w,c
  5747   002C74  100C               	iorwf	(??___fleq+3)^0,w,c
  5748   002C76  A4D8               	btfss	status,2,c
  5749   002C78  EF40  F016         	goto	u3201
  5750   002C7C  EF42  F016         	goto	u3200
  5751   002C80                     u3201:
  5752   002C80  EF4A  F016         	goto	l3452
  5753   002C84                     u3200:
  5754   002C84  0E00               	movlw	0
  5755   002C86  6E05               	movwf	___fleq@ff2^0,c
  5756   002C88  0E00               	movlw	0
  5757   002C8A  6E06               	movwf	(___fleq@ff2+1)^0,c
  5758   002C8C  0E00               	movlw	0
  5759   002C8E  6E07               	movwf	(___fleq@ff2+2)^0,c
  5760   002C90  0E00               	movlw	0
  5761   002C92  6E08               	movwf	(___fleq@ff2+3)^0,c
  5762   002C94                     l3452:
  5763   002C94  5005               	movf	___fleq@ff2^0,w,c
  5764   002C96  1801               	xorwf	___fleq@ff1^0,w,c
  5765   002C98  E10F               	bnz	u3210
  5766   002C9A  5006               	movf	(___fleq@ff2+1)^0,w,c
  5767   002C9C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5768   002C9E  E10C               	bnz	u3210
  5769   002CA0  5007               	movf	(___fleq@ff2+2)^0,w,c
  5770   002CA2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5771   002CA4  E109               	bnz	u3210
  5772   002CA6  5008               	movf	(___fleq@ff2+3)^0,w,c
  5773   002CA8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5774   002CAA  B4D8               	btfsc	status,2,c
  5775   002CAC  EF5A  F016         	goto	u3211
  5776   002CB0  EF5C  F016         	goto	u3210
  5777   002CB4                     u3211:
  5778   002CB4  EF5F  F016         	goto	l3456
  5779   002CB8                     u3210:
  5780   002CB8  90D8               	bcf	status,0,c
  5781   002CBA  EF60  F016         	goto	l669
  5782   002CBE                     l3456:
  5783   002CBE  80D8               	bsf	status,0,c
  5784   002CC0                     l669:
  5785   002CC0  0012               	return		;funcret
  5786   002CC2                     __end_of___fleq:
  5787                           	callstack 0
  5788                           
  5789 ;; *************** function ___fldiv *****************
  5790 ;; Defined at:
  5791 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  b               4   16[COMRAM] unsigned char 
  5794 ;;  a               4   20[COMRAM] unsigned char 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  grs             4   35[COMRAM] unsigned long 
  5797 ;;  rem             4   28[COMRAM] unsigned long 
  5798 ;;  new_exp         2   33[COMRAM] short 
  5799 ;;  aexp            1   40[COMRAM] unsigned char 
  5800 ;;  bexp            1   39[COMRAM] unsigned char 
  5801 ;;  sign            1   32[COMRAM] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  4   16[COMRAM] unsigned char 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5811 ;;      Params:         8       0       0       0       0       0       0       0       0
  5812 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5813 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5814 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5815 ;;Total ram usage:       25 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_main
  5821 ;;		_efgtoa
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text21
  5826   001B20                     __ptext21:
  5827                           	callstack 0
  5828   001B20                     ___fldiv:
  5829                           	callstack 26
  5830   001B20  5014               	movf	(___fldiv@b+3)^0,w,c
  5831   001B22  0B80               	andlw	128
  5832   001B24  6E21               	movwf	___fldiv@sign^0,c
  5833   001B26  5014               	movf	(___fldiv@b+3)^0,w,c
  5834   001B28  2414               	addwf	(___fldiv@b+3)^0,w,c
  5835   001B2A  6E28               	movwf	___fldiv@bexp^0,c
  5836   001B2C  AE13               	btfss	(___fldiv@b+2)^0,7,c
  5837   001B2E  EF9B  F00D         	goto	u2771
  5838   001B32  EF9D  F00D         	goto	u2770
  5839   001B36                     u2771:
  5840   001B36  EF9E  F00D         	goto	l3176
  5841   001B3A                     u2770:
  5842   001B3A  8028               	bsf	___fldiv@bexp^0,0,c
  5843   001B3C                     l3176:
  5844   001B3C  5028               	movf	___fldiv@bexp^0,w,c
  5845   001B3E  B4D8               	btfsc	status,2,c
  5846   001B40  EFA4  F00D         	goto	u2781
  5847   001B44  EFA6  F00D         	goto	u2780
  5848   001B48                     u2781:
  5849   001B48  EFBB  F00D         	goto	l3186
  5850   001B4C                     u2780:
  5851   001B4C  2828               	incf	___fldiv@bexp^0,w,c
  5852   001B4E  A4D8               	btfss	status,2,c
  5853   001B50  EFAC  F00D         	goto	u2791
  5854   001B54  EFAE  F00D         	goto	u2790
  5855   001B58                     u2791:
  5856   001B58  EFB6  F00D         	goto	l3182
  5857   001B5C                     u2790:
  5858   001B5C  0E00               	movlw	0
  5859   001B5E  6E11               	movwf	___fldiv@b^0,c
  5860   001B60  0E00               	movlw	0
  5861   001B62  6E12               	movwf	(___fldiv@b+1)^0,c
  5862   001B64  0E00               	movlw	0
  5863   001B66  6E13               	movwf	(___fldiv@b+2)^0,c
  5864   001B68  0E00               	movlw	0
  5865   001B6A  6E14               	movwf	(___fldiv@b+3)^0,c
  5866   001B6C                     l3182:
  5867   001B6C  8E13               	bsf	(___fldiv@b+2)^0,7,c
  5868   001B6E  0E00               	movlw	0
  5869   001B70  6E14               	movwf	(___fldiv@b+3)^0,c
  5870   001B72  EFC3  F00D         	goto	l3188
  5871   001B76                     l3186:
  5872   001B76  0E00               	movlw	0
  5873   001B78  6E11               	movwf	___fldiv@b^0,c
  5874   001B7A  0E00               	movlw	0
  5875   001B7C  6E12               	movwf	(___fldiv@b+1)^0,c
  5876   001B7E  0E00               	movlw	0
  5877   001B80  6E13               	movwf	(___fldiv@b+2)^0,c
  5878   001B82  0E00               	movlw	0
  5879   001B84  6E14               	movwf	(___fldiv@b+3)^0,c
  5880   001B86                     l3188:
  5881   001B86  5018               	movf	(___fldiv@a+3)^0,w,c
  5882   001B88  0B80               	andlw	128
  5883   001B8A  1A21               	xorwf	___fldiv@sign^0,f,c
  5884   001B8C  5018               	movf	(___fldiv@a+3)^0,w,c
  5885   001B8E  2418               	addwf	(___fldiv@a+3)^0,w,c
  5886   001B90  6E29               	movwf	___fldiv@aexp^0,c
  5887   001B92  AE17               	btfss	(___fldiv@a+2)^0,7,c
  5888   001B94  EFCE  F00D         	goto	u2801
  5889   001B98  EFD0  F00D         	goto	u2800
  5890   001B9C                     u2801:
  5891   001B9C  EFD1  F00D         	goto	l3196
  5892   001BA0                     u2800:
  5893   001BA0  8029               	bsf	___fldiv@aexp^0,0,c
  5894   001BA2                     l3196:
  5895   001BA2  5029               	movf	___fldiv@aexp^0,w,c
  5896   001BA4  B4D8               	btfsc	status,2,c
  5897   001BA6  EFD7  F00D         	goto	u2811
  5898   001BAA  EFD9  F00D         	goto	u2810
  5899   001BAE                     u2811:
  5900   001BAE  EFEE  F00D         	goto	l3206
  5901   001BB2                     u2810:
  5902   001BB2  2829               	incf	___fldiv@aexp^0,w,c
  5903   001BB4  A4D8               	btfss	status,2,c
  5904   001BB6  EFDF  F00D         	goto	u2821
  5905   001BBA  EFE1  F00D         	goto	u2820
  5906   001BBE                     u2821:
  5907   001BBE  EFE9  F00D         	goto	l3202
  5908   001BC2                     u2820:
  5909   001BC2  0E00               	movlw	0
  5910   001BC4  6E15               	movwf	___fldiv@a^0,c
  5911   001BC6  0E00               	movlw	0
  5912   001BC8  6E16               	movwf	(___fldiv@a+1)^0,c
  5913   001BCA  0E00               	movlw	0
  5914   001BCC  6E17               	movwf	(___fldiv@a+2)^0,c
  5915   001BCE  0E00               	movlw	0
  5916   001BD0  6E18               	movwf	(___fldiv@a+3)^0,c
  5917   001BD2                     l3202:
  5918   001BD2  8E17               	bsf	(___fldiv@a+2)^0,7,c
  5919   001BD4  0E00               	movlw	0
  5920   001BD6  6E18               	movwf	(___fldiv@a+3)^0,c
  5921   001BD8  EFF6  F00D         	goto	l3208
  5922   001BDC                     l3206:
  5923   001BDC  0E00               	movlw	0
  5924   001BDE  6E15               	movwf	___fldiv@a^0,c
  5925   001BE0  0E00               	movlw	0
  5926   001BE2  6E16               	movwf	(___fldiv@a+1)^0,c
  5927   001BE4  0E00               	movlw	0
  5928   001BE6  6E17               	movwf	(___fldiv@a+2)^0,c
  5929   001BE8  0E00               	movlw	0
  5930   001BEA  6E18               	movwf	(___fldiv@a+3)^0,c
  5931   001BEC                     l3208:
  5932   001BEC  5015               	movf	___fldiv@a^0,w,c
  5933   001BEE  1016               	iorwf	(___fldiv@a+1)^0,w,c
  5934   001BF0  1017               	iorwf	(___fldiv@a+2)^0,w,c
  5935   001BF2  1018               	iorwf	(___fldiv@a+3)^0,w,c
  5936   001BF4  A4D8               	btfss	status,2,c
  5937   001BF6  EFFF  F00D         	goto	u2831
  5938   001BFA  EF01  F00E         	goto	u2830
  5939   001BFE                     u2831:
  5940   001BFE  EF19  F00E         	goto	l3220
  5941   001C02                     u2830:
  5942   001C02  0E00               	movlw	0
  5943   001C04  6E11               	movwf	___fldiv@b^0,c
  5944   001C06  0E00               	movlw	0
  5945   001C08  6E12               	movwf	(___fldiv@b+1)^0,c
  5946   001C0A  0E00               	movlw	0
  5947   001C0C  6E13               	movwf	(___fldiv@b+2)^0,c
  5948   001C0E  0E00               	movlw	0
  5949   001C10  6E14               	movwf	(___fldiv@b+3)^0,c
  5950   001C12  0E80               	movlw	128
  5951   001C14  1213               	iorwf	(___fldiv@b+2)^0,f,c
  5952   001C16  0E7F               	movlw	127
  5953   001C18  1214               	iorwf	(___fldiv@b+3)^0,f,c
  5954   001C1A                     l3214:
  5955   001C1A  5021               	movf	___fldiv@sign^0,w,c
  5956   001C1C  1214               	iorwf	(___fldiv@b+3)^0,f,c
  5957   001C1E  C011  F011         	movff	___fldiv@b,?___fldiv
  5958   001C22  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  5959   001C26  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  5960   001C2A  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  5961   001C2E  EF5C  F00F         	goto	l992
  5962   001C32                     l3220:
  5963   001C32  5028               	movf	___fldiv@bexp^0,w,c
  5964   001C34  A4D8               	btfss	status,2,c
  5965   001C36  EF1F  F00E         	goto	u2841
  5966   001C3A  EF21  F00E         	goto	u2840
  5967   001C3E                     u2841:
  5968   001C3E  EF2B  F00E         	goto	l3228
  5969   001C42                     u2840:
  5970   001C42  0E00               	movlw	0
  5971   001C44  6E11               	movwf	?___fldiv^0,c
  5972   001C46  0E00               	movlw	0
  5973   001C48  6E12               	movwf	(?___fldiv+1)^0,c
  5974   001C4A  0E00               	movlw	0
  5975   001C4C  6E13               	movwf	(?___fldiv+2)^0,c
  5976   001C4E  0E00               	movlw	0
  5977   001C50  6E14               	movwf	(?___fldiv+3)^0,c
  5978   001C52  EF5C  F00F         	goto	l992
  5979   001C56                     l3228:
  5980   001C56  5029               	movf	___fldiv@aexp^0,w,c
  5981   001C58  C028  F019         	movff	___fldiv@bexp,??___fldiv
  5982   001C5C  6A1A               	clrf	(??___fldiv+1)^0,c
  5983   001C5E  5E19               	subwf	??___fldiv^0,f,c
  5984   001C60  0E00               	movlw	0
  5985   001C62  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  5986   001C64  0E7F               	movlw	127
  5987   001C66  2419               	addwf	??___fldiv^0,w,c
  5988   001C68  6E22               	movwf	___fldiv@new_exp^0,c
  5989   001C6A  0E00               	movlw	0
  5990   001C6C  201A               	addwfc	(??___fldiv+1)^0,w,c
  5991   001C6E  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  5992   001C70  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  5993   001C74  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  5994   001C78  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  5995   001C7C  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  5996   001C80  0E00               	movlw	0
  5997   001C82  6E11               	movwf	___fldiv@b^0,c
  5998   001C84  0E00               	movlw	0
  5999   001C86  6E12               	movwf	(___fldiv@b+1)^0,c
  6000   001C88  0E00               	movlw	0
  6001   001C8A  6E13               	movwf	(___fldiv@b+2)^0,c
  6002   001C8C  0E00               	movlw	0
  6003   001C8E  6E14               	movwf	(___fldiv@b+3)^0,c
  6004   001C90  0E00               	movlw	0
  6005   001C92  6E24               	movwf	___fldiv@grs^0,c
  6006   001C94  0E00               	movlw	0
  6007   001C96  6E25               	movwf	(___fldiv@grs+1)^0,c
  6008   001C98  0E00               	movlw	0
  6009   001C9A  6E26               	movwf	(___fldiv@grs+2)^0,c
  6010   001C9C  0E00               	movlw	0
  6011   001C9E  6E27               	movwf	(___fldiv@grs+3)^0,c
  6012   001CA0  0E00               	movlw	0
  6013   001CA2  6E29               	movwf	___fldiv@aexp^0,c
  6014   001CA4  EF8C  F00E         	goto	l994
  6015   001CA8                     l3238:
  6016   001CA8  5029               	movf	___fldiv@aexp^0,w,c
  6017   001CAA  B4D8               	btfsc	status,2,c
  6018   001CAC  EF5A  F00E         	goto	u2851
  6019   001CB0  EF5C  F00E         	goto	u2850
  6020   001CB4                     u2851:
  6021   001CB4  EF73  F00E         	goto	l3246
  6022   001CB8                     u2850:
  6023   001CB8  90D8               	bcf	status,0,c
  6024   001CBA  361D               	rlcf	___fldiv@rem^0,f,c
  6025   001CBC  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  6026   001CBE  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  6027   001CC0  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  6028   001CC2  90D8               	bcf	status,0,c
  6029   001CC4  3611               	rlcf	___fldiv@b^0,f,c
  6030   001CC6  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6031   001CC8  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6032   001CCA  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6033   001CCC  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6034   001CCE  EF6B  F00E         	goto	u2861
  6035   001CD2  EF6D  F00E         	goto	u2860
  6036   001CD6                     u2861:
  6037   001CD6  EF6E  F00E         	goto	l997
  6038   001CDA                     u2860:
  6039   001CDA  8011               	bsf	___fldiv@b^0,0,c
  6040   001CDC                     l997:
  6041   001CDC  90D8               	bcf	status,0,c
  6042   001CDE  3624               	rlcf	___fldiv@grs^0,f,c
  6043   001CE0  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6044   001CE2  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6045   001CE4  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6046   001CE6                     l3246:
  6047   001CE6  5015               	movf	___fldiv@a^0,w,c
  6048   001CE8  5C1D               	subwf	___fldiv@rem^0,w,c
  6049   001CEA  5016               	movf	(___fldiv@a+1)^0,w,c
  6050   001CEC  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  6051   001CEE  5017               	movf	(___fldiv@a+2)^0,w,c
  6052   001CF0  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  6053   001CF2  5018               	movf	(___fldiv@a+3)^0,w,c
  6054   001CF4  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  6055   001CF6  A0D8               	btfss	status,0,c
  6056   001CF8  EF80  F00E         	goto	u2871
  6057   001CFC  EF82  F00E         	goto	u2870
  6058   001D00                     u2871:
  6059   001D00  EF8B  F00E         	goto	l3252
  6060   001D04                     u2870:
  6061   001D04  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  6062   001D06  5015               	movf	___fldiv@a^0,w,c
  6063   001D08  5E1D               	subwf	___fldiv@rem^0,f,c
  6064   001D0A  5016               	movf	(___fldiv@a+1)^0,w,c
  6065   001D0C  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  6066   001D0E  5017               	movf	(___fldiv@a+2)^0,w,c
  6067   001D10  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  6068   001D12  5018               	movf	(___fldiv@a+3)^0,w,c
  6069   001D14  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  6070   001D16                     l3252:
  6071   001D16  2A29               	incf	___fldiv@aexp^0,f,c
  6072   001D18                     l994:
  6073   001D18  0E19               	movlw	25
  6074   001D1A  6429               	cpfsgt	___fldiv@aexp^0,c
  6075   001D1C  EF92  F00E         	goto	u2881
  6076   001D20  EF94  F00E         	goto	u2880
  6077   001D24                     u2881:
  6078   001D24  EF54  F00E         	goto	l3238
  6079   001D28                     u2880:
  6080   001D28  501D               	movf	___fldiv@rem^0,w,c
  6081   001D2A  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  6082   001D2C  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  6083   001D2E  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  6084   001D30  B4D8               	btfsc	status,2,c
  6085   001D32  EF9D  F00E         	goto	u2891
  6086   001D36  EF9F  F00E         	goto	u2890
  6087   001D3A                     u2891:
  6088   001D3A  EFB7  F00E         	goto	l3264
  6089   001D3E                     u2890:
  6090   001D3E  8024               	bsf	___fldiv@grs^0,0,c
  6091   001D40  EFB7  F00E         	goto	l3264
  6092   001D44                     l3258:
  6093   001D44  90D8               	bcf	status,0,c
  6094   001D46  3611               	rlcf	___fldiv@b^0,f,c
  6095   001D48  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6096   001D4A  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6097   001D4C  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6098   001D4E  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6099   001D50  EFAC  F00E         	goto	u2901
  6100   001D54  EFAE  F00E         	goto	u2900
  6101   001D58                     u2901:
  6102   001D58  EFAF  F00E         	goto	l1003
  6103   001D5C                     u2900:
  6104   001D5C  8011               	bsf	___fldiv@b^0,0,c
  6105   001D5E                     l1003:
  6106   001D5E  90D8               	bcf	status,0,c
  6107   001D60  3624               	rlcf	___fldiv@grs^0,f,c
  6108   001D62  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6109   001D64  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6110   001D66  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6111   001D68  0622               	decf	___fldiv@new_exp^0,f,c
  6112   001D6A  A0D8               	btfss	status,0,c
  6113   001D6C  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  6114   001D6E                     l3264:
  6115   001D6E  AE13               	btfss	(___fldiv@b+2)^0,7,c
  6116   001D70  EFBC  F00E         	goto	u2911
  6117   001D74  EFBE  F00E         	goto	u2910
  6118   001D78                     u2911:
  6119   001D78  EFA2  F00E         	goto	l3258
  6120   001D7C                     u2910:
  6121   001D7C  0E00               	movlw	0
  6122   001D7E  6E29               	movwf	___fldiv@aexp^0,c
  6123   001D80  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6124   001D82  EFC5  F00E         	goto	u2921
  6125   001D86  EFC7  F00E         	goto	u2920
  6126   001D8A                     u2921:
  6127   001D8A  EFEB  F00E         	goto	l1005
  6128   001D8E                     u2920:
  6129   001D8E  0EFF               	movlw	255
  6130   001D90  1424               	andwf	___fldiv@grs^0,w,c
  6131   001D92  6E19               	movwf	??___fldiv^0,c
  6132   001D94  0EFF               	movlw	255
  6133   001D96  1425               	andwf	(___fldiv@grs+1)^0,w,c
  6134   001D98  6E1A               	movwf	(??___fldiv+1)^0,c
  6135   001D9A  0EFF               	movlw	255
  6136   001D9C  1426               	andwf	(___fldiv@grs+2)^0,w,c
  6137   001D9E  6E1B               	movwf	(??___fldiv+2)^0,c
  6138   001DA0  0E7F               	movlw	127
  6139   001DA2  1427               	andwf	(___fldiv@grs+3)^0,w,c
  6140   001DA4  6E1C               	movwf	(??___fldiv+3)^0,c
  6141   001DA6  5019               	movf	??___fldiv^0,w,c
  6142   001DA8  101A               	iorwf	(??___fldiv+1)^0,w,c
  6143   001DAA  101B               	iorwf	(??___fldiv+2)^0,w,c
  6144   001DAC  101C               	iorwf	(??___fldiv+3)^0,w,c
  6145   001DAE  B4D8               	btfsc	status,2,c
  6146   001DB0  EFDC  F00E         	goto	u2931
  6147   001DB4  EFDE  F00E         	goto	u2930
  6148   001DB8                     u2931:
  6149   001DB8  EFE2  F00E         	goto	l1006
  6150   001DBC                     u2930:
  6151   001DBC                     l3272:
  6152   001DBC  0E01               	movlw	1
  6153   001DBE  6E29               	movwf	___fldiv@aexp^0,c
  6154   001DC0  EFEB  F00E         	goto	l1005
  6155   001DC4                     l1006:
  6156   001DC4  A011               	btfss	___fldiv@b^0,0,c
  6157   001DC6  EFE7  F00E         	goto	u2941
  6158   001DCA  EFE9  F00E         	goto	u2940
  6159   001DCE                     u2941:
  6160   001DCE  EFEB  F00E         	goto	l1005
  6161   001DD2                     u2940:
  6162   001DD2  EFDE  F00E         	goto	l3272
  6163   001DD6                     l1005:
  6164   001DD6  5029               	movf	___fldiv@aexp^0,w,c
  6165   001DD8  B4D8               	btfsc	status,2,c
  6166   001DDA  EFF1  F00E         	goto	u2951
  6167   001DDE  EFF3  F00E         	goto	u2950
  6168   001DE2                     u2951:
  6169   001DE2  EF17  F00F         	goto	l3284
  6170   001DE6                     u2950:
  6171   001DE6  0E01               	movlw	1
  6172   001DE8  2611               	addwf	___fldiv@b^0,f,c
  6173   001DEA  0E00               	movlw	0
  6174   001DEC  2212               	addwfc	(___fldiv@b+1)^0,f,c
  6175   001DEE  2213               	addwfc	(___fldiv@b+2)^0,f,c
  6176   001DF0  2214               	addwfc	(___fldiv@b+3)^0,f,c
  6177   001DF2  A014               	btfss	(___fldiv@b+3)^0,0,c
  6178   001DF4  EFFE  F00E         	goto	u2961
  6179   001DF8  EF00  F00F         	goto	u2960
  6180   001DFC                     u2961:
  6181   001DFC  EF17  F00F         	goto	l3284
  6182   001E00                     u2960:
  6183   001E00  C011  F019         	movff	___fldiv@b,??___fldiv
  6184   001E04  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  6185   001E08  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  6186   001E0C  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  6187   001E10  341C               	rlcf	(??___fldiv+3)^0,w,c
  6188   001E12  321C               	rrcf	(??___fldiv+3)^0,f,c
  6189   001E14  321B               	rrcf	(??___fldiv+2)^0,f,c
  6190   001E16  321A               	rrcf	(??___fldiv+1)^0,f,c
  6191   001E18  3219               	rrcf	??___fldiv^0,f,c
  6192   001E1A  C019  F011         	movff	??___fldiv,___fldiv@b
  6193   001E1E  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  6194   001E22  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  6195   001E26  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  6196   001E2A  4A22               	infsnz	___fldiv@new_exp^0,f,c
  6197   001E2C  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
  6198   001E2E                     l3284:
  6199   001E2E  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6200   001E30  EF22  F00F         	goto	u2971
  6201   001E34  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6202   001E36  E108               	bnz	u2970
  6203   001E38  2822               	incf	___fldiv@new_exp^0,w,c
  6204   001E3A  A0D8               	btfss	status,0,c
  6205   001E3C  EF22  F00F         	goto	u2971
  6206   001E40  EF24  F00F         	goto	u2970
  6207   001E44                     u2971:
  6208   001E44  EF2F  F00F         	goto	l3288
  6209   001E48                     u2970:
  6210   001E48  0E00               	movlw	0
  6211   001E4A  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6212   001E4C  6822               	setf	___fldiv@new_exp^0,c
  6213   001E4E  0E00               	movlw	0
  6214   001E50  6E11               	movwf	___fldiv@b^0,c
  6215   001E52  0E00               	movlw	0
  6216   001E54  6E12               	movwf	(___fldiv@b+1)^0,c
  6217   001E56  0E00               	movlw	0
  6218   001E58  6E13               	movwf	(___fldiv@b+2)^0,c
  6219   001E5A  0E00               	movlw	0
  6220   001E5C  6E14               	movwf	(___fldiv@b+3)^0,c
  6221   001E5E                     l3288:
  6222   001E5E  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6223   001E60  EF3C  F00F         	goto	u2980
  6224   001E64  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6225   001E66  E106               	bnz	u2981
  6226   001E68  0422               	decf	___fldiv@new_exp^0,w,c
  6227   001E6A  B0D8               	btfsc	status,0,c
  6228   001E6C  EF3A  F00F         	goto	u2981
  6229   001E70  EF3C  F00F         	goto	u2980
  6230   001E74                     u2981:
  6231   001E74  EF4A  F00F         	goto	l3292
  6232   001E78                     u2980:
  6233   001E78  0E00               	movlw	0
  6234   001E7A  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6235   001E7C  0E00               	movlw	0
  6236   001E7E  6E22               	movwf	___fldiv@new_exp^0,c
  6237   001E80  0E00               	movlw	0
  6238   001E82  6E11               	movwf	___fldiv@b^0,c
  6239   001E84  0E00               	movlw	0
  6240   001E86  6E12               	movwf	(___fldiv@b+1)^0,c
  6241   001E88  0E00               	movlw	0
  6242   001E8A  6E13               	movwf	(___fldiv@b+2)^0,c
  6243   001E8C  0E00               	movlw	0
  6244   001E8E  6E14               	movwf	(___fldiv@b+3)^0,c
  6245   001E90  0E00               	movlw	0
  6246   001E92  6E21               	movwf	___fldiv@sign^0,c
  6247   001E94                     l3292:
  6248   001E94  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  6249   001E98  A028               	btfss	___fldiv@bexp^0,0,c
  6250   001E9A  EF51  F00F         	goto	u2991
  6251   001E9E  EF53  F00F         	goto	u2990
  6252   001EA2                     u2991:
  6253   001EA2  EF56  F00F         	goto	l3298
  6254   001EA6                     u2990:
  6255   001EA6  8E13               	bsf	(___fldiv@b+2)^0,7,c
  6256   001EA8  EF57  F00F         	goto	l3300
  6257   001EAC                     l3298:
  6258   001EAC  9E13               	bcf	(___fldiv@b+2)^0,7,c
  6259   001EAE                     l3300:
  6260   001EAE  90D8               	bcf	status,0,c
  6261   001EB0  3028               	rrcf	___fldiv@bexp^0,w,c
  6262   001EB2  6E14               	movwf	(___fldiv@b+3)^0,c
  6263   001EB4  EF0D  F00E         	goto	l3214
  6264   001EB8                     l992:
  6265   001EB8  0012               	return		;funcret
  6266   001EBA                     __end_of___fldiv:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _atoi *****************
  6270 ;; Defined at:
  6271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6274 ;;		 -> STR_1(13), 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  n               2   13[COMRAM] int 
  6277 ;;  neg             2   11[COMRAM] int 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  2    6[COMRAM] int 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6287 ;;      Params:         2       0       0       0       0       0       0       0       0
  6288 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6289 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6290 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6291 ;;Total ram usage:        9 bytes
  6292 ;; Hardware stack levels used: 1
  6293 ;; Hardware stack levels required when called: 1
  6294 ;; This function calls:
  6295 ;;		___wmul
  6296 ;;		_isdigit
  6297 ;;		_isspace
  6298 ;; This function is called by:
  6299 ;;		_vfpfcnvrt
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text22
  6304   0026FC                     __ptext22:
  6305                           	callstack 0
  6306   0026FC                     _atoi:
  6307                           	callstack 26
  6308   0026FC  0E00               	movlw	0
  6309   0026FE  6E0F               	movwf	(atoi@n+1)^0,c
  6310   002700  0E00               	movlw	0
  6311   002702  6E0E               	movwf	atoi@n^0,c
  6312   002704  0E00               	movlw	0
  6313   002706  6E0D               	movwf	(atoi@neg+1)^0,c
  6314   002708  0E00               	movlw	0
  6315   00270A  6E0C               	movwf	atoi@neg^0,c
  6316   00270C  EF8A  F013         	goto	l3862
  6317   002710                     l3858:
  6318   002710  4A07               	infsnz	atoi@s^0,f,c
  6319   002712  2A08               	incf	(atoi@s+1)^0,f,c
  6320   002714                     l3862:
  6321   002714  C007  FFF6         	movff	atoi@s,tblptrl
  6322   002718  C008  FFF7         	movff	atoi@s+1,tblptrh
  6323   00271C                     	if	0	;tblptru may be non-zero
  6324   00271C                     	endif
  6325   00271C                     	if	0	;tblptru may be non-zero
  6326   00271C                     	endif
  6327   00271C  0008               	tblrd		*
  6328   00271E  50F5               	movf	tablat,w,c
  6329   002720  0A20               	xorlw	32
  6330   002722  B4D8               	btfsc	status,2,c
  6331   002724  EF96  F013         	goto	u3931
  6332   002728  EF98  F013         	goto	u3930
  6333   00272C                     u3931:
  6334   00272C  EF88  F013         	goto	l3858
  6335   002730                     u3930:
  6336   002730  C007  FFF6         	movff	atoi@s,tblptrl
  6337   002734  C008  FFF7         	movff	atoi@s+1,tblptrh
  6338   002738                     	if	0	;tblptru may be non-zero
  6339   002738                     	endif
  6340   002738                     	if	0	;tblptru may be non-zero
  6341   002738                     	endif
  6342   002738  0008               	tblrd		*
  6343   00273A  CFF5 F009          	movff	tablat,??_atoi
  6344   00273E  0EF7               	movlw	247
  6345   002740  2409               	addwf	??_atoi^0,w,c
  6346   002742  6E0A               	movwf	(??_atoi+1)^0,c
  6347   002744  6A0B               	clrf	(??_atoi+2)^0,c
  6348   002746  0EFF               	movlw	255
  6349   002748  220B               	addwfc	(??_atoi+2)^0,f,c
  6350   00274A  500B               	movf	(??_atoi+2)^0,w,c
  6351   00274C  E109               	bnz	u3940
  6352   00274E  0E05               	movlw	5
  6353   002750  5C0A               	subwf	(??_atoi+1)^0,w,c
  6354   002752  A0D8               	btfss	status,0,c
  6355   002754  EFAE  F013         	goto	u3941
  6356   002758  EFB0  F013         	goto	u3940
  6357   00275C                     u3941:
  6358   00275C  EF88  F013         	goto	l3858
  6359   002760                     u3940:
  6360   002760  EFBA  F013         	goto	l3870
  6361   002764                     l3866:
  6362   002764  0E00               	movlw	0
  6363   002766  6E0D               	movwf	(atoi@neg+1)^0,c
  6364   002768  0E01               	movlw	1
  6365   00276A  6E0C               	movwf	atoi@neg^0,c
  6366   00276C                     l3868:
  6367   00276C  4A07               	infsnz	atoi@s^0,f,c
  6368   00276E  2A08               	incf	(atoi@s+1)^0,f,c
  6369   002770  EFEF  F013         	goto	l3878
  6370   002774                     l3870:
  6371   002774  C007  FFF6         	movff	atoi@s,tblptrl
  6372   002778  C008  FFF7         	movff	atoi@s+1,tblptrh
  6373   00277C                     	if	0	;tblptru may be non-zero
  6374   00277C                     	endif
  6375   00277C                     	if	0	;tblptru may be non-zero
  6376   00277C                     	endif
  6377   00277C  0008               	tblrd		*
  6378   00277E  50F5               	movf	tablat,w,c
  6379   002780  6E09               	movwf	??_atoi^0,c
  6380   002782  6A0A               	clrf	(??_atoi+1)^0,c
  6381                           
  6382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6383                           ; Switch size 1, requested type "simple"
  6384                           ; Number of cases is 1, Range of values is 0 to 0
  6385                           ; switch strategies available:
  6386                           ; Name         Instructions Cycles
  6387                           ; simple_byte            4     3 (average)
  6388                           ;	Chosen strategy is simple_byte
  6389   002784  500A               	movf	(??_atoi+1)^0,w,c
  6390   002786  0A00               	xorlw	0	; case 0
  6391   002788  B4D8               	btfsc	status,2,c
  6392   00278A  EFC9  F013         	goto	l4346
  6393   00278E  EFEF  F013         	goto	l3878
  6394   002792                     l4346:
  6395                           
  6396                           ; Switch size 1, requested type "simple"
  6397                           ; Number of cases is 2, Range of values is 43 to 45
  6398                           ; switch strategies available:
  6399                           ; Name         Instructions Cycles
  6400                           ; simple_byte            7     4 (average)
  6401                           ;	Chosen strategy is simple_byte
  6402   002792  5009               	movf	??_atoi^0,w,c
  6403   002794  0A2B               	xorlw	43	; case 43
  6404   002796  B4D8               	btfsc	status,2,c
  6405   002798  EFB6  F013         	goto	l3868
  6406   00279C  0A06               	xorlw	6	; case 45
  6407   00279E  B4D8               	btfsc	status,2,c
  6408   0027A0  EFB2  F013         	goto	l3866
  6409   0027A4  EFEF  F013         	goto	l3878
  6410   0027A8                     l3872:
  6411   0027A8  C00E  F001         	movff	atoi@n,___wmul@multiplier
  6412   0027AC  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6413   0027B0  0E00               	movlw	0
  6414   0027B2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6415   0027B4  0E0A               	movlw	10
  6416   0027B6  6E03               	movwf	___wmul@multiplicand^0,c
  6417   0027B8  ECF8  F018         	call	___wmul	;wreg free
  6418   0027BC  C007  FFF6         	movff	atoi@s,tblptrl
  6419   0027C0  C008  FFF7         	movff	atoi@s+1,tblptrh
  6420   0027C4                     	if	0	;tblptru may be non-zero
  6421   0027C4                     	endif
  6422   0027C4                     	if	0	;tblptru may be non-zero
  6423   0027C4                     	endif
  6424   0027C4  0008               	tblrd		*
  6425   0027C6  50F5               	movf	tablat,w,c
  6426   0027C8  5E01               	subwf	?___wmul^0,f,c
  6427   0027CA  0E00               	movlw	0
  6428   0027CC  5A02               	subwfb	(?___wmul+1)^0,f,c
  6429   0027CE  0E30               	movlw	48
  6430   0027D0  2401               	addwf	?___wmul^0,w,c
  6431   0027D2  6E0E               	movwf	atoi@n^0,c
  6432   0027D4  0E00               	movlw	0
  6433   0027D6  2002               	addwfc	(?___wmul+1)^0,w,c
  6434   0027D8  6E0F               	movwf	(atoi@n+1)^0,c
  6435   0027DA  EFB6  F013         	goto	l3868
  6436   0027DE                     l3878:
  6437   0027DE  C007  FFF6         	movff	atoi@s,tblptrl
  6438   0027E2  C008  FFF7         	movff	atoi@s+1,tblptrh
  6439   0027E6                     	if	0	;tblptru may be non-zero
  6440   0027E6                     	endif
  6441   0027E6                     	if	0	;tblptru may be non-zero
  6442   0027E6                     	endif
  6443   0027E6  0008               	tblrd		*
  6444   0027E8  CFF5 F009          	movff	tablat,??_atoi
  6445   0027EC  0ED0               	movlw	208
  6446   0027EE  2409               	addwf	??_atoi^0,w,c
  6447   0027F0  6E0A               	movwf	(??_atoi+1)^0,c
  6448   0027F2  6A0B               	clrf	(??_atoi+2)^0,c
  6449   0027F4  0EFF               	movlw	255
  6450   0027F6  220B               	addwfc	(??_atoi+2)^0,f,c
  6451   0027F8  500B               	movf	(??_atoi+2)^0,w,c
  6452   0027FA  E109               	bnz	u3950
  6453   0027FC  0E0A               	movlw	10
  6454   0027FE  5C0A               	subwf	(??_atoi+1)^0,w,c
  6455   002800  A0D8               	btfss	status,0,c
  6456   002802  EF05  F014         	goto	u3951
  6457   002806  EF07  F014         	goto	u3950
  6458   00280A                     u3951:
  6459   00280A  EFD4  F013         	goto	l3872
  6460   00280E                     u3950:
  6461   00280E  500C               	movf	atoi@neg^0,w,c
  6462   002810  100D               	iorwf	(atoi@neg+1)^0,w,c
  6463   002812  A4D8               	btfss	status,2,c
  6464   002814  EF0E  F014         	goto	u3961
  6465   002818  EF10  F014         	goto	u3960
  6466   00281C                     u3961:
  6467   00281C  EF1E  F014         	goto	l1245
  6468   002820                     u3960:
  6469   002820  C00E  F009         	movff	atoi@n,??_atoi
  6470   002824  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  6471   002828  1E09               	comf	??_atoi^0,f,c
  6472   00282A  1E0A               	comf	(??_atoi+1)^0,f,c
  6473   00282C  4A09               	infsnz	??_atoi^0,f,c
  6474   00282E  2A0A               	incf	(??_atoi+1)^0,f,c
  6475   002830  C009  F007         	movff	??_atoi,?_atoi
  6476   002834  C00A  F008         	movff	??_atoi+1,?_atoi+1
  6477   002838  EF22  F014         	goto	l1248
  6478   00283C                     l1245:
  6479   00283C  C00E  F007         	movff	atoi@n,?_atoi
  6480   002840  C00F  F008         	movff	atoi@n+1,?_atoi+1
  6481   002844                     l1248:
  6482   002844  0012               	return		;funcret
  6483   002846                     __end_of_atoi:
  6484                           	callstack 0
  6485                           
  6486 ;; *************** function _isspace *****************
  6487 ;; Defined at:
  6488 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;  c               2    0[COMRAM] int 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  2    0[COMRAM] int 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6502 ;;      Params:         2       0       0       0       0       0       0       0       0
  6503 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6504 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6505 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6506 ;;Total ram usage:        5 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_atoi
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text23
  6516   003042                     __ptext23:
  6517                           	callstack 0
  6518   003042                     _isspace:
  6519                           	callstack 26
  6520   003042  0E01               	movlw	1
  6521   003044  6E05               	movwf	_isspace$2010^0,c
  6522   003046  0E20               	movlw	32
  6523   003048  1801               	xorwf	isspace@c^0,w,c
  6524   00304A  1002               	iorwf	(isspace@c+1)^0,w,c
  6525   00304C  B4D8               	btfsc	status,2,c
  6526   00304E  EF2B  F018         	goto	u3591
  6527   003052  EF2D  F018         	goto	u3590
  6528   003056                     u3591:
  6529   003056  EF40  F018         	goto	l3630
  6530   00305A                     u3590:
  6531   00305A  0EF7               	movlw	247
  6532   00305C  2401               	addwf	isspace@c^0,w,c
  6533   00305E  6E03               	movwf	??_isspace^0,c
  6534   003060  0EFF               	movlw	255
  6535   003062  2002               	addwfc	(isspace@c+1)^0,w,c
  6536   003064  6E04               	movwf	(??_isspace+1)^0,c
  6537   003066  5004               	movf	(??_isspace+1)^0,w,c
  6538   003068  E109               	bnz	u3600
  6539   00306A  0E05               	movlw	5
  6540   00306C  5C03               	subwf	??_isspace^0,w,c
  6541   00306E  A0D8               	btfss	status,0,c
  6542   003070  EF3C  F018         	goto	u3601
  6543   003074  EF3E  F018         	goto	u3600
  6544   003078                     u3601:
  6545   003078  EF40  F018         	goto	l3630
  6546   00307C                     u3600:
  6547   00307C  0E00               	movlw	0
  6548   00307E  6E05               	movwf	_isspace$2010^0,c
  6549   003080                     l3630:
  6550   003080  C005  F001         	movff	_isspace$2010,?_isspace
  6551   003084  6A02               	clrf	(?_isspace+1)^0,c
  6552   003086  0012               	return		;funcret
  6553   003088                     __end_of_isspace:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function _isdigit *****************
  6557 ;; Defined at:
  6558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  c               2    0[COMRAM] int 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2    0[COMRAM] int 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6572 ;;      Params:         2       0       0       0       0       0       0       0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6574 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6575 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6576 ;;Total ram usage:        4 bytes
  6577 ;; Hardware stack levels used: 1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_vfpfcnvrt
  6582 ;;		_atoi
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text24
  6587   0031C4                     __ptext24:
  6588                           	callstack 0
  6589   0031C4                     _isdigit:
  6590                           	callstack 27
  6591   0031C4  0ED0               	movlw	208
  6592   0031C6  2401               	addwf	isdigit@c^0,w,c
  6593   0031C8  6E03               	movwf	??_isdigit^0,c
  6594   0031CA  0EFF               	movlw	255
  6595   0031CC  2002               	addwfc	(isdigit@c+1)^0,w,c
  6596   0031CE  6E04               	movwf	(??_isdigit+1)^0,c
  6597   0031D0  5004               	movf	(??_isdigit+1)^0,w,c
  6598   0031D2  E10A               	bnz	u3570
  6599   0031D4  0E0A               	movlw	10
  6600   0031D6  5C03               	subwf	??_isdigit^0,w,c
  6601   0031D8  A0D8               	btfss	status,0,c
  6602   0031DA  EFF1  F018         	goto	u3571
  6603   0031DE  EFF4  F018         	goto	u3570
  6604   0031E2                     u3571:
  6605   0031E2  0E01               	movlw	1
  6606   0031E4  EFF5  F018         	goto	u3580
  6607   0031E8                     u3570:
  6608   0031E8  0E00               	movlw	0
  6609   0031EA                     u3580:
  6610   0031EA  6E01               	movwf	?_isdigit^0,c
  6611   0031EC  6A02               	clrf	(?_isdigit+1)^0,c
  6612   0031EE  0012               	return		;funcret
  6613   0031F0                     __end_of_isdigit:
  6614                           	callstack 0
  6615                           
  6616 ;; *************** function ___wmul *****************
  6617 ;; Defined at:
  6618 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  multiplier      2    0[COMRAM] unsigned int 
  6621 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  product         2    4[COMRAM] unsigned int 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  2    0[COMRAM] unsigned int 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0, prodl, prodh
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6633 ;;      Params:         4       0       0       0       0       0       0       0       0
  6634 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6636 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6637 ;;Total ram usage:        6 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; This function calls:
  6640 ;;		Nothing
  6641 ;; This function is called by:
  6642 ;;		_atoi
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text25
  6647   0031F0                     __ptext25:
  6648                           	callstack 0
  6649   0031F0                     ___wmul:
  6650                           	callstack 26
  6651   0031F0  5001               	movf	___wmul@multiplier^0,w,c
  6652   0031F2  0203               	mulwf	___wmul@multiplicand^0,c
  6653   0031F4  CFF3 F005          	movff	prodl,___wmul@product
  6654   0031F8  CFF4 F006          	movff	prodh,___wmul@product+1
  6655   0031FC  5001               	movf	___wmul@multiplier^0,w,c
  6656   0031FE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6657   003200  50F3               	movf	243,w,c
  6658   003202  2606               	addwf	(___wmul@product+1)^0,f,c
  6659   003204  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6660   003206  0203               	mulwf	___wmul@multiplicand^0,c
  6661   003208  50F3               	movf	243,w,c
  6662   00320A  2606               	addwf	(___wmul@product+1)^0,f,c
  6663   00320C  C005  F001         	movff	___wmul@product,?___wmul
  6664   003210  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6665   003214  0012               	return		;funcret
  6666   003216                     __end_of___wmul:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function ___xxtofl *****************
  6670 ;; Defined at:
  6671 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  sign            1    wreg     unsigned char 
  6674 ;;  val             4    7[COMRAM] long 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  sign            1   15[COMRAM] unsigned char 
  6677 ;;  arg             4   17[COMRAM] unsigned long 
  6678 ;;  exp             1   16[COMRAM] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  4    7[COMRAM] unsigned char 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6688 ;;      Params:         4       0       0       0       0       0       0       0       0
  6689 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6690 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6691 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6692 ;;Total ram usage:       14 bytes
  6693 ;; Hardware stack levels used: 1
  6694 ;; This function calls:
  6695 ;;		Nothing
  6696 ;; This function is called by:
  6697 ;;		_main
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text26
  6702   0023E2                     __ptext26:
  6703                           	callstack 0
  6704   0023E2                     ___xxtofl:
  6705                           	callstack 30
  6706                           
  6707                           ;incstack = 0
  6708                           ;___xxtofl@sign stored from wreg
  6709   0023E2  6E10               	movwf	___xxtofl@sign^0,c
  6710   0023E4  5010               	movf	___xxtofl@sign^0,w,c
  6711   0023E6  B4D8               	btfsc	status,2,c
  6712   0023E8  EFF8  F011         	goto	u4211
  6713   0023EC  EFFA  F011         	goto	u4210
  6714   0023F0                     u4211:
  6715   0023F0  EF1C  F012         	goto	l1065
  6716   0023F4                     u4210:
  6717   0023F4  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6718   0023F6  EF01  F012         	goto	u4220
  6719   0023FA  EFFF  F011         	goto	u4221
  6720   0023FE                     u4221:
  6721   0023FE  EF1C  F012         	goto	l1065
  6722   002402                     u4220:
  6723   002402  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  6724   002406  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  6725   00240A  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  6726   00240E  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  6727   002412  1E0C               	comf	??___xxtofl^0,f,c
  6728   002414  1E0D               	comf	(??___xxtofl+1)^0,f,c
  6729   002416  1E0E               	comf	(??___xxtofl+2)^0,f,c
  6730   002418  1E0F               	comf	(??___xxtofl+3)^0,f,c
  6731   00241A  2A0C               	incf	??___xxtofl^0,f,c
  6732   00241C  0E00               	movlw	0
  6733   00241E  220D               	addwfc	(??___xxtofl+1)^0,f,c
  6734   002420  220E               	addwfc	(??___xxtofl+2)^0,f,c
  6735   002422  220F               	addwfc	(??___xxtofl+3)^0,f,c
  6736   002424  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  6737   002428  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  6738   00242C  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  6739   002430  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  6740   002434  EF24  F012         	goto	l4130
  6741   002438                     l1065:
  6742   002438  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  6743   00243C  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6744   002440  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6745   002444  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6746   002448                     l4130:
  6747   002448  5008               	movf	___xxtofl@val^0,w,c
  6748   00244A  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  6749   00244C  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  6750   00244E  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  6751   002450  A4D8               	btfss	status,2,c
  6752   002452  EF2D  F012         	goto	u4231
  6753   002456  EF2F  F012         	goto	u4230
  6754   00245A                     u4231:
  6755   00245A  EF39  F012         	goto	l4136
  6756   00245E                     u4230:
  6757   00245E  0E00               	movlw	0
  6758   002460  6E08               	movwf	?___xxtofl^0,c
  6759   002462  0E00               	movlw	0
  6760   002464  6E09               	movwf	(?___xxtofl+1)^0,c
  6761   002466  0E00               	movlw	0
  6762   002468  6E0A               	movwf	(?___xxtofl+2)^0,c
  6763   00246A  0E00               	movlw	0
  6764   00246C  6E0B               	movwf	(?___xxtofl+3)^0,c
  6765   00246E  EFCA  F012         	goto	l1068
  6766   002472                     l4136:
  6767   002472  0E96               	movlw	150
  6768   002474  6E11               	movwf	___xxtofl@exp^0,c
  6769   002476  EF43  F012         	goto	l4140
  6770   00247A                     l4138:
  6771   00247A  2A11               	incf	___xxtofl@exp^0,f,c
  6772   00247C  90D8               	bcf	status,0,c
  6773   00247E  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6774   002480  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6775   002482  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6776   002484  3212               	rrcf	___xxtofl@arg^0,f,c
  6777   002486                     l4140:
  6778   002486  0E00               	movlw	0
  6779   002488  1412               	andwf	___xxtofl@arg^0,w,c
  6780   00248A  6E0C               	movwf	??___xxtofl^0,c
  6781   00248C  0E00               	movlw	0
  6782   00248E  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6783   002490  6E0D               	movwf	(??___xxtofl+1)^0,c
  6784   002492  0E00               	movlw	0
  6785   002494  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6786   002496  6E0E               	movwf	(??___xxtofl+2)^0,c
  6787   002498  0EFE               	movlw	254
  6788   00249A  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6789   00249C  6E0F               	movwf	(??___xxtofl+3)^0,c
  6790   00249E  500C               	movf	??___xxtofl^0,w,c
  6791   0024A0  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6792   0024A2  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6793   0024A4  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6794   0024A6  A4D8               	btfss	status,2,c
  6795   0024A8  EF58  F012         	goto	u4241
  6796   0024AC  EF5A  F012         	goto	u4240
  6797   0024B0                     u4241:
  6798   0024B0  EF3D  F012         	goto	l4138
  6799   0024B4                     u4240:
  6800   0024B4  EF68  F012         	goto	l1072
  6801   0024B8                     l4142:
  6802   0024B8  2A11               	incf	___xxtofl@exp^0,f,c
  6803   0024BA  0E01               	movlw	1
  6804   0024BC  2612               	addwf	___xxtofl@arg^0,f,c
  6805   0024BE  0E00               	movlw	0
  6806   0024C0  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  6807   0024C2  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  6808   0024C4  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  6809   0024C6  90D8               	bcf	status,0,c
  6810   0024C8  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6811   0024CA  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6812   0024CC  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6813   0024CE  3212               	rrcf	___xxtofl@arg^0,f,c
  6814   0024D0                     l1072:
  6815   0024D0  0E00               	movlw	0
  6816   0024D2  1412               	andwf	___xxtofl@arg^0,w,c
  6817   0024D4  6E0C               	movwf	??___xxtofl^0,c
  6818   0024D6  0E00               	movlw	0
  6819   0024D8  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6820   0024DA  6E0D               	movwf	(??___xxtofl+1)^0,c
  6821   0024DC  0E00               	movlw	0
  6822   0024DE  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6823   0024E0  6E0E               	movwf	(??___xxtofl+2)^0,c
  6824   0024E2  0EFF               	movlw	255
  6825   0024E4  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6826   0024E6  6E0F               	movwf	(??___xxtofl+3)^0,c
  6827   0024E8  500C               	movf	??___xxtofl^0,w,c
  6828   0024EA  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6829   0024EC  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6830   0024EE  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6831   0024F0  A4D8               	btfss	status,2,c
  6832   0024F2  EF7D  F012         	goto	u4251
  6833   0024F6  EF7F  F012         	goto	u4250
  6834   0024FA                     u4251:
  6835   0024FA  EF5C  F012         	goto	l4142
  6836   0024FE                     u4250:
  6837   0024FE  EF87  F012         	goto	l4150
  6838   002502                     l4148:
  6839   002502  0611               	decf	___xxtofl@exp^0,f,c
  6840   002504  90D8               	bcf	status,0,c
  6841   002506  3612               	rlcf	___xxtofl@arg^0,f,c
  6842   002508  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  6843   00250A  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  6844   00250C  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  6845   00250E                     l4150:
  6846   00250E  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  6847   002510  EF8C  F012         	goto	u4261
  6848   002514  EF8E  F012         	goto	u4260
  6849   002518                     u4261:
  6850   002518  EF96  F012         	goto	l1079
  6851   00251C                     u4260:
  6852   00251C  0E02               	movlw	2
  6853   00251E  6011               	cpfslt	___xxtofl@exp^0,c
  6854   002520  EF94  F012         	goto	u4271
  6855   002524  EF96  F012         	goto	u4270
  6856   002528                     u4271:
  6857   002528  EF81  F012         	goto	l4148
  6858   00252C                     u4270:
  6859   00252C                     l1079:
  6860   00252C  B011               	btfsc	___xxtofl@exp^0,0,c
  6861   00252E  EF9B  F012         	goto	u4281
  6862   002532  EF9D  F012         	goto	u4280
  6863   002536                     u4281:
  6864   002536  EF9E  F012         	goto	l4156
  6865   00253A                     u4280:
  6866   00253A  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  6867   00253C                     l4156:
  6868   00253C  90D8               	bcf	status,0,c
  6869   00253E  3211               	rrcf	___xxtofl@exp^0,f,c
  6870   002540  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  6871   002544  6A0D               	clrf	(??___xxtofl+1)^0,c
  6872   002546  6A0E               	clrf	(??___xxtofl+2)^0,c
  6873   002548  6A0F               	clrf	(??___xxtofl+3)^0,c
  6874   00254A  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  6875   00254E  6A0E               	clrf	(??___xxtofl+2)^0,c
  6876   002550  6A0D               	clrf	(??___xxtofl+1)^0,c
  6877   002552  6A0C               	clrf	??___xxtofl^0,c
  6878   002554  500C               	movf	??___xxtofl^0,w,c
  6879   002556  1212               	iorwf	___xxtofl@arg^0,f,c
  6880   002558  500D               	movf	(??___xxtofl+1)^0,w,c
  6881   00255A  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  6882   00255C  500E               	movf	(??___xxtofl+2)^0,w,c
  6883   00255E  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  6884   002560  500F               	movf	(??___xxtofl+3)^0,w,c
  6885   002562  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  6886   002564  5010               	movf	___xxtofl@sign^0,w,c
  6887   002566  B4D8               	btfsc	status,2,c
  6888   002568  EFB8  F012         	goto	u4291
  6889   00256C  EFBA  F012         	goto	u4290
  6890   002570                     u4291:
  6891   002570  EFC2  F012         	goto	l4166
  6892   002574                     u4290:
  6893   002574  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6894   002576  EFC1  F012         	goto	u4300
  6895   00257A  EFBF  F012         	goto	u4301
  6896   00257E                     u4301:
  6897   00257E  EFC2  F012         	goto	l4166
  6898   002582                     u4300:
  6899   002582  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  6900   002584                     l4166:
  6901   002584  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  6902   002588  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  6903   00258C  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  6904   002590  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  6905   002594                     l1068:
  6906   002594  0012               	return		;funcret
  6907   002596                     __end_of___xxtofl:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _USART_WriteString *****************
  6911 ;; Defined at:
  6912 ;;		line 62 in file "lib_pic/usart.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  pString         2    1[COMRAM] PTR unsigned char 
  6915 ;;		 -> STR_3(18), STR_2(19), strTemp(20), 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6927 ;;      Params:         2       0       0       0       0       0       0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6930 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6931 ;;Total ram usage:        2 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 1
  6934 ;; This function calls:
  6935 ;;		_USART_WriteByte
  6936 ;; This function is called by:
  6937 ;;		_main
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text27
  6942   002EAC                     __ptext27:
  6943                           	callstack 0
  6944   002EAC                     _USART_WriteString:
  6945                           	callstack 29
  6946   002EAC                     
  6947                           ;lib_pic/usart.c: 62: void USART_WriteString(char *pString);lib_pic/usart.c: 63: {;lib_p
      +                          ic/usart.c: 64:     while(*pString != '\0')
  6948   002EAC  EF6C  F017         	goto	l4108
  6949   002EB0                     l4104:
  6950                           
  6951                           ;lib_pic/usart.c: 65:     {;lib_pic/usart.c: 66:         USART_WriteByte(*pString);
  6952   002EB0  C002  FFF6         	movff	USART_WriteString@pString,tblptrl
  6953   002EB4  C003  FFF7         	movff	USART_WriteString@pString+1,tblptrh
  6954   002EB8  6AF8               	clrf	tblptru,c
  6955   002EBA  0E07               	movlw	(high __ramtop+-1)
  6956   002EBC  64F7               	cpfsgt	tblptrh,c
  6957   002EBE  D003               	bra	u4187
  6958   002EC0  0008               	tblrd		*
  6959   002EC2  50F5               	movf	tablat,w,c
  6960   002EC4  D005               	bra	u4180
  6961   002EC6                     u4187:
  6962   002EC6  CFF6 FFE1          	movff	tblptrl,fsr1l
  6963   002ECA  CFF7 FFE2          	movff	tblptrh,fsr1h
  6964   002ECE  50E7               	movf	indf1,w,c
  6965   002ED0                     u4180:
  6966   002ED0  EC24  F019         	call	_USART_WriteByte
  6967   002ED4                     
  6968                           ;lib_pic/usart.c: 67:         pString++;
  6969   002ED4  4A02               	infsnz	USART_WriteString@pString^0,f,c
  6970   002ED6  2A03               	incf	(USART_WriteString@pString+1)^0,f,c
  6971   002ED8                     l4108:
  6972                           
  6973                           ;lib_pic/usart.c: 64:     while(*pString != '\0')
  6974   002ED8  C002  FFF6         	movff	USART_WriteString@pString,tblptrl
  6975   002EDC  C003  FFF7         	movff	USART_WriteString@pString+1,tblptrh
  6976   002EE0  6AF8               	clrf	tblptru,c
  6977   002EE2  0E07               	movlw	(high __ramtop+-1)
  6978   002EE4  64F7               	cpfsgt	tblptrh,c
  6979   002EE6  D003               	bra	u4197
  6980   002EE8  0008               	tblrd		*
  6981   002EEA  50F5               	movf	tablat,w,c
  6982   002EEC  D005               	bra	u4190
  6983   002EEE                     u4197:
  6984   002EEE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6985   002EF2  CFF7 FFE2          	movff	tblptrh,fsr1h
  6986   002EF6  50E7               	movf	indf1,w,c
  6987   002EF8                     u4190:
  6988   002EF8  0900               	iorlw	0
  6989   002EFA  A4D8               	btfss	status,2,c
  6990   002EFC  EF82  F017         	goto	u4201
  6991   002F00  EF84  F017         	goto	u4200
  6992   002F04                     u4201:
  6993   002F04  EF58  F017         	goto	l4104
  6994   002F08                     u4200:
  6995   002F08  0012               	return		;funcret
  6996   002F0A                     __end_of_USART_WriteString:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function _USART_WriteByte *****************
  7000 ;; Defined at:
  7001 ;;		line 56 in file "lib_pic/usart.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  data            1    wreg     unsigned char 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  data            1    0[COMRAM] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		wreg
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0
  7016 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7018 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7019 ;;Total ram usage:        1 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_USART_WriteString
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text28
  7029   003248                     __ptext28:
  7030                           	callstack 0
  7031   003248                     _USART_WriteByte:
  7032                           	callstack 29
  7033                           
  7034                           ;incstack = 0
  7035                           ;USART_WriteByte@data stored from wreg
  7036   003248  6E01               	movwf	USART_WriteByte@data^0,c
  7037   00324A                     l341:
  7038   00324A  A2AC               	btfss	172,1,c	;volatile
  7039   00324C  EF2A  F019         	goto	u4031
  7040   003250  EF2C  F019         	goto	u4030
  7041   003254                     u4031:
  7042   003254  EF25  F019         	goto	l341
  7043   003258                     u4030:
  7044   003258                     
  7045                           ;lib_pic/usart.c: 59:     TXREG1 = data;
  7046   003258  C001  FFAD         	movff	USART_WriteByte@data,4013	;volatile
  7047   00325C  0012               	return		;funcret
  7048   00325E                     __end_of_USART_WriteByte:
  7049                           	callstack 0
  7050                           
  7051 ;; *************** function _USART_SerialBegin *****************
  7052 ;; Defined at:
  7053 ;;		line 5 in file "lib_pic/usart.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  baudios         4   13[COMRAM] unsigned long 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  n               2   17[COMRAM] unsigned short 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		wreg, status,2, status,0, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7067 ;;      Params:         4       0       0       0       0       0       0       0       0
  7068 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7070 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7071 ;;Total ram usage:        6 bytes
  7072 ;; Hardware stack levels used: 1
  7073 ;; Hardware stack levels required when called: 1
  7074 ;; This function calls:
  7075 ;;		___lldiv
  7076 ;; This function is called by:
  7077 ;;		_main
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text29
  7082   002E46                     __ptext29:
  7083                           	callstack 0
  7084   002E46                     _USART_SerialBegin:
  7085                           	callstack 29
  7086   002E46                     
  7087                           ;lib_pic/usart.c: 10:     TRISCbits.TRISC6 = 0;
  7088   002E46  9C94               	bcf	148,6,c	;volatile
  7089   002E48                     
  7090                           ;lib_pic/usart.c: 11:     ANSELCbits.ANSC6 = 0;
  7091   002E48  010F               	movlb	15	; () banked
  7092   002E4A  9D5D               	bcf	93,6,b	;volatile
  7093   002E4C                     
  7094                           ; BSR set to: 15
  7095                           ;lib_pic/usart.c: 12:     TRISCbits.TRISC7 = 1;
  7096   002E4C  8E94               	bsf	148,7,c	;volatile
  7097   002E4E                     
  7098                           ; BSR set to: 15
  7099                           ;lib_pic/usart.c: 13:     ANSELCbits.ANSC7 = 0;
  7100   002E4E  9F5D               	bcf	93,7,b	;volatile
  7101                           
  7102                           ;lib_pic/usart.c: 16:     TXSTA1 = 0b00100100;
  7103   002E50  0E24               	movlw	36
  7104   002E52  6EAC               	movwf	172,c	;volatile
  7105                           
  7106                           ;lib_pic/usart.c: 17:     RCSTA1 = 0b10010000;
  7107   002E54  0E90               	movlw	144
  7108   002E56  6EAB               	movwf	171,c	;volatile
  7109                           
  7110                           ;lib_pic/usart.c: 18:     BAUDCON1 = 0b00001000;
  7111   002E58  0E08               	movlw	8
  7112   002E5A  6EB8               	movwf	184,c	;volatile
  7113   002E5C                     
  7114                           ; BSR set to: 15
  7115                           ;lib_pic/usart.c: 21:     n = (uint16_t)((8000000UL / baudios) / 4UL) - 1UL;
  7116   002E5C  0E00               	movlw	0
  7117   002E5E  6E01               	movwf	___lldiv@dividend^0,c
  7118   002E60  0E12               	movlw	18
  7119   002E62  6E02               	movwf	(___lldiv@dividend+1)^0,c
  7120   002E64  0E7A               	movlw	122
  7121   002E66  6E03               	movwf	(___lldiv@dividend+2)^0,c
  7122   002E68  0E00               	movlw	0
  7123   002E6A  6E04               	movwf	(___lldiv@dividend+3)^0,c
  7124   002E6C  C00E  F005         	movff	USART_SerialBegin@baudios,___lldiv@divisor
  7125   002E70  C00F  F006         	movff	USART_SerialBegin@baudios+1,___lldiv@divisor+1
  7126   002E74  C010  F007         	movff	USART_SerialBegin@baudios+2,___lldiv@divisor+2
  7127   002E78  C011  F008         	movff	USART_SerialBegin@baudios+3,___lldiv@divisor+3
  7128   002E7C  EC61  F016         	call	___lldiv	;wreg free
  7129   002E80  0E03               	movlw	3
  7130   002E82  EF48  F017         	goto	u4170
  7131   002E86                     u4175:
  7132   002E86  90D8               	bcf	status,0,c
  7133   002E88  3204               	rrcf	(?___lldiv+3)^0,f,c
  7134   002E8A  3203               	rrcf	(?___lldiv+2)^0,f,c
  7135   002E8C  3202               	rrcf	(?___lldiv+1)^0,f,c
  7136   002E8E  3201               	rrcf	?___lldiv^0,f,c
  7137   002E90                     u4170:
  7138   002E90  2EE8               	decfsz	wreg,f,c
  7139   002E92  EF43  F017         	goto	u4175
  7140   002E96  0EFF               	movlw	255
  7141   002E98  2401               	addwf	?___lldiv^0,w,c
  7142   002E9A  6E12               	movwf	USART_SerialBegin@n^0,c
  7143   002E9C  0EFF               	movlw	255
  7144   002E9E  2002               	addwfc	(?___lldiv+1)^0,w,c
  7145   002EA0  6E13               	movwf	(USART_SerialBegin@n+1)^0,c
  7146   002EA2                     
  7147                           ;lib_pic/usart.c: 22:     SPBRG1 = (uint8_t)n;
  7148   002EA2  C012  FFAF         	movff	USART_SerialBegin@n,4015	;volatile
  7149   002EA6                     
  7150                           ;lib_pic/usart.c: 23:     SPBRGH1 = (uint8_t)(n >> 8);
  7151   002EA6  5013               	movf	(USART_SerialBegin@n+1)^0,w,c
  7152   002EA8  6EB0               	movwf	176,c	;volatile
  7153   002EAA  0012               	return		;funcret
  7154   002EAC                     __end_of_USART_SerialBegin:
  7155                           	callstack 0
  7156                           
  7157 ;; *************** function ___lldiv *****************
  7158 ;; Defined at:
  7159 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  dividend        4    0[COMRAM] unsigned long 
  7162 ;;  divisor         4    4[COMRAM] unsigned long 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  quotient        4    8[COMRAM] unsigned long 
  7165 ;;  counter         1   12[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  4    0[COMRAM] unsigned long 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7175 ;;      Params:         8       0       0       0       0       0       0       0       0
  7176 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7178 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7179 ;;Total ram usage:       13 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_USART_SerialBegin
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text30
  7189   002CC2                     __ptext30:
  7190                           	callstack 0
  7191   002CC2                     ___lldiv:
  7192                           	callstack 29
  7193   002CC2  0E00               	movlw	0
  7194   002CC4  6E09               	movwf	___lldiv@quotient^0,c
  7195   002CC6  0E00               	movlw	0
  7196   002CC8  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7197   002CCA  0E00               	movlw	0
  7198   002CCC  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7199   002CCE  0E00               	movlw	0
  7200   002CD0  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7201   002CD2  5005               	movf	___lldiv@divisor^0,w,c
  7202   002CD4  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7203   002CD6  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7204   002CD8  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7205   002CDA  B4D8               	btfsc	status,2,c
  7206   002CDC  EF72  F016         	goto	u4041
  7207   002CE0  EF74  F016         	goto	u4040
  7208   002CE4                     u4041:
  7209   002CE4  EFAA  F016         	goto	l437
  7210   002CE8                     u4040:
  7211   002CE8  0E01               	movlw	1
  7212   002CEA  6E0D               	movwf	___lldiv@counter^0,c
  7213   002CEC  EF7E  F016         	goto	l3994
  7214   002CF0                     l3992:
  7215   002CF0  90D8               	bcf	status,0,c
  7216   002CF2  3605               	rlcf	___lldiv@divisor^0,f,c
  7217   002CF4  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7218   002CF6  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7219   002CF8  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7220   002CFA  2A0D               	incf	___lldiv@counter^0,f,c
  7221   002CFC                     l3994:
  7222   002CFC  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7223   002CFE  EF83  F016         	goto	u4051
  7224   002D02  EF85  F016         	goto	u4050
  7225   002D06                     u4051:
  7226   002D06  EF78  F016         	goto	l3992
  7227   002D0A                     u4050:
  7228   002D0A                     l3996:
  7229   002D0A  90D8               	bcf	status,0,c
  7230   002D0C  3609               	rlcf	___lldiv@quotient^0,f,c
  7231   002D0E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7232   002D10  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7233   002D12  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7234   002D14  5005               	movf	___lldiv@divisor^0,w,c
  7235   002D16  5C01               	subwf	___lldiv@dividend^0,w,c
  7236   002D18  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7237   002D1A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7238   002D1C  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7239   002D1E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7240   002D20  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7241   002D22  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7242   002D24  A0D8               	btfss	status,0,c
  7243   002D26  EF97  F016         	goto	u4061
  7244   002D2A  EF99  F016         	goto	u4060
  7245   002D2E                     u4061:
  7246   002D2E  EFA2  F016         	goto	l4004
  7247   002D32                     u4060:
  7248   002D32  5005               	movf	___lldiv@divisor^0,w,c
  7249   002D34  5E01               	subwf	___lldiv@dividend^0,f,c
  7250   002D36  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7251   002D38  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7252   002D3A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7253   002D3C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7254   002D3E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7255   002D40  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7256   002D42  8009               	bsf	___lldiv@quotient^0,0,c
  7257   002D44                     l4004:
  7258   002D44  90D8               	bcf	status,0,c
  7259   002D46  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7260   002D48  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7261   002D4A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7262   002D4C  3205               	rrcf	___lldiv@divisor^0,f,c
  7263   002D4E  2E0D               	decfsz	___lldiv@counter^0,f,c
  7264   002D50  EF85  F016         	goto	l3996
  7265   002D54                     l437:
  7266   002D54  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7267   002D58  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7268   002D5C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7269   002D60  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7270   002D64  0012               	return		;funcret
  7271   002D66                     __end_of___lldiv:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _PORT_Init *****************
  7275 ;; Defined at:
  7276 ;;		line 48 in file "Rele_buzzer_uart.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		None
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used: 1
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_main
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text31
  7304   0032AA                     __ptext31:
  7305                           	callstack 0
  7306   0032AA                     _PORT_Init:
  7307                           	callstack 30
  7308   0032AA                     
  7309                           ;Rele_buzzer_uart.c: 51:     ANSELAbits.ANSA0 = 1;
  7310   0032AA  010F               	movlb	15	; () banked
  7311   0032AC  815B               	bsf	91,0,b	;volatile
  7312                           
  7313                           ;Rele_buzzer_uart.c: 55:     ANSELEbits.ANSE0 = 0;
  7314   0032AE  915F               	bcf	95,0,b	;volatile
  7315                           
  7316                           ;Rele_buzzer_uart.c: 56:     TRISEbits.RE0 = 0;
  7317   0032B0  9096               	bcf	150,0,c	;volatile
  7318   0032B2                     
  7319                           ; BSR set to: 15
  7320   0032B2  0012               	return		;funcret
  7321   0032B4                     __end_of_PORT_Init:
  7322                           	callstack 0
  7323                           
  7324 ;; *************** function _OSCILADOR_Init *****************
  7325 ;; Defined at:
  7326 ;;		line 5 in file "lib_pic/configDevice.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7340 ;;      Params:         0       0       0       0       0       0       0       0       0
  7341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text32
  7354   003288                     __ptext32:
  7355                           	callstack 0
  7356   003288                     _OSCILADOR_Init:
  7357                           	callstack 30
  7358   003288                     
  7359                           ;lib_pic/configDevice.c: 9:     OSCCONbits.IRCF = 0b110;
  7360   003288  50D3               	movf	211,w,c	;volatile
  7361   00328A  0B8F               	andlw	-113
  7362   00328C  0960               	iorlw	96
  7363   00328E  6ED3               	movwf	211,c	;volatile
  7364                           
  7365                           ;lib_pic/configDevice.c: 10:     OSCCONbits.SCS = 0b10;
  7366   003290  50D3               	movf	211,w,c	;volatile
  7367   003292  0BFC               	andlw	-4
  7368   003294  0902               	iorlw	2
  7369   003296  6ED3               	movwf	211,c	;volatile
  7370   003298  0012               	return		;funcret
  7371   00329A                     __end_of_OSCILADOR_Init:
  7372                           	callstack 0
  7373                           
  7374 ;; *************** function _ADC_Init *****************
  7375 ;; Defined at:
  7376 ;;		line 5 in file "lib_pic/adc_10bits.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7390 ;;      Params:         0       0       0       0       0       0       0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7393 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7394 ;;Total ram usage:        0 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_main
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text33
  7404   003216                     __ptext33:
  7405                           	callstack 0
  7406   003216                     _ADC_Init:
  7407                           	callstack 30
  7408   003216                     
  7409                           ;lib_pic/adc_10bits.c: 8:     ADCON1bits.PVCFG = 0b00;
  7410   003216  0EF3               	movlw	-13
  7411   003218  16C1               	andwf	193,f,c	;volatile
  7412                           
  7413                           ;lib_pic/adc_10bits.c: 9:     ADCON1bits.NVCFG = 0b00;
  7414   00321A  0EFC               	movlw	-4
  7415   00321C  16C1               	andwf	193,f,c	;volatile
  7416   00321E                     
  7417                           ;lib_pic/adc_10bits.c: 11:     ADCON2bits.ADFM = 1;
  7418   00321E  8EC0               	bsf	192,7,c	;volatile
  7419                           
  7420                           ;lib_pic/adc_10bits.c: 37:     ADCON2bits.ADCS = 0b010;
  7421   003220  50C0               	movf	192,w,c	;volatile
  7422   003222  0BF8               	andlw	-8
  7423   003224  0902               	iorlw	2
  7424   003226  6EC0               	movwf	192,c	;volatile
  7425                           
  7426                           ;lib_pic/adc_10bits.c: 38:     ADCON2bits.ACQT = 0b010;
  7427   003228  50C0               	movf	192,w,c	;volatile
  7428   00322A  0BC7               	andlw	-57
  7429   00322C  0910               	iorlw	16
  7430   00322E  6EC0               	movwf	192,c	;volatile
  7431   003230  0012               	return		;funcret
  7432   003232                     __end_of_ADC_Init:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _ADC_GetConversion *****************
  7436 ;; Defined at:
  7437 ;;		line 66 in file "lib_pic/adc_10bits.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  channel         1    wreg     unsigned char 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  channel         1    6[COMRAM] unsigned char 
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  2    2[COMRAM] unsigned short 
  7444 ;; Registers used:
  7445 ;;		wreg, status,2, status,0, cstack
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7451 ;;      Params:         2       0       0       0       0       0       0       0       0
  7452 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7453 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7454 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7455 ;;Total ram usage:        5 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; Hardware stack levels required when called: 1
  7458 ;; This function calls:
  7459 ;;		_ADC_Disable
  7460 ;;		_ADC_Enable
  7461 ;;		_ADC_SelectChannel
  7462 ;;		_ADC_StartConversion
  7463 ;;		_ADC_StateConversion
  7464 ;; This function is called by:
  7465 ;;		_main
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text34
  7470   003150                     __ptext34:
  7471                           	callstack 0
  7472   003150                     _ADC_GetConversion:
  7473                           	callstack 29
  7474                           
  7475                           ;incstack = 0
  7476                           ;ADC_GetConversion@channel stored from wreg
  7477   003150  6E07               	movwf	ADC_GetConversion@channel^0,c
  7478   003152                     
  7479                           ;lib_pic/adc_10bits.c: 66: uint16_t ADC_GetConversion(uint8_t channel);lib_pic/adc_10bit
      +                          s.c: 67: {;lib_pic/adc_10bits.c: 68:     ADC_SelectChannel(channel);
  7480   003152  5007               	movf	ADC_GetConversion@channel^0,w,c
  7481   003154  EC2F  F019         	call	_ADC_SelectChannel
  7482   003158                     
  7483                           ;lib_pic/adc_10bits.c: 69:     ADC_Enable();
  7484   003158  EC5C  F019         	call	_ADC_Enable	;wreg free
  7485   00315C                     
  7486                           ;lib_pic/adc_10bits.c: 70:     ADC_StartConversion();
  7487   00315C  EC5A  F019         	call	_ADC_StartConversion	;wreg free
  7488   003160                     l4028:
  7489   003160  EC3A  F019         	call	_ADC_StateConversion	;wreg free
  7490   003164  06E8               	decf	wreg,f,c
  7491   003166  B4D8               	btfsc	status,2,c
  7492   003168  EFB8  F018         	goto	u4081
  7493   00316C  EFBA  F018         	goto	u4080
  7494   003170                     u4081:
  7495   003170  EFB0  F018         	goto	l4028
  7496   003174                     u4080:
  7497   003174                     
  7498                           ;lib_pic/adc_10bits.c: 72:     ADC_Disable();
  7499   003174  EC5E  F019         	call	_ADC_Disable	;wreg free
  7500   003178                     
  7501                           ;lib_pic/adc_10bits.c: 73:     return (uint16_t)((ADRESH << 8) + ADRESL);
  7502   003178  50C4               	movf	196,w,c	;volatile
  7503   00317A  6E06               	movwf	(??_ADC_GetConversion+1)^0,c
  7504   00317C  6A05               	clrf	??_ADC_GetConversion^0,c
  7505   00317E  50C3               	movf	195,w,c	;volatile
  7506   003180  2405               	addwf	??_ADC_GetConversion^0,w,c
  7507   003182  6E03               	movwf	?_ADC_GetConversion^0,c
  7508   003184  0E00               	movlw	0
  7509   003186  2006               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  7510   003188  6E04               	movwf	(?_ADC_GetConversion+1)^0,c
  7511   00318A  0012               	return		;funcret
  7512   00318C                     __end_of_ADC_GetConversion:
  7513                           	callstack 0
  7514                           
  7515 ;; *************** function _ADC_StateConversion *****************
  7516 ;; Defined at:
  7517 ;;		line 56 in file "lib_pic/adc_10bits.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;		None
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;		None
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      _Bool 
  7524 ;; Registers used:
  7525 ;;		wreg
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7531 ;;      Params:         0       0       0       0       0       0       0       0       0
  7532 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7534 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7535 ;;Total ram usage:        0 bytes
  7536 ;; Hardware stack levels used: 1
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_ADC_GetConversion
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text35
  7545   003274                     __ptext35:
  7546                           	callstack 0
  7547   003274                     _ADC_StateConversion:
  7548                           	callstack 29
  7549   003274                     
  7550                           ;lib_pic/adc_10bits.c: 58:     return (_Bool)ADCON0bits.GO_nDONE;
  7551   003274  B2C2               	btfsc	194,1,c	;volatile
  7552   003276  EF3F  F019         	goto	u4021
  7553   00327A  EF42  F019         	goto	u4020
  7554   00327E                     u4021:
  7555   00327E  0E01               	movlw	1
  7556   003280  EF43  F019         	goto	u4026
  7557   003284                     u4020:
  7558   003284  0E00               	movlw	0
  7559   003286                     u4026:
  7560   003286  0012               	return		;funcret
  7561   003288                     __end_of_ADC_StateConversion:
  7562                           	callstack 0
  7563                           
  7564 ;; *************** function _ADC_StartConversion *****************
  7565 ;; Defined at:
  7566 ;;		line 51 in file "lib_pic/adc_10bits.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;		None
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		None
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7580 ;;      Params:         0       0       0       0       0       0       0       0       0
  7581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7583 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7584 ;;Total ram usage:        0 bytes
  7585 ;; Hardware stack levels used: 1
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_ADC_GetConversion
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text36
  7594   0032B4                     __ptext36:
  7595                           	callstack 0
  7596   0032B4                     _ADC_StartConversion:
  7597                           	callstack 29
  7598   0032B4                     
  7599                           ;lib_pic/adc_10bits.c: 53:     ADCON0bits.GO_nDONE = 1;
  7600   0032B4  82C2               	bsf	194,1,c	;volatile
  7601   0032B6  0012               	return		;funcret
  7602   0032B8                     __end_of_ADC_StartConversion:
  7603                           	callstack 0
  7604                           
  7605 ;; *************** function _ADC_SelectChannel *****************
  7606 ;; Defined at:
  7607 ;;		line 61 in file "lib_pic/adc_10bits.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  channel         1    wreg     unsigned char 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;  channel         1    1[COMRAM] unsigned char 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		wreg, status,2, status,0
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0
  7622 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7623 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7624 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7625 ;;Total ram usage:        2 bytes
  7626 ;; Hardware stack levels used: 1
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_ADC_GetConversion
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text37
  7635   00325E                     __ptext37:
  7636                           	callstack 0
  7637   00325E                     _ADC_SelectChannel:
  7638                           	callstack 29
  7639                           
  7640                           ;incstack = 0
  7641                           ;ADC_SelectChannel@channel stored from wreg
  7642   00325E  6E02               	movwf	ADC_SelectChannel@channel^0,c
  7643   003260                     
  7644                           ;lib_pic/adc_10bits.c: 61: void ADC_SelectChannel(uint8_t channel);lib_pic/adc_10bits.c:
      +                           62: {;lib_pic/adc_10bits.c: 63:     ADCON0bits.CHS = channel;
  7645   003260  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7646   003264  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7647   003266  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7648   003268  50C2               	movf	194,w,c	;volatile
  7649   00326A  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7650   00326C  0B83               	andlw	-125
  7651   00326E  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7652   003270  6EC2               	movwf	194,c	;volatile
  7653   003272  0012               	return		;funcret
  7654   003274                     __end_of_ADC_SelectChannel:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _ADC_Enable *****************
  7658 ;; Defined at:
  7659 ;;		line 41 in file "lib_pic/adc_10bits.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		None
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7677 ;;Total ram usage:        0 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_ADC_GetConversion
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text38
  7687   0032B8                     __ptext38:
  7688                           	callstack 0
  7689   0032B8                     _ADC_Enable:
  7690                           	callstack 29
  7691   0032B8                     
  7692                           ;lib_pic/adc_10bits.c: 43:     ADCON0bits.ADON = 1;
  7693   0032B8  80C2               	bsf	194,0,c	;volatile
  7694   0032BA  0012               	return		;funcret
  7695   0032BC                     __end_of_ADC_Enable:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function _ADC_Disable *****************
  7699 ;; Defined at:
  7700 ;;		line 46 in file "lib_pic/adc_10bits.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		None
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_ADC_GetConversion
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text39
  7728   0032BC                     __ptext39:
  7729                           	callstack 0
  7730   0032BC                     _ADC_Disable:
  7731                           	callstack 29
  7732   0032BC                     
  7733                           ;lib_pic/adc_10bits.c: 48:     ADCON0bits.ADON = 0;
  7734   0032BC  90C2               	bcf	194,0,c	;volatile
  7735   0032BE  0012               	return		;funcret
  7736   0032C0                     __end_of_ADC_Disable:
  7737                           	callstack 0
  7738                           
  7739                           	psect	rparam
  7740   000000                     
  7741                           	psect	idloc
  7742                           
  7743                           ;Config register IDLOC0 @ 0x200000
  7744                           ;	unspecified, using default values
  7745   200000                     	org	2097152
  7746   200000  FF                 	db	255
  7747                           
  7748                           ;Config register IDLOC1 @ 0x200001
  7749                           ;	unspecified, using default values
  7750   200001                     	org	2097153
  7751   200001  FF                 	db	255
  7752                           
  7753                           ;Config register IDLOC2 @ 0x200002
  7754                           ;	unspecified, using default values
  7755   200002                     	org	2097154
  7756   200002  FF                 	db	255
  7757                           
  7758                           ;Config register IDLOC3 @ 0x200003
  7759                           ;	unspecified, using default values
  7760   200003                     	org	2097155
  7761   200003  FF                 	db	255
  7762                           
  7763                           ;Config register IDLOC4 @ 0x200004
  7764                           ;	unspecified, using default values
  7765   200004                     	org	2097156
  7766   200004  FF                 	db	255
  7767                           
  7768                           ;Config register IDLOC5 @ 0x200005
  7769                           ;	unspecified, using default values
  7770   200005                     	org	2097157
  7771   200005  FF                 	db	255
  7772                           
  7773                           ;Config register IDLOC6 @ 0x200006
  7774                           ;	unspecified, using default values
  7775   200006                     	org	2097158
  7776   200006  FF                 	db	255
  7777                           
  7778                           ;Config register IDLOC7 @ 0x200007
  7779                           ;	unspecified, using default values
  7780   200007                     	org	2097159
  7781   200007  FF                 	db	255
  7782                           
  7783                           	psect	config
  7784                           
  7785                           ;Config register CONFIG1L @ 0x300000
  7786                           ;	PLL Selection
  7787                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7788                           ;	PLL Enable Configuration bit
  7789                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7790                           ;	CPU System Clock Postscaler
  7791                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7792                           ;	Low Speed USB mode with 48 MHz system clock
  7793                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7794   300000                     	org	3145728
  7795   300000  00                 	db	0
  7796                           
  7797                           ;Config register CONFIG1H @ 0x300001
  7798                           ;	Oscillator Selection
  7799                           ;	FOSC = INTOSCIO, Internal oscillator
  7800                           ;	Primary Oscillator Shutdown
  7801                           ;	PCLKEN = ON, Primary oscillator enabled
  7802                           ;	Fail-Safe Clock Monitor
  7803                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7804                           ;	Internal/External Oscillator Switchover
  7805                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7806   300001                     	org	3145729
  7807   300001  28                 	db	40
  7808                           
  7809                           ;Config register CONFIG2L @ 0x300002
  7810                           ;	Power-up Timer Enable
  7811                           ;	nPWRTEN = ON, Power up timer enabled
  7812                           ;	Brown-out Reset Enable
  7813                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  7814                           ;	Brown-out Reset Voltage
  7815                           ;	BORV = 190, BOR set to 1.9V nominal
  7816                           ;	Low-Power Brown-out Reset
  7817                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7818   300002                     	org	3145730
  7819   300002  5E                 	db	94
  7820                           
  7821                           ;Config register CONFIG2H @ 0x300003
  7822                           ;	Watchdog Timer Enable bits
  7823                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7824                           ;	Watchdog Timer Postscaler
  7825                           ;	WDTPS = 32768, 1:32768
  7826   300003                     	org	3145731
  7827   300003  3C                 	db	60
  7828                           
  7829                           ; Padding undefined space
  7830   300004                     	org	3145732
  7831   300004  FF                 	db	255
  7832                           
  7833                           ;Config register CONFIG3H @ 0x300005
  7834                           ;	CCP2 MUX bit
  7835                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7836                           ;	PORTB A/D Enable bit
  7837                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  7838                           ;	Timer3 Clock Input MUX bit
  7839                           ;	T3CMX = RC0, T3CKI function is on RC0
  7840                           ;	SDO Output MUX bit
  7841                           ;	SDOMX = RB3, SDO function is on RB3
  7842                           ;	Master Clear Reset Pin Enable
  7843                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  7844   300005                     	org	3145733
  7845   300005  D1                 	db	209
  7846                           
  7847                           ;Config register CONFIG4L @ 0x300006
  7848                           ;	Stack Full/Underflow Reset
  7849                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7850                           ;	Single-Supply ICSP Enable bit
  7851                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7852                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7853                           ;	ICPRT = OFF, ICPORT disabled
  7854                           ;	Extended Instruction Set Enable bit
  7855                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7856                           ;	Background Debugger Enable bit
  7857                           ;	DEBUG = 0x1, unprogrammed default
  7858   300006                     	org	3145734
  7859   300006  85                 	db	133
  7860                           
  7861                           ; Padding undefined space
  7862   300007                     	org	3145735
  7863   300007  FF                 	db	255
  7864                           
  7865                           ;Config register CONFIG5L @ 0x300008
  7866                           ;	Block 0 Code Protect
  7867                           ;	CP0 = OFF, Block 0 is not code-protected
  7868                           ;	Block 1 Code Protect
  7869                           ;	CP1 = OFF, Block 1 is not code-protected
  7870                           ;	Block 2 Code Protect
  7871                           ;	CP2 = OFF, Block 2 is not code-protected
  7872                           ;	Block 3 Code Protect
  7873                           ;	CP3 = OFF, Block 3 is not code-protected
  7874   300008                     	org	3145736
  7875   300008  0F                 	db	15
  7876                           
  7877                           ;Config register CONFIG5H @ 0x300009
  7878                           ;	Boot Block Code Protect
  7879                           ;	CPB = OFF, Boot block is not code-protected
  7880                           ;	Data EEPROM Code Protect
  7881                           ;	CPD = OFF, Data EEPROM is not code-protected
  7882   300009                     	org	3145737
  7883   300009  C0                 	db	192
  7884                           
  7885                           ;Config register CONFIG6L @ 0x30000A
  7886                           ;	Block 0 Write Protect
  7887                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7888                           ;	Block 1 Write Protect
  7889                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7890                           ;	Block 2 Write Protect
  7891                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7892                           ;	Block 3 Write Protect
  7893                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7894   30000A                     	org	3145738
  7895   30000A  0F                 	db	15
  7896                           
  7897                           ;Config register CONFIG6H @ 0x30000B
  7898                           ;	Configuration Registers Write Protect
  7899                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7900                           ;	Boot Block Write Protect
  7901                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7902                           ;	Data EEPROM Write Protect
  7903                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7904   30000B                     	org	3145739
  7905   30000B  E0                 	db	224
  7906                           
  7907                           ;Config register CONFIG7L @ 0x30000C
  7908                           ;	Block 0 Table Read Protect
  7909                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7910                           ;	Block 1 Table Read Protect
  7911                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7912                           ;	Block 2 Table Read Protect
  7913                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7914                           ;	Block 3 Table Read Protect
  7915                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7916   30000C                     	org	3145740
  7917   30000C  0F                 	db	15
  7918                           
  7919                           ;Config register CONFIG7H @ 0x30000D
  7920                           ;	Boot Block Table Read Protect
  7921                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7922   30000D                     	org	3145741
  7923   30000D  40                 	db	64
  7924                           tosu	equ	0xFFF
  7925                           tosh	equ	0xFFE
  7926                           tosl	equ	0xFFD
  7927                           stkptr	equ	0xFFC
  7928                           pclatu	equ	0xFFB
  7929                           pclath	equ	0xFFA
  7930                           pcl	equ	0xFF9
  7931                           tblptru	equ	0xFF8
  7932                           tblptrh	equ	0xFF7
  7933                           tblptrl	equ	0xFF6
  7934                           tablat	equ	0xFF5
  7935                           prodh	equ	0xFF4
  7936                           prodl	equ	0xFF3
  7937                           indf0	equ	0xFEF
  7938                           postinc0	equ	0xFEE
  7939                           postdec0	equ	0xFED
  7940                           preinc0	equ	0xFEC
  7941                           plusw0	equ	0xFEB
  7942                           fsr0h	equ	0xFEA
  7943                           fsr0l	equ	0xFE9
  7944                           wreg	equ	0xFE8
  7945                           indf1	equ	0xFE7
  7946                           postinc1	equ	0xFE6
  7947                           postdec1	equ	0xFE5
  7948                           preinc1	equ	0xFE4
  7949                           plusw1	equ	0xFE3
  7950                           fsr1h	equ	0xFE2
  7951                           fsr1l	equ	0xFE1
  7952                           bsr	equ	0xFE0
  7953                           indf2	equ	0xFDF
  7954                           postinc2	equ	0xFDE
  7955                           postdec2	equ	0xFDD
  7956                           preinc2	equ	0xFDC
  7957                           plusw2	equ	0xFDB
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8

Data Sizes:
    Strings     58
    Constant    0
    Data        16
    BSS         113
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     71     123
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_4(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_4(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1873$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strTemp(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1794$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1794$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    USART_WriteString@pString	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[18]), STR_2(CODE[19]), strTemp(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___fladd
    _atoi->___wmul
    ___xxtofl->_ADC_GetConversion
    _USART_WriteString->_USART_WriteByte
    _USART_SerialBegin->___lldiv
    _ADC_GetConversion->_ADC_SelectChannel

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32491
                                             92 COMRAM     2     2      0
                  _ADC_GetConversion
                           _ADC_Init
                     _OSCILADOR_Init
                          _PORT_Init
                  _USART_SerialBegin
                  _USART_WriteString
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   22973
                                             50 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22618
                                             90 COMRAM     2     2      0
                                             44 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   22257
                                             70 COMRAM    20    14      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19385
                                             61 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2499
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     953
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     704
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             41 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             21 COMRAM    25    17      8
                  _ADC_GetConversion (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             46 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _USART_WriteByte
 ---------------------------------------------------------------------------------
 (2) _USART_WriteByte                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_SerialBegin                                    6     2      4     458
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      44
                                              2 COMRAM     5     3      2
                        _ADC_Disable
                         _ADC_Enable
                  _ADC_SelectChannel
                _ADC_StartConversion
                _ADC_StateConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StateConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Disable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
     _ADC_Disable
     _ADC_Enable
     _ADC_SelectChannel
     _ADC_StartConversion
     _ADC_StateConversion
   _ADC_Init
   _OSCILADOR_Init
   _PORT_Init
   _USART_SerialBegin
     ___lldiv
   _USART_WriteString
     _USART_WriteByte
   ___fladd
   ___fldiv
     ___fladd (ARG)
   ___flge
     ___flmul (ARG)
       _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      7B       5       76.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhllh     21      0       0      32        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhhh        E      0       0      20        0.0%
BITBIGSFRlhhhl       C      0       0      25        0.0%
BITBIGSFRhhlh        9      0       0      22        0.0%
BITBIGSFRlll         8      0       0      34        0.0%
BITBIGSFRlhhhhl      7      0       0      24        0.0%
BITBIGSFRlhhhhh      7      0       0      23        0.0%
BITBIGSFRlhhl        6      0       0      26        0.0%
BITBIGSFRllhhh       5      0       0      27        0.0%
BITBIGSFRllhlhh      4      0       0      29        0.0%
BITBIGSFRllhlhh      1      0       0      30        0.0%
BITBIGSFRllhlhl      1      0       0      31        0.0%
BITBIGSFRllhhl       1      0       0      28        0.0%
BITBIGSFRllhlll      1      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A      35        0.0%
DATA                 0      0     12A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 20 18:20:27 2023

               ___fldiv@aexp 0029                 ___fldiv@bexp 0028                 ___fldiv@sign 0021  
                         l13 3230                           l22 32B6                           l16 32BA  
                         l25 3286                           l34 318A                           l19 32BE  
                         l28 3272                           l39 3298          ___wmul@multiplicand 0003  
                        l320 2EAA                          l400 26DC                          l410 3214  
                        l341 324A                          l350 2F08                          l407 32B2  
                        l344 325C                          l363 3234                          l444 2D64  
                        l437 2D54                          l366 3246                          l707 294A  
                        l680 2A4E                          l675 2A08                          l684 31C2  
                        l940 13D8                          l669 2CC0                          l938 1424  
                        l955 153E                          l947 16F4                          l939 1412  
                        l964 160E                          l980 3040                          l965 15FC  
                        l992 1EB8                          l994 1D18                          l997 1CDC  
                        _pad 2D66                          wreg 000FE8                   _TXSTA1bits 000FAC  
               ___flmul@aexp 0027                 ___flmul@bexp 0028                 ___flmul@sign 0022  
               ___flmul@temp 002D                 ___flmul@prod 0029                 ___fltol@exp1 000A  
                       l1003 1D5E                         l1005 1DD6                         l1006 1DC4  
                       l1031 19B0                         l1024 17BA                         l1041 1AE0  
                       l1033 1A28                         l1034 1A16                         l1122 2D88  
                       l1028 1B1E                         l1300 2C16                         l1140 0BCE  
                       l1212 2FAA                         l1205 21CE                         l1222 2B4C  
                       l1126 2DDE                         l1142 0A14                         l1072 24D0  
                       l3000 1336                         l1065 2438                         l1137 1234  
                       l3010 134A                         l3002 133A                         l1314 314E  
                       l1170 1016                         l1068 2594                         l3100 1590  
                       l3020 135E                         l3012 134E                         l3004 133E  
                       l1308 310E                         l1245 283C                         l3110 15BC  
                       l3102 1592                         l3030 1372                         l3022 1362  
                       l3014 1352                         l3006 1342                         l1254 23E0  
                       l1079 252C                         l4000 2D32                         l1264 31EE  
                       l1272 3086                         l1248 2844                         l3200 1BC2  
                       l3120 15F4                         l3104 15A0                         l3112 15BE  
                       l3040 13D0                         l3024 1366                         l3016 1356  
                       l3008 1346                         l3032 1376                         l1088 2F5A  
                       l1257 2324                         l4002 2D42                         l3210 1C02  
                       l3202 1BD2                         l3130 1672                         l3106 15A8  
                       l3114 15CC                         l3050 1406                         l3042 13E6  
                       l3034 137A                         l3026 136A                         l3018 135A  
                       l1282 2E44                         l4010 2F68                         l4020 321E  
                       l4004 2D44                         l4100 2EA6                         l3300 1EAE  
                       l3212 1C12                         l3220 1C32                         l3204 1BD4  
                       l3140 16B8                         l3124 161E                         l3132 1674  
                       l3116 15D0                         l3108 15AC                         l3060 1456  
                       l3052 1410                         l3044 13F2                         l3036 13A4  
                       l3028 136E                         l4012 2F84                         l4030 3174  
                       l4022 3152                         l4110 32AA                         l4006 2D4E  
                       l4102 2EAC                         l3230 1C70                         l3222 1C42  
                       l3214 1C1A                         l3206 1BDC                         l3310 1702  
                       l3150 16E2                         l3142 16C6                         l3134 1684  
                       l3126 162A                         l3118 15DE                         l3070 1492  
                       l3062 1466                         l3054 1432                         l3046 13F6  
                       l3038 13C0                         l4014 2FA0                         l1279 2E34  
                       l4032 3178                         l4024 3158                         l4104 2EB0  
                       l3240 1CB8                         l3232 1C80                         l3224 1C42  
                       l3216 1C1E                         l3208 1BEC                         l3400 19D2  
                       l3320 1742                         l3312 1710                         l3152 16E4  
                       l3144 16CC                         l3136 1694                         l3128 1638  
                       l3080 14D8                         l3072 14A0                         l3064 1474  
                       l3056 1442                         l3048 1404                         l1288 2FFA  
                       l3160 30EA                         l4008 2F5C                         l4120 2F48  
                       l4112 2F0A                         l4026 315C                         l4018 3216  
                       l4106 2ED4                         l4130 2448                         l3250 1D06  
                       l3242 1CCC                         l3234 1C90                         l3170 1B20  
                       l3410 1A44                         l3402 19E0                         l3330 1772  
                       l3322 1748                         l3314 1712                         l3146 16CE  
                       l3138 16B4                         l3090 1554                         l3082 150C  
                       l3074 14A2                         l3066 1482                         l3162 30EE  
                       l4114 2F1C                         l4028 3160                         l4036 3288  
                       l4108 2ED8                         l4140 2486                         l4132 245E  
                       l4124 23E4                         l3164 31F0                         l3260 1D4E  
                       l3252 1D16                         l3244 1CDA                         l3236 1CA0  
                       l3228 1C56                         l3180 1B5C                         l3172 1B2C  
                       l3420 1AAE                         l3412 1A52                         l3404 1A0E  
                       l3340 17AA                         l3332 1774                         l3324 1758  
                       l3316 1722                         l3308 16F6                         l3148 16D4  
                       l3092 1564                         l3084 150E                         l3076 14AC  
                       l3068 148E                         l3500 289C                         l3156 30CC  
                       l4116 2F24                         l4150 250E                         l4142 24B8  
                       l4126 23F4                         l3166 320C                         l3270 1D8E  
                       l3262 1D5C                         l3254 1D28                         l3246 1CE6  
                       l3238 1CA8                         l3190 1B8C                         l3182 1B6C  
                       l3174 1B3A                         l3430 1B04                         l3422 1AC8  
                       l3414 1A7C                         l3350 17FA                         l3342 17CA  
                       l3334 1784                         l3326 175E                         l3318 1732  
                       l3086 151E                         l3078 14B2                         l3502 28AC  
                       l3158 30D8                         l4118 2F2C                         l4160 2564  
                       l4152 251C                         l4144 24BA                         l4136 2472  
                       l4128 2402                         l3280 1E00                         l3272 1DBC  
                       l3256 1D3E                         l3264 1D6E                         l3248 1D04  
                       l3192 1B92                         l3184 1B6E                         l3176 1B3C  
                       l3424 1AE4                         l3432 1B0A                         l3408 1A38  
                       l3416 1A80                         l3360 184A                         l3352 1804  
                       l3344 17DA                         l3336 1794                         l3328 1764  
                       l3096 1578                         l3088 152E                         l3440 300C  
                       l3512 28D6                         l3504 28B0                         l3600 23C0  
                       l4240 25A2                         l4090 2E48                         l4162 2574  
                       l4154 253A                         l4146 24C6                         l4138 247A  
                       l3290 1E78                         l3282 1E2A                         l3266 1D7C  
                       l3258 1D44                         l3194 1BA0                         l3178 1B4C  
                       l3186 1B76                         l3450 2C84                         l3434 1B0E  
                       l3426 1AF4                         l3418 1A9A                         l3370 188C  
                       l3362 1856                         l3354 181A                         l3338 17A4  
                       l3098 1582                         l3530 293A                         l3522 28FE  
                       l3514 28E0                         l3506 28BE                         l3602 23D0  
                       l3610 2FCC                         l4250 268C                         l4242 25B6  
                       l4234 2596                         l4092 2E4C                         l4164 2582  
                       l4156 253C                         l4148 2502                         l3292 1E94  
                       l3276 1DE6                         l3284 1E2E                         l3268 1D80  
                       l3196 1BA2                         l3188 1B86                         l3452 2C94  
                       l3444 2C18                         l3460 294C                         l3428 1B02  
                       l3380 18EE                         l3372 189C                         l3364 1864  
                       l3356 1826                         l3348 17EE                         l3524 290A  
                       l3516 28EA                         l3612 2FD0                         l3540 2D94  
                       l3700 0A24                         l4340 204A                         l4252 2698  
                       l4244 2602                         l4236 259A                         l4094 2E4E  
                       l4086 2E46                         l4166 2584                         l4158 2540  
                       l3630 3080                         l3622 3042                         l3294 1E98  
                       l3286 1E48                         l3278 1DF2                         l3198 1BB2  
                       l3454 2CB8                         l3446 2C46                         l3470 29D6  
                       l3462 297A                         l3390 1996                         l3382 190A  
                       l3374 18B6                         l3366 1870                         l3358 183E  
                       l3438 2FFC                         l3526 291A                         l3550 2A70  
                       l3614 2FDC                         l3606 2FAC                         l3542 2DA8  
                       l3534 2D66                         l3710 0B0C                         l3702 0A2A  
                       l4342 2104                         l4254 26A4                         l4246 265A  
                       l4238 259E                         l4096 2E5C                         l4088 2E46  
                       l3624 3046                         l3296 1EA6                         l3288 1E5E  
                       l3456 2CBE                         l3448 2C56                         l3472 29E8  
                       l3464 298A                         l3392 19A0                         l3384 1934  
                       l3376 18C6                         l3368 1880                         l3528 292A  
                       l3552 2AAE                         l3560 2AEE                         l3608 2FC0  
                       l3616 2FE0                         l3544 2DAC                         l3536 2D74  
                       l3800 1036                         l3712 0B20                         l3720 0B9C  
                       l3704 0A5E                         l3640 0860                         l4344 2186  
                       l4256 26D6                         l4248 2680                         l4098 2EA2  
                       l3618 31C4                         l3626 305A                         l4346 2792  
                       l3298 1EAC                         l3474 29F6                         l3466 29B8  
                       l3394 19AE                         l3386 196A                         l3378 18E2  
                       l3482 318C                         l3490 2846                         l3562 2B00  
                       l3554 2AD6                         l3546 2DCA                         l3538 2D80  
                       l3570 3110                         l3810 1068                         l3802 1046  
                       l3730 0C02                         l3722 0BD6                         l3714 0B54  
                       l3706 0A9C                         l3650 08AA                         l3642 0864  
                       l3634 083C                         l4258 26DE                         l3628 307C  
                       l3476 2A46                         l3468 29C8                         l3396 19C0  
                       l3388 1978                         l3484 31A2                         l3492 285C  
                       l3556 2AE2                         l3548 2A50                         l3580 21F0  
                       l2940 2B4E                         l3572 3120                         l3820 109C  
                       l3812 106C                         l3804 104A                         l3740 0C50  
                       l3732 0C06                         l3724 0BE6                         l3716 0B5C  
                       l3708 0ACE                         l3660 08F8                         l3652 08BA  
                       l3644 0888                         l3636 0842                         l3900 1F2A  
                       l3478 2A4C                         l3398 19CE                         l3486 31B2  
                       l3566 2B44                         l3590 22D8                         l3582 2246  
                       l3574 2DE0                         l2950 2BD0                         l2942 2B60  
                       l3830 113A                         l3822 10A0                         l3814 1072  
                       l3806 1050                         l3750 0CE8                         l3734 0C18  
                       l3742 0C58                         l3726 0BF2                         l3670 0934  
                       l3662 090A                         l3654 08C6                         l3646 0892  
                       l3638 0852                         l3902 1F38                         ?_pad 0012  
                       l2960 1252                         l3496 2870                         l3592 2314  
                       l3584 225A                         l3576 2DFE                         l2936 3234  
                       l2944 2B72                         l3840 1190                         l3824 10A6  
                       l3808 1058                         l3816 1078                         l3832 113E  
                       l3760 0DCC                         l3752 0D40                         l3744 0C60  
                       l3736 0C26                         l3728 0BFA                         l3680 0996  
                       l3672 093E                         l3664 090E                         l3656 08CE  
                       l3648 089A                         l3920 2026                         l3912 1FC4  
                       l3904 1F5C                         l2962 1262                         l2970 128C  
                       l2954 1236                         l3498 289A                         l3586 2268  
                       l3594 2348                         l3578 21D0                         l2938 3242  
                       l2946 2B7C                         l3850 120C                         l3842 11C0  
                       l3834 115C                         l3826 10FE                         l3818 108A  
                       l3770 0E66                         l3762 0DFE                         l3754 0D74  
                       l3746 0C70                         l3738 0C3E                         l3682 099A  
                       l3666 0914                         l3658 08D2                         l3930 2088  
                       l3922 202E                         l3906 1F96                         l3914 1FFC  
                       l2980 12BC                         l2972 129C                         l2964 1272  
                       l2956 1242                         l3596 2384                         l2948 2B9A  
                       l3852 1214                         l3844 11CE                         l3836 1178  
                       l3828 1132                         l3780 0F3E                         l3772 0E9A  
                       l3764 0E14                         l3748 0C84                         l3756 0D7A  
                       l3684 09A0                         l3668 091C                         l3676 095E  
                       l3940 213A                         l3932 20BC                         l3916 200C  
                       l3908 1FB6                         l3870 2774                         l3862 2714  
                       l2990 12FC                         l2982 12CA                         l2974 12A2  
                       l2966 1282                         l2958 1250                         l3598 2398  
                       l3846 11E6                         l3838 1180                         l3790 0F68  
                       l3774 0EF0                         l3782 0F42                         l3766 0E46  
                       l3758 0D98                         l3686 09A8                         l3678 0984  
                       l3694 09C4                         l3918 201E                         l3926 2036  
                       l3880 280E                         l3872 27A8                         l3864 2730  
                       l3856 26FC                         l2992 12FE                         l2984 12CC  
                       l2976 12B4                         l2968 1284                         l3848 11F6  
                       l3792 0F74                         l3784 0F52                         l3776 0EF6  
                       l3768 0E56                         l3696 09DE                         l3936 20F0  
                       l3928 2068                         l3952 21A6                         l3970 32B8  
                       l3882 2820                         l3866 2764                         l3858 2710  
                       l2986 12DC                         l2994 1306                         l2978 12B6  
                       l3794 0FEC                         l3786 0F5A                         l3778 0F2A  
                       l3946 2168                         l3938 211A                         l3890 1EDE  
                       l3972 32BC                         l3980 3260                         l3868 276C  
                       l2996 1316                         l2988 12EC                         l3796 100C  
                       l3788 0F60                         l3948 2194                         l3892 1EEC  
                       l3974 32B4                         l3990 2CE8                         l3982 324A  
                       l3878 27DE                         l2998 1328                         l3798 1028  
                       l3894 1EFA                         l3976 3274                         l3992 2CF0  
                       l3984 3258                         l3896 1EFE                         l3888 1EBA  
                       l3994 2CFC                         l3986 2CC2                         l3898 1F22  
                       l3996 2D0A                         l3988 2CD2                         l3998 2D14  
                       STR_1 0826                         STR_2 0801                         STR_3 0814  
                       STR_4 0833                         STR_7 0837                         u3000 1710  
                       u3001 170C                         u3010 1722                         u3011 171E  
                       u3100 19CE                         u3020 1732                         u3101 19CA  
                       u3021 172E                         u3110 19E0                         u3030 1772  
                       _LATB 000F8A                         u3111 19DC                         u3031 176E  
                       u3200 2C84                         u3120 1A0E                         u3040 1784  
                       u2400 12B4                         u2320 3242                         u4000 1FFC  
                       _LATD 000F8C                         u3201 2C80                         u3121 1A0A  
                       u3041 1780                         u2401 12B0                         u2321 323E  
                       u4001 1FF8                         u3210 2CB8                         u3130 1A24  
                       u3050 1794                         u2410 12CA                         u2330 2B60  
                       u4010 2084                         u3211 2CB4                         u3131 1A20  
                       u3051 1790                         u2411 12C6                         u2331 2B5C  
                       u4011 2080                         u4020 3284                         u3220 297A  
                       u3140 1A38                         u3060 17CA                         u2500 1404  
                       u2420 12DC                         u3300 28BE                         u2340 2B72  
                       u4021 327E                         u3221 2976                         u3141 1A34  
                       u3061 17C6                         u2501 1400                         u2421 12D8  
                       u3301 28BA                         u2341 2B6E                         u4030 3258  
                       u3230 29B8                         u3150 1A52                         u3070 17DA  
                       u2510 1424                         u2430 12EC                         u3310 28D2  
                       u2350 2B9A                         u4031 3254                         u3231 29B4  
                       u3151 1A4E                         u3071 17D6                         u2511 1420  
                       u2431 12E8                         u3311 28CE                         u2351 2B96  
                       u4040 2CE8                         u4200 2F08                         u3240 29D6  
                       u3160 1A9A                         u3080 1954                         u2600 1564  
                       u2520 1432                         u2440 1328                         u3320 28FA  
                       u3400 2B00                         u2360 2BD0                         u4041 2CE4  
                       u4201 2F04                         u3241 29D2                         u3161 1A96  
                       u2601 1560                         u2521 142E                         u2441 1324  
                       u3321 28F6                         u3401 2AFC                         u2361 2BCC  
                       u4026 3286                         u4050 2D0A                         u4210 23F4  
                       u3250 29F6                         u3170 1AC8                         u3090 19AE  
                       u2610 1590                         u2530 1442                         u2450 1336  
                       u2370 1250                         u3330 291A                         u4051 2D06  
                       u4211 23F0                         u3251 29F2                         u3171 1AC4  
                       u3091 19AA                         u2611 158C                         u2531 143E  
                       u2451 1332                         u2371 124C                         u3331 2916  
                       u4060 2D32                         u4300 2582                         u4220 2402  
                       u3260 2A46                         u3180 1B02                         u2700 1672  
                       u2620 15A0                         u2540 1474                         u2460 13A4  
                       u2380 1262                         u3340 292A                         u3420 2B3A  
                       u3500 22D4                         u4061 2D2E                         u4301 257E  
                       u4221 23FE                         u3261 2A42                         u3181 1AFE  
                       u3085 194A                         u2701 166E                         u2621 159C  
                       u2541 1470                         u2461 13A0                         u2381 125E  
                       u3341 2926                         u3421 2B34                         u3501 22D0  
                       u4230 245E                         u3190 2C46                         u3270 31A2  
                       u2710 1684                         u2630 15BC                         u2550 1482  
                       u2470 13BC                         u2390 1272                         u3430 2B3C  
                       u3510 22F8                         u3350 2D74                         u4070 2FA0  
                       u4231 245A                         u3191 2C42                         u3271 319E  
                       u2711 1680                         u2631 15B8                         u2551 147E  
                       u2471 13B6                         u2391 126E                         u3415 2B12  
                       u3351 2D70                         u4071 2F9C                         u4080 3174  
                       u4240 24B4                         u3600 307C                         u2800 1BA0  
                       u2720 1694                         u2640 15CC                         u2560 14A0  
                       u2480 13BE                         u3280 285C                         u3520 2314  
                       u3360 2DCA                         u3440 314E                         u4081 3170  
                       u4241 24B0                         u3601 3078                         u2801 1B9C  
                       u2721 1690                         u2641 15C8                         u2561 149C  
                       u3281 2858                         u3521 2310                         u3361 2DC6  
                       u3441 314A                         u4170 2E90                         u4250 24FE  
                       u2810 1BB2                         u2730 16B4                         u2650 15DE  
                       u2570 14D8                         u2490 13E6                         u3290 2890  
                       u3370 2A90                         u3530 2368                         u3450 2DFE  
                       u3610 0860                         u4251 24FA                         u2811 1BAE  
                       u2731 16B0                         u2651 15DA                         u2571 14D4  
                       u2491 13E2                         u3515 22EE                         u3451 2DFA  
                       u3611 085C                         u4180 2ED0                         u4260 251C  
                       u2900 1D5C                         u2820 1BC2                         u2740 16C6  
                       u2660 15F4                         u2580 151E                         u3380 2AAE  
                       u3540 2384                         u3460 2218                         u3700 0ACE  
                       u3620 08AA                         u4261 2518                         u2901 1D58  
                       u2821 1BBE                         u2741 16C2                         u2661 15F0  
                       u2581 151A                         u3381 2AAA                         u3541 2380  
                       u3701 0ACA                         u3621 08A6                         u4190 2EF8  
                       u4270 252C                         u2910 1D7C                         u2830 1C02  
                       u2750 16E2                         u2670 160A                         u2590 1554  
                       u3390 2AD6                         u3550 23C0                         u3470 2246  
                       u3710 0B0C                         u3630 08BA                         u4350 26D6  
                       u4175 2E86                         u4271 2528                         u2911 1D78  
                       u2831 1BFE                         u2751 16DE                         u2671 1606  
                       u2591 1550                         u3295 2886                         u3391 2AD2  
                       u3375 2A86                         u3551 23BC                         u3535 235E  
                       u3471 2242                         u3711 0B08                         u3631 08B6  
                       u4351 26D2                         u4280 253A                         u2920 1D8E  
                       u2840 1C42                         u2680 161E                         u3480 2268  
                       u3560 2FFA                         u2760 310E                         u3800 0E46  
                       u3720 0B98                         u3640 08F8                         u4281 2536  
                       u2921 1D8A                         u2841 1C3E                         u2681 161A  
                       u3481 2264                         u3465 220E                         u3561 2FF6  
                       u2761 310A                         u3801 0E42                         u3721 0B94  
                       u3641 08F4                         u4290 2574                         u3570 31E8  
                       u2930 1DBC                         u2850 1CB8                         u2770 1B3A  
                       u2690 1638                         u3810 0E56                         u3730 0BCE  
                       u3650 090A                         u4187 2EC6                         u4291 2570  
                       u3571 31E2                         u2931 1DB8                         u2851 1CB4  
                       u2771 1B36                         u2691 1634                         u3811 0E52  
                       u3731 0BCA                         u3651 0906                         u3580 31EA  
                       u2940 1DD2                         u2860 1CDA                         u2780 1B4C  
                       u3900 11E0                         u3820 0EF0                         u3740 0BE6  
                       u3660 0984                         u4197 2EEE                         u2941 1DCE  
                       u2861 1CD6                         u2781 1B48                         u3901 11DA  
                       u3821 0EEC                         u3741 0BE2                         u3661 0980  
                       u3590 305A                         u2950 1DE6                         u2870 1D04  
                       u2790 1B5C                         u3910 11E2                         u3830 0F3E  
                       u3750 0C18                         u3670 0996                         u3591 3056  
                       u2951 1DE2                         u2871 1D00                         u2791 1B58  
                       u3495 227C                         u3831 0F3A                         u3751 0C14  
                       u3671 0992                         u4367 26E8                         u2960 1E00  
                       u2880 1D28                         u3496 2286                         u3920 11F6  
                       u3840 0FEC                         u3760 0C26                         u3680 0A10  
                       u2961 1DFC                         u2881 1D24                         u3497 2296  
                       u3921 11F2                         u3841 0FE8                         u3761 0C22  
                       u3681 0A0C                         u3930 2730                         u2970 1E48  
                       u2890 1D3E                         u3850 1028                         u3770 0C50  
                       u3690 0A9C                         u3931 272C                         u2971 1E44  
                       u2891 1D3A                         u3851 1024                         u3771 0C4C  
                       u3691 0A98                         u3940 2760                         u2980 1E78  
                       u3860 1036                         u3780 0D98                         u3941 275C  
                       u2981 1E74                         u3861 1032                         u3781 0D94  
                       u3950 280E                         u2990 1EA6                         u3870 108A  
                       u3790 0DFE                         u3951 280A                         u2991 1EA2  
                       u3871 1086                         u3791 0DFA                         u3960 2820  
                       u3880 115C                         u3961 281C                         u3881 1158  
                       u3890 1178                         u3970 1EDE                         u3891 1174  
                       u3971 1EDA                         u3980 1F22                         u3981 1F1E  
                       u3990 1F5C                         u3991 1F58                         _WPUB 000F85  
                       _dbuf 0100                         _labs 2DE0                         _atoi 26FC  
                       _main 2596                         _prec 00B1                         _temp 00D7  
                       pad@i 0019                         pad@p 0016                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 001B                         fsr2l 000FD9  
           __end_of_ADC_Init 3232                ___fpclassifyf 2A50     USART_WriteString@pString 0002  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
            ___fldiv@new_exp 0022                 ___param_bank 000000      __end_of_USART_WriteByte 325E  
                      ??_pad 0018                ___fltol@sign1 0009                        ?_labs 0001  
                      ?_atoi 0007              __end_of___fladd 16F6                        ?_main 0001  
            __end_of___fldiv 1EBA              __end_of___flneg 31C4              __end_of___flmul 1B20  
            __end_of___flsub 3042              __end_of___fltol 294C              __end_of___lldiv 2D66  
               vfpfcnvrt@fmt 0049                        _PORTB 000F81                        _PORTD 000F83  
                      _TRISB 000F93                        _TRISD 000F95                        _flags 005F  
                      _fputc 2B4E                        _fputs 30CC              __end_of_isdigit 31F0  
                      labs@a 0001                        atoi@n 000E                        pad@fp 0012  
                      atoi@s 0007                        _width 00AF                        _putch 3232  
            __end_of_isspace 3088                        tablat 000FF5                        status 000FD8  
            __end_of_sprintf 2F5C               ?___fpclassifyf 0001              __initialization 3088  
               __end_of_labs 2E46                 __end_of_atoi 2846                 __end_of_main 26FC  
                     ??_labs 0005                       ??_atoi 0009                       ??_main 005D  
              __activetblptr 000002             ??_OSCILADOR_Init 0001                       ?_fputc 0002  
                     ?_fputs 000B                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     ?_putch 0001                 ??_ADC_Enable 0001                       _RCREG1 000FAE  
                     _RCSTA1 000FAB                       _SPBRG1 000FAF                       _TXREG1 000FAD  
           __end_of___xxtofl 2596                       _TXSTA1 000FAC                 vfprintf@cfmt 005B  
                     ___flge 294C                       ___fleq 2C18                    ??___fladd 0009  
                     ___wmul 31F0                    ??___fldiv 0019                    ??___flneg 0005  
                  ??___flmul 001E                    ??___flsub 0037                    ??___fltol 0005  
                  ??___lldiv 0009             ?_USART_WriteByte 0001                       _efgtoa 083C  
          __end_of_PORT_Init 32B4                       _floorf 21D0                       _memcpy 2FAC  
                     clear_0 30AE                       clear_1 30BA                       isa$std 000001  
                     pad@buf 0014                       _strcpy 3110           __end_of_ADC_Enable 32BC  
                     fputc@c 0002                       fputs@c 000F                       fputs@i 0010  
                     fputs@s 000B                    ??_isdigit 0003              ___fpclassifyf@e 0009  
                  ?_ADC_Init 0001              ___fpclassifyf@u 000B              ___fpclassifyf@x 0001  
               __mediumconst 0000                    ??_isspace 0003                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8     ADC_GetConversion@channel 0007  
                     putch@c 0001             __end_of_vfprintf 2FAC                    ??_sprintf 005D  
                 ___flge@ff1 002F                   ___flge@ff2 0033              ??___fpclassifyf 0005  
               ___xxtofl@arg 0012                 ___xxtofl@exp 0011                 ___xxtofl@val 0008  
                 ___fleq@ff1 0001                   ___fleq@ff2 0005                   __accesstop 0060  
    __end_of__initialization 30C2                   ___flneg@f1 0001                ___rparam_used 000001  
                 ___fltol@f1 0001               __pcstackCOMRAM 0001                 __pidataBANK0 329A  
              __end_of_fputc 2C18                __end_of_fputs 3110                __end_of_putch 3248  
                 ??_ADC_Init 0001                      ??_fputc 0006                      ??_fputs 000F  
         USART_SerialBegin@n 0012                      ??_putch 0001                   __pbssBANK0 00A7  
                 __pbssBANK1 0100          _ADC_StateConversion 3274                      ?___flge 002F  
                    ?___fleq 0001                      ?___wmul 0001                      ?_efgtoa 003E  
                    ?_floorf 002A                      ?_memcpy 0001         ?_ADC_StateConversion 0001  
                    ?_strcpy 0001                ??_ADC_Disable 0001                    ?___xxtofl 0008  
                    _SPBRGH1 000FB0                      _SSP1ADD 000FC8                      _SSP1BUF 000FC9  
                    __Hparam 0000                      __Lparam 0000                      ___fladd 1236  
                    ___fldiv 1B20                      ___flneg 318C                      ___flmul 16F6  
                    ___flsub 2FFC                      ___fltol 2846                      ___lldiv 2CC2  
                  ?_vfprintf 008C                 __psmallconst 0800        ??_ADC_StateConversion 0001  
                    __pcinit 3088                      __ramtop 0800                      __ptext0 2596  
                    __ptext1 2F0A                      __ptext2 2F5C                      __ptext3 1EBA  
                    __ptext4 083C                      __ptext5 3110                      __ptext6 2D66  
                    __ptext7 30CC                      __ptext8 2B4E                      __ptext9 3232  
                    _isdigit 31C4                   ??___xxtofl 000C                      _isspace 3042  
                    efgtoa@c 0044                      efgtoa@d 006B                      efgtoa@e 006F  
                    efgtoa@f 0040                      efgtoa@g 0084                      efgtoa@h 0079  
                    efgtoa@i 0077                      efgtoa@l 007D                      efgtoa@m 006D  
                    efgtoa@n 0082                      efgtoa@p 0062                      efgtoa@t 0064  
                    efgtoa@u 0088                      efgtoa@w 0071                      atoi@neg 000C  
                    _strTemp 00B3                      _sprintf 2F0A          __end_of_ADC_Disable 32C0  
       end_of_initialization 30C2                      floorf@e 0038                      floorf@m 0034  
                    floorf@u 003A                      floorf@x 002A                      memcpy@d 0007  
                    memcpy@n 0005                      memcpy@s 0009                      fputc@fp 0004  
              __Lmediumconst 0000                      fputs@fp 000D              ___lldiv@divisor 0005  
            ___lldiv@counter 000D            __end_of_vfpfcnvrt 21D0                   efgtoa@mode 0069  
                 efgtoa@sign 0081                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
           vfpfcnvrt@convarg 0050                   ??_vfprintf 005B                      strcpy@d 0007  
                    strcpy@s 0005                    _PORT_Init 32AA                  ___fladd@grs 0010  
              ___xxtofl@sign 0010                    _TRISBbits 000F93                    _TRISCbits 000F94  
                  _TRISEbits 000F96          _ADC_StartConversion 32B4                  ___fldiv@grs 0024  
                ___fldiv@rem 001D                  ___flmul@grs 0023         ?_ADC_StartConversion 0001  
             __end_of___flge 2A50               __end_of___fleq 2CC2                  vfpfcnvrt@ap 004B  
                vfpfcnvrt@cp 0059                  vfpfcnvrt@fp 0047               __end_of___wmul 3216  
             __end_of_efgtoa 1236               __end_of_floorf 23E2               __end_of_memcpy 2FFC  
                 floorf@F526 00A7                   ?_PORT_Init 0001                  _ADC_Disable 32BC  
             __end_of_strcpy 3150          start_initialization 3088                  __end_of_pad 2DE0  
                  _Keypad4x4 00C7        __end_of___fpclassifyf 2B4E        ??_ADC_StartConversion 0001  
                vfprintf@fmt 008E                     ??___flge 0037                     ??___fleq 0009  
                   ??___wmul 0005                     ??_efgtoa 0045                  __pdataBANK0 00C7  
                   ??_floorf 002E                     ??_memcpy 0007                     ??_strcpy 0005  
                  ___fladd@a 0005                    ___fladd@b 0001                    ___fldiv@a 0015  
                  ___fldiv@b 0011                    ___flmul@a 001A                    ___flmul@b 0016  
                __pbssCOMRAM 005F                    ___flsub@a 0033                    ___flsub@b 002F  
              __pcstackBANK0 0060                    __pnvBANK0 00D7                  _efgtoa$1932 0066  
          _USART_SerialBegin 2E46            _ADC_SelectChannel 325E                     ?___fladd 0001  
                   ?___fldiv 0011                     ?___flneg 0001                     ?___flmul 0016  
                   ?___flsub 002F                     ?___fltol 0001           ?_USART_SerialBegin 000E  
                   ?___lldiv 0001           ?_ADC_SelectChannel 0001                  ??_PORT_Init 0001  
        ??_USART_SerialBegin 0012                  __smallconst 0800                     _BAUDCON1 000FB8  
                   ?_isdigit 0001          ??_ADC_SelectChannel 0001                     _ADC_Init 3216  
                   ?_isspace 0001                     ?_sprintf 0092            ??_USART_WriteByte 0001  
             ___wmul@product 0005                     _LATEbits 000F8D                     _PIE1bits 000F9D  
  __end_of_USART_SerialBegin 2EAC    __end_of_ADC_SelectChannel 3274  __end_of_ADC_StateConversion 3288  
                   _PIR1bits 000F9E                     _SSP1CON1 000FC6                     _SSP1STAT 000FC7  
                  _vfpfcnvrt 1EBA                   _ADCON0bits 000FC2                   _ADCON1bits 000FC1  
                 _ADCON2bits 000FC0            ___wmul@multiplier 0001     ADC_SelectChannel@channel 0002  
               _isspace$2010 0005     USART_SerialBegin@baudios 000E                   vfpfcnvrt@c 0058  
                _INTCON2bits 000FF1                    copy_data0 309C                   _ADC_Enable 32B8  
             _OSCILADOR_Init 3288                     __Hrparam 0000                    memcpy@tmp 000B  
                 vfprintf@ap 0090                     __Lrparam 0000                   vfprintf@fp 008C  
          _ADC_GetConversion 3150           ?_ADC_GetConversion 0003                   ?_vfpfcnvrt 0047  
                 _ANSELAbits 000F5B                   _ANSELBbits 000F5C                   _ANSELCbits 000F5D  
                 _ANSELEbits 000F5F           ___fpclassifyf@F465 00AB          ??_ADC_GetConversion 0005  
                 sprintf@fmt 0094                 ?_ADC_Disable 0001                     ___xxtofl 23E2  
          _USART_WriteString 2EAC                     __ptext10 2FAC                     __ptext11 2DE0  
                   __ptext20 2C18                     __ptext12 21D0                     __ptext21 1B20  
                   __ptext13 2A50                     __ptext30 2CC2                     __ptext22 26FC  
                   __ptext14 2846                     __ptext31 32AA                     __ptext23 3042  
                   __ptext15 2FFC                     __ptext32 3288                     __ptext24 31C4  
                   __ptext16 1236                     __ptext33 3216                     __ptext25 31F0  
                   __ptext17 318C                     __ptext34 3150                     __ptext26 23E2  
                   __ptext18 16F6                     __ptext35 3274                     __ptext27 2EAC  
                   __ptext19 294C                     __ptext36 32B4                     __ptext28 3248  
                   __ptext37 325E                     __ptext29 2E46                     __ptext38 32B8  
                   __ptext39 32BC                 _SSP1CON1bits 000FC6                 _SSP1CON2bits 000FC5  
         ?_USART_WriteString 0002                   strcpy@dest 0001       __end_of_OSCILADOR_Init 329A  
        ??_USART_WriteString 0004    __end_of_ADC_GetConversion 318C                     efgtoa@fp 003E  
                   efgtoa@ne 0060                     efgtoa@pp 0068                     efgtoa@ou 0073  
                   isa$xinst 000000                     _vfprintf 2F5C                 _SSP1STATbits 000FC7  
  __end_of_USART_WriteString 2F0A                     memcpy@d1 0001                     memcpy@s1 0003  
        USART_WriteByte@data 0001                     isdigit@c 0001                    sprintf@ap 009A  
                ?_ADC_Enable 0001              ?_OSCILADOR_Init 0001  __end_of_ADC_StartConversion 32B8  
                   isspace@c 0001             ___lldiv@dividend 0001                    strcpy@src 0003  
                 _RCSTA1bits 000FAB                   _OSCCONbits 000FD3                  efgtoa@nmode 006A  
                ??_vfpfcnvrt 004D                     sprintf@f 009C                     sprintf@s 0092  
            _USART_WriteByte 3248             ___lldiv@quotient 0009                  _SSPCON2bits 000FC5  
              ___fladd@signs 000D                 ___fladd@aexp 000E                 ___fladd@bexp 000F  
