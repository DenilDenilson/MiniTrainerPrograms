

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 20 16:05:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 09/02/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F45K50 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataBANK0
    85   001678                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _Keypad4x4
    89   001678  31                 	db	49
    90   001679  32                 	db	50
    91   00167A  33                 	db	51
    92   00167B  41                 	db	65
    93   00167C  34                 	db	52
    94   00167D  35                 	db	53
    95   00167E  36                 	db	54
    96   00167F  42                 	db	66
    97   001680  37                 	db	55
    98   001681  38                 	db	56
    99   001682  39                 	db	57
   100   001683  43                 	db	67
   101   001684  2A                 	db	42
   102   001685  30                 	db	48
   103   001686  23                 	db	35
   104   001687  44                 	db	68
   105                           
   106                           ;initializer for _is_pause
   107   001688  01                 	db	1
   108   000000                     _RCREG1	set	4014
   109   000000                     _TXREG1	set	4013
   110   000000                     _SPBRG1	set	4015
   111   000000                     _BAUDCON1	set	4024
   112   000000                     _ANSELCbits	set	3933
   113   000000                     _TRISCbits	set	3988
   114   000000                     _TRISD	set	3989
   115   000000                     _SSP1CON2bits	set	4037
   116   000000                     _SSP1CON1bits	set	4038
   117   000000                     _SSP1STATbits	set	4039
   118   000000                     _ADRESL	set	4035
   119   000000                     _ADRESH	set	4036
   120   000000                     _ADCON0bits	set	4034
   121   000000                     _INTCON2bits	set	4081
   122   000000                     _TRISEbits	set	3990
   123   000000                     _RCSTA1bits	set	4011
   124   000000                     _TXSTA1bits	set	4012
   125   000000                     _SSP1CON1	set	4038
   126   000000                     _SSP1STAT	set	4039
   127   000000                     _TRISB	set	3987
   128   000000                     _SSPCON2bits	set	4037
   129   000000                     _ANSELBbits	set	3932
   130   000000                     _ANSELD	set	3934
   131   000000                     _LATEbits	set	3981
   132   000000                     _TMR0	set	4054
   133   000000                     _TRISBbits	set	3987
   134   000000                     _T0CONbits	set	4053
   135   000000                     _INTCONbits	set	4082
   136   000000                     _INTCON3bits	set	4080
   137   000000                     _PORTB	set	3969
   138   000000                     _LATB	set	3978
   139   000000                     _ANSELEbits	set	3935
   140   000000                     _PIE1bits	set	3997
   141   000000                     _PIR1bits	set	3998
   142   000000                     _ADCON2bits	set	4032
   143   000000                     _ADCON1bits	set	4033
   144   000000                     _RCONbits	set	4048
   145   000000                     _OSCCONbits	set	4051
   146   000000                     _SSP1BUF	set	4041
   147   000000                     _SSP1ADD	set	4040
   148   000000                     _LATD	set	3980
   149   000000                     _PORTD	set	3971
   150   000000                     _WPUB	set	3973
   151   000000                     _RCSTA1	set	4011
   152   000000                     _TXSTA1	set	4012
   153   000000                     _SPBRGH1	set	4016
   154                           
   155                           	psect	smallconst
   156   000800                     __psmallconst:
   157                           	callstack 0
   158   000800  00                 	db	0
   159   000801                     STR_1:
   160   000801  54                 	db	84	;'T'
   161   000802  69                 	db	105	;'i'
   162   000803  6D                 	db	109	;'m'
   163   000804  65                 	db	101	;'e'
   164   000805  72                 	db	114	;'r'
   165   000806  3A                 	db	58	;':'
   166   000807  20                 	db	32
   167   000808  20                 	db	32
   168   000809  25                 	db	37
   169   00080A  30                 	db	48	;'0'
   170   00080B  32                 	db	50	;'2'
   171   00080C  75                 	db	117	;'u'
   172   00080D  3A                 	db	58	;':'
   173   00080E  25                 	db	37
   174   00080F  30                 	db	48	;'0'
   175   000810  32                 	db	50	;'2'
   176   000811  75                 	db	117	;'u'
   177   000812  3A                 	db	58	;':'
   178   000813  25                 	db	37
   179   000814  30                 	db	48	;'0'
   180   000815  32                 	db	50	;'2'
   181   000816  75                 	db	117	;'u'
   182   000817  00                 	db	0
   183   000818                     STR_2:
   184   000818  54                 	db	84	;'T'
   185   000819  69                 	db	105	;'i'
   186   00081A  6D                 	db	109	;'m'
   187   00081B  65                 	db	101	;'e'
   188   00081C  72                 	db	114	;'r'
   189   00081D  3A                 	db	58	;':'
   190   00081E  20                 	db	32
   191   00081F  20                 	db	32
   192   000820  20                 	db	32
   193   000821  20                 	db	32
   194   000822  20                 	db	32
   195   000823  25                 	db	37
   196   000824  30                 	db	48	;'0'
   197   000825  32                 	db	50	;'2'
   198   000826  75                 	db	117	;'u'
   199   000827  3A                 	db	58	;':'
   200   000828  25                 	db	37
   201   000829  30                 	db	48	;'0'
   202   00082A  32                 	db	50	;'2'
   203   00082B  75                 	db	117	;'u'
   204   00082C  00                 	db	0
   205   00082D  00                 	db	0	; dummy byte at the end
   206   000000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210   001506                     __pcinit:
   211                           	callstack 0
   212   001506                     start_initialization:
   213                           	callstack 0
   214   001506                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to BANK0 (17 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219   001506  0E78               	movlw	low __pidataBANK0
   220   001508  6EF6               	movwf	tblptrl,c
   221   00150A  0E16               	movlw	high __pidataBANK0
   222   00150C  6EF7               	movwf	tblptrh,c
   223   00150E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224   001510  6EF8               	movwf	tblptru,c
   225   001512  EE00  F0B5         	lfsr	0,__pdataBANK0
   226   001516  EE10 F011          	lfsr	1,17
   227   00151A                     copy_data0:
   228   00151A  0009               	tblrd		*+
   229   00151C  CFF5 FFEE          	movff	tablat,postinc0
   230   001520  50E5               	movf	postdec1,w,c
   231   001522  50E1               	movf	fsr1l,w,c
   232   001524  E1FA               	bnz	copy_data0
   233                           
   234                           ; Clear objects allocated to BANK0 (60 bytes)
   235   001526  EE00  F060         	lfsr	0,__pbssBANK0
   236   00152A  0E3C               	movlw	60
   237   00152C                     clear_0:
   238   00152C  6AEE               	clrf	postinc0,c
   239   00152E  06E8               	decf	wreg,f,c
   240   001530  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to COMRAM (1 bytes)
   243   001532  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   244   001534                     end_of_initialization:
   245                           	callstack 0
   246   001534                     __end_of__initialization:
   247                           	callstack 0
   248   001534  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   249   001536  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   250   001538  0E00               	movlw	low (__Lmediumconst shr (0+16))
   251   00153A  6EF8               	movwf	tblptru,c
   252   00153C  0100               	movlb	0
   253   00153E  EF57  F008         	goto	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMRAM
   256   00005C                     __pbssCOMRAM:
   257                           	callstack 0
   258   00005C                     _flags:
   259                           	callstack 0
   260   00005C                     	ds	1
   261                           
   262                           	psect	bssBANK0
   263   000060                     __pbssBANK0:
   264                           	callstack 0
   265   000060                     _width:
   266                           	callstack 0
   267   000060                     	ds	2
   268   000062                     _prec:
   269                           	callstack 0
   270   000062                     	ds	2
   271   000064                     _col:
   272                           	callstack 0
   273   000064                     	ds	1
   274   000065                     _seconds:
   275                           	callstack 0
   276   000065                     	ds	1
   277   000066                     _minutes:
   278                           	callstack 0
   279   000066                     	ds	1
   280   000067                     _hours:
   281                           	callstack 0
   282   000067                     	ds	1
   283   000068                     _dbuf:
   284                           	callstack 0
   285   000068                     	ds	32
   286   000088                     _strReloj:
   287                           	callstack 0
   288   000088                     	ds	20
   289                           
   290                           	psect	dataBANK0
   291   0000B5                     __pdataBANK0:
   292                           	callstack 0
   293   0000B5                     _Keypad4x4:
   294                           	callstack 0
   295   0000B5                     	ds	16
   296   0000C5                     _is_pause:
   297                           	callstack 0
   298   0000C5                     	ds	1
   299                           
   300                           	psect	cstackBANK0
   301   00009C                     __pcstackBANK0:
   302                           	callstack 0
   303   00009C                     ?_sprintf:
   304                           	callstack 0
   305   00009C                     sprintf@s:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x0
   309   00009C                     	ds	2
   310   00009E                     sprintf@fmt:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x2
   314   00009E                     	ds	8
   315   0000A6                     sprintf@ap:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0xA
   319   0000A6                     	ds	2
   320   0000A8                     sprintf@f:
   321                           	callstack 0
   322                           
   323                           ; 11 bytes @ 0xC
   324   0000A8                     	ds	11
   325   0000B3                     ??_main:
   326                           
   327                           ; 1 bytes @ 0x17
   328   0000B3                     	ds	2
   329                           
   330                           	psect	cstackCOMRAM
   331   000001                     __pcstackCOMRAM:
   332                           	callstack 0
   333   000001                     ??_RutinaServicioInterrupt:
   334   000001                     
   335                           ; 2 bytes @ 0x0
   336   000001                     	ds	1
   337   000002                     ?_isdigit:
   338                           	callstack 0
   339   000002                     ?_isspace:
   340                           	callstack 0
   341   000002                     ?___wmul:
   342                           	callstack 0
   343   000002                     ?___lodiv:
   344                           	callstack 0
   345   000002                     ?___lomod:
   346                           	callstack 0
   347   000002                     Lcd_Port@a:
   348                           	callstack 0
   349   000002                     putch@c:
   350                           	callstack 0
   351   000002                     ___wmul@multiplier:
   352                           	callstack 0
   353   000002                     isdigit@c:
   354                           	callstack 0
   355   000002                     isspace@c:
   356                           	callstack 0
   357   000002                     ___lodiv@dividend:
   358                           	callstack 0
   359   000002                     ___lomod@dividend:
   360                           	callstack 0
   361                           
   362                           ; 8 bytes @ 0x1
   363   000002                     	ds	1
   364   000003                     ??_Lcd_Cmd:
   365   000003                     Lcd_Write_Char@temp:
   366                           	callstack 0
   367   000003                     fputc@c:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371   000003                     	ds	1
   372   000004                     ??_isdigit:
   373   000004                     ??_isspace:
   374   000004                     Lcd_Cmd@a:
   375                           	callstack 0
   376   000004                     Lcd_Write_Char@y:
   377                           	callstack 0
   378   000004                     ___wmul@multiplicand:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x3
   382   000004                     	ds	1
   383   000005                     ??_Lcd_Init:
   384   000005                     Lcd_Set_Cursor@b:
   385                           	callstack 0
   386   000005                     Lcd_Write_Char@a:
   387                           	callstack 0
   388   000005                     fputc@fp:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x4
   392   000005                     	ds	1
   393   000006                     Lcd_Set_Cursor@a:
   394                           	callstack 0
   395   000006                     _isspace$2229:
   396                           	callstack 0
   397   000006                     Lcd_Write_String@a:
   398                           	callstack 0
   399   000006                     ___wmul@product:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x5
   403   000006                     	ds	1
   404   000007                     ??_fputc:
   405   000007                     Lcd_Set_Cursor@z:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x6
   409   000007                     	ds	1
   410   000008                     ?_atoi:
   411                           	callstack 0
   412   000008                     Lcd_Set_Cursor@y:
   413                           	callstack 0
   414   000008                     Lcd_Write_String@i:
   415                           	callstack 0
   416   000008                     atoi@s:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x7
   420   000008                     	ds	1
   421   000009                     Lcd_Set_Cursor@temp:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x8
   425   000009                     	ds	1
   426   00000A                     ??_atoi:
   427   00000A                     ___lodiv@divisor:
   428                           	callstack 0
   429   00000A                     ___lomod@divisor:
   430                           	callstack 0
   431                           
   432                           ; 8 bytes @ 0x9
   433   00000A                     	ds	2
   434   00000C                     fputs@s:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xB
   438   00000C                     	ds	1
   439   00000D                     atoi@neg:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xC
   443   00000D                     	ds	1
   444   00000E                     fputs@fp:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0xD
   448   00000E                     	ds	1
   449   00000F                     atoi@n:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xE
   453   00000F                     	ds	1
   454   000010                     fputs@c:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0xF
   458   000010                     	ds	1
   459   000011                     fputs@i:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x10
   463   000011                     	ds	1
   464   000012                     ___lomod@counter:
   465                           	callstack 0
   466   000012                     ___lodiv@quotient:
   467                           	callstack 0
   468                           
   469                           ; 8 bytes @ 0x11
   470   000012                     	ds	1
   471   000013                     pad@fp:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x12
   475   000013                     	ds	2
   476   000015                     pad@buf:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x14
   480   000015                     	ds	2
   481   000017                     pad@p:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x16
   485   000017                     	ds	2
   486   000019                     ??_pad:
   487                           
   488                           ; 1 bytes @ 0x18
   489   000019                     	ds	1
   490   00001A                     ___lodiv@counter:
   491                           	callstack 0
   492   00001A                     pad@i:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x19
   496   00001A                     	ds	2
   497   00001C                     pad@w:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x1B
   501   00001C                     	ds	2
   502   00001E                     utoa@fp:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1D
   506   00001E                     	ds	2
   507   000020                     utoa@d:
   508                           	callstack 0
   509                           
   510                           ; 8 bytes @ 0x1F
   511   000020                     	ds	8
   512   000028                     ??_utoa:
   513                           
   514                           ; 1 bytes @ 0x27
   515   000028                     	ds	8
   516   000030                     utoa@p:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x2F
   520   000030                     	ds	2
   521   000032                     utoa@w:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x31
   525   000032                     	ds	2
   526   000034                     utoa@n:
   527                           	callstack 0
   528                           
   529                           ; 8 bytes @ 0x33
   530   000034                     	ds	8
   531   00003C                     utoa@i:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x3B
   535   00003C                     	ds	2
   536   00003E                     vfpfcnvrt@fp:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x3D
   540   00003E                     	ds	2
   541   000040                     vfpfcnvrt@fmt:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x3F
   545   000040                     	ds	2
   546   000042                     vfpfcnvrt@ap:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x41
   550   000042                     	ds	2
   551   000044                     ??_vfpfcnvrt:
   552                           
   553                           ; 1 bytes @ 0x43
   554   000044                     	ds	4
   555   000048                     vfpfcnvrt@convarg:
   556                           	callstack 0
   557                           
   558                           ; 8 bytes @ 0x47
   559   000048                     	ds	8
   560   000050                     vfpfcnvrt@done:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x4F
   564   000050                     	ds	2
   565   000052                     vfpfcnvrt@cp:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x51
   569   000052                     	ds	2
   570   000054                     ?_vfprintf:
   571                           	callstack 0
   572   000054                     vfprintf@fp:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x53
   576   000054                     	ds	2
   577   000056                     vfprintf@fmt:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x55
   581   000056                     	ds	2
   582   000058                     vfprintf@ap:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x57
   586   000058                     	ds	2
   587   00005A                     vfprintf@cfmt:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x59
   591   00005A                     	ds	2
   592   00005C                     
   593                           ; 1 bytes @ 0x5B
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   596 ;;
   597 ;; *************** function _main *****************
   598 ;; Defined at:
   599 ;;		line 21 in file "Gpio_Lcd_Buzzer.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  2   64[None  ] int 
   606 ;; Registers used:
   607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   613 ;;      Params:         0       0       0       0       0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0
   615 ;;      Temps:          0       2       0       0       0       0       0       0       0
   616 ;;      Totals:         0       2       0       0       0       0       0       0       0
   617 ;;Total ram usage:        2 bytes
   618 ;; Hardware stack levels required when called: 10
   619 ;; This function calls:
   620 ;;		_Hardware_Init
   621 ;;		_Lcd_Clear
   622 ;;		_Lcd_Set_Cursor
   623 ;;		_Lcd_Write_String
   624 ;;		_Print_Hour
   625 ;;		_sprintf
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text0
   632   0010AE                     __ptext0:
   633                           	callstack 0
   634   0010AE                     _main:
   635                           	callstack 21
   636   0010AE                     
   637                           ;Gpio_Lcd_Buzzer.c: 23:     Hardware_Init();
   638   0010AE  EC05  F00B         	call	_Hardware_Init	;wreg free
   639                           
   640                           ;Gpio_Lcd_Buzzer.c: 25:     Lcd_Clear();
   641   0010B2  EC45  F00B         	call	_Lcd_Clear	;wreg free
   642                           
   643                           ;Gpio_Lcd_Buzzer.c: 26:     Lcd_Set_Cursor(1, 1);
   644   0010B6  0E01               	movlw	1
   645   0010B8  6E05               	movwf	Lcd_Set_Cursor@b^0,c
   646   0010BA  0E01               	movlw	1
   647   0010BC  EC4C  F009         	call	_Lcd_Set_Cursor
   648   0010C0                     
   649                           ;Gpio_Lcd_Buzzer.c: 27:     sprintf(strReloj, "Timer:  %02u:%02u:%02u", hours, minutes, 
      +                          seconds);
   650   0010C0  0E88               	movlw	low _strReloj
   651   0010C2  0100               	movlb	0	; () banked
   652   0010C4  6F9C               	movwf	sprintf@s& (0+255),b
   653   0010C6  0E00               	movlw	high _strReloj
   654   0010C8  6F9D               	movwf	(sprintf@s+1)& (0+255),b
   655   0010CA  0E01               	movlw	low STR_1
   656   0010CC  6F9E               	movwf	sprintf@fmt& (0+255),b
   657   0010CE  0E08               	movlw	high STR_1
   658   0010D0  6F9F               	movwf	(sprintf@fmt+1)& (0+255),b
   659   0010D2  5167               	movf	_hours& (0+255),w,b	;volatile
   660   0010D4  6FA0               	movwf	(?_sprintf+4)& (0+255),b
   661   0010D6  6BA1               	clrf	(?_sprintf+5)& (0+255),b
   662   0010D8  BFA0               	btfsc	(?_sprintf+4)& (0+255),7,b
   663   0010DA  07A1               	decf	(?_sprintf+5)& (0+255),f,b
   664   0010DC  5166               	movf	_minutes& (0+255),w,b	;volatile
   665   0010DE  6FA2               	movwf	(?_sprintf+6)& (0+255),b
   666   0010E0  6BA3               	clrf	(?_sprintf+7)& (0+255),b
   667   0010E2  BFA2               	btfsc	(?_sprintf+6)& (0+255),7,b
   668   0010E4  07A3               	decf	(?_sprintf+7)& (0+255),f,b
   669   0010E6  5165               	movf	_seconds& (0+255),w,b	;volatile
   670   0010E8  6FA4               	movwf	(?_sprintf+8)& (0+255),b
   671   0010EA  6BA5               	clrf	(?_sprintf+9)& (0+255),b
   672   0010EC  BFA4               	btfsc	(?_sprintf+8)& (0+255),7,b
   673   0010EE  07A5               	decf	(?_sprintf+9)& (0+255),f,b
   674   0010F0  ECAD  F009         	call	_sprintf	;wreg free
   675   0010F4                     
   676                           ;Gpio_Lcd_Buzzer.c: 29:     Lcd_Write_String(strReloj);
   677   0010F4  0E88               	movlw	low _strReloj
   678   0010F6  6E06               	movwf	Lcd_Write_String@a^0,c
   679   0010F8  0E00               	movlw	high _strReloj
   680   0010FA  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
   681   0010FC  EC63  F00A         	call	_Lcd_Write_String	;wreg free
   682   001100                     l2817:
   683                           
   684                           ;Gpio_Lcd_Buzzer.c: 43:         Print_Hour();
   685   001100  EC42  F00A         	call	_Print_Hour	;wreg free
   686   001104                     
   687                           ;Gpio_Lcd_Buzzer.c: 46:         if ( seconds == 0 && minutes == 0 && is_pause == 0 ) {
   688   001104  0100               	movlb	0	; () banked
   689   001106  5165               	movf	_seconds& (0+255),w,b	;volatile
   690   001108  A4D8               	btfss	status,2,c
   691   00110A  EF89  F008         	goto	u1821
   692   00110E  EF8B  F008         	goto	u1820
   693   001112                     u1821:
   694   001112  EF80  F008         	goto	l2817
   695   001116                     u1820:
   696   001116                     
   697                           ; BSR set to: 0
   698   001116  5166               	movf	_minutes& (0+255),w,b	;volatile
   699   001118  A4D8               	btfss	status,2,c
   700   00111A  EF91  F008         	goto	u1831
   701   00111E  EF93  F008         	goto	u1830
   702   001122                     u1831:
   703   001122  EF80  F008         	goto	l2817
   704   001126                     u1830:
   705   001126                     
   706                           ; BSR set to: 0
   707   001126  51C5               	movf	_is_pause& (0+255),w,b	;volatile
   708   001128  A4D8               	btfss	status,2,c
   709   00112A  EF99  F008         	goto	u1841
   710   00112E  EF9B  F008         	goto	u1840
   711   001132                     u1841:
   712   001132  EF80  F008         	goto	l2817
   713   001136                     u1840:
   714   001136                     
   715                           ; BSR set to: 0
   716                           ;Gpio_Lcd_Buzzer.c: 47:             LATEbits.LATE2 = 1;
   717   001136  848D               	bsf	141,2,c	;volatile
   718   001138                     
   719                           ; BSR set to: 0
   720                           ;Gpio_Lcd_Buzzer.c: 48:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   721   001138  0E03               	movlw	3
   722   00113A  0100               	movlb	0	; () banked
   723   00113C  6FB4               	movwf	(??_main+1)& (0+255),b
   724   00113E  0E8A               	movlw	138
   725   001140  6FB3               	movwf	??_main& (0+255),b
   726   001142  0E55               	movlw	85
   727   001144                     u1857:
   728   001144  2EE8               	decfsz	wreg,f,c
   729   001146  D7FE               	bra	u1857
   730   001148  2FB3               	decfsz	??_main& (0+255),f,b
   731   00114A  D7FC               	bra	u1857
   732   00114C  2FB4               	decfsz	(??_main+1)& (0+255),f,b
   733   00114E  D7FA               	bra	u1857
   734   001150  D000               	nop2	
   735   001152                     
   736                           ;Gpio_Lcd_Buzzer.c: 49:             LATEbits.LATE2 = 0;
   737   001152  948D               	bcf	141,2,c	;volatile
   738                           
   739                           ;Gpio_Lcd_Buzzer.c: 50:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   740   001154  0E03               	movlw	3
   741   001156  0100               	movlb	0	; () banked
   742   001158  6FB4               	movwf	(??_main+1)& (0+255),b
   743   00115A  0E8A               	movlw	138
   744   00115C  6FB3               	movwf	??_main& (0+255),b
   745   00115E  0E55               	movlw	85
   746   001160                     u1867:
   747   001160  2EE8               	decfsz	wreg,f,c
   748   001162  D7FE               	bra	u1867
   749   001164  2FB3               	decfsz	??_main& (0+255),f,b
   750   001166  D7FC               	bra	u1867
   751   001168  2FB4               	decfsz	(??_main+1)& (0+255),f,b
   752   00116A  D7FA               	bra	u1867
   753   00116C  D000               	nop2	
   754   00116E  EF80  F008         	goto	l2817
   755   001172  EFAC  F000         	goto	start
   756   001176                     __end_of_main:
   757                           	callstack 0
   758                           
   759 ;; *************** function _Print_Hour *****************
   760 ;; Defined at:
   761 ;;		line 216 in file "Gpio_Lcd_Buzzer.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 9
   782 ;; This function calls:
   783 ;;		_Lcd_Set_Cursor
   784 ;;		_Lcd_Write_String
   785 ;;		_sprintf
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text1
   792   001484                     __ptext1:
   793                           	callstack 0
   794   001484                     _Print_Hour:
   795                           	callstack 21
   796   001484                     
   797                           ;Gpio_Lcd_Buzzer.c: 217:     Lcd_Set_Cursor(1, 1);
   798   001484  0E01               	movlw	1
   799   001486  6E05               	movwf	Lcd_Set_Cursor@b^0,c
   800   001488  0E01               	movlw	1
   801   00148A  EC4C  F009         	call	_Lcd_Set_Cursor
   802   00148E                     
   803                           ;Gpio_Lcd_Buzzer.c: 219:     sprintf(strReloj, "Timer:     %02u:%02u", minutes, seconds)
      +                          ;
   804   00148E  0E88               	movlw	low _strReloj
   805   001490  0100               	movlb	0	; () banked
   806   001492  6F9C               	movwf	sprintf@s& (0+255),b
   807   001494  0E00               	movlw	high _strReloj
   808   001496  6F9D               	movwf	(sprintf@s+1)& (0+255),b
   809   001498  0E18               	movlw	low STR_2
   810   00149A  6F9E               	movwf	sprintf@fmt& (0+255),b
   811   00149C  0E08               	movlw	high STR_2
   812   00149E  6F9F               	movwf	(sprintf@fmt+1)& (0+255),b
   813   0014A0  5166               	movf	_minutes& (0+255),w,b	;volatile
   814   0014A2  6FA0               	movwf	(?_sprintf+4)& (0+255),b
   815   0014A4  6BA1               	clrf	(?_sprintf+5)& (0+255),b
   816   0014A6  BFA0               	btfsc	(?_sprintf+4)& (0+255),7,b
   817   0014A8  07A1               	decf	(?_sprintf+5)& (0+255),f,b
   818   0014AA  5165               	movf	_seconds& (0+255),w,b	;volatile
   819   0014AC  6FA2               	movwf	(?_sprintf+6)& (0+255),b
   820   0014AE  6BA3               	clrf	(?_sprintf+7)& (0+255),b
   821   0014B0  BFA2               	btfsc	(?_sprintf+6)& (0+255),7,b
   822   0014B2  07A3               	decf	(?_sprintf+7)& (0+255),f,b
   823   0014B4  ECAD  F009         	call	_sprintf	;wreg free
   824   0014B8                     
   825                           ;Gpio_Lcd_Buzzer.c: 221:     Lcd_Write_String(strReloj);
   826   0014B8  0E88               	movlw	low _strReloj
   827   0014BA  6E06               	movwf	Lcd_Write_String@a^0,c
   828   0014BC  0E00               	movlw	high _strReloj
   829   0014BE  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
   830   0014C0  EC63  F00A         	call	_Lcd_Write_String	;wreg free
   831   0014C4  0012               	return		;funcret
   832   0014C6                     __end_of_Print_Hour:
   833                           	callstack 0
   834                           
   835 ;; *************** function _sprintf *****************
   836 ;; Defined at:
   837 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  s               2    0[BANK0 ] PTR unsigned char 
   840 ;;		 -> strReloj(20), 
   841 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   842 ;;		 -> STR_2(21), STR_1(23), 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  f              11   12[BANK0 ] struct _IO_FILE
   845 ;;  ap              2   10[BANK0 ] PTR void [1]
   846 ;;		 -> ?_sprintf(2), 
   847 ;;  ret             2    0        int 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  2    0[BANK0 ] int 
   850 ;; Registers used:
   851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         0      10       0       0       0       0       0       0       0
   858 ;;      Locals:         0      13       0       0       0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0
   860 ;;      Totals:         0      23       0       0       0       0       0       0       0
   861 ;;Total ram usage:       23 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 8
   864 ;; This function calls:
   865 ;;		_vfprintf
   866 ;; This function is called by:
   867 ;;		_main
   868 ;;		_Print_Hour
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text2
   873   00135A                     __ptext2:
   874                           	callstack 0
   875   00135A                     _sprintf:
   876                           	callstack 22
   877   00135A  0EA0               	movlw	low (?_sprintf+4)
   878   00135C  0100               	movlb	0	; () banked
   879   00135E  6FA6               	movwf	sprintf@ap& (0+255),b
   880   001360  0E00               	movlw	high (?_sprintf+4)
   881   001362  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
   882   001364  C09C  F0A8         	movff	sprintf@s,sprintf@f
   883   001368  C09D  F0A9         	movff	sprintf@s+1,sprintf@f+1
   884   00136C                     
   885                           ; BSR set to: 0
   886   00136C  0E00               	movlw	0
   887   00136E  6FAC               	movwf	(sprintf@f+4)& (0+255),b
   888   001370  0E00               	movlw	0
   889   001372  6FAB               	movwf	(sprintf@f+3)& (0+255),b
   890   001374                     
   891                           ; BSR set to: 0
   892   001374  0E00               	movlw	0
   893   001376  6FB2               	movwf	(sprintf@f+10)& (0+255),b
   894   001378  0E00               	movlw	0
   895   00137A  6FB1               	movwf	(sprintf@f+9)& (0+255),b
   896   00137C                     
   897                           ; BSR set to: 0
   898   00137C  0EA8               	movlw	low sprintf@f
   899   00137E  6E54               	movwf	vfprintf@fp^0,c
   900   001380  0E00               	movlw	high sprintf@f
   901   001382  6E55               	movwf	(vfprintf@fp+1)^0,c
   902   001384  C09E  F056         	movff	sprintf@fmt,vfprintf@fmt
   903   001388  C09F  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
   904   00138C  0EA6               	movlw	low sprintf@ap
   905   00138E  6E58               	movwf	vfprintf@ap^0,c
   906   001390  0E00               	movlw	high sprintf@ap
   907   001392  6E59               	movwf	(vfprintf@ap+1)^0,c
   908   001394  ECD6  F009         	call	_vfprintf	;wreg free
   909   001398  0100               	movlb	0	; () banked
   910   00139A  51AB               	movf	(sprintf@f+3)& (0+255),w,b
   911   00139C  259C               	addwf	sprintf@s& (0+255),w,b
   912   00139E  6ED9               	movwf	fsr2l,c
   913   0013A0  51AC               	movf	(sprintf@f+4)& (0+255),w,b
   914   0013A2  219D               	addwfc	(sprintf@s+1)& (0+255),w,b
   915   0013A4  6EDA               	movwf	fsr2h,c
   916   0013A6  0E00               	movlw	0
   917   0013A8  6EDF               	movwf	indf2,c
   918   0013AA                     
   919                           ; BSR set to: 0
   920   0013AA  0012               	return		;funcret
   921   0013AC                     __end_of_sprintf:
   922                           	callstack 0
   923                           
   924 ;; *************** function _vfprintf *****************
   925 ;; Defined at:
   926 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
   929 ;;		 -> sprintf@f(11), 
   930 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
   931 ;;		 -> STR_2(21), STR_1(23), 
   932 ;;  ap              2   87[COMRAM] PTR PTR void 
   933 ;;		 -> sprintf@ap(2), 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
   936 ;;		 -> STR_2(21), STR_1(23), 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  2   83[COMRAM] int 
   939 ;; Registers used:
   940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   946 ;;      Params:         6       0       0       0       0       0       0       0       0
   947 ;;      Locals:         2       0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0
   949 ;;      Totals:         8       0       0       0       0       0       0       0       0
   950 ;;Total ram usage:        8 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 7
   953 ;; This function calls:
   954 ;;		_vfpfcnvrt
   955 ;; This function is called by:
   956 ;;		_sprintf
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text3
   961   0013AC                     __ptext3:
   962                           	callstack 0
   963   0013AC                     _vfprintf:
   964                           	callstack 22
   965   0013AC                     
   966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   967   0013AC  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
   968   0013B0  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   969                           
   970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   971   0013B4  EFEA  F009         	goto	l2429
   972   0013B8                     l2427:
   973                           
   974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   975   0013B8  C054  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
   976   0013BC  C055  F03F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   977   0013C0  0E5A               	movlw	low vfprintf@cfmt
   978   0013C2  6E40               	movwf	vfpfcnvrt@fmt^0,c
   979   0013C4  0E00               	movlw	high vfprintf@cfmt
   980   0013C6  6E41               	movwf	(vfpfcnvrt@fmt+1)^0,c
   981   0013C8  C058  F042         	movff	vfprintf@ap,vfpfcnvrt@ap
   982   0013CC  C059  F043         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   983   0013D0  EC17  F004         	call	_vfpfcnvrt	;wreg free
   984   0013D4                     l2429:
   985                           
   986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   987   0013D4  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
   988   0013D8  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   989   0013DC                     	if	0	;tblptru may be non-zero
   990   0013DC                     	endif
   991   0013DC                     	if	0	;tblptru may be non-zero
   992   0013DC                     	endif
   993   0013DC  0008               	tblrd		*
   994   0013DE  50F5               	movf	tablat,w,c
   995   0013E0  0900               	iorlw	0
   996   0013E2  A4D8               	btfss	status,2,c
   997   0013E4  EFF6  F009         	goto	u1461
   998   0013E8  EFF8  F009         	goto	u1460
   999   0013EC                     u1461:
  1000   0013EC  EFDC  F009         	goto	l2427
  1001   0013F0                     u1460:
  1002   0013F0                     
  1003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1004   0013F0  0E00               	movlw	0
  1005   0013F2  6E55               	movwf	(?_vfprintf+1)^0,c
  1006   0013F4  0E00               	movlw	0
  1007   0013F6  6E54               	movwf	?_vfprintf^0,c
  1008   0013F8  0012               	return		;funcret
  1009   0013FA                     __end_of_vfprintf:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _vfpfcnvrt *****************
  1013 ;; Defined at:
  1014 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1017 ;;		 -> sprintf@f(11), 
  1018 ;;  fmt             2   63[COMRAM] PTR PTR unsigned char 
  1019 ;;		 -> vfprintf@cfmt(2), 
  1020 ;;  ap              2   65[COMRAM] PTR PTR void 
  1021 ;;		 -> sprintf@ap(2), 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  convarg         8   71[COMRAM] struct .
  1024 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1025 ;;		 -> STR_2(21), STR_1(23), 
  1026 ;;  done            2   79[COMRAM] int 
  1027 ;;  i               2    0        int 
  1028 ;;  c               1    0        unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1038 ;;      Params:         6       0       0       0       0       0       0       0       0
  1039 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1040 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1041 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1042 ;;Total ram usage:       22 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 6
  1045 ;; This function calls:
  1046 ;;		_atoi
  1047 ;;		_fputc
  1048 ;;		_isdigit
  1049 ;;		_utoa
  1050 ;; This function is called by:
  1051 ;;		_vfprintf
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text4
  1056   00082E                     __ptext4:
  1057                           	callstack 0
  1058   00082E                     _vfpfcnvrt:
  1059                           	callstack 22
  1060   00082E                     
  1061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1062   00082E  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1063   000832  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1064   000836  CFDE FFF6          	movff	postinc2,tblptrl
  1065   00083A  CFDD FFF7          	movff	postdec2,tblptrh
  1066   00083E                     	if	0	;tblptru may be non-zero
  1067   00083E                     	endif
  1068   00083E                     	if	0	;tblptru may be non-zero
  1069   00083E                     	endif
  1070   00083E  0008               	tblrd		*
  1071   000840  50F5               	movf	tablat,w,c
  1072   000842  0A25               	xorlw	37
  1073   000844  A4D8               	btfss	status,2,c
  1074   000846  EF27  F004         	goto	u1401
  1075   00084A  EF29  F004         	goto	u1400
  1076   00084E                     u1401:
  1077   00084E  EF5C  F005         	goto	l2383
  1078   000852                     u1400:
  1079   000852                     
  1080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1081   000852  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1082   000856  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1083   00085A  2ADE               	incf	postinc2,f,c
  1084   00085C  0E00               	movlw	0
  1085   00085E  22DD               	addwfc	postdec2,f,c
  1086   000860                     
  1087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1088   000860  0E00               	movlw	0
  1089   000862  0100               	movlb	0	; () banked
  1090   000864  6F61               	movwf	(_width+1)& (0+255),b
  1091   000866  0E00               	movlw	0
  1092   000868  6F60               	movwf	_width& (0+255),b
  1093   00086A  C060  F05C         	movff	_width,_flags
  1094   00086E                     
  1095                           ; BSR set to: 0
  1096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1097   00086E  6962               	setf	_prec& (0+255),b
  1098   000870  6963               	setf	(_prec+1)& (0+255),b
  1099   000872                     
  1100                           ; BSR set to: 0
  1101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1102   000872  0E00               	movlw	0
  1103   000874  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1104   000876  0E00               	movlw	0
  1105   000878  6E50               	movwf	vfpfcnvrt@done^0,c
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1108   00087A  EF69  F004         	goto	l2347
  1109   00087E                     l2337:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1112   00087E  825C               	bsf	_flags^0,1,c
  1113   000880                     
  1114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1115   000880  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1116   000884  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1117   000888  2ADE               	incf	postinc2,f,c
  1118   00088A  0E00               	movlw	0
  1119   00088C  22DD               	addwfc	postdec2,f,c
  1120                           
  1121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1122   00088E  EF69  F004         	goto	l2347
  1123   000892                     l2341:
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1126   000892  0E00               	movlw	0
  1127   000894  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  1128   000896  0E01               	movlw	1
  1129   000898  6E50               	movwf	vfpfcnvrt@done^0,c
  1130                           
  1131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1132   00089A  EF69  F004         	goto	l2347
  1133   00089E                     l2345:
  1134   00089E  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1135   0008A2  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1136   0008A6  CFDE FFF6          	movff	postinc2,tblptrl
  1137   0008AA  CFDD FFF7          	movff	postdec2,tblptrh
  1138   0008AE                     	if	0	;tblptru may be non-zero
  1139   0008AE                     	endif
  1140   0008AE                     	if	0	;tblptru may be non-zero
  1141   0008AE                     	endif
  1142   0008AE  0008               	tblrd		*
  1143   0008B0  50F5               	movf	tablat,w,c
  1144   0008B2  6E44               	movwf	??_vfpfcnvrt^0,c
  1145   0008B4  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  1146                           
  1147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1148                           ; Switch size 1, requested type "simple"
  1149                           ; Number of cases is 1, Range of values is 0 to 0
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte            4     3 (average)
  1153                           ;	Chosen strategy is simple_byte
  1154   0008B6  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  1155   0008B8  0A00               	xorlw	0	; case 0
  1156   0008BA  B4D8               	btfsc	status,2,c
  1157   0008BC  EF62  F004         	goto	l2891
  1158   0008C0  EF49  F004         	goto	l2341
  1159   0008C4                     l2891:
  1160                           
  1161                           ; Switch size 1, requested type "simple"
  1162                           ; Number of cases is 1, Range of values is 48 to 48
  1163                           ; switch strategies available:
  1164                           ; Name         Instructions Cycles
  1165                           ; simple_byte            4     3 (average)
  1166                           ;	Chosen strategy is simple_byte
  1167   0008C4  5044               	movf	??_vfpfcnvrt^0,w,c
  1168   0008C6  0A30               	xorlw	48	; case 48
  1169   0008C8  B4D8               	btfsc	status,2,c
  1170   0008CA  EF3F  F004         	goto	l2337
  1171   0008CE  EF49  F004         	goto	l2341
  1172   0008D2                     l2347:
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1175   0008D2  5050               	movf	vfpfcnvrt@done^0,w,c
  1176   0008D4  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1177   0008D6  B4D8               	btfsc	status,2,c
  1178   0008D8  EF70  F004         	goto	u1411
  1179   0008DC  EF72  F004         	goto	u1410
  1180   0008E0                     u1411:
  1181   0008E0  EF4F  F004         	goto	l2345
  1182   0008E4                     u1410:
  1183   0008E4                     
  1184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1185   0008E4  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1186   0008E8  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1187   0008EC  CFDE FFF6          	movff	postinc2,tblptrl
  1188   0008F0  CFDD FFF7          	movff	postdec2,tblptrh
  1189   0008F4                     	if	0	;tblptru may be non-zero
  1190   0008F4                     	endif
  1191   0008F4                     	if	0	;tblptru may be non-zero
  1192   0008F4                     	endif
  1193   0008F4  0008               	tblrd		*
  1194   0008F6  50F5               	movf	tablat,w,c
  1195   0008F8  0A2A               	xorlw	42
  1196   0008FA  A4D8               	btfss	status,2,c
  1197   0008FC  EF82  F004         	goto	u1421
  1198   000900  EF84  F004         	goto	u1420
  1199   000904                     u1421:
  1200   000904  EFAE  F004         	goto	l2357
  1201   000908                     u1420:
  1202   000908                     
  1203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1204   000908  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1205   00090C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1206   000910  2ADE               	incf	postinc2,f,c
  1207   000912  0E00               	movlw	0
  1208   000914  22DD               	addwfc	postdec2,f,c
  1209                           
  1210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1211   000916  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1212   00091A  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1213   00091E  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1214   000922  0E02               	movlw	2
  1215   000924  26DE               	addwf	postinc2,f,c
  1216   000926  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1217   00092A  0E00               	movlw	0
  1218   00092C  22DD               	addwfc	postdec2,f,c
  1219   00092E  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1220   000932  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1221   000936  CFDE F060          	movff	postinc2,_width
  1222   00093A  CFDD F061          	movff	postdec2,_width+1
  1223   00093E                     
  1224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1225   00093E  0100               	movlb	0	; () banked
  1226   000940  BF61               	btfsc	(_width+1)& (0+255),7,b
  1227   000942  EFA7  F004         	goto	u1430
  1228   000946  EFA5  F004         	goto	u1431
  1229   00094A                     u1431:
  1230   00094A  EFE1  F004         	goto	l2365
  1231   00094E                     u1430:
  1232   00094E                     
  1233                           ; BSR set to: 0
  1234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1235   00094E  805C               	bsf	_flags^0,0,c
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1238   000950  6D60               	negf	_width& (0+255),b
  1239   000952  1F61               	comf	(_width+1)& (0+255),f,b
  1240   000954  B0D8               	btfsc	status,0,c
  1241   000956  2B61               	incf	(_width+1)& (0+255),f,b
  1242   000958  EFE1  F004         	goto	l2365
  1243   00095C                     l2357:
  1244                           
  1245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1246   00095C  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1247   000960  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1248   000964  CFDE F008          	movff	postinc2,atoi@s
  1249   000968  CFDD F009          	movff	postdec2,atoi@s+1
  1250   00096C  EC6D  F006         	call	_atoi	;wreg free
  1251   000970  C008  F060         	movff	?_atoi,_width
  1252   000974  C009  F061         	movff	?_atoi+1,_width+1
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1255   000978  EFC5  F004         	goto	l2363
  1256   00097C                     l2359:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1259   00097C  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1260   000980  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1261   000984  2ADE               	incf	postinc2,f,c
  1262   000986  0E00               	movlw	0
  1263   000988  22DD               	addwfc	postdec2,f,c
  1264   00098A                     l2363:
  1265   00098A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1266   00098E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1267   000992  CFDE FFF6          	movff	postinc2,tblptrl
  1268   000996  CFDD FFF7          	movff	postdec2,tblptrh
  1269   00099A                     	if	0	;tblptru may be non-zero
  1270   00099A                     	endif
  1271   00099A                     	if	0	;tblptru may be non-zero
  1272   00099A                     	endif
  1273   00099A  0008               	tblrd		*
  1274   00099C  CFF5 F044          	movff	tablat,??_vfpfcnvrt
  1275   0009A0  0ED0               	movlw	208
  1276   0009A2  2444               	addwf	??_vfpfcnvrt^0,w,c
  1277   0009A4  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  1278   0009A6  6A46               	clrf	(??_vfpfcnvrt+2)^0,c
  1279   0009A8  0EFF               	movlw	255
  1280   0009AA  2246               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1281   0009AC  5046               	movf	(??_vfpfcnvrt+2)^0,w,c
  1282   0009AE  E109               	bnz	u1440
  1283   0009B0  0E0A               	movlw	10
  1284   0009B2  5C45               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1285   0009B4  A0D8               	btfss	status,0,c
  1286   0009B6  EFDF  F004         	goto	u1441
  1287   0009BA  EFE1  F004         	goto	u1440
  1288   0009BE                     u1441:
  1289   0009BE  EFBE  F004         	goto	l2359
  1290   0009C2                     u1440:
  1291   0009C2                     l2365:
  1292                           
  1293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  1294   0009C2  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1295   0009C6  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1296   0009CA  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1297   0009CE  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1298   0009D2  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1299   0009D6  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1300   0009DA                     	if	0	;tblptru may be non-zero
  1301   0009DA                     	endif
  1302   0009DA                     	if	0	;tblptru may be non-zero
  1303   0009DA                     	endif
  1304   0009DA  0008               	tblrd		*
  1305   0009DC  50F5               	movf	tablat,w,c
  1306   0009DE  0A75               	xorlw	117
  1307   0009E0  A4D8               	btfss	status,2,c
  1308   0009E2  EFF5  F004         	goto	u1451
  1309   0009E6  EFF7  F004         	goto	u1450
  1310   0009EA                     u1451:
  1311   0009EA  EF53  F005         	goto	l2379
  1312   0009EE                     u1450:
  1313   0009EE                     
  1314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1315   0009EE  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1316   0009F2  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1317   0009F6  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1318   0009FA  0E02               	movlw	2
  1319   0009FC  26DE               	addwf	postinc2,f,c
  1320   0009FE  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1321   000A02  0E00               	movlw	0
  1322   000A04  22DD               	addwfc	postdec2,f,c
  1323   000A06  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1324   000A0A  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1325   000A0E  CFDE F046          	movff	postinc2,??_vfpfcnvrt+2
  1326   000A12  CFDD F047          	movff	postdec2,??_vfpfcnvrt+3
  1327   000A16  C046  F048         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  1328   000A1A  C047  F049         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  1329   000A1E  6A4A               	clrf	(vfpfcnvrt@convarg+2)^0,c
  1330   000A20  6A4B               	clrf	(vfpfcnvrt@convarg+3)^0,c
  1331   000A22  6A4C               	clrf	(vfpfcnvrt@convarg+4)^0,c
  1332   000A24  6A4D               	clrf	(vfpfcnvrt@convarg+5)^0,c
  1333   000A26  6A4E               	clrf	(vfpfcnvrt@convarg+6)^0,c
  1334   000A28  6A4F               	clrf	(vfpfcnvrt@convarg+7)^0,c
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  1337   000A2A  0E01               	movlw	1
  1338   000A2C  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1339   000A2E  6E44               	movwf	??_vfpfcnvrt^0,c
  1340   000A30  0E00               	movlw	0
  1341   000A32  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1342   000A34  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  1343   000A36  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1344   000A3A  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1345   000A3E  C044  FFDE         	movff	??_vfpfcnvrt,postinc2
  1346   000A42  C045  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  1349   000A46  EF3D  F005         	goto	l2377
  1350   000A4A                     l2371:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  1353   000A4A  C03E  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  1354   000A4E  C03F  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1355   000A52  C048  F020         	movff	vfpfcnvrt@convarg,utoa@d
  1356   000A56  C049  F021         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1357   000A5A  C04A  F022         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  1358   000A5E  C04B  F023         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  1359   000A62  C04C  F024         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  1360   000A66  C04D  F025         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  1361   000A6A  C04E  F026         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  1362   000A6E  C04F  F027         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  1363   000A72  EC71  F005         	call	_utoa	;wreg free
  1364   000A76  EF70  F005         	goto	l1219
  1365   000A7A                     l2377:
  1366   000A7A  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1367   000A7E  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1368   000A82                     	if	0	;tblptru may be non-zero
  1369   000A82                     	endif
  1370   000A82                     	if	0	;tblptru may be non-zero
  1371   000A82                     	endif
  1372   000A82  0008               	tblrd		*
  1373   000A84  50F5               	movf	tablat,w,c
  1374   000A86  6E44               	movwf	??_vfpfcnvrt^0,c
  1375   000A88  6A45               	clrf	(??_vfpfcnvrt+1)^0,c
  1376                           
  1377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1378                           ; Switch size 1, requested type "simple"
  1379                           ; Number of cases is 1, Range of values is 0 to 0
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte            4     3 (average)
  1383                           ;	Chosen strategy is simple_byte
  1384   000A8A  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  1385   000A8C  0A00               	xorlw	0	; case 0
  1386   000A8E  B4D8               	btfsc	status,2,c
  1387   000A90  EF4C  F005         	goto	l2893
  1388   000A94  EF53  F005         	goto	l2379
  1389   000A98                     l2893:
  1390                           
  1391                           ; Switch size 1, requested type "simple"
  1392                           ; Number of cases is 1, Range of values is 117 to 117
  1393                           ; switch strategies available:
  1394                           ; Name         Instructions Cycles
  1395                           ; simple_byte            4     3 (average)
  1396                           ;	Chosen strategy is simple_byte
  1397   000A98  5044               	movf	??_vfpfcnvrt^0,w,c
  1398   000A9A  0A75               	xorlw	117	; case 117
  1399   000A9C  B4D8               	btfsc	status,2,c
  1400   000A9E  EF25  F005         	goto	l2371
  1401   000AA2  EF53  F005         	goto	l2379
  1402   000AA6                     l2379:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1405   000AA6  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1406   000AAA  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1407   000AAE  2ADE               	incf	postinc2,f,c
  1408   000AB0  0E00               	movlw	0
  1409   000AB2  22DD               	addwfc	postdec2,f,c
  1410   000AB4  EF70  F005         	goto	l1219
  1411   000AB8                     l2383:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1414   000AB8  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1415   000ABC  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1416   000AC0  CFDE FFF6          	movff	postinc2,tblptrl
  1417   000AC4  CFDD FFF7          	movff	postdec2,tblptrh
  1418   000AC8                     	if	0	;tblptru may be non-zero
  1419   000AC8                     	endif
  1420   000AC8                     	if	0	;tblptru may be non-zero
  1421   000AC8                     	endif
  1422   000AC8  0008               	tblrd		*
  1423   000ACA  50F5               	movf	tablat,w,c
  1424   000ACC  6E03               	movwf	fputc@c^0,c
  1425   000ACE  6A04               	clrf	(fputc@c+1)^0,c
  1426   000AD0  C03E  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1427   000AD4  C03F  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1428   000AD8  ECF2  F007         	call	_fputc	;wreg free
  1429   000ADC  EF53  F005         	goto	l2379
  1430   000AE0                     l1219:
  1431   000AE0  0012               	return		;funcret
  1432   000AE2                     __end_of_vfpfcnvrt:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _utoa *****************
  1436 ;; Defined at:
  1437 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1440 ;;		 -> sprintf@f(11), 
  1441 ;;  d               8   31[COMRAM] unsigned long long 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  n               8   51[COMRAM] unsigned long long 
  1444 ;;  i               2   59[COMRAM] int 
  1445 ;;  w               2   49[COMRAM] int 
  1446 ;;  p               2   47[COMRAM] int 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1456 ;;      Params:        10       0       0       0       0       0       0       0       0
  1457 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1458 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1459 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1460 ;;Total ram usage:       32 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 5
  1463 ;; This function calls:
  1464 ;;		___lodiv
  1465 ;;		___lomod
  1466 ;;		_pad
  1467 ;; This function is called by:
  1468 ;;		_vfpfcnvrt
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text5
  1473   000AE2                     __ptext5:
  1474                           	callstack 0
  1475   000AE2                     _utoa:
  1476                           	callstack 22
  1477   000AE2                     
  1478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  1479   000AE2  0100               	movlb	0	; () banked
  1480   000AE4  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1481   000AE6  EF77  F005         	goto	u1251
  1482   000AEA  EF79  F005         	goto	u1250
  1483   000AEE                     u1251:
  1484   000AEE  EF7A  F005         	goto	l2239
  1485   000AF2                     u1250:
  1486   000AF2                     
  1487                           ; BSR set to: 0
  1488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  1489   000AF2  925C               	bcf	_flags^0,1,c
  1490   000AF4                     l2239:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  1494   000AF4  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1495   000AF6  EF87  F005         	goto	u1260
  1496   000AFA  5163               	movf	(_prec+1)& (0+255),w,b
  1497   000AFC  E106               	bnz	u1261
  1498   000AFE  0562               	decf	_prec& (0+255),w,b
  1499   000B00  B0D8               	btfsc	status,0,c
  1500   000B02  EF85  F005         	goto	u1261
  1501   000B06  EF87  F005         	goto	u1260
  1502   000B0A                     u1261:
  1503   000B0A  EF8D  F005         	goto	l1185
  1504   000B0E                     u1260:
  1505   000B0E                     
  1506                           ; BSR set to: 0
  1507   000B0E  0E00               	movlw	0
  1508   000B10  6E31               	movwf	(utoa@p+1)^0,c
  1509   000B12  0E01               	movlw	1
  1510   000B14  6E30               	movwf	utoa@p^0,c
  1511   000B16  EF91  F005         	goto	l1187
  1512   000B1A                     l1185:
  1513                           
  1514                           ; BSR set to: 0
  1515   000B1A  C062  F030         	movff	_prec,utoa@p
  1516   000B1E  C063  F031         	movff	_prec+1,utoa@p+1
  1517   000B22                     l1187:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  1521   000B22  C060  F032         	movff	_width,utoa@w
  1522   000B26  C061  F033         	movff	_width+1,utoa@w+1
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  1525   000B2A  C020  F034         	movff	utoa@d,utoa@n
  1526   000B2E  C021  F035         	movff	utoa@d+1,utoa@n+1
  1527   000B32  C022  F036         	movff	utoa@d+2,utoa@n+2
  1528   000B36  C023  F037         	movff	utoa@d+3,utoa@n+3
  1529   000B3A  C024  F038         	movff	utoa@d+4,utoa@n+4
  1530   000B3E  C025  F039         	movff	utoa@d+5,utoa@n+5
  1531   000B42  C026  F03A         	movff	utoa@d+6,utoa@n+6
  1532   000B46  C027  F03B         	movff	utoa@d+7,utoa@n+7
  1533   000B4A                     
  1534                           ; BSR set to: 0
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  1536   000B4A  0E00               	movlw	0
  1537   000B4C  6E3D               	movwf	(utoa@i+1)^0,c
  1538   000B4E  0E1F               	movlw	31
  1539   000B50  6E3C               	movwf	utoa@i^0,c
  1540   000B52                     
  1541                           ; BSR set to: 0
  1542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  1543   000B52  0E00               	movlw	0
  1544   000B54  6F87               	movwf	(_dbuf+31)& (0+255),b
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1547   000B56  EF23  F006         	goto	l2257
  1548   000B5A                     l2247:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  1551   000B5A  063C               	decf	utoa@i^0,f,c
  1552   000B5C  A0D8               	btfss	status,0,c
  1553   000B5E  063D               	decf	(utoa@i+1)^0,f,c
  1554   000B60                     
  1555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  1556   000B60  0E68               	movlw	low _dbuf
  1557   000B62  243C               	addwf	utoa@i^0,w,c
  1558   000B64  6ED9               	movwf	fsr2l,c
  1559   000B66  0E00               	movlw	high _dbuf
  1560   000B68  203D               	addwfc	(utoa@i+1)^0,w,c
  1561   000B6A  6EDA               	movwf	fsr2h,c
  1562   000B6C  C034  F002         	movff	utoa@n,___lomod@dividend
  1563   000B70  C035  F003         	movff	utoa@n+1,___lomod@dividend+1
  1564   000B74  C036  F004         	movff	utoa@n+2,___lomod@dividend+2
  1565   000B78  C037  F005         	movff	utoa@n+3,___lomod@dividend+3
  1566   000B7C  C038  F006         	movff	utoa@n+4,___lomod@dividend+4
  1567   000B80  C039  F007         	movff	utoa@n+5,___lomod@dividend+5
  1568   000B84  C03A  F008         	movff	utoa@n+6,___lomod@dividend+6
  1569   000B88  C03B  F009         	movff	utoa@n+7,___lomod@dividend+7
  1570   000B8C  0E0A               	movlw	10
  1571   000B8E  6E0A               	movwf	___lomod@divisor^0,c
  1572   000B90  0E00               	movlw	0
  1573   000B92  6E0B               	movwf	(___lomod@divisor+1)^0,c
  1574   000B94  0E00               	movlw	0
  1575   000B96  6E0C               	movwf	(___lomod@divisor+2)^0,c
  1576   000B98  0E00               	movlw	0
  1577   000B9A  6E0D               	movwf	(___lomod@divisor+3)^0,c
  1578   000B9C  0E00               	movlw	0
  1579   000B9E  6E0E               	movwf	(___lomod@divisor+4)^0,c
  1580   000BA0  0E00               	movlw	0
  1581   000BA2  6E0F               	movwf	(___lomod@divisor+5)^0,c
  1582   000BA4  0E00               	movlw	0
  1583   000BA6  6E10               	movwf	(___lomod@divisor+6)^0,c
  1584   000BA8  0E00               	movlw	0
  1585   000BAA  6E11               	movwf	(___lomod@divisor+7)^0,c
  1586   000BAC  EC8A  F007         	call	___lomod	;wreg free
  1587   000BB0  C002  F028         	movff	?___lomod,??_utoa
  1588   000BB4  C003  F029         	movff	?___lomod+1,??_utoa+1
  1589   000BB8  C004  F02A         	movff	?___lomod+2,??_utoa+2
  1590   000BBC  C005  F02B         	movff	?___lomod+3,??_utoa+3
  1591   000BC0  C006  F02C         	movff	?___lomod+4,??_utoa+4
  1592   000BC4  C007  F02D         	movff	?___lomod+5,??_utoa+5
  1593   000BC8  C008  F02E         	movff	?___lomod+6,??_utoa+6
  1594   000BCC  C009  F02F         	movff	?___lomod+7,??_utoa+7
  1595   000BD0  5028               	movf	??_utoa^0,w,c
  1596   000BD2  0F30               	addlw	48
  1597   000BD4  6EDF               	movwf	indf2,c
  1598   000BD6                     
  1599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  1600   000BD6  0630               	decf	utoa@p^0,f,c
  1601   000BD8  A0D8               	btfss	status,0,c
  1602   000BDA  0631               	decf	(utoa@p+1)^0,f,c
  1603   000BDC                     
  1604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  1605   000BDC  0632               	decf	utoa@w^0,f,c
  1606   000BDE  A0D8               	btfss	status,0,c
  1607   000BE0  0633               	decf	(utoa@w+1)^0,f,c
  1608   000BE2                     
  1609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  1610   000BE2  C034  F002         	movff	utoa@n,___lodiv@dividend
  1611   000BE6  C035  F003         	movff	utoa@n+1,___lodiv@dividend+1
  1612   000BEA  C036  F004         	movff	utoa@n+2,___lodiv@dividend+2
  1613   000BEE  C037  F005         	movff	utoa@n+3,___lodiv@dividend+3
  1614   000BF2  C038  F006         	movff	utoa@n+4,___lodiv@dividend+4
  1615   000BF6  C039  F007         	movff	utoa@n+5,___lodiv@dividend+5
  1616   000BFA  C03A  F008         	movff	utoa@n+6,___lodiv@dividend+6
  1617   000BFE  C03B  F009         	movff	utoa@n+7,___lodiv@dividend+7
  1618   000C02  0E0A               	movlw	10
  1619   000C04  6E0A               	movwf	___lodiv@divisor^0,c
  1620   000C06  0E00               	movlw	0
  1621   000C08  6E0B               	movwf	(___lodiv@divisor+1)^0,c
  1622   000C0A  0E00               	movlw	0
  1623   000C0C  6E0C               	movwf	(___lodiv@divisor+2)^0,c
  1624   000C0E  0E00               	movlw	0
  1625   000C10  6E0D               	movwf	(___lodiv@divisor+3)^0,c
  1626   000C12  0E00               	movlw	0
  1627   000C14  6E0E               	movwf	(___lodiv@divisor+4)^0,c
  1628   000C16  0E00               	movlw	0
  1629   000C18  6E0F               	movwf	(___lodiv@divisor+5)^0,c
  1630   000C1A  0E00               	movlw	0
  1631   000C1C  6E10               	movwf	(___lodiv@divisor+6)^0,c
  1632   000C1E  0E00               	movlw	0
  1633   000C20  6E11               	movwf	(___lodiv@divisor+7)^0,c
  1634   000C22  EC12  F007         	call	___lodiv	;wreg free
  1635   000C26  C002  F034         	movff	?___lodiv,utoa@n
  1636   000C2A  C003  F035         	movff	?___lodiv+1,utoa@n+1
  1637   000C2E  C004  F036         	movff	?___lodiv+2,utoa@n+2
  1638   000C32  C005  F037         	movff	?___lodiv+3,utoa@n+3
  1639   000C36  C006  F038         	movff	?___lodiv+4,utoa@n+4
  1640   000C3A  C007  F039         	movff	?___lodiv+5,utoa@n+5
  1641   000C3E  C008  F03A         	movff	?___lodiv+6,utoa@n+6
  1642   000C42  C009  F03B         	movff	?___lodiv+7,utoa@n+7
  1643   000C46                     l2257:
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1646   000C46  503C               	movf	utoa@i^0,w,c
  1647   000C48  103D               	iorwf	(utoa@i+1)^0,w,c
  1648   000C4A  B4D8               	btfsc	status,2,c
  1649   000C4C  EF2A  F006         	goto	u1271
  1650   000C50  EF2C  F006         	goto	u1270
  1651   000C54                     u1271:
  1652   000C54  EF5C  F006         	goto	l2267
  1653   000C58                     u1270:
  1654   000C58  5034               	movf	utoa@n^0,w,c
  1655   000C5A  1035               	iorwf	(utoa@n+1)^0,w,c
  1656   000C5C  1036               	iorwf	(utoa@n+2)^0,w,c
  1657   000C5E  1037               	iorwf	(utoa@n+3)^0,w,c
  1658   000C60  1038               	iorwf	(utoa@n+4)^0,w,c
  1659   000C62  1039               	iorwf	(utoa@n+5)^0,w,c
  1660   000C64  103A               	iorwf	(utoa@n+6)^0,w,c
  1661   000C66  103B               	iorwf	(utoa@n+7)^0,w,c
  1662   000C68  A4D8               	btfss	status,2,c
  1663   000C6A  EF39  F006         	goto	u1281
  1664   000C6E  EF3B  F006         	goto	u1280
  1665   000C72                     u1281:
  1666   000C72  EFAD  F005         	goto	l2247
  1667   000C76                     u1280:
  1668   000C76  BE31               	btfsc	(utoa@p+1)^0,7,c
  1669   000C78  EF48  F006         	goto	u1290
  1670   000C7C  5031               	movf	(utoa@p+1)^0,w,c
  1671   000C7E  E106               	bnz	u1291
  1672   000C80  0430               	decf	utoa@p^0,w,c
  1673   000C82  B0D8               	btfsc	status,0,c
  1674   000C84  EF46  F006         	goto	u1291
  1675   000C88  EF48  F006         	goto	u1290
  1676   000C8C                     u1291:
  1677   000C8C  EFAD  F005         	goto	l2247
  1678   000C90                     u1290:
  1679   000C90  BE33               	btfsc	(utoa@w+1)^0,7,c
  1680   000C92  EF53  F006         	goto	u1301
  1681   000C96  5033               	movf	(utoa@w+1)^0,w,c
  1682   000C98  E108               	bnz	u1300
  1683   000C9A  0432               	decf	utoa@w^0,w,c
  1684   000C9C  A0D8               	btfss	status,0,c
  1685   000C9E  EF53  F006         	goto	u1301
  1686   000CA2  EF55  F006         	goto	u1300
  1687   000CA6                     u1301:
  1688   000CA6  EF5C  F006         	goto	l2267
  1689   000CAA                     u1300:
  1690   000CAA  B25C               	btfsc	_flags^0,1,c
  1691   000CAC  EF5A  F006         	goto	u1311
  1692   000CB0  EF5C  F006         	goto	u1310
  1693   000CB4                     u1311:
  1694   000CB4  EFAD  F005         	goto	l2247
  1695   000CB8                     u1310:
  1696   000CB8                     l2267:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1699   000CB8  C01E  F013         	movff	utoa@fp,pad@fp
  1700   000CBC  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  1701   000CC0  0E68               	movlw	low _dbuf
  1702   000CC2  243C               	addwf	utoa@i^0,w,c
  1703   000CC4  6E15               	movwf	pad@buf^0,c
  1704   000CC6  0E00               	movlw	high _dbuf
  1705   000CC8  203D               	addwfc	(utoa@i+1)^0,w,c
  1706   000CCA  6E16               	movwf	(pad@buf+1)^0,c
  1707   000CCC  C032  F017         	movff	utoa@w,pad@p
  1708   000CD0  C033  F018         	movff	utoa@w+1,pad@p+1
  1709   000CD4  ECBB  F008         	call	_pad	;wreg free
  1710   000CD8  0012               	return		;funcret
  1711   000CDA                     __end_of_utoa:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _pad *****************
  1715 ;; Defined at:
  1716 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1719 ;;		 -> sprintf@f(11), 
  1720 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1721 ;;		 -> dbuf(32), 
  1722 ;;  p               2   22[COMRAM] int 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  w               2   27[COMRAM] int 
  1725 ;;  i               2   25[COMRAM] int 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1735 ;;      Params:         6       0       0       0       0       0       0       0       0
  1736 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1737 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1738 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1739 ;;Total ram usage:       11 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 4
  1742 ;; This function calls:
  1743 ;;		_fputc
  1744 ;;		_fputs
  1745 ;; This function is called by:
  1746 ;;		_utoa
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text6
  1751   001176                     __ptext6:
  1752                           	callstack 0
  1753   001176                     _pad:
  1754                           	callstack 22
  1755   001176                     
  1756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  1757   001176  A05C               	btfss	_flags^0,0,c
  1758   001178  EFC0  F008         	goto	u1171
  1759   00117C  EFC2  F008         	goto	u1170
  1760   001180                     u1171:
  1761   001180  EFCC  F008         	goto	l2205
  1762   001184                     u1170:
  1763   001184                     
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  1765   001184  C015  F00C         	movff	pad@buf,fputs@s
  1766   001188  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1767   00118C  C013  F00E         	movff	pad@fp,fputs@fp
  1768   001190  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1769   001194  EC20  F00A         	call	_fputs	;wreg free
  1770   001198                     l2205:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  1773   001198  BE18               	btfsc	(pad@p+1)^0,7,c
  1774   00119A  EFD1  F008         	goto	u1181
  1775   00119E  EFD3  F008         	goto	u1180
  1776   0011A2                     u1181:
  1777   0011A2  EFD9  F008         	goto	l2209
  1778   0011A6                     u1180:
  1779   0011A6  C017  F01C         	movff	pad@p,pad@w
  1780   0011AA  C018  F01D         	movff	pad@p+1,pad@w+1
  1781   0011AE  EFDD  F008         	goto	l1175
  1782   0011B2                     l2209:
  1783   0011B2  0E00               	movlw	0
  1784   0011B4  6E1D               	movwf	(pad@w+1)^0,c
  1785   0011B6  0E00               	movlw	0
  1786   0011B8  6E1C               	movwf	pad@w^0,c
  1787   0011BA                     l1175:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1790   0011BA  0E00               	movlw	0
  1791   0011BC  6E1B               	movwf	(pad@i+1)^0,c
  1792   0011BE  0E00               	movlw	0
  1793   0011C0  6E1A               	movwf	pad@i^0,c
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1796   0011C2  EFEF  F008         	goto	l2215
  1797   0011C6                     l2211:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1800   0011C6  0E00               	movlw	0
  1801   0011C8  6E04               	movwf	(fputc@c+1)^0,c
  1802   0011CA  0E20               	movlw	32
  1803   0011CC  6E03               	movwf	fputc@c^0,c
  1804   0011CE  C013  F005         	movff	pad@fp,fputc@fp
  1805   0011D2  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1806   0011D6  ECF2  F007         	call	_fputc	;wreg free
  1807   0011DA                     
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1809   0011DA  4A1A               	infsnz	pad@i^0,f,c
  1810   0011DC  2A1B               	incf	(pad@i+1)^0,f,c
  1811   0011DE                     l2215:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1814   0011DE  501C               	movf	pad@w^0,w,c
  1815   0011E0  5C1A               	subwf	pad@i^0,w,c
  1816   0011E2  501B               	movf	(pad@i+1)^0,w,c
  1817   0011E4  0A80               	xorlw	128
  1818   0011E6  6E19               	movwf	??_pad^0,c
  1819   0011E8  501D               	movf	(pad@w+1)^0,w,c
  1820   0011EA  0A80               	xorlw	128
  1821   0011EC  5819               	subwfb	??_pad^0,w,c
  1822   0011EE  A0D8               	btfss	status,0,c
  1823   0011F0  EFFC  F008         	goto	u1191
  1824   0011F4  EFFE  F008         	goto	u1190
  1825   0011F8                     u1191:
  1826   0011F8  EFE3  F008         	goto	l2211
  1827   0011FC                     u1190:
  1828   0011FC                     
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  1830   0011FC  B05C               	btfsc	_flags^0,0,c
  1831   0011FE  EF03  F009         	goto	u1201
  1832   001202  EF05  F009         	goto	u1200
  1833   001206                     u1201:
  1834   001206  EF0F  F009         	goto	l1180
  1835   00120A                     u1200:
  1836   00120A                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1838   00120A  C015  F00C         	movff	pad@buf,fputs@s
  1839   00120E  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1840   001212  C013  F00E         	movff	pad@fp,fputs@fp
  1841   001216  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1842   00121A  EC20  F00A         	call	_fputs	;wreg free
  1843   00121E                     l1180:
  1844   00121E  0012               	return		;funcret
  1845   001220                     __end_of_pad:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _fputs *****************
  1849 ;; Defined at:
  1850 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1853 ;;		 -> dbuf(32), 
  1854 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1855 ;;		 -> sprintf@f(11), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  i               2   16[COMRAM] int 
  1858 ;;  c               1   15[COMRAM] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2   11[COMRAM] int 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1868 ;;      Params:         4       0       0       0       0       0       0       0       0
  1869 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1871 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1872 ;;Total ram usage:        7 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 3
  1875 ;; This function calls:
  1876 ;;		_fputc
  1877 ;; This function is called by:
  1878 ;;		_pad
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text7
  1883   001440                     __ptext7:
  1884                           	callstack 0
  1885   001440                     _fputs:
  1886                           	callstack 22
  1887   001440  0E00               	movlw	0
  1888   001442  6E12               	movwf	(fputs@i+1)^0,c
  1889   001444  0E00               	movlw	0
  1890   001446  6E11               	movwf	fputs@i^0,c
  1891   001448  EF31  F00A         	goto	l2155
  1892   00144C                     l2151:
  1893   00144C  C010  F003         	movff	fputs@c,fputc@c
  1894   001450  6A04               	clrf	(fputc@c+1)^0,c
  1895   001452  C00E  F005         	movff	fputs@fp,fputc@fp
  1896   001456  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1897   00145A  ECF2  F007         	call	_fputc	;wreg free
  1898   00145E  4A11               	infsnz	fputs@i^0,f,c
  1899   001460  2A12               	incf	(fputs@i+1)^0,f,c
  1900   001462                     l2155:
  1901   001462  5011               	movf	fputs@i^0,w,c
  1902   001464  240C               	addwf	fputs@s^0,w,c
  1903   001466  6ED9               	movwf	fsr2l,c
  1904   001468  5012               	movf	(fputs@i+1)^0,w,c
  1905   00146A  200D               	addwfc	(fputs@s+1)^0,w,c
  1906   00146C  6EDA               	movwf	fsr2h,c
  1907   00146E  50DF               	movf	indf2,w,c
  1908   001470  6E10               	movwf	fputs@c^0,c
  1909   001472  5010               	movf	fputs@c^0,w,c
  1910   001474  A4D8               	btfss	status,2,c
  1911   001476  EF3F  F00A         	goto	u1091
  1912   00147A  EF41  F00A         	goto	u1090
  1913   00147E                     u1091:
  1914   00147E  EF26  F00A         	goto	l2151
  1915   001482                     u1090:
  1916   001482  0012               	return		;funcret
  1917   001484                     __end_of_fputs:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _fputc *****************
  1921 ;; Defined at:
  1922 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  c               2    2[COMRAM] int 
  1925 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1926 ;;		 -> sprintf@f(11), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    2[COMRAM] int 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1938 ;;      Params:         4       0       0       0       0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1940 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1941 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1942 ;;Total ram usage:        9 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 2
  1945 ;; This function calls:
  1946 ;;		_putch
  1947 ;; This function is called by:
  1948 ;;		_pad
  1949 ;;		_vfpfcnvrt
  1950 ;;		_fputs
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text8
  1955   000FE4                     __ptext8:
  1956                           	callstack 0
  1957   000FE4                     _fputc:
  1958                           	callstack 22
  1959   000FE4  5005               	movf	fputc@fp^0,w,c
  1960   000FE6  1006               	iorwf	(fputc@fp+1)^0,w,c
  1961   000FE8  B4D8               	btfsc	status,2,c
  1962   000FEA  EFF9  F007         	goto	u1051
  1963   000FEE  EFFB  F007         	goto	u1050
  1964   000FF2                     u1051:
  1965   000FF2  EF04  F008         	goto	l2139
  1966   000FF6                     u1050:
  1967   000FF6  5005               	movf	fputc@fp^0,w,c
  1968   000FF8  1006               	iorwf	(fputc@fp+1)^0,w,c
  1969   000FFA  A4D8               	btfss	status,2,c
  1970   000FFC  EF02  F008         	goto	u1061
  1971   001000  EF04  F008         	goto	u1060
  1972   001004                     u1061:
  1973   001004  EF09  F008         	goto	l2141
  1974   001008                     u1060:
  1975   001008                     l2139:
  1976   001008  5003               	movf	fputc@c^0,w,c
  1977   00100A  EC1E  F00B         	call	_putch
  1978   00100E  EF56  F008         	goto	l1277
  1979   001012                     l2141:
  1980   001012  EE20 F009          	lfsr	2,9
  1981   001016  5005               	movf	fputc@fp^0,w,c
  1982   001018  26D9               	addwf	fsr2l,f,c
  1983   00101A  5006               	movf	(fputc@fp+1)^0,w,c
  1984   00101C  22DA               	addwfc	fsr2h,f,c
  1985   00101E  50DE               	movf	postinc2,w,c
  1986   001020  10DE               	iorwf	postinc2,w,c
  1987   001022  B4D8               	btfsc	status,2,c
  1988   001024  EF16  F008         	goto	u1071
  1989   001028  EF18  F008         	goto	u1070
  1990   00102C                     u1071:
  1991   00102C  EF33  F008         	goto	l2145
  1992   001030                     u1070:
  1993   001030  EE20 F009          	lfsr	2,9
  1994   001034  5005               	movf	fputc@fp^0,w,c
  1995   001036  26D9               	addwf	fsr2l,f,c
  1996   001038  5006               	movf	(fputc@fp+1)^0,w,c
  1997   00103A  22DA               	addwfc	fsr2h,f,c
  1998   00103C  EE10 F003          	lfsr	1,3
  1999   001040  5005               	movf	fputc@fp^0,w,c
  2000   001042  26E1               	addwf	fsr1l,f,c
  2001   001044  5006               	movf	(fputc@fp+1)^0,w,c
  2002   001046  22E2               	addwfc	fsr1h,f,c
  2003   001048  50DE               	movf	postinc2,w,c
  2004   00104A  5CE6               	subwf	postinc1,w,c
  2005   00104C  50E6               	movf	postinc1,w,c
  2006   00104E  0A80               	xorlw	128
  2007   001050  6E0B               	movwf	(??_fputc+4)^0,c
  2008   001052  50DE               	movf	postinc2,w,c
  2009   001054  0A80               	xorlw	128
  2010   001056  580B               	subwfb	(??_fputc+4)^0,w,c
  2011   001058  B0D8               	btfsc	status,0,c
  2012   00105A  EF31  F008         	goto	u1081
  2013   00105E  EF33  F008         	goto	u1080
  2014   001062                     u1081:
  2015   001062  EF56  F008         	goto	l1277
  2016   001066                     u1080:
  2017   001066                     l2145:
  2018   001066  EE20 F003          	lfsr	2,3
  2019   00106A  5005               	movf	fputc@fp^0,w,c
  2020   00106C  26D9               	addwf	fsr2l,f,c
  2021   00106E  5006               	movf	(fputc@fp+1)^0,w,c
  2022   001070  22DA               	addwfc	fsr2h,f,c
  2023   001072  CFDE F007          	movff	postinc2,??_fputc
  2024   001076  CFDD F008          	movff	postdec2,??_fputc+1
  2025   00107A  C005  FFD9         	movff	fputc@fp,fsr2l
  2026   00107E  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2027   001082  CFDE F009          	movff	postinc2,??_fputc+2
  2028   001086  CFDD F00A          	movff	postdec2,??_fputc+3
  2029   00108A  5007               	movf	??_fputc^0,w,c
  2030   00108C  2409               	addwf	(??_fputc+2)^0,w,c
  2031   00108E  6ED9               	movwf	fsr2l,c
  2032   001090  5008               	movf	(??_fputc+1)^0,w,c
  2033   001092  200A               	addwfc	(??_fputc+3)^0,w,c
  2034   001094  6EDA               	movwf	fsr2h,c
  2035   001096  C003  FFDF         	movff	fputc@c,indf2
  2036   00109A  EE20 F003          	lfsr	2,3
  2037   00109E  5005               	movf	fputc@fp^0,w,c
  2038   0010A0  26D9               	addwf	fsr2l,f,c
  2039   0010A2  5006               	movf	(fputc@fp+1)^0,w,c
  2040   0010A4  22DA               	addwfc	fsr2h,f,c
  2041   0010A6  2ADE               	incf	postinc2,f,c
  2042   0010A8  0E00               	movlw	0
  2043   0010AA  22DD               	addwfc	postdec2,f,c
  2044   0010AC                     l1277:
  2045   0010AC  0012               	return		;funcret
  2046   0010AE                     __end_of_fputc:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _putch *****************
  2050 ;; Defined at:
  2051 ;;		line 93 in file "lib_pic/usart.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  c               1    wreg     unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  c               1    1[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0
  2066 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2068 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2069 ;;Total ram usage:        1 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_fputc
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text9
  2080   00163C                     __ptext9:
  2081                           	callstack 0
  2082   00163C                     _putch:
  2083                           	callstack 22
  2084                           
  2085                           ;incstack = 0
  2086                           ;putch@c stored from wreg
  2087   00163C  6E02               	movwf	putch@c^0,c
  2088   00163E                     l466:
  2089   00163E  A2AC               	btfss	172,1,c	;volatile
  2090   001640  EF24  F00B         	goto	u1041
  2091   001644  EF26  F00B         	goto	u1040
  2092   001648                     u1041:
  2093   001648  EF1F  F00B         	goto	l466
  2094   00164C                     u1040:
  2095   00164C                     
  2096                           ;lib_pic/usart.c: 96:     TXREG1 = c;
  2097   00164C  C002  FFAD         	movff	putch@c,4013	;volatile
  2098   001650  0012               	return		;funcret
  2099   001652                     __end_of_putch:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function ___lomod *****************
  2103 ;; Defined at:
  2104 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  dividend        8    1[COMRAM] unsigned long long 
  2107 ;;  divisor         8    9[COMRAM] unsigned long long 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  counter         1   17[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  8    1[COMRAM] unsigned long long 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2119 ;;      Params:        16       0       0       0       0       0       0       0       0
  2120 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2122 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2123 ;;Total ram usage:       17 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_utoa
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text10
  2134   000F14                     __ptext10:
  2135                           	callstack 0
  2136   000F14                     ___lomod:
  2137                           	callstack 25
  2138   000F14  500A               	movf	___lomod@divisor^0,w,c
  2139   000F16  100B               	iorwf	(___lomod@divisor+1)^0,w,c
  2140   000F18  100C               	iorwf	(___lomod@divisor+2)^0,w,c
  2141   000F1A  100D               	iorwf	(___lomod@divisor+3)^0,w,c
  2142   000F1C  100E               	iorwf	(___lomod@divisor+4)^0,w,c
  2143   000F1E  100F               	iorwf	(___lomod@divisor+5)^0,w,c
  2144   000F20  1010               	iorwf	(___lomod@divisor+6)^0,w,c
  2145   000F22  1011               	iorwf	(___lomod@divisor+7)^0,w,c
  2146   000F24  B4D8               	btfsc	status,2,c
  2147   000F26  EF97  F007         	goto	u1141
  2148   000F2A  EF99  F007         	goto	u1140
  2149   000F2E                     u1141:
  2150   000F2E  EFE1  F007         	goto	l920
  2151   000F32                     u1140:
  2152   000F32  0E01               	movlw	1
  2153   000F34  6E12               	movwf	___lomod@counter^0,c
  2154   000F36  EFA7  F007         	goto	l2191
  2155   000F3A                     l2189:
  2156   000F3A  90D8               	bcf	status,0,c
  2157   000F3C  360A               	rlcf	___lomod@divisor^0,f,c
  2158   000F3E  360B               	rlcf	(___lomod@divisor+1)^0,f,c
  2159   000F40  360C               	rlcf	(___lomod@divisor+2)^0,f,c
  2160   000F42  360D               	rlcf	(___lomod@divisor+3)^0,f,c
  2161   000F44  360E               	rlcf	(___lomod@divisor+4)^0,f,c
  2162   000F46  360F               	rlcf	(___lomod@divisor+5)^0,f,c
  2163   000F48  3610               	rlcf	(___lomod@divisor+6)^0,f,c
  2164   000F4A  3611               	rlcf	(___lomod@divisor+7)^0,f,c
  2165   000F4C  2A12               	incf	___lomod@counter^0,f,c
  2166   000F4E                     l2191:
  2167   000F4E  AE11               	btfss	(___lomod@divisor+7)^0,7,c
  2168   000F50  EFAC  F007         	goto	u1151
  2169   000F54  EFAE  F007         	goto	u1150
  2170   000F58                     u1151:
  2171   000F58  EF9D  F007         	goto	l2189
  2172   000F5C                     u1150:
  2173   000F5C                     l2193:
  2174   000F5C  500A               	movf	___lomod@divisor^0,w,c
  2175   000F5E  5C02               	subwf	___lomod@dividend^0,w,c
  2176   000F60  500B               	movf	(___lomod@divisor+1)^0,w,c
  2177   000F62  5803               	subwfb	(___lomod@dividend+1)^0,w,c
  2178   000F64  500C               	movf	(___lomod@divisor+2)^0,w,c
  2179   000F66  5804               	subwfb	(___lomod@dividend+2)^0,w,c
  2180   000F68  500D               	movf	(___lomod@divisor+3)^0,w,c
  2181   000F6A  5805               	subwfb	(___lomod@dividend+3)^0,w,c
  2182   000F6C  500E               	movf	(___lomod@divisor+4)^0,w,c
  2183   000F6E  5806               	subwfb	(___lomod@dividend+4)^0,w,c
  2184   000F70  500F               	movf	(___lomod@divisor+5)^0,w,c
  2185   000F72  5807               	subwfb	(___lomod@dividend+5)^0,w,c
  2186   000F74  5010               	movf	(___lomod@divisor+6)^0,w,c
  2187   000F76  5808               	subwfb	(___lomod@dividend+6)^0,w,c
  2188   000F78  5011               	movf	(___lomod@divisor+7)^0,w,c
  2189   000F7A  5809               	subwfb	(___lomod@dividend+7)^0,w,c
  2190   000F7C  A0D8               	btfss	status,0,c
  2191   000F7E  EFC3  F007         	goto	u1161
  2192   000F82  EFC5  F007         	goto	u1160
  2193   000F86                     u1161:
  2194   000F86  EFD5  F007         	goto	l2197
  2195   000F8A                     u1160:
  2196   000F8A  500A               	movf	___lomod@divisor^0,w,c
  2197   000F8C  5E02               	subwf	___lomod@dividend^0,f,c
  2198   000F8E  500B               	movf	(___lomod@divisor+1)^0,w,c
  2199   000F90  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
  2200   000F92  500C               	movf	(___lomod@divisor+2)^0,w,c
  2201   000F94  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
  2202   000F96  500D               	movf	(___lomod@divisor+3)^0,w,c
  2203   000F98  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
  2204   000F9A  500E               	movf	(___lomod@divisor+4)^0,w,c
  2205   000F9C  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
  2206   000F9E  500F               	movf	(___lomod@divisor+5)^0,w,c
  2207   000FA0  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
  2208   000FA2  5010               	movf	(___lomod@divisor+6)^0,w,c
  2209   000FA4  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
  2210   000FA6  5011               	movf	(___lomod@divisor+7)^0,w,c
  2211   000FA8  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
  2212   000FAA                     l2197:
  2213   000FAA  90D8               	bcf	status,0,c
  2214   000FAC  3211               	rrcf	(___lomod@divisor+7)^0,f,c
  2215   000FAE  3210               	rrcf	(___lomod@divisor+6)^0,f,c
  2216   000FB0  320F               	rrcf	(___lomod@divisor+5)^0,f,c
  2217   000FB2  320E               	rrcf	(___lomod@divisor+4)^0,f,c
  2218   000FB4  320D               	rrcf	(___lomod@divisor+3)^0,f,c
  2219   000FB6  320C               	rrcf	(___lomod@divisor+2)^0,f,c
  2220   000FB8  320B               	rrcf	(___lomod@divisor+1)^0,f,c
  2221   000FBA  320A               	rrcf	___lomod@divisor^0,f,c
  2222   000FBC  2E12               	decfsz	___lomod@counter^0,f,c
  2223   000FBE  EFAE  F007         	goto	l2193
  2224   000FC2                     l920:
  2225   000FC2  C002  F002         	movff	___lomod@dividend,?___lomod
  2226   000FC6  C003  F003         	movff	___lomod@dividend+1,?___lomod+1
  2227   000FCA  C004  F004         	movff	___lomod@dividend+2,?___lomod+2
  2228   000FCE  C005  F005         	movff	___lomod@dividend+3,?___lomod+3
  2229   000FD2  C006  F006         	movff	___lomod@dividend+4,?___lomod+4
  2230   000FD6  C007  F007         	movff	___lomod@dividend+5,?___lomod+5
  2231   000FDA  C008  F008         	movff	___lomod@dividend+6,?___lomod+6
  2232   000FDE  C009  F009         	movff	___lomod@dividend+7,?___lomod+7
  2233   000FE2  0012               	return		;funcret
  2234   000FE4                     __end_of___lomod:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function ___lodiv *****************
  2238 ;; Defined at:
  2239 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  dividend        8    1[COMRAM] unsigned long long 
  2242 ;;  divisor         8    9[COMRAM] unsigned long long 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  quotient        8   17[COMRAM] unsigned long long 
  2245 ;;  counter         1   25[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  8    1[COMRAM] unsigned long long 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2255 ;;      Params:        16       0       0       0       0       0       0       0       0
  2256 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2258 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2259 ;;Total ram usage:       25 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_utoa
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text11
  2270   000E24                     __ptext11:
  2271                           	callstack 0
  2272   000E24                     ___lodiv:
  2273                           	callstack 25
  2274   000E24  EE20  F012         	lfsr	2,___lodiv@quotient
  2275   000E28  0E07               	movlw	7
  2276   000E2A                     u1101:
  2277   000E2A  6ADE               	clrf	postinc2,c
  2278   000E2C  06E8               	decf	wreg,f,c
  2279   000E2E  E2FD               	bc	u1101
  2280   000E30  500A               	movf	___lodiv@divisor^0,w,c
  2281   000E32  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
  2282   000E34  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
  2283   000E36  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
  2284   000E38  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
  2285   000E3A  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
  2286   000E3C  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
  2287   000E3E  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
  2288   000E40  B4D8               	btfsc	status,2,c
  2289   000E42  EF25  F007         	goto	u1111
  2290   000E46  EF27  F007         	goto	u1110
  2291   000E4A                     u1111:
  2292   000E4A  EF79  F007         	goto	l910
  2293   000E4E                     u1110:
  2294   000E4E  0E01               	movlw	1
  2295   000E50  6E1A               	movwf	___lodiv@counter^0,c
  2296   000E52  EF35  F007         	goto	l2171
  2297   000E56                     l2169:
  2298   000E56  90D8               	bcf	status,0,c
  2299   000E58  360A               	rlcf	___lodiv@divisor^0,f,c
  2300   000E5A  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
  2301   000E5C  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
  2302   000E5E  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
  2303   000E60  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
  2304   000E62  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
  2305   000E64  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
  2306   000E66  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
  2307   000E68  2A1A               	incf	___lodiv@counter^0,f,c
  2308   000E6A                     l2171:
  2309   000E6A  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
  2310   000E6C  EF3A  F007         	goto	u1121
  2311   000E70  EF3C  F007         	goto	u1120
  2312   000E74                     u1121:
  2313   000E74  EF2B  F007         	goto	l2169
  2314   000E78                     u1120:
  2315   000E78                     l2173:
  2316   000E78  90D8               	bcf	status,0,c
  2317   000E7A  3612               	rlcf	___lodiv@quotient^0,f,c
  2318   000E7C  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
  2319   000E7E  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
  2320   000E80  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
  2321   000E82  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
  2322   000E84  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
  2323   000E86  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
  2324   000E88  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
  2325   000E8A  500A               	movf	___lodiv@divisor^0,w,c
  2326   000E8C  5C02               	subwf	___lodiv@dividend^0,w,c
  2327   000E8E  500B               	movf	(___lodiv@divisor+1)^0,w,c
  2328   000E90  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
  2329   000E92  500C               	movf	(___lodiv@divisor+2)^0,w,c
  2330   000E94  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
  2331   000E96  500D               	movf	(___lodiv@divisor+3)^0,w,c
  2332   000E98  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
  2333   000E9A  500E               	movf	(___lodiv@divisor+4)^0,w,c
  2334   000E9C  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
  2335   000E9E  500F               	movf	(___lodiv@divisor+5)^0,w,c
  2336   000EA0  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
  2337   000EA2  5010               	movf	(___lodiv@divisor+6)^0,w,c
  2338   000EA4  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
  2339   000EA6  5011               	movf	(___lodiv@divisor+7)^0,w,c
  2340   000EA8  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
  2341   000EAA  A0D8               	btfss	status,0,c
  2342   000EAC  EF5A  F007         	goto	u1131
  2343   000EB0  EF5C  F007         	goto	u1130
  2344   000EB4                     u1131:
  2345   000EB4  EF6D  F007         	goto	l2181
  2346   000EB8                     u1130:
  2347   000EB8  500A               	movf	___lodiv@divisor^0,w,c
  2348   000EBA  5E02               	subwf	___lodiv@dividend^0,f,c
  2349   000EBC  500B               	movf	(___lodiv@divisor+1)^0,w,c
  2350   000EBE  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
  2351   000EC0  500C               	movf	(___lodiv@divisor+2)^0,w,c
  2352   000EC2  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
  2353   000EC4  500D               	movf	(___lodiv@divisor+3)^0,w,c
  2354   000EC6  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
  2355   000EC8  500E               	movf	(___lodiv@divisor+4)^0,w,c
  2356   000ECA  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
  2357   000ECC  500F               	movf	(___lodiv@divisor+5)^0,w,c
  2358   000ECE  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
  2359   000ED0  5010               	movf	(___lodiv@divisor+6)^0,w,c
  2360   000ED2  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
  2361   000ED4  5011               	movf	(___lodiv@divisor+7)^0,w,c
  2362   000ED6  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
  2363   000ED8  8012               	bsf	___lodiv@quotient^0,0,c
  2364   000EDA                     l2181:
  2365   000EDA  90D8               	bcf	status,0,c
  2366   000EDC  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
  2367   000EDE  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
  2368   000EE0  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
  2369   000EE2  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
  2370   000EE4  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
  2371   000EE6  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
  2372   000EE8  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
  2373   000EEA  320A               	rrcf	___lodiv@divisor^0,f,c
  2374   000EEC  2E1A               	decfsz	___lodiv@counter^0,f,c
  2375   000EEE  EF3C  F007         	goto	l2173
  2376   000EF2                     l910:
  2377   000EF2  C012  F002         	movff	___lodiv@quotient,?___lodiv
  2378   000EF6  C013  F003         	movff	___lodiv@quotient+1,?___lodiv+1
  2379   000EFA  C014  F004         	movff	___lodiv@quotient+2,?___lodiv+2
  2380   000EFE  C015  F005         	movff	___lodiv@quotient+3,?___lodiv+3
  2381   000F02  C016  F006         	movff	___lodiv@quotient+4,?___lodiv+4
  2382   000F06  C017  F007         	movff	___lodiv@quotient+5,?___lodiv+5
  2383   000F0A  C018  F008         	movff	___lodiv@quotient+6,?___lodiv+6
  2384   000F0E  C019  F009         	movff	___lodiv@quotient+7,?___lodiv+7
  2385   000F12  0012               	return		;funcret
  2386   000F14                     __end_of___lodiv:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _atoi *****************
  2390 ;; Defined at:
  2391 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2394 ;;		 -> STR_2(21), STR_1(23), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  n               2   14[COMRAM] int 
  2397 ;;  neg             2   12[COMRAM] int 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  2    7[COMRAM] int 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         2       0       0       0       0       0       0       0       0
  2408 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2410 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        9 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 2
  2414 ;; This function calls:
  2415 ;;		___wmul
  2416 ;;		_isdigit
  2417 ;;		_isspace
  2418 ;; This function is called by:
  2419 ;;		_vfpfcnvrt
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text12
  2424   000CDA                     __ptext12:
  2425                           	callstack 0
  2426   000CDA                     _atoi:
  2427                           	callstack 25
  2428   000CDA  0E00               	movlw	0
  2429   000CDC  6E10               	movwf	(atoi@n+1)^0,c
  2430   000CDE  0E00               	movlw	0
  2431   000CE0  6E0F               	movwf	atoi@n^0,c
  2432   000CE2  0E00               	movlw	0
  2433   000CE4  6E0E               	movwf	(atoi@neg+1)^0,c
  2434   000CE6  0E00               	movlw	0
  2435   000CE8  6E0D               	movwf	atoi@neg^0,c
  2436   000CEA  EF79  F006         	goto	l2277
  2437   000CEE                     l2273:
  2438   000CEE  4A08               	infsnz	atoi@s^0,f,c
  2439   000CF0  2A09               	incf	(atoi@s+1)^0,f,c
  2440   000CF2                     l2277:
  2441   000CF2  C008  FFF6         	movff	atoi@s,tblptrl
  2442   000CF6  C009  FFF7         	movff	atoi@s+1,tblptrh
  2443   000CFA                     	if	0	;tblptru may be non-zero
  2444   000CFA                     	endif
  2445   000CFA                     	if	0	;tblptru may be non-zero
  2446   000CFA                     	endif
  2447   000CFA  0008               	tblrd		*
  2448   000CFC  50F5               	movf	tablat,w,c
  2449   000CFE  0A20               	xorlw	32
  2450   000D00  B4D8               	btfsc	status,2,c
  2451   000D02  EF85  F006         	goto	u1321
  2452   000D06  EF87  F006         	goto	u1320
  2453   000D0A                     u1321:
  2454   000D0A  EF77  F006         	goto	l2273
  2455   000D0E                     u1320:
  2456   000D0E  C008  FFF6         	movff	atoi@s,tblptrl
  2457   000D12  C009  FFF7         	movff	atoi@s+1,tblptrh
  2458   000D16                     	if	0	;tblptru may be non-zero
  2459   000D16                     	endif
  2460   000D16                     	if	0	;tblptru may be non-zero
  2461   000D16                     	endif
  2462   000D16  0008               	tblrd		*
  2463   000D18  CFF5 F00A          	movff	tablat,??_atoi
  2464   000D1C  0EF7               	movlw	247
  2465   000D1E  240A               	addwf	??_atoi^0,w,c
  2466   000D20  6E0B               	movwf	(??_atoi+1)^0,c
  2467   000D22  6A0C               	clrf	(??_atoi+2)^0,c
  2468   000D24  0EFF               	movlw	255
  2469   000D26  220C               	addwfc	(??_atoi+2)^0,f,c
  2470   000D28  500C               	movf	(??_atoi+2)^0,w,c
  2471   000D2A  E109               	bnz	u1330
  2472   000D2C  0E05               	movlw	5
  2473   000D2E  5C0B               	subwf	(??_atoi+1)^0,w,c
  2474   000D30  A0D8               	btfss	status,0,c
  2475   000D32  EF9D  F006         	goto	u1331
  2476   000D36  EF9F  F006         	goto	u1330
  2477   000D3A                     u1331:
  2478   000D3A  EF77  F006         	goto	l2273
  2479   000D3E                     u1330:
  2480   000D3E  EFA9  F006         	goto	l2285
  2481   000D42                     l2281:
  2482   000D42  0E00               	movlw	0
  2483   000D44  6E0E               	movwf	(atoi@neg+1)^0,c
  2484   000D46  0E01               	movlw	1
  2485   000D48  6E0D               	movwf	atoi@neg^0,c
  2486   000D4A                     l2283:
  2487   000D4A  4A08               	infsnz	atoi@s^0,f,c
  2488   000D4C  2A09               	incf	(atoi@s+1)^0,f,c
  2489   000D4E  EFDE  F006         	goto	l2293
  2490   000D52                     l2285:
  2491   000D52  C008  FFF6         	movff	atoi@s,tblptrl
  2492   000D56  C009  FFF7         	movff	atoi@s+1,tblptrh
  2493   000D5A                     	if	0	;tblptru may be non-zero
  2494   000D5A                     	endif
  2495   000D5A                     	if	0	;tblptru may be non-zero
  2496   000D5A                     	endif
  2497   000D5A  0008               	tblrd		*
  2498   000D5C  50F5               	movf	tablat,w,c
  2499   000D5E  6E0A               	movwf	??_atoi^0,c
  2500   000D60  6A0B               	clrf	(??_atoi+1)^0,c
  2501                           
  2502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2503                           ; Switch size 1, requested type "simple"
  2504                           ; Number of cases is 1, Range of values is 0 to 0
  2505                           ; switch strategies available:
  2506                           ; Name         Instructions Cycles
  2507                           ; simple_byte            4     3 (average)
  2508                           ;	Chosen strategy is simple_byte
  2509   000D62  500B               	movf	(??_atoi+1)^0,w,c
  2510   000D64  0A00               	xorlw	0	; case 0
  2511   000D66  B4D8               	btfsc	status,2,c
  2512   000D68  EFB8  F006         	goto	l2895
  2513   000D6C  EFDE  F006         	goto	l2293
  2514   000D70                     l2895:
  2515                           
  2516                           ; Switch size 1, requested type "simple"
  2517                           ; Number of cases is 2, Range of values is 43 to 45
  2518                           ; switch strategies available:
  2519                           ; Name         Instructions Cycles
  2520                           ; simple_byte            7     4 (average)
  2521                           ;	Chosen strategy is simple_byte
  2522   000D70  500A               	movf	??_atoi^0,w,c
  2523   000D72  0A2B               	xorlw	43	; case 43
  2524   000D74  B4D8               	btfsc	status,2,c
  2525   000D76  EFA5  F006         	goto	l2283
  2526   000D7A  0A06               	xorlw	6	; case 45
  2527   000D7C  B4D8               	btfsc	status,2,c
  2528   000D7E  EFA1  F006         	goto	l2281
  2529   000D82  EFDE  F006         	goto	l2293
  2530   000D86                     l2287:
  2531   000D86  C00F  F002         	movff	atoi@n,___wmul@multiplier
  2532   000D8A  C010  F003         	movff	atoi@n+1,___wmul@multiplier+1
  2533   000D8E  0E00               	movlw	0
  2534   000D90  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  2535   000D92  0E0A               	movlw	10
  2536   000D94  6E04               	movwf	___wmul@multiplicand^0,c
  2537   000D96  ECD3  F00A         	call	___wmul	;wreg free
  2538   000D9A  C008  FFF6         	movff	atoi@s,tblptrl
  2539   000D9E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2540   000DA2                     	if	0	;tblptru may be non-zero
  2541   000DA2                     	endif
  2542   000DA2                     	if	0	;tblptru may be non-zero
  2543   000DA2                     	endif
  2544   000DA2  0008               	tblrd		*
  2545   000DA4  50F5               	movf	tablat,w,c
  2546   000DA6  5E02               	subwf	?___wmul^0,f,c
  2547   000DA8  0E00               	movlw	0
  2548   000DAA  5A03               	subwfb	(?___wmul+1)^0,f,c
  2549   000DAC  0E30               	movlw	48
  2550   000DAE  2402               	addwf	?___wmul^0,w,c
  2551   000DB0  6E0F               	movwf	atoi@n^0,c
  2552   000DB2  0E00               	movlw	0
  2553   000DB4  2003               	addwfc	(?___wmul+1)^0,w,c
  2554   000DB6  6E10               	movwf	(atoi@n+1)^0,c
  2555   000DB8  EFA5  F006         	goto	l2283
  2556   000DBC                     l2293:
  2557   000DBC  C008  FFF6         	movff	atoi@s,tblptrl
  2558   000DC0  C009  FFF7         	movff	atoi@s+1,tblptrh
  2559   000DC4                     	if	0	;tblptru may be non-zero
  2560   000DC4                     	endif
  2561   000DC4                     	if	0	;tblptru may be non-zero
  2562   000DC4                     	endif
  2563   000DC4  0008               	tblrd		*
  2564   000DC6  CFF5 F00A          	movff	tablat,??_atoi
  2565   000DCA  0ED0               	movlw	208
  2566   000DCC  240A               	addwf	??_atoi^0,w,c
  2567   000DCE  6E0B               	movwf	(??_atoi+1)^0,c
  2568   000DD0  6A0C               	clrf	(??_atoi+2)^0,c
  2569   000DD2  0EFF               	movlw	255
  2570   000DD4  220C               	addwfc	(??_atoi+2)^0,f,c
  2571   000DD6  500C               	movf	(??_atoi+2)^0,w,c
  2572   000DD8  E109               	bnz	u1340
  2573   000DDA  0E0A               	movlw	10
  2574   000DDC  5C0B               	subwf	(??_atoi+1)^0,w,c
  2575   000DDE  A0D8               	btfss	status,0,c
  2576   000DE0  EFF4  F006         	goto	u1341
  2577   000DE4  EFF6  F006         	goto	u1340
  2578   000DE8                     u1341:
  2579   000DE8  EFC3  F006         	goto	l2287
  2580   000DEC                     u1340:
  2581   000DEC  500D               	movf	atoi@neg^0,w,c
  2582   000DEE  100E               	iorwf	(atoi@neg+1)^0,w,c
  2583   000DF0  A4D8               	btfss	status,2,c
  2584   000DF2  EFFD  F006         	goto	u1351
  2585   000DF6  EFFF  F006         	goto	u1350
  2586   000DFA                     u1351:
  2587   000DFA  EF0D  F007         	goto	l1248
  2588   000DFE                     u1350:
  2589   000DFE  C00F  F00A         	movff	atoi@n,??_atoi
  2590   000E02  C010  F00B         	movff	atoi@n+1,??_atoi+1
  2591   000E06  1E0A               	comf	??_atoi^0,f,c
  2592   000E08  1E0B               	comf	(??_atoi+1)^0,f,c
  2593   000E0A  4A0A               	infsnz	??_atoi^0,f,c
  2594   000E0C  2A0B               	incf	(??_atoi+1)^0,f,c
  2595   000E0E  C00A  F008         	movff	??_atoi,?_atoi
  2596   000E12  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2597   000E16  EF11  F007         	goto	l1251
  2598   000E1A                     l1248:
  2599   000E1A  C00F  F008         	movff	atoi@n,?_atoi
  2600   000E1E  C010  F009         	movff	atoi@n+1,?_atoi+1
  2601   000E22                     l1251:
  2602   000E22  0012               	return		;funcret
  2603   000E24                     __end_of_atoi:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _isspace *****************
  2607 ;; Defined at:
  2608 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  c               2    1[COMRAM] int 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2    1[COMRAM] int 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         2       0       0       0       0       0       0       0       0
  2623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2624 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2625 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2626 ;;Total ram usage:        5 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 1
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_atoi
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text13
  2637   0013FA                     __ptext13:
  2638                           	callstack 0
  2639   0013FA                     _isspace:
  2640                           	callstack 25
  2641   0013FA  0E01               	movlw	1
  2642   0013FC  6E06               	movwf	_isspace$2229^0,c
  2643   0013FE  0E20               	movlw	32
  2644   001400  1802               	xorwf	isspace@c^0,w,c
  2645   001402  1003               	iorwf	(isspace@c+1)^0,w,c
  2646   001404  B4D8               	btfsc	status,2,c
  2647   001406  EF07  F00A         	goto	u1231
  2648   00140A  EF09  F00A         	goto	u1230
  2649   00140E                     u1231:
  2650   00140E  EF1C  F00A         	goto	l2231
  2651   001412                     u1230:
  2652   001412  0EF7               	movlw	247
  2653   001414  2402               	addwf	isspace@c^0,w,c
  2654   001416  6E04               	movwf	??_isspace^0,c
  2655   001418  0EFF               	movlw	255
  2656   00141A  2003               	addwfc	(isspace@c+1)^0,w,c
  2657   00141C  6E05               	movwf	(??_isspace+1)^0,c
  2658   00141E  5005               	movf	(??_isspace+1)^0,w,c
  2659   001420  E109               	bnz	u1240
  2660   001422  0E05               	movlw	5
  2661   001424  5C04               	subwf	??_isspace^0,w,c
  2662   001426  A0D8               	btfss	status,0,c
  2663   001428  EF18  F00A         	goto	u1241
  2664   00142C  EF1A  F00A         	goto	u1240
  2665   001430                     u1241:
  2666   001430  EF1C  F00A         	goto	l2231
  2667   001434                     u1240:
  2668   001434  0E00               	movlw	0
  2669   001436  6E06               	movwf	_isspace$2229^0,c
  2670   001438                     l2231:
  2671   001438  C006  F002         	movff	_isspace$2229,?_isspace
  2672   00143C  6A03               	clrf	(?_isspace+1)^0,c
  2673   00143E  0012               	return		;funcret
  2674   001440                     __end_of_isspace:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _isdigit *****************
  2678 ;; Defined at:
  2679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  c               2    1[COMRAM] int 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  2    1[COMRAM] int 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2693 ;;      Params:         2       0       0       0       0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2695 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2696 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2697 ;;Total ram usage:        4 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_vfpfcnvrt
  2704 ;;		_atoi
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text14
  2709   00157A                     __ptext14:
  2710                           	callstack 0
  2711   00157A                     _isdigit:
  2712                           	callstack 26
  2713   00157A  0ED0               	movlw	208
  2714   00157C  2402               	addwf	isdigit@c^0,w,c
  2715   00157E  6E04               	movwf	??_isdigit^0,c
  2716   001580  0EFF               	movlw	255
  2717   001582  2003               	addwfc	(isdigit@c+1)^0,w,c
  2718   001584  6E05               	movwf	(??_isdigit+1)^0,c
  2719   001586  5005               	movf	(??_isdigit+1)^0,w,c
  2720   001588  E10A               	bnz	u1210
  2721   00158A  0E0A               	movlw	10
  2722   00158C  5C04               	subwf	??_isdigit^0,w,c
  2723   00158E  A0D8               	btfss	status,0,c
  2724   001590  EFCC  F00A         	goto	u1211
  2725   001594  EFCF  F00A         	goto	u1210
  2726   001598                     u1211:
  2727   001598  0E01               	movlw	1
  2728   00159A  EFD0  F00A         	goto	u1220
  2729   00159E                     u1210:
  2730   00159E  0E00               	movlw	0
  2731   0015A0                     u1220:
  2732   0015A0  6E02               	movwf	?_isdigit^0,c
  2733   0015A2  6A03               	clrf	(?_isdigit+1)^0,c
  2734   0015A4  0012               	return		;funcret
  2735   0015A6                     __end_of_isdigit:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function ___wmul *****************
  2739 ;; Defined at:
  2740 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  multiplier      2    1[COMRAM] unsigned int 
  2743 ;;  multiplicand    2    3[COMRAM] unsigned int 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  product         2    5[COMRAM] unsigned int 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2    1[COMRAM] unsigned int 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, prodl, prodh
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         4       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        6 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_atoi
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text15
  2770   0015A6                     __ptext15:
  2771                           	callstack 0
  2772   0015A6                     ___wmul:
  2773                           	callstack 25
  2774   0015A6  5002               	movf	___wmul@multiplier^0,w,c
  2775   0015A8  0204               	mulwf	___wmul@multiplicand^0,c
  2776   0015AA  CFF3 F006          	movff	prodl,___wmul@product
  2777   0015AE  CFF4 F007          	movff	prodh,___wmul@product+1
  2778   0015B2  5002               	movf	___wmul@multiplier^0,w,c
  2779   0015B4  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  2780   0015B6  50F3               	movf	243,w,c
  2781   0015B8  2607               	addwf	(___wmul@product+1)^0,f,c
  2782   0015BA  5003               	movf	(___wmul@multiplier+1)^0,w,c
  2783   0015BC  0204               	mulwf	___wmul@multiplicand^0,c
  2784   0015BE  50F3               	movf	243,w,c
  2785   0015C0  2607               	addwf	(___wmul@product+1)^0,f,c
  2786   0015C2  C006  F002         	movff	___wmul@product,?___wmul
  2787   0015C6  C007  F003         	movff	___wmul@product+1,?___wmul+1
  2788   0015CA  0012               	return		;funcret
  2789   0015CC                     __end_of___wmul:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _Lcd_Write_String *****************
  2793 ;; Defined at:
  2794 ;;		line 113 in file "lib_pic/lcd_2x16.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  a               2    5[COMRAM] PTR unsigned char 
  2797 ;;		 -> strReloj(20), 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  i               2    7[COMRAM] int 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2809 ;;      Params:         2       0       0       0       0       0       0       0       0
  2810 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2812 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2813 ;;Total ram usage:        4 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 3
  2816 ;; This function calls:
  2817 ;;		_Lcd_Write_Char
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;;		_Print_Hour
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text16
  2825   0014C6                     __ptext16:
  2826                           	callstack 0
  2827   0014C6                     _Lcd_Write_String:
  2828                           	callstack 26
  2829   0014C6                     
  2830                           ;lib_pic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);lib_pic/lcd_2x16.c: 11
      +                          4: {;lib_pic/lcd_2x16.c: 115:  int i;;lib_pic/lcd_2x16.c: 116:  for(i=0;a[i]!='\0';i++)
  2831   0014C6  0E00               	movlw	0
  2832   0014C8  6E09               	movwf	(Lcd_Write_String@i+1)^0,c
  2833   0014CA  0E00               	movlw	0
  2834   0014CC  6E08               	movwf	Lcd_Write_String@i^0,c
  2835   0014CE  EF74  F00A         	goto	l2469
  2836   0014D2                     l2465:
  2837                           
  2838                           ;lib_pic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  2839   0014D2  5008               	movf	Lcd_Write_String@i^0,w,c
  2840   0014D4  2406               	addwf	Lcd_Write_String@a^0,w,c
  2841   0014D6  6ED9               	movwf	fsr2l,c
  2842   0014D8  5009               	movf	(Lcd_Write_String@i+1)^0,w,c
  2843   0014DA  2007               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2844   0014DC  6EDA               	movwf	fsr2h,c
  2845   0014DE  50DF               	movf	indf2,w,c
  2846   0014E0  ECA1  F00A         	call	_Lcd_Write_Char
  2847   0014E4  4A08               	infsnz	Lcd_Write_String@i^0,f,c
  2848   0014E6  2A09               	incf	(Lcd_Write_String@i+1)^0,f,c
  2849   0014E8                     l2469:
  2850   0014E8  5008               	movf	Lcd_Write_String@i^0,w,c
  2851   0014EA  2406               	addwf	Lcd_Write_String@a^0,w,c
  2852   0014EC  6ED9               	movwf	fsr2l,c
  2853   0014EE  5009               	movf	(Lcd_Write_String@i+1)^0,w,c
  2854   0014F0  2007               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2855   0014F2  6EDA               	movwf	fsr2h,c
  2856   0014F4  50DF               	movf	indf2,w,c
  2857   0014F6  A4D8               	btfss	status,2,c
  2858   0014F8  EF80  F00A         	goto	u1491
  2859   0014FC  EF82  F00A         	goto	u1490
  2860   001500                     u1491:
  2861   001500  EF69  F00A         	goto	l2465
  2862   001504                     u1490:
  2863   001504  0012               	return		;funcret
  2864   001506                     __end_of_Lcd_Write_String:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _Lcd_Write_Char *****************
  2868 ;; Defined at:
  2869 ;;		line 96 in file "lib_pic/lcd_2x16.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  a               1    wreg     unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  a               1    4[COMRAM] unsigned char 
  2874 ;;  y               1    3[COMRAM] unsigned char 
  2875 ;;  temp            1    2[COMRAM] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0
  2886 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2888 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2889 ;;Total ram usage:        3 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 2
  2892 ;; This function calls:
  2893 ;;		_Lcd_Port
  2894 ;; This function is called by:
  2895 ;;		_Lcd_Write_String
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text17
  2900   001542                     __ptext17:
  2901                           	callstack 0
  2902   001542                     _Lcd_Write_Char:
  2903                           	callstack 26
  2904                           
  2905                           ;incstack = 0
  2906                           ;Lcd_Write_Char@a stored from wreg
  2907   001542  6E05               	movwf	Lcd_Write_Char@a^0,c
  2908   001544                     
  2909                           ;lib_pic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);lib_pic/lcd_2x16.c: 97: {;
      +                          lib_pic/lcd_2x16.c: 98:    char temp,y;;lib_pic/lcd_2x16.c: 99:    temp = a&0x0F;
  2910   001544  5005               	movf	Lcd_Write_Char@a^0,w,c
  2911   001546  0B0F               	andlw	15
  2912   001548  6E03               	movwf	Lcd_Write_Char@temp^0,c
  2913                           
  2914                           ;lib_pic/lcd_2x16.c: 100:    y = a&0xF0;
  2915   00154A  5005               	movf	Lcd_Write_Char@a^0,w,c
  2916   00154C  0BF0               	andlw	240
  2917   00154E  6E04               	movwf	Lcd_Write_Char@y^0,c
  2918   001550                     
  2919                           ;lib_pic/lcd_2x16.c: 101:    PORTD |= (1<<2);
  2920   001550  8483               	bsf	131,2,c	;volatile
  2921   001552                     
  2922                           ;lib_pic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  2923   001552  3804               	swapf	Lcd_Write_Char@y^0,w,c
  2924   001554  0B0F               	andlw	15
  2925   001556  EC7F  F009         	call	_Lcd_Port
  2926   00155A                     
  2927                           ;lib_pic/lcd_2x16.c: 103:    PORTD |= (1<<3);
  2928   00155A  8683               	bsf	131,3,c	;volatile
  2929   00155C                     
  2930                           ;lib_pic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  2931   00155C  0E1A               	movlw	26
  2932   00155E                     u1877:
  2933   00155E  2EE8               	decfsz	wreg,f,c
  2934   001560  D7FE               	bra	u1877
  2935   001562  D000               	nop2	
  2936   001564                     
  2937                           ;lib_pic/lcd_2x16.c: 105:    PORTD &= ~(1<<3);
  2938   001564  9683               	bcf	131,3,c	;volatile
  2939                           
  2940                           ;lib_pic/lcd_2x16.c: 106:    Lcd_Port(temp);
  2941   001566  5003               	movf	Lcd_Write_Char@temp^0,w,c
  2942   001568  EC7F  F009         	call	_Lcd_Port
  2943   00156C                     
  2944                           ;lib_pic/lcd_2x16.c: 107:    PORTD |= (1<<3);
  2945   00156C  8683               	bsf	131,3,c	;volatile
  2946   00156E                     
  2947                           ;lib_pic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(8000000UL/4000000.0)));
  2948   00156E  0E1A               	movlw	26
  2949   001570                     u1887:
  2950   001570  2EE8               	decfsz	wreg,f,c
  2951   001572  D7FE               	bra	u1887
  2952   001574  D000               	nop2	
  2953   001576                     
  2954                           ;lib_pic/lcd_2x16.c: 109:    PORTD &= ~(1<<3);
  2955   001576  9683               	bcf	131,3,c	;volatile
  2956   001578  0012               	return		;funcret
  2957   00157A                     __end_of_Lcd_Write_Char:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _Lcd_Set_Cursor *****************
  2961 ;; Defined at:
  2962 ;;		line 50 in file "lib_pic/lcd_2x16.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  a               1    wreg     unsigned char 
  2965 ;;  b               1    4[COMRAM] unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  a               1    5[COMRAM] unsigned char 
  2968 ;;  temp            1    8[COMRAM] unsigned char 
  2969 ;;  y               1    7[COMRAM] unsigned char 
  2970 ;;  z               1    6[COMRAM] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2980 ;;      Params:         1       0       0       0       0       0       0       0       0
  2981 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2983 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2984 ;;Total ram usage:        5 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 3
  2987 ;; This function calls:
  2988 ;;		_Lcd_Cmd
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;;		_Print_Hour
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text18
  2996   001298                     __ptext18:
  2997                           	callstack 0
  2998   001298                     _Lcd_Set_Cursor:
  2999                           	callstack 26
  3000                           
  3001                           ;incstack = 0
  3002                           ;Lcd_Set_Cursor@a stored from wreg
  3003   001298  6E06               	movwf	Lcd_Set_Cursor@a^0,c
  3004   00129A                     
  3005                           ;lib_pic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/l
      +                          cd_2x16.c: 51: {;lib_pic/lcd_2x16.c: 52:  char temp,z,y;;lib_pic/lcd_2x16.c: 53:  if(a =
      +                          = 1)
  3006   00129A  0406               	decf	Lcd_Set_Cursor@a^0,w,c
  3007   00129C  A4D8               	btfss	status,2,c
  3008   00129E  EF53  F009         	goto	u1471
  3009   0012A2  EF55  F009         	goto	u1470
  3010   0012A6                     u1471:
  3011   0012A6  EF66  F009         	goto	l2443
  3012   0012AA                     u1470:
  3013   0012AA                     
  3014                           ;lib_pic/lcd_2x16.c: 54:  {;lib_pic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  3015   0012AA  5005               	movf	Lcd_Set_Cursor@b^0,w,c
  3016   0012AC  0F7F               	addlw	127
  3017   0012AE  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  3018                           
  3019                           ;lib_pic/lcd_2x16.c: 56:   z = temp>>4;
  3020   0012B0  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3021   0012B2  0B0F               	andlw	15
  3022   0012B4  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  3023                           
  3024                           ;lib_pic/lcd_2x16.c: 57:   y = temp & 0x0F;
  3025   0012B6  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  3026   0012B8  0B0F               	andlw	15
  3027   0012BA  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  3028   0012BC                     
  3029                           ;lib_pic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  3030   0012BC  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  3031   0012BE  ECE6  F00A         	call	_Lcd_Cmd
  3032   0012C2                     
  3033                           ;lib_pic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  3034   0012C2  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  3035   0012C4  ECE6  F00A         	call	_Lcd_Cmd
  3036                           
  3037                           ;lib_pic/lcd_2x16.c: 60:  }
  3038   0012C8  EF7E  F009         	goto	l317
  3039   0012CC                     l2443:
  3040   0012CC  0E02               	movlw	2
  3041   0012CE  1806               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3042   0012D0  A4D8               	btfss	status,2,c
  3043   0012D2  EF6D  F009         	goto	u1481
  3044   0012D6  EF6F  F009         	goto	u1480
  3045   0012DA                     u1481:
  3046   0012DA  EF7E  F009         	goto	l317
  3047   0012DE                     u1480:
  3048   0012DE                     
  3049                           ;lib_pic/lcd_2x16.c: 62:  {;lib_pic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  3050   0012DE  5005               	movf	Lcd_Set_Cursor@b^0,w,c
  3051   0012E0  0FBF               	addlw	191
  3052   0012E2  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  3053                           
  3054                           ;lib_pic/lcd_2x16.c: 64:   z = temp>>4;
  3055   0012E4  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3056   0012E6  0B0F               	andlw	15
  3057   0012E8  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  3058                           
  3059                           ;lib_pic/lcd_2x16.c: 65:   y = temp & 0x0F;
  3060   0012EA  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  3061   0012EC  0B0F               	andlw	15
  3062   0012EE  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  3063   0012F0                     
  3064                           ;lib_pic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  3065   0012F0  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  3066   0012F2  ECE6  F00A         	call	_Lcd_Cmd
  3067   0012F6                     
  3068                           ;lib_pic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  3069   0012F6  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  3070   0012F8  ECE6  F00A         	call	_Lcd_Cmd
  3071   0012FC                     l317:
  3072   0012FC  0012               	return		;funcret
  3073   0012FE                     __end_of_Lcd_Set_Cursor:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function _Lcd_Clear *****************
  3077 ;; Defined at:
  3078 ;;		line 43 in file "lib_pic/lcd_2x16.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3095 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3096 ;;Total ram usage:        0 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 3
  3099 ;; This function calls:
  3100 ;;		_Lcd_Cmd
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text19
  3107   00168A                     __ptext19:
  3108                           	callstack 0
  3109   00168A                     _Lcd_Clear:
  3110                           	callstack 27
  3111   00168A                     
  3112                           ;lib_pic/lcd_2x16.c: 45:  Lcd_Cmd(0);
  3113   00168A  0E00               	movlw	0
  3114   00168C  ECE6  F00A         	call	_Lcd_Cmd
  3115                           
  3116                           ;lib_pic/lcd_2x16.c: 46:  Lcd_Cmd(1);
  3117   001690  0E01               	movlw	1
  3118   001692  ECE6  F00A         	call	_Lcd_Cmd
  3119   001696  0012               	return		;funcret
  3120   001698                     __end_of_Lcd_Clear:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function _Hardware_Init *****************
  3124 ;; Defined at:
  3125 ;;		line 159 in file "Gpio_Lcd_Buzzer.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3139 ;;      Params:         0       0       0       0       0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3143 ;;Total ram usage:        0 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 4
  3146 ;; This function calls:
  3147 ;;		_INTERRUPT_Global_Config
  3148 ;;		_INTERRUPT_INTx_Config
  3149 ;;		_Lcd_Init
  3150 ;;		_OSCILADOR_Init
  3151 ;;		_PORT_Init
  3152 ;;		_TMR0_Temporizador_Init
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text20
  3159   00160A                     __ptext20:
  3160                           	callstack 0
  3161   00160A                     _Hardware_Init:
  3162                           	callstack 26
  3163   00160A                     
  3164                           ;Gpio_Lcd_Buzzer.c: 160:     OSCILADOR_Init();
  3165   00160A  EC33  F00B         	call	_OSCILADOR_Init	;wreg free
  3166                           
  3167                           ;Gpio_Lcd_Buzzer.c: 161:     PORT_Init();
  3168   00160E  EC12  F00B         	call	_PORT_Init	;wreg free
  3169   001612                     
  3170                           ;Gpio_Lcd_Buzzer.c: 162:     Lcd_Init();
  3171   001612  EC10  F009         	call	_Lcd_Init	;wreg free
  3172   001616                     
  3173                           ;Gpio_Lcd_Buzzer.c: 163:     TMR0_Temporizador_Init();
  3174   001616  ECF6  F00A         	call	_TMR0_Temporizador_Init	;wreg free
  3175   00161A                     
  3176                           ;Gpio_Lcd_Buzzer.c: 164:     INTERRUPT_Global_Config();
  3177   00161A  EC4C  F00B         	call	_INTERRUPT_Global_Config	;wreg free
  3178   00161E                     
  3179                           ;Gpio_Lcd_Buzzer.c: 165:     INTERRUPT_INTx_Config();
  3180   00161E  EC29  F00B         	call	_INTERRUPT_INTx_Config	;wreg free
  3181   001622  0012               	return		;funcret
  3182   001624                     __end_of_Hardware_Init:
  3183                           	callstack 0
  3184                           
  3185 ;; *************** function _TMR0_Temporizador_Init *****************
  3186 ;; Defined at:
  3187 ;;		line 177 in file "Gpio_Lcd_Buzzer.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3201 ;;      Params:         0       0       0       0       0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_Hardware_Init
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text21
  3216   0015EC                     __ptext21:
  3217                           	callstack 0
  3218   0015EC                     _TMR0_Temporizador_Init:
  3219                           	callstack 28
  3220   0015EC                     
  3221                           ;Gpio_Lcd_Buzzer.c: 178:     T0CONbits.T08BIT = 0;
  3222   0015EC  9CD5               	bcf	213,6,c	;volatile
  3223                           
  3224                           ;Gpio_Lcd_Buzzer.c: 179:     T0CONbits.T0CS = 0;
  3225   0015EE  9AD5               	bcf	213,5,c	;volatile
  3226                           
  3227                           ;Gpio_Lcd_Buzzer.c: 180:     T0CONbits.PSA = 0;
  3228   0015F0  96D5               	bcf	213,3,c	;volatile
  3229   0015F2                     
  3230                           ;Gpio_Lcd_Buzzer.c: 181:     T0CONbits.T0PS = 0b101;
  3231   0015F2  50D5               	movf	213,w,c	;volatile
  3232   0015F4  0BF8               	andlw	-8
  3233   0015F6  0905               	iorlw	5
  3234   0015F8  6ED5               	movwf	213,c	;volatile
  3235                           
  3236                           ;Gpio_Lcd_Buzzer.c: 184:     TMR0 = 3036;
  3237   0015FA  0E0B               	movlw	11
  3238   0015FC  6ED7               	movwf	215,c	;volatile
  3239   0015FE  0EDC               	movlw	220
  3240   001600  6ED6               	movwf	214,c	;volatile
  3241   001602                     
  3242                           ;Gpio_Lcd_Buzzer.c: 187:     INTCONbits.TMR0IE = 1;
  3243   001602  8AF2               	bsf	242,5,c	;volatile
  3244   001604                     
  3245                           ;Gpio_Lcd_Buzzer.c: 188:     INTCONbits.TMR0IF = 0;
  3246   001604  94F2               	bcf	242,2,c	;volatile
  3247   001606                     
  3248                           ;Gpio_Lcd_Buzzer.c: 191:     T0CONbits.TMR0ON = 0;
  3249   001606  9ED5               	bcf	213,7,c	;volatile
  3250   001608  0012               	return		;funcret
  3251   00160A                     __end_of_TMR0_Temporizador_Init:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _PORT_Init *****************
  3255 ;; Defined at:
  3256 ;;		line 139 in file "Gpio_Lcd_Buzzer.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_Hardware_Init
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text22
  3285   001624                     __ptext22:
  3286                           	callstack 0
  3287   001624                     _PORT_Init:
  3288                           	callstack 28
  3289   001624                     
  3290                           ;Gpio_Lcd_Buzzer.c: 141:     ANSELD = 0x00;
  3291   001624  0E00               	movlw	0
  3292   001626  010F               	movlb	15	; () banked
  3293   001628  6F5E               	movwf	94,b	;volatile
  3294   00162A                     
  3295                           ; BSR set to: 15
  3296                           ;Gpio_Lcd_Buzzer.c: 144:     ANSELBbits.ANSB0 = 0;
  3297   00162A  915C               	bcf	92,0,b	;volatile
  3298   00162C                     
  3299                           ; BSR set to: 15
  3300                           ;Gpio_Lcd_Buzzer.c: 145:     TRISBbits.RB0 = 1;
  3301   00162C  8093               	bsf	147,0,c	;volatile
  3302   00162E                     
  3303                           ; BSR set to: 15
  3304                           ;Gpio_Lcd_Buzzer.c: 146:     ANSELBbits.ANSB1 = 0;
  3305   00162E  935C               	bcf	92,1,b	;volatile
  3306   001630                     
  3307                           ; BSR set to: 15
  3308                           ;Gpio_Lcd_Buzzer.c: 147:     TRISBbits.RB1 = 1;
  3309   001630  8293               	bsf	147,1,c	;volatile
  3310   001632                     
  3311                           ; BSR set to: 15
  3312                           ;Gpio_Lcd_Buzzer.c: 148:     ANSELBbits.ANSB2 = 0;
  3313   001632  955C               	bcf	92,2,b	;volatile
  3314   001634                     
  3315                           ; BSR set to: 15
  3316                           ;Gpio_Lcd_Buzzer.c: 149:     TRISBbits.RB2 = 1;
  3317   001634  8493               	bsf	147,2,c	;volatile
  3318   001636                     
  3319                           ; BSR set to: 15
  3320                           ;Gpio_Lcd_Buzzer.c: 152:     ANSELEbits.ANSE2 = 0;
  3321   001636  955F               	bcf	95,2,b	;volatile
  3322   001638                     
  3323                           ; BSR set to: 15
  3324                           ;Gpio_Lcd_Buzzer.c: 153:     TRISEbits.RE2 = 0;
  3325   001638  9496               	bcf	150,2,c	;volatile
  3326   00163A                     
  3327                           ; BSR set to: 15
  3328   00163A  0012               	return		;funcret
  3329   00163C                     __end_of_PORT_Init:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _OSCILADOR_Init *****************
  3333 ;; Defined at:
  3334 ;;		line 5 in file "lib_pic/configDevice.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 1
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_Hardware_Init
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text23
  3363   001666                     __ptext23:
  3364                           	callstack 0
  3365   001666                     _OSCILADOR_Init:
  3366                           	callstack 28
  3367   001666                     
  3368                           ;lib_pic/configDevice.c: 9:     OSCCONbits.IRCF = 0b110;
  3369   001666  50D3               	movf	211,w,c	;volatile
  3370   001668  0B8F               	andlw	-113
  3371   00166A  0960               	iorlw	96
  3372   00166C  6ED3               	movwf	211,c	;volatile
  3373                           
  3374                           ;lib_pic/configDevice.c: 10:     OSCCONbits.SCS = 0b10;
  3375   00166E  50D3               	movf	211,w,c	;volatile
  3376   001670  0BFC               	andlw	-4
  3377   001672  0902               	iorlw	2
  3378   001674  6ED3               	movwf	211,c	;volatile
  3379   001676  0012               	return		;funcret
  3380   001678                     __end_of_OSCILADOR_Init:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _Lcd_Init *****************
  3384 ;; Defined at:
  3385 ;;		line 72 in file "lib_pic/lcd_2x16.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3402 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 3
  3406 ;; This function calls:
  3407 ;;		_Lcd_Cmd
  3408 ;;		_Lcd_Port
  3409 ;; This function is called by:
  3410 ;;		_Hardware_Init
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text24
  3415   001220                     __ptext24:
  3416                           	callstack 0
  3417   001220                     _Lcd_Init:
  3418                           	callstack 26
  3419   001220                     
  3420                           ;lib_pic/lcd_2x16.c: 75:  TRISD &= ~(0xF0);
  3421   001220  0E0F               	movlw	15
  3422   001222  1695               	andwf	149,f,c	;volatile
  3423                           
  3424                           ;lib_pic/lcd_2x16.c: 76:  TRISD &= ~((1<<3)|(1<<2));
  3425   001224  0EF3               	movlw	243
  3426   001226  1695               	andwf	149,f,c	;volatile
  3427   001228                     
  3428                           ;lib_pic/lcd_2x16.c: 78:  Lcd_Port(0x00);
  3429   001228  0E00               	movlw	0
  3430   00122A  EC7F  F009         	call	_Lcd_Port
  3431   00122E                     
  3432                           ;lib_pic/lcd_2x16.c: 79:  _delay((unsigned long)((20)*(8000000UL/4000.0)));
  3433   00122E  0E34               	movlw	52
  3434   001230  6E05               	movwf	??_Lcd_Init^0,c
  3435   001232  0EF2               	movlw	242
  3436   001234                     u1897:
  3437   001234  2EE8               	decfsz	wreg,f,c
  3438   001236  D7FE               	bra	u1897
  3439   001238  2E05               	decfsz	??_Lcd_Init^0,f,c
  3440   00123A  D7FC               	bra	u1897
  3441   00123C                     
  3442                           ;lib_pic/lcd_2x16.c: 80:  Lcd_Cmd(0x03);
  3443   00123C  0E03               	movlw	3
  3444   00123E  ECE6  F00A         	call	_Lcd_Cmd
  3445   001242                     
  3446                           ;lib_pic/lcd_2x16.c: 81:  _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3447   001242  0E0D               	movlw	13
  3448   001244  6E05               	movwf	??_Lcd_Init^0,c
  3449   001246  0EFC               	movlw	252
  3450   001248                     u1907:
  3451   001248  2EE8               	decfsz	wreg,f,c
  3452   00124A  D7FE               	bra	u1907
  3453   00124C  2E05               	decfsz	??_Lcd_Init^0,f,c
  3454   00124E  D7FC               	bra	u1907
  3455   001250                     
  3456                           ;lib_pic/lcd_2x16.c: 82:  Lcd_Cmd(0x03);
  3457   001250  0E03               	movlw	3
  3458   001252  ECE6  F00A         	call	_Lcd_Cmd
  3459   001256                     
  3460                           ;lib_pic/lcd_2x16.c: 83:  _delay((unsigned long)((11)*(8000000UL/4000.0)));
  3461   001256  0E1D               	movlw	29
  3462   001258  6E05               	movwf	??_Lcd_Init^0,c
  3463   00125A  0E91               	movlw	145
  3464   00125C                     u1917:
  3465   00125C  2EE8               	decfsz	wreg,f,c
  3466   00125E  D7FE               	bra	u1917
  3467   001260  2E05               	decfsz	??_Lcd_Init^0,f,c
  3468   001262  D7FC               	bra	u1917
  3469   001264  F000               	nop	
  3470   001266                     
  3471                           ;lib_pic/lcd_2x16.c: 84:  Lcd_Cmd(0x03);
  3472   001266  0E03               	movlw	3
  3473   001268  ECE6  F00A         	call	_Lcd_Cmd
  3474   00126C                     
  3475                           ;lib_pic/lcd_2x16.c: 86:  Lcd_Cmd(0x02);
  3476   00126C  0E02               	movlw	2
  3477   00126E  ECE6  F00A         	call	_Lcd_Cmd
  3478   001272                     
  3479                           ;lib_pic/lcd_2x16.c: 87:  Lcd_Cmd(0x02);
  3480   001272  0E02               	movlw	2
  3481   001274  ECE6  F00A         	call	_Lcd_Cmd
  3482   001278                     
  3483                           ;lib_pic/lcd_2x16.c: 88:  Lcd_Cmd(0x08);
  3484   001278  0E08               	movlw	8
  3485   00127A  ECE6  F00A         	call	_Lcd_Cmd
  3486   00127E                     
  3487                           ;lib_pic/lcd_2x16.c: 89:  Lcd_Cmd(0x00);
  3488   00127E  0E00               	movlw	0
  3489   001280  ECE6  F00A         	call	_Lcd_Cmd
  3490   001284                     
  3491                           ;lib_pic/lcd_2x16.c: 90:  Lcd_Cmd(0x0C);
  3492   001284  0E0C               	movlw	12
  3493   001286  ECE6  F00A         	call	_Lcd_Cmd
  3494   00128A                     
  3495                           ;lib_pic/lcd_2x16.c: 91:  Lcd_Cmd(0x00);
  3496   00128A  0E00               	movlw	0
  3497   00128C  ECE6  F00A         	call	_Lcd_Cmd
  3498   001290                     
  3499                           ;lib_pic/lcd_2x16.c: 92:  Lcd_Cmd(0x06);
  3500   001290  0E06               	movlw	6
  3501   001292  ECE6  F00A         	call	_Lcd_Cmd
  3502   001296  0012               	return		;funcret
  3503   001298                     __end_of_Lcd_Init:
  3504                           	callstack 0
  3505                           
  3506 ;; *************** function _Lcd_Cmd *****************
  3507 ;; Defined at:
  3508 ;;		line 33 in file "lib_pic/lcd_2x16.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  a               1    wreg     unsigned char 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  a               1    3[COMRAM] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0
  3523 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3524 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3525 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3526 ;;Total ram usage:        2 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 2
  3529 ;; This function calls:
  3530 ;;		_Lcd_Port
  3531 ;; This function is called by:
  3532 ;;		_Lcd_Clear
  3533 ;;		_Lcd_Set_Cursor
  3534 ;;		_Lcd_Init
  3535 ;;		_Lcd_Shift_Right
  3536 ;;		_Lcd_Shift_Left
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text25
  3541   0015CC                     __ptext25:
  3542                           	callstack 0
  3543   0015CC                     _Lcd_Cmd:
  3544                           	callstack 26
  3545                           
  3546                           ;incstack = 0
  3547                           ;Lcd_Cmd@a stored from wreg
  3548   0015CC  6E04               	movwf	Lcd_Cmd@a^0,c
  3549   0015CE                     
  3550                           ;lib_pic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd_2x16.c: 34: {;lib_pic
      +                          /lcd_2x16.c: 35:  PORTD &= ~(1<<2);
  3551   0015CE  9483               	bcf	131,2,c	;volatile
  3552   0015D0                     
  3553                           ;lib_pic/lcd_2x16.c: 36:  Lcd_Port(a);
  3554   0015D0  5004               	movf	Lcd_Cmd@a^0,w,c
  3555   0015D2  EC7F  F009         	call	_Lcd_Port
  3556   0015D6                     
  3557                           ;lib_pic/lcd_2x16.c: 37:  PORTD |= (1<<3);
  3558   0015D6  8683               	bsf	131,3,c	;volatile
  3559   0015D8                     
  3560                           ;lib_pic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(8000000UL/4000.0)));
  3561   0015D8  0E0B               	movlw	11
  3562   0015DA  6E03               	movwf	??_Lcd_Cmd^0,c
  3563   0015DC  0E62               	movlw	98
  3564   0015DE                     u1927:
  3565   0015DE  2EE8               	decfsz	wreg,f,c
  3566   0015E0  D7FE               	bra	u1927
  3567   0015E2  2E03               	decfsz	??_Lcd_Cmd^0,f,c
  3568   0015E4  D7FC               	bra	u1927
  3569   0015E6  D000               	nop2	
  3570   0015E8                     
  3571                           ;lib_pic/lcd_2x16.c: 39:  PORTD &= ~(1<<3);
  3572   0015E8  9683               	bcf	131,3,c	;volatile
  3573   0015EA  0012               	return		;funcret
  3574   0015EC                     __end_of_Lcd_Cmd:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _Lcd_Port *****************
  3578 ;; Defined at:
  3579 ;;		line 5 in file "lib_pic/lcd_2x16.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  a               1    wreg     unsigned char 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  a               1    1[COMRAM] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0
  3594 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3596 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3597 ;;Total ram usage:        1 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; Hardware stack levels required when called: 1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_Lcd_Cmd
  3604 ;;		_Lcd_Init
  3605 ;;		_Lcd_Write_Char
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text26
  3610   0012FE                     __ptext26:
  3611                           	callstack 0
  3612   0012FE                     _Lcd_Port:
  3613                           	callstack 26
  3614                           
  3615                           ;incstack = 0
  3616                           ;Lcd_Port@a stored from wreg
  3617   0012FE  6E02               	movwf	Lcd_Port@a^0,c
  3618   001300                     
  3619                           ;lib_pic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd_2x16.c: 6: {;lib_pic/
      +                          lcd_2x16.c: 7:  if(a & 1)
  3620   001300  A002               	btfss	Lcd_Port@a^0,0,c
  3621   001302  EF85  F009         	goto	u1361
  3622   001306  EF87  F009         	goto	u1360
  3623   00130A                     u1361:
  3624   00130A  EF8A  F009         	goto	l2307
  3625   00130E                     u1360:
  3626   00130E                     
  3627                           ;lib_pic/lcd_2x16.c: 9:   LATD |= (1<<4);
  3628   00130E  888C               	bsf	140,4,c	;volatile
  3629   001310  EF8B  F009         	goto	l2309
  3630   001314                     l2307:
  3631                           
  3632                           ;lib_pic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  3633   001314  988C               	bcf	140,4,c	;volatile
  3634   001316                     l2309:
  3635                           
  3636                           ;lib_pic/lcd_2x16.c: 13:  if(a & 2)
  3637   001316  A202               	btfss	Lcd_Port@a^0,1,c
  3638   001318  EF90  F009         	goto	u1371
  3639   00131C  EF92  F009         	goto	u1370
  3640   001320                     u1371:
  3641   001320  EF95  F009         	goto	l2313
  3642   001324                     u1370:
  3643   001324                     
  3644                           ;lib_pic/lcd_2x16.c: 15:   LATD |= (1<<5);
  3645   001324  8A8C               	bsf	140,5,c	;volatile
  3646   001326  EF96  F009         	goto	l2315
  3647   00132A                     l2313:
  3648                           
  3649                           ;lib_pic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  3650   00132A  9A8C               	bcf	140,5,c	;volatile
  3651   00132C                     l2315:
  3652                           
  3653                           ;lib_pic/lcd_2x16.c: 19:  if(a & 4)
  3654   00132C  A402               	btfss	Lcd_Port@a^0,2,c
  3655   00132E  EF9B  F009         	goto	u1381
  3656   001332  EF9D  F009         	goto	u1380
  3657   001336                     u1381:
  3658   001336  EFA0  F009         	goto	l2319
  3659   00133A                     u1380:
  3660   00133A                     
  3661                           ;lib_pic/lcd_2x16.c: 21:   LATD |= (1<<6);
  3662   00133A  8C8C               	bsf	140,6,c	;volatile
  3663   00133C  EFA1  F009         	goto	l2321
  3664   001340                     l2319:
  3665                           
  3666                           ;lib_pic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  3667   001340  9C8C               	bcf	140,6,c	;volatile
  3668   001342                     l2321:
  3669                           
  3670                           ;lib_pic/lcd_2x16.c: 25:  if(a & 8)
  3671   001342  A602               	btfss	Lcd_Port@a^0,3,c
  3672   001344  EFA6  F009         	goto	u1391
  3673   001348  EFA8  F009         	goto	u1390
  3674   00134C                     u1391:
  3675   00134C  EFAB  F009         	goto	l2325
  3676   001350                     u1390:
  3677   001350                     
  3678                           ;lib_pic/lcd_2x16.c: 27:   LATD |= (1<<7);
  3679   001350  8E8C               	bsf	140,7,c	;volatile
  3680   001352  EFAC  F009         	goto	l305
  3681   001356                     l2325:
  3682                           
  3683                           ;lib_pic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  3684   001356  9E8C               	bcf	140,7,c	;volatile
  3685   001358                     l305:
  3686   001358  0012               	return		;funcret
  3687   00135A                     __end_of_Lcd_Port:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function _INTERRUPT_INTx_Config *****************
  3691 ;; Defined at:
  3692 ;;		line 196 in file "Gpio_Lcd_Buzzer.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		None
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 1
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_Hardware_Init
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text27
  3721   001652                     __ptext27:
  3722                           	callstack 0
  3723   001652                     _INTERRUPT_INTx_Config:
  3724                           	callstack 28
  3725   001652                     
  3726                           ;Gpio_Lcd_Buzzer.c: 198:     INTCONbits.INT0IE = 1;
  3727   001652  88F2               	bsf	242,4,c	;volatile
  3728                           
  3729                           ;Gpio_Lcd_Buzzer.c: 199:     INTCONbits.INT0IF = 0;
  3730   001654  92F2               	bcf	242,1,c	;volatile
  3731                           
  3732                           ;Gpio_Lcd_Buzzer.c: 200:     INTCON2bits.INTEDG0 = 0;
  3733   001656  9CF1               	bcf	241,6,c	;volatile
  3734                           
  3735                           ;Gpio_Lcd_Buzzer.c: 203:     INTCON3bits.INT1IE = 1;
  3736   001658  86F0               	bsf	240,3,c	;volatile
  3737                           
  3738                           ;Gpio_Lcd_Buzzer.c: 204:     INTCON3bits.INT1F = 0;
  3739   00165A  90F0               	bcf	240,0,c	;volatile
  3740                           
  3741                           ;Gpio_Lcd_Buzzer.c: 205:     INTCON2bits.INTEDG1 = 0;
  3742   00165C  9AF1               	bcf	241,5,c	;volatile
  3743                           
  3744                           ;Gpio_Lcd_Buzzer.c: 208:     INTCON3bits.INT2IE = 1;
  3745   00165E  88F0               	bsf	240,4,c	;volatile
  3746                           
  3747                           ;Gpio_Lcd_Buzzer.c: 209:     INTCON3bits.INT2IF = 0;
  3748   001660  92F0               	bcf	240,1,c	;volatile
  3749                           
  3750                           ;Gpio_Lcd_Buzzer.c: 210:     INTCON2bits.INTEDG2 = 0;
  3751   001662  98F1               	bcf	241,4,c	;volatile
  3752   001664  0012               	return		;funcret
  3753   001666                     __end_of_INTERRUPT_INTx_Config:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _INTERRUPT_Global_Config *****************
  3757 ;; Defined at:
  3758 ;;		line 169 in file "Gpio_Lcd_Buzzer.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		None
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3772 ;;      Params:         0       0       0       0       0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_Hardware_Init
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text28
  3787   001698                     __ptext28:
  3788                           	callstack 0
  3789   001698                     _INTERRUPT_Global_Config:
  3790                           	callstack 28
  3791   001698                     
  3792                           ;Gpio_Lcd_Buzzer.c: 170:     RCONbits.IPEN = 0;
  3793   001698  9ED0               	bcf	208,7,c	;volatile
  3794                           
  3795                           ;Gpio_Lcd_Buzzer.c: 172:     INTCONbits.GIE = 1;
  3796   00169A  8EF2               	bsf	242,7,c	;volatile
  3797                           
  3798                           ;Gpio_Lcd_Buzzer.c: 173:     INTCONbits.PEIE = 1;
  3799   00169C  8CF2               	bsf	242,6,c	;volatile
  3800   00169E  0012               	return		;funcret
  3801   0016A0                     __end_of_INTERRUPT_Global_Config:
  3802                           	callstack 0
  3803                           
  3804 ;; *************** function _RutinaServicioInterrupt *****************
  3805 ;; Defined at:
  3806 ;;		line 57 in file "Gpio_Lcd_Buzzer.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3822 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3823 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        1 bytes
  3825 ;; Hardware stack levels used: 1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		Interrupt level 2
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	intcode
  3834   000008                     __pintcode:
  3835                           	callstack 0
  3836   000008                     _RutinaServicioInterrupt:
  3837                           	callstack 21
  3838                           
  3839                           ;incstack = 0
  3840   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3841   00000A                     
  3842                           ;Gpio_Lcd_Buzzer.c: 60:     if ( INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1 ) {
  3843   00000A  AAF2               	btfss	242,5,c	;volatile
  3844   00000C  EF0A  F000         	goto	i2u161_41
  3845   000010  EF0C  F000         	goto	i2u161_40
  3846   000014                     i2u161_41:
  3847   000014  EF2F  F000         	goto	i2l2641
  3848   000018                     i2u161_40:
  3849   000018  A4F2               	btfss	242,2,c	;volatile
  3850   00001A  EF11  F000         	goto	i2u162_41
  3851   00001E  EF13  F000         	goto	i2u162_40
  3852   000022                     i2u162_41:
  3853   000022  EF2F  F000         	goto	i2l2641
  3854   000026                     i2u162_40:
  3855   000026                     
  3856                           ;Gpio_Lcd_Buzzer.c: 62:         TMR0 = 3036;
  3857   000026  0E0B               	movlw	11
  3858   000028  6ED7               	movwf	215,c	;volatile
  3859   00002A  0EDC               	movlw	220
  3860   00002C  6ED6               	movwf	214,c	;volatile
  3861   00002E                     
  3862                           ;Gpio_Lcd_Buzzer.c: 63:         INTCONbits.TMR0IF = 0;
  3863   00002E  94F2               	bcf	242,2,c	;volatile
  3864   000030                     
  3865                           ;Gpio_Lcd_Buzzer.c: 80:         seconds--;
  3866   000030  0100               	movlb	0	; () banked
  3867   000032  0765               	decf	_seconds& (0+255),f,b	;volatile
  3868   000034                     
  3869                           ; BSR set to: 0
  3870                           ;Gpio_Lcd_Buzzer.c: 81:         if ( seconds < 0 ) {
  3871   000034  BF65               	btfsc	_seconds& (0+255),7,b	;volatile
  3872   000036  EF21  F000         	goto	i2u163_40
  3873   00003A  EF1F  F000         	goto	i2u163_41
  3874   00003E                     i2u163_41:
  3875   00003E  EF2F  F000         	goto	i2l2641
  3876   000042                     i2u163_40:
  3877   000042                     
  3878                           ; BSR set to: 0
  3879                           ;Gpio_Lcd_Buzzer.c: 82:             seconds = 59;
  3880   000042  0E3B               	movlw	59
  3881   000044  6F65               	movwf	_seconds& (0+255),b	;volatile
  3882   000046                     
  3883                           ; BSR set to: 0
  3884                           ;Gpio_Lcd_Buzzer.c: 83:             minutes--;
  3885   000046  0766               	decf	_minutes& (0+255),f,b	;volatile
  3886   000048                     
  3887                           ; BSR set to: 0
  3888                           ;Gpio_Lcd_Buzzer.c: 84:             if ( minutes < 0 ) {
  3889   000048  BF66               	btfsc	_minutes& (0+255),7,b	;volatile
  3890   00004A  EF2B  F000         	goto	i2u164_40
  3891   00004E  EF29  F000         	goto	i2u164_41
  3892   000052                     i2u164_41:
  3893   000052  EF2F  F000         	goto	i2l2641
  3894   000056                     i2u164_40:
  3895   000056                     
  3896                           ; BSR set to: 0
  3897                           ;Gpio_Lcd_Buzzer.c: 85:                 minutes = 0;
  3898   000056  0E00               	movlw	0
  3899   000058  6F66               	movwf	_minutes& (0+255),b	;volatile
  3900                           
  3901                           ;Gpio_Lcd_Buzzer.c: 86:                 seconds = 0;
  3902   00005A  0E00               	movlw	0
  3903   00005C  6F65               	movwf	_seconds& (0+255),b	;volatile
  3904   00005E                     i2l2641:
  3905                           
  3906                           ;Gpio_Lcd_Buzzer.c: 92:     if ( INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1 ) {
  3907   00005E  A8F2               	btfss	242,4,c	;volatile
  3908   000060  EF34  F000         	goto	i2u165_41
  3909   000064  EF36  F000         	goto	i2u165_40
  3910   000068                     i2u165_41:
  3911   000068  EF40  F000         	goto	i2l2649
  3912   00006C                     i2u165_40:
  3913   00006C  A2F2               	btfss	242,1,c	;volatile
  3914   00006E  EF3B  F000         	goto	i2u166_41
  3915   000072  EF3D  F000         	goto	i2u166_40
  3916   000076                     i2u166_41:
  3917   000076  EF40  F000         	goto	i2l2649
  3918   00007A                     i2u166_40:
  3919   00007A                     
  3920                           ;Gpio_Lcd_Buzzer.c: 94:         minutes++;
  3921   00007A  0100               	movlb	0	; () banked
  3922   00007C  2B66               	incf	_minutes& (0+255),f,b	;volatile
  3923   00007E                     
  3924                           ; BSR set to: 0
  3925                           ;Gpio_Lcd_Buzzer.c: 97:         INTCONbits.INT0IF = 0;
  3926   00007E  92F2               	bcf	242,1,c	;volatile
  3927   000080                     i2l2649:
  3928                           
  3929                           ;Gpio_Lcd_Buzzer.c: 101:     if ( INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1 ) {
  3930   000080  A6F0               	btfss	240,3,c	;volatile
  3931   000082  EF45  F000         	goto	i2u167_41
  3932   000086  EF47  F000         	goto	i2u167_40
  3933   00008A                     i2u167_41:
  3934   00008A  EF51  F000         	goto	i2l2657
  3935   00008E                     i2u167_40:
  3936   00008E  A0F0               	btfss	240,0,c	;volatile
  3937   000090  EF4C  F000         	goto	i2u168_41
  3938   000094  EF4E  F000         	goto	i2u168_40
  3939   000098                     i2u168_41:
  3940   000098  EF51  F000         	goto	i2l2657
  3941   00009C                     i2u168_40:
  3942   00009C                     
  3943                           ;Gpio_Lcd_Buzzer.c: 103:         seconds++;
  3944   00009C  0100               	movlb	0	; () banked
  3945   00009E  2B65               	incf	_seconds& (0+255),f,b	;volatile
  3946   0000A0                     
  3947                           ; BSR set to: 0
  3948                           ;Gpio_Lcd_Buzzer.c: 106:         INTCON3bits.INT1IF = 0;
  3949   0000A0  90F0               	bcf	240,0,c	;volatile
  3950   0000A2                     i2l2657:
  3951                           
  3952                           ;Gpio_Lcd_Buzzer.c: 110:     if ( INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1 ) {
  3953   0000A2  A8F0               	btfss	240,4,c	;volatile
  3954   0000A4  EF56  F000         	goto	i2u169_41
  3955   0000A8  EF58  F000         	goto	i2u169_40
  3956   0000AC                     i2u169_41:
  3957   0000AC  EFAA  F000         	goto	i2l85
  3958   0000B0                     i2u169_40:
  3959   0000B0  A2F0               	btfss	240,1,c	;volatile
  3960   0000B2  EF5D  F000         	goto	i2u170_41
  3961   0000B6  EF5F  F000         	goto	i2u170_40
  3962   0000BA                     i2u170_41:
  3963   0000BA  EFAA  F000         	goto	i2l85
  3964   0000BE                     i2u170_40:
  3965   0000BE                     
  3966                           ;Gpio_Lcd_Buzzer.c: 112:         if ( is_pause ) {
  3967   0000BE  0100               	movlb	0	; () banked
  3968   0000C0  51C5               	movf	_is_pause& (0+255),w,b	;volatile
  3969   0000C2  B4D8               	btfsc	status,2,c
  3970   0000C4  EF66  F000         	goto	i2u171_41
  3971   0000C8  EF68  F000         	goto	i2u171_40
  3972   0000CC                     i2u171_41:
  3973   0000CC  EF8C  F000         	goto	i2l2677
  3974   0000D0                     i2u171_40:
  3975   0000D0                     
  3976                           ; BSR set to: 0
  3977                           ;Gpio_Lcd_Buzzer.c: 114:             if ( seconds == 0 && minutes == 0 ) {
  3978   0000D0  5165               	movf	_seconds& (0+255),w,b	;volatile
  3979   0000D2  A4D8               	btfss	status,2,c
  3980   0000D4  EF6E  F000         	goto	i2u172_41
  3981   0000D8  EF70  F000         	goto	i2u172_40
  3982   0000DC                     i2u172_41:
  3983   0000DC  EF7E  F000         	goto	i2l2669
  3984   0000E0                     i2u172_40:
  3985   0000E0                     
  3986                           ; BSR set to: 0
  3987   0000E0  5166               	movf	_minutes& (0+255),w,b	;volatile
  3988   0000E2  A4D8               	btfss	status,2,c
  3989   0000E4  EF76  F000         	goto	i2u173_41
  3990   0000E8  EF78  F000         	goto	i2u173_40
  3991   0000EC                     i2u173_41:
  3992   0000EC  EF7E  F000         	goto	i2l2669
  3993   0000F0                     i2u173_40:
  3994   0000F0                     
  3995                           ; BSR set to: 0
  3996                           ;Gpio_Lcd_Buzzer.c: 115:                 minutes = 0;
  3997   0000F0  0E00               	movlw	0
  3998   0000F2  6F66               	movwf	_minutes& (0+255),b	;volatile
  3999                           
  4000                           ;Gpio_Lcd_Buzzer.c: 116:                 seconds = 0;
  4001   0000F4  0E00               	movlw	0
  4002   0000F6  6F65               	movwf	_seconds& (0+255),b	;volatile
  4003                           
  4004                           ;Gpio_Lcd_Buzzer.c: 117:             }
  4005   0000F8  EF8C  F000         	goto	i2l2677
  4006   0000FC                     i2l2669:
  4007                           
  4008                           ; BSR set to: 0
  4009   0000FC  5165               	movf	_seconds& (0+255),w,b	;volatile
  4010   0000FE  A4D8               	btfss	status,2,c
  4011   000100  EF84  F000         	goto	i2u174_41
  4012   000104  EF86  F000         	goto	i2u174_40
  4013   000108                     i2u174_41:
  4014   000108  EF8B  F000         	goto	i2l2675
  4015   00010C                     i2u174_40:
  4016   00010C                     
  4017                           ; BSR set to: 0
  4018                           ;Gpio_Lcd_Buzzer.c: 119:                 seconds = 59;
  4019   00010C  0E3B               	movlw	59
  4020   00010E  6F65               	movwf	_seconds& (0+255),b	;volatile
  4021   000110                     
  4022                           ; BSR set to: 0
  4023                           ;Gpio_Lcd_Buzzer.c: 120:                 minutes--;
  4024   000110  0766               	decf	_minutes& (0+255),f,b	;volatile
  4025                           
  4026                           ;Gpio_Lcd_Buzzer.c: 121:             }
  4027   000112  EF8C  F000         	goto	i2l2677
  4028   000116                     i2l2675:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;Gpio_Lcd_Buzzer.c: 123:                 seconds--;
  4032   000116  0765               	decf	_seconds& (0+255),f,b	;volatile
  4033   000118                     i2l2677:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;Gpio_Lcd_Buzzer.c: 127:         is_pause = !is_pause;
  4037   000118  51C5               	movf	_is_pause& (0+255),w,b	;volatile
  4038   00011A  B4D8               	btfsc	status,2,c
  4039   00011C  EF92  F000         	goto	i2u175_41
  4040   000120  EF95  F000         	goto	i2u175_40
  4041   000124                     i2u175_41:
  4042   000124  0E01               	movlw	1
  4043   000126  EF96  F000         	goto	i2u176_40
  4044   00012A                     i2u175_40:
  4045   00012A  0E00               	movlw	0
  4046   00012C                     i2u176_40:
  4047   00012C  6FC5               	movwf	_is_pause& (0+255),b	;volatile
  4048   00012E                     
  4049                           ; BSR set to: 0
  4050                           ;Gpio_Lcd_Buzzer.c: 129:         T0CONbits.TMR0ON = ~T0CONbits.TMR0ON;
  4051   00012E  BED5               	btfsc	213,7,c	;volatile
  4052   000130  EF9C  F000         	goto	i2u177_41
  4053   000134  EF9F  F000         	goto	i2u177_40
  4054   000138                     i2u177_41:
  4055   000138  0E01               	movlw	1
  4056   00013A  EFA0  F000         	goto	i2u177_46
  4057   00013E                     i2u177_40:
  4058   00013E  0E00               	movlw	0
  4059   000140                     i2u177_46:
  4060   000140  0AFF               	xorlw	255
  4061   000142  6E01               	movwf	??_RutinaServicioInterrupt^0,c
  4062   000144  3201               	rrcf	??_RutinaServicioInterrupt^0,f,c
  4063   000146  3201               	rrcf	??_RutinaServicioInterrupt^0,f,c
  4064   000148  50D5               	movf	213,w,c	;volatile
  4065   00014A  1801               	xorwf	??_RutinaServicioInterrupt^0,w,c
  4066   00014C  0B7F               	andlw	-129
  4067   00014E  1801               	xorwf	??_RutinaServicioInterrupt^0,w,c
  4068   000150  6ED5               	movwf	213,c	;volatile
  4069   000152                     
  4070                           ; BSR set to: 0
  4071                           ;Gpio_Lcd_Buzzer.c: 132:         INTCON3bits.INT2IF = 0;
  4072   000152  92F0               	bcf	240,1,c	;volatile
  4073   000154                     i2l85:
  4074   000154  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4075   000156  0011               	retfie		f
  4076   000158                     __end_of_RutinaServicioInterrupt:
  4077                           	callstack 0
  4078                           
  4079                           	psect	rparam
  4080   000000                     
  4081                           	psect	temp
  4082   00005D                     btemp:
  4083                           	callstack 0
  4084   00005D                     	ds	1
  4085   000000                     int$flags	set	btemp
  4086   000000                     wtemp8	set	btemp+1
  4087   000000                     ttemp5	set	btemp+1
  4088   000000                     ttemp6	set	btemp+4
  4089   000000                     ttemp7	set	btemp+8
  4090                           
  4091                           	psect	idloc
  4092                           
  4093                           ;Config register IDLOC0 @ 0x200000
  4094                           ;	unspecified, using default values
  4095   200000                     	org	2097152
  4096   200000  FF                 	db	255
  4097                           
  4098                           ;Config register IDLOC1 @ 0x200001
  4099                           ;	unspecified, using default values
  4100   200001                     	org	2097153
  4101   200001  FF                 	db	255
  4102                           
  4103                           ;Config register IDLOC2 @ 0x200002
  4104                           ;	unspecified, using default values
  4105   200002                     	org	2097154
  4106   200002  FF                 	db	255
  4107                           
  4108                           ;Config register IDLOC3 @ 0x200003
  4109                           ;	unspecified, using default values
  4110   200003                     	org	2097155
  4111   200003  FF                 	db	255
  4112                           
  4113                           ;Config register IDLOC4 @ 0x200004
  4114                           ;	unspecified, using default values
  4115   200004                     	org	2097156
  4116   200004  FF                 	db	255
  4117                           
  4118                           ;Config register IDLOC5 @ 0x200005
  4119                           ;	unspecified, using default values
  4120   200005                     	org	2097157
  4121   200005  FF                 	db	255
  4122                           
  4123                           ;Config register IDLOC6 @ 0x200006
  4124                           ;	unspecified, using default values
  4125   200006                     	org	2097158
  4126   200006  FF                 	db	255
  4127                           
  4128                           ;Config register IDLOC7 @ 0x200007
  4129                           ;	unspecified, using default values
  4130   200007                     	org	2097159
  4131   200007  FF                 	db	255
  4132                           
  4133                           	psect	config
  4134                           
  4135                           ;Config register CONFIG1L @ 0x300000
  4136                           ;	PLL Selection
  4137                           ;	PLLSEL = PLL4X, 4x clock multiplier
  4138                           ;	PLL Enable Configuration bit
  4139                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  4140                           ;	CPU System Clock Postscaler
  4141                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4142                           ;	Low Speed USB mode with 48 MHz system clock
  4143                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  4144   300000                     	org	3145728
  4145   300000  00                 	db	0
  4146                           
  4147                           ;Config register CONFIG1H @ 0x300001
  4148                           ;	Oscillator Selection
  4149                           ;	FOSC = INTOSCIO, Internal oscillator
  4150                           ;	Primary Oscillator Shutdown
  4151                           ;	PCLKEN = ON, Primary oscillator enabled
  4152                           ;	Fail-Safe Clock Monitor
  4153                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4154                           ;	Internal/External Oscillator Switchover
  4155                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4156   300001                     	org	3145729
  4157   300001  28                 	db	40
  4158                           
  4159                           ;Config register CONFIG2L @ 0x300002
  4160                           ;	Power-up Timer Enable
  4161                           ;	nPWRTEN = ON, Power up timer enabled
  4162                           ;	Brown-out Reset Enable
  4163                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4164                           ;	Brown-out Reset Voltage
  4165                           ;	BORV = 190, BOR set to 1.9V nominal
  4166                           ;	Low-Power Brown-out Reset
  4167                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4168   300002                     	org	3145730
  4169   300002  5E                 	db	94
  4170                           
  4171                           ;Config register CONFIG2H @ 0x300003
  4172                           ;	Watchdog Timer Enable bits
  4173                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4174                           ;	Watchdog Timer Postscaler
  4175                           ;	WDTPS = 32768, 1:32768
  4176   300003                     	org	3145731
  4177   300003  3C                 	db	60
  4178                           
  4179                           ; Padding undefined space
  4180   300004                     	org	3145732
  4181   300004  FF                 	db	255
  4182                           
  4183                           ;Config register CONFIG3H @ 0x300005
  4184                           ;	CCP2 MUX bit
  4185                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4186                           ;	PORTB A/D Enable bit
  4187                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4188                           ;	Timer3 Clock Input MUX bit
  4189                           ;	T3CMX = RC0, T3CKI function is on RC0
  4190                           ;	SDO Output MUX bit
  4191                           ;	SDOMX = RB3, SDO function is on RB3
  4192                           ;	Master Clear Reset Pin Enable
  4193                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4194   300005                     	org	3145733
  4195   300005  D1                 	db	209
  4196                           
  4197                           ;Config register CONFIG4L @ 0x300006
  4198                           ;	Stack Full/Underflow Reset
  4199                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4200                           ;	Single-Supply ICSP Enable bit
  4201                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4202                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4203                           ;	ICPRT = OFF, ICPORT disabled
  4204                           ;	Extended Instruction Set Enable bit
  4205                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4206                           ;	Background Debugger Enable bit
  4207                           ;	DEBUG = 0x1, unprogrammed default
  4208   300006                     	org	3145734
  4209   300006  85                 	db	133
  4210                           
  4211                           ; Padding undefined space
  4212   300007                     	org	3145735
  4213   300007  FF                 	db	255
  4214                           
  4215                           ;Config register CONFIG5L @ 0x300008
  4216                           ;	Block 0 Code Protect
  4217                           ;	CP0 = OFF, Block 0 is not code-protected
  4218                           ;	Block 1 Code Protect
  4219                           ;	CP1 = OFF, Block 1 is not code-protected
  4220                           ;	Block 2 Code Protect
  4221                           ;	CP2 = OFF, Block 2 is not code-protected
  4222                           ;	Block 3 Code Protect
  4223                           ;	CP3 = OFF, Block 3 is not code-protected
  4224   300008                     	org	3145736
  4225   300008  0F                 	db	15
  4226                           
  4227                           ;Config register CONFIG5H @ 0x300009
  4228                           ;	Boot Block Code Protect
  4229                           ;	CPB = OFF, Boot block is not code-protected
  4230                           ;	Data EEPROM Code Protect
  4231                           ;	CPD = OFF, Data EEPROM is not code-protected
  4232   300009                     	org	3145737
  4233   300009  C0                 	db	192
  4234                           
  4235                           ;Config register CONFIG6L @ 0x30000A
  4236                           ;	Block 0 Write Protect
  4237                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4238                           ;	Block 1 Write Protect
  4239                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4240                           ;	Block 2 Write Protect
  4241                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4242                           ;	Block 3 Write Protect
  4243                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4244   30000A                     	org	3145738
  4245   30000A  0F                 	db	15
  4246                           
  4247                           ;Config register CONFIG6H @ 0x30000B
  4248                           ;	Configuration Registers Write Protect
  4249                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4250                           ;	Boot Block Write Protect
  4251                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4252                           ;	Data EEPROM Write Protect
  4253                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4254   30000B                     	org	3145739
  4255   30000B  E0                 	db	224
  4256                           
  4257                           ;Config register CONFIG7L @ 0x30000C
  4258                           ;	Block 0 Table Read Protect
  4259                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4260                           ;	Block 1 Table Read Protect
  4261                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4262                           ;	Block 2 Table Read Protect
  4263                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4264                           ;	Block 3 Table Read Protect
  4265                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4266   30000C                     	org	3145740
  4267   30000C  0F                 	db	15
  4268                           
  4269                           ;Config register CONFIG7H @ 0x30000D
  4270                           ;	Boot Block Table Read Protect
  4271                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4272   30000D                     	org	3145741
  4273   30000D  40                 	db	64
  4274                           tosu	equ	0xFFF
  4275                           tosh	equ	0xFFE
  4276                           tosl	equ	0xFFD
  4277                           stkptr	equ	0xFFC
  4278                           pclatu	equ	0xFFB
  4279                           pclath	equ	0xFFA
  4280                           pcl	equ	0xFF9
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           indf0	equ	0xFEF
  4288                           postinc0	equ	0xFEE
  4289                           postdec0	equ	0xFED
  4290                           preinc0	equ	0xFEC
  4291                           plusw0	equ	0xFEB
  4292                           fsr0h	equ	0xFEA
  4293                           fsr0l	equ	0xFE9
  4294                           wreg	equ	0xFE8
  4295                           indf1	equ	0xFE7
  4296                           postinc1	equ	0xFE6
  4297                           postdec1	equ	0xFE5
  4298                           preinc1	equ	0xFE4
  4299                           plusw1	equ	0xFE3
  4300                           fsr1h	equ	0xFE2
  4301                           fsr1l	equ	0xFE1
  4302                           bsr	equ	0xFE0
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           postdec2	equ	0xFDD
  4306                           preinc2	equ	0xFDC
  4307                           plusw2	equ	0xFDB
  4308                           fsr2h	equ	0xFDA
  4309                           fsr2l	equ	0xFD9
  4310                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    0
    Data        17
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      92
    BANK0           160     25     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[21]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[21]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[21]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[21]), STR_1(CODE[23]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2146$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[21]), STR_1(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strReloj(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2098$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2098$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> strReloj(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Hardware_Init->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RutinaServicioInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _Print_Hour->_sprintf

Critical Paths under _RutinaServicioInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RutinaServicioInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RutinaServicioInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RutinaServicioInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RutinaServicioInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RutinaServicioInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RutinaServicioInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RutinaServicioInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16084
                                             23 BANK0      2     2      0
                      _Hardware_Init
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _Print_Hour
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Print_Hour                                           0     0      0    7888
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    6936
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6431
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    6070
                                             61 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3289
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2239
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1105
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     704
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              7 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     2      2     420
                                              5 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              2 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     532
                                              4 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        0     0      0     198
            _INTERRUPT_Global_Config
              _INTERRUPT_INTx_Config
                           _Lcd_Init
                     _OSCILADOR_Init
                          _PORT_Init
             _TMR0_Temporizador_Init
 ---------------------------------------------------------------------------------
 (2) _TMR0_Temporizador_Init                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     198
                                              4 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              2 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_INTx_Config                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Global_Config                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _RutinaServicioInterrupt                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Hardware_Init
     _INTERRUPT_Global_Config
     _INTERRUPT_INTx_Config
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _OSCILADOR_Init
     _PORT_Init
     _TMR0_Temporizador_Init
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Print_Hour
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
   _sprintf

 _RutinaServicioInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      66       5       63.7%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5C       1       97.9%
BITBIGSFRlhll       21      0       0      34        0.0%
BITBIGSFRhlhl       18      0       0      21        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRhllhhl      C      0       0      27        0.0%
BITBIGSFRlll         9      0       0      35        0.0%
BITBIGSFRhllhhl      7      0       0      26        0.0%
BITBIGSFRhllhhl      7      0       0      25        0.0%
BITBIGSFRhllhhl      6      0       0      24        0.0%
BITBIGSFRhllhhl      6      0       0      28        0.0%
BITBIGSFRhlll        5      0       0      29        0.0%
BITBIGSFRlhlhhh      4      0       0      31        0.0%
BITBIGSFRhllhhh      2      0       0      23        0.0%
BITBIGSFRlhlhhl      1      0       0      32        0.0%
BITBIGSFRlhlhl       1      0       0      33        0.0%
BITBIGSFRlhh         1      0       0      30        0.0%
BITBIGSFRhllhhh      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C2      36        0.0%
DATA                 0      0      C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 20 16:05:40 2023

                             l91 1622                               l94 169E  
                             l88 163A                               l97 1608  
            ___wmul@multiplicand 0004                              l100 1664  
                            l103 14C4                              l142 1676  
                            l311 1696                              l320 1296  
                            l305 1358                              l323 1578  
                            l308 15EA                              l317 12FC  
                            l329 1504                              l472 15CA  
                            l466 163E                              l469 1650  
                            l910 0EF2                              l920 0FC2  
                            l917 0F12                              l927 0FE2  
                            _col 0064                              _pad 1176  
__end_of_INTERRUPT_Global_Config 16A0                              wreg 000FE8  
                     _TXSTA1bits 000FAC                             l1150 13AA  
                           l2201 1176                             l1226 13F8  
                           l1251 0E22                             l2131 163E  
                           l2211 11C6                             l2203 1184  
                           l1219 0AE0                             l1180 121E  
                           l2133 164C                             l2141 1012  
                           l2213 11DA                             l2205 1198  
                           l1254 15A4                             l1262 143E  
                           l2311 1324                             l2303 1300  
                           l2231 1438                             l2223 13FA  
                           l2143 1030                             l2135 0FE4  
                           l2151 144C                             l2215 11DE  
                           l1175 11BA                             l2207 11A6  
                           l1248 0E1A                             l2321 1342  
                           l2313 132A                             l2305 130E  
                           l2401 15D6                             l2225 13FE  
                           l2145 1066                             l2137 0FF6  
                           l2153 145E                             l2217 120A  
                           l2209 11B2                             l2241 0B0E  
                           l1185 0B1A                             l1178 11FC  
                           l2323 1350                             l2315 132C  
                           l2307 1314                             l2403 15D8  
                           l2411 1552                             l2219 157A  
                           l2227 1412                             l2171 0E6A  
                           l2163 0E24                             l2139 1008  
                           l2155 1462                             l1195 0CD8  
                           l2251 0BD6                             l2243 0B4A  
                           l1187 0B22                             l2235 0AE2  
                           l2331 0860                             l2325 1356  
                           l2317 133A                             l2309 1316  
                           l2405 15E8                             l2501 1250  
                           l2421 156E                             l2413 155A  
                           l2157 15A6                             l2229 1434  
                           l2181 0EDA                             l2173 0E78  
                           l2165 0E30                             l1277 10AC  
                           l1285 1482                             l2149 1440  
                           l2261 0C76                             l2253 0BDC  
                           l2245 0B52                             l2237 0AF2  
                           l2341 0892                             l2333 086E  
                           l2319 1340                             l2511 1278  
                           l2503 1256                             l2423 1576  
                           l2415 155C                             l2407 1544  
                           l2159 15C2                             l2271 0CDA  
                           l2183 0EEC                             l2175 0E8A  
                           l2167 0E4E                             l2191 0F4E  
                           l2263 0C90                             l2255 0BE2  
                           l2247 0B5A                             l2239 0AF4  
                           l2351 0908                             l2335 0872  
                           l2327 082E                             l2431 13F0  
                           l2513 127E                             l2505 1266  
                           l2521 15EC                             l2441 12C2  
                           l2417 1564                             l2409 1550  
                           l2281 0D42                             l2273 0CEE  
                           l2177 0EB8                             l2169 0E56  
                           l2193 0F5C                             l2185 0F14  
                           l2265 0CAA                             l2249 0B60  
                           l2257 0C46                             l2353 093E  
                           l2345 089E                             l2337 087E  
                           l2329 0852                             l2425 13AC  
                           l2531 1698                             l2515 1284  
                           l2507 126C                             l2523 15F2  
                           l2443 12CC                             l2435 129A  
                           l2419 156C                             l2283 0D4A  
                           l2179 0ED8                             l2195 0F8A  
                           l2187 0F32                             l2259 0C58  
                           l2267 0CB8                             l2371 0A4A  
                           l2363 098A                             l2355 094E  
                           l2339 0880                             l2347 08D2  
                           l2427 13B8                             l2451 135A  
                           l2533 1652                             l2517 128A  
                           l2509 1272                             l2525 1602  
                           l2541 161A                             l2445 12DE  
                           l2437 12AA                             l2293 0DBC  
                           l2285 0D52                             l2277 0CF2  
                           l2197 0FAA                             l2189 0F3A  
                           l2365 09C2                             l2357 095C  
                           l2349 08E4                             l2429 13D4  
                           l2453 136C                             l2519 1290  
                           l2471 1624                             l2527 1604  
                           l2543 161E                             l2535 160A  
                           l2447 12F0                             l2439 12BC  
                           l2463 14C6                             l2295 0DEC  
                           l2287 0D86                             l2279 0D0E  
                           l2199 0FBC                             l2367 09D2  
                           l2359 097C                             l2383 0AB8  
                           l2455 1374                             l2551 14B8  
                           l2481 1632                             l2473 162A  
                           l2529 1606                             l2537 1612  
                           l2545 168A                             l2449 12F6  
                           l2465 14D2                             l2297 0DFE  
                           l2377 0A7A                             l2369 09EE  
                           l2457 137C                             l2491 1220  
                           l2483 1634                             l2475 162C  
                           l2539 1616                             l2467 14E4  
                           l2379 0AA6                             l2459 1398  
                           l2547 1484                             l2811 10AE  
                           l2397 15CE                             l2493 1228  
                           l2485 1636                             l2477 162E  
                           l2469 14E8                             l2549 148E  
                           l2821 1116                             l2813 10C0  
                           l2399 15D0                             l2495 122E  
                           l2487 1638                             l2479 1630  
                           l2823 1126                             l2815 10F4  
                           l2497 123C                             l2489 1666  
                           l2825 1136                             l2817 1100  
                           l2499 1242                             l2827 1138  
                           l2819 1104                             l2829 1152  
                           ?_pad 0013                             l2891 08C4  
                           l2893 0A98                             l2895 0D70  
                           STR_1 0801                             STR_2 0818  
                           u1101 0E2A                             u1110 0E4E  
                           u1111 0E4A                             u1120 0E78  
                           u1040 164C                             u1200 120A  
                           u1121 0E74                             u1041 1648  
                           u1201 1206                             u1210 159E  
                           u1130 0EB8                             u1050 0FF6  
                           u1211 1598                             u1131 0EB4  
                           u1051 0FF2                             u1220 15A0  
                           u1140 0F32                             u1060 1008  
                           u1300 0CAA                             u1141 0F2E  
                           u1061 1004                             u1301 0CA6  
                           u1230 1412                             u1150 0F5C  
                           u1070 1030                             u1310 0CB8  
                           u1231 140E                             u1151 0F58  
                           u1071 102C                             u1311 0CB4  
                           u1240 1434                             u1320 0D0E  
                           u1160 0F8A                             u1080 1066  
                           u1400 0852                             u1241 1430  
                           u1321 0D0A                             u1161 0F86  
                           u1081 1062                             u1401 084E  
                           u1330 0D3E                             u1090 1482  
                           u1170 1184                             u1250 0AF2  
                           u1410 08E4                             u1331 0D3A  
                           u1091 147E                             u1171 1180  
                           u1251 0AEE                             u1411 08E0  
                           u1340 0DEC                             u1180 11A6  
                           u1260 0B0E                             u1420 0908  
                           u1341 0DE8                             u1181 11A2  
                           u1261 0B0A                             u1421 0904  
                           u1350 0DFE                             u1190 11FC  
                           u1270 0C58                             u1430 094E  
                           _LATB 000F8A                             u1351 0DFA  
                           u1191 11F8                             u1271 0C54  
                           u1431 094A                             u1360 130E  
                           u1280 0C76                             u1440 09C2  
                           _LATD 000F8C                             u1361 130A  
                           u1281 0C72                             u1441 09BE  
                           u1370 1324                             u1290 0C90  
                           u1450 09EE                             u1371 1320  
                           u1291 0C8C                             u1451 09EA  
                           u1380 133A                             u1460 13F0  
                           u1381 1336                             u1461 13EC  
                           u1390 1350                             u1470 12AA  
                           u1391 134C                             u1471 12A6  
                           u1480 12DE                             u1481 12DA  
                           u1490 1504                             u1491 1500  
                           u1820 1116                             u1821 1112  
                           u1830 1126                             u1831 1122  
                           u1840 1136                             u1841 1132  
                           u1907 1248                             u1917 125C  
                           u1927 15DE                             u1857 1144  
                           u1867 1160                             u1877 155E  
                           u1887 1570                             u1897 1234  
                           i2l85 0154            _INTERRUPT_INTx_Config 1652  
                           _TMR0 000FD6                             _WPUB 000F85  
              ?_Lcd_Write_String 0006                             _dbuf 0068  
                           _atoi 0CDA                             _main 10AE  
                           _prec 0062                             pad@i 001A  
                           pad@p 0017                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001C  
                           fsr2l 000FD9                             btemp 005D  
                           _utoa 0AE2                             prodh 000FF4  
                           prodl 000FF3                             start 0158  
             ??_Lcd_Write_String 0008                  __end_of_Lcd_Cmd 15EC  
                   ___param_bank 000000                            ??_pad 0019  
                          ?_atoi 0008                            ?_main 0001  
                          ?_utoa 001E                  __end_of___lodiv 0F14  
                __end_of___lomod 0FE4                     vfpfcnvrt@fmt 0040  
                          _PORTB 000F81                            _PORTD 000F83  
                          _TRISB 000F93                            _TRISD 000F95  
                          _flags 005C                            _fputc 0FE4  
                          _fputs 1440                  __end_of_isdigit 15A6  
                          _hours 0067                            atoi@n 000F  
                          pad@fp 0013                            atoi@s 0008  
                          _width 0060                            _putch 163C  
                __end_of_isspace 1440                            tablat 000FF5  
                          ttemp5 005E                            ttemp6 0061  
                          ttemp7 0065                            utoa@d 0020  
                          utoa@i 003C                            utoa@n 0034  
                          utoa@p 0030                            utoa@w 0032  
                          status 000FD8                            wtemp8 005E  
                __end_of_sprintf 13AC                 ___lodiv@dividend 0002  
               __end_of_Lcd_Init 1298                 __end_of_Lcd_Port 135A  
                __initialization 1506                     __end_of_atoi 0E24  
                   __end_of_main 1176                     __end_of_utoa 0CDA  
                         ??_atoi 000A                           ??_main 00B3  
                         ??_utoa 0028                    __activetblptr 000002  
               ___lodiv@quotient 0012                 ??_OSCILADOR_Init 0002  
                         ?_fputc 0003                           ?_fputs 000C  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
         ?_INTERRUPT_INTx_Config 0001                           ?_putch 0001  
                         _ANSELD 000F5E                           i2l2621 000A  
                         i2l2631 0034                           i2l2623 0018  
                         i2l2633 0042                           i2l2625 0026  
                         i2l2641 005E                           i2l2651 008E  
                         i2l2643 006C                           i2l2635 0046  
                         i2l2627 002E                           i2l2661 00BE  
                         i2l2653 009C                           i2l2645 007A  
                         i2l2637 0048                           i2l2629 0030  
                         i2l2671 010C                           i2l2663 00D0  
                         i2l2655 00A0                           i2l2647 007E  
                         i2l2639 0056                           i2l2681 0152  
                         i2l2673 0110                           i2l2665 00E0  
                         i2l2657 00A2                           i2l2649 0080  
                         i2l2675 0116                           i2l2667 00F0  
                         i2l2659 00B0                           i2l2669 00FC  
                         i2l2677 0118                           i2l2679 012E  
                         _RCREG1 000FAE                           _RCSTA1 000FAB  
                      ??_Lcd_Cmd 0003                    vfpfcnvrt@done 0050  
                         _SPBRG1 000FAF                           _TXREG1 000FAD  
                         _TXSTA1 000FAC                     vfprintf@cfmt 005A  
                         ___wmul 15A6                        ??___lodiv 0012  
                      ??___lomod 0012                __end_of_PORT_Init 163C  
                         clear_0 152C                       _Print_Hour 1484  
                         isa$std 000001                           pad@buf 0015  
                         fputc@c 0003                           fputs@c 0010  
                         fputs@i 0011                           fputs@s 000C  
                      ??_isdigit 0004                     __mediumconst 0000  
                      ??_isspace 0004                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0002                 __end_of_vfprintf 13FA  
                         utoa@fp 001E                        ??_sprintf 005C  
                Lcd_Set_Cursor@a 0006                  Lcd_Set_Cursor@b 0005  
                Lcd_Set_Cursor@y 0008                  Lcd_Set_Cursor@z 0007  
                     __accesstop 0060          __end_of__initialization 1534  
              __end_of_Lcd_Clear 1698                    ___rparam_used 000001  
          __end_of_Hardware_Init 1624                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1678                    __end_of_fputc 10AE  
                  __end_of_fputs 1484                    __end_of_putch 1652  
                 _Lcd_Set_Cursor 1298                        ?_Lcd_Init 0001  
                      ?_Lcd_Port 0001                          ??_fputc 0007  
                        ??_fputs 0010                          ??_putch 0002  
                     __pbssBANK0 0060                          ?___wmul 0002  
         __end_of_Lcd_Set_Cursor 12FE                      ?_Print_Hour 0001  
                        _SPBRGH1 000FB0                       ??_Lcd_Init 0005  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
                     ??_Lcd_Port 0002                 ___lomod@dividend 0002  
        _RutinaServicioInterrupt 0008                   _Lcd_Write_Char 1542  
                        _Lcd_Cmd 15CC         ??_TMR0_Temporizador_Init 0002  
        _INTERRUPT_Global_Config 1698                          __Hparam 0000  
                        __Lparam 0000                          ___lodiv 0E24  
                        ___lomod 0F14                        ?_vfprintf 0054  
                   __psmallconst 0800                          __pcinit 1506  
                        __ramtop 0800                  ?_Lcd_Set_Cursor 0005  
                        __ptext0 10AE                          __ptext1 1484  
                        __ptext2 135A                          __ptext3 13AC  
                        __ptext4 082E                          __ptext5 0AE2  
                        __ptext6 1176                          __ptext7 1440  
                        __ptext8 0FE4                          __ptext9 163C  
                      _T0CONbits 000FD5                          _isdigit 157A  
        ??_INTERRUPT_INTx_Config 0002                          _minutes 0066  
                        _seconds 0065                          _isspace 13FA  
                        atoi@neg 000D                          _sprintf 135A  
         __end_of_Lcd_Write_Char 157A             end_of_initialization 1534  
                        fputc@fp 0005                    __Lmediumconst 0000  
                        fputs@fp 000E                __end_of_vfpfcnvrt 0AE2  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                 vfpfcnvrt@convarg 0048  
                      Lcd_Port@a 0002                       ??_vfprintf 005A  
                      _PORT_Init 1624                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISEbits 000F96  
      ??_RutinaServicioInterrupt 0001                  ?_Lcd_Write_Char 0001  
              Lcd_Write_String@a 0006                Lcd_Write_String@i 0008  
      ??_INTERRUPT_Global_Config 0002                        _Lcd_Clear 168A  
                    vfpfcnvrt@ap 0042                      vfpfcnvrt@cp 0052  
                    vfpfcnvrt@fp 003E                   __end_of___wmul 15CC  
               _Lcd_Write_String 14C6                       ?_PORT_Init 0001  
            start_initialization 1506                  ___lodiv@divisor 000A  
                ___lodiv@counter 001A                      __end_of_pad 1220  
                      _Keypad4x4 00B5                      vfprintf@fmt 0056  
                     ?_Lcd_Clear 0001  __end_of_RutinaServicioInterrupt 0158  
                       ??___wmul 0006                      __pdataBANK0 00B5  
                Lcd_Write_Char@a 0005                  Lcd_Write_Char@y 0004  
                   ??_Print_Hour 005C           _TMR0_Temporizador_Init 15EC  
                    __pbssCOMRAM 005C                    __pcstackBANK0 009C  
                       ?_Lcd_Cmd 0001               __end_of_Print_Hour 14C6  
               ??_Lcd_Set_Cursor 0006                        __pintcode 0008  
                       ?___lodiv 0002                         ?___lomod 0002  
                    ??_PORT_Init 0002                  ___lomod@divisor 000A  
                    __smallconst 0800                  ___lomod@counter 0012  
                       _BAUDCON1 000FB8                         ?_isdigit 0002  
                       ?_isspace 0002    __end_of_INTERRUPT_INTx_Config 1666  
                       ?_sprintf 009C                   ___wmul@product 0006  
                       _LATEbits 000F8D                         _PIE1bits 000F9D  
                       i2u161_40 0018                         i2u161_41 0014  
                       i2u170_40 00BE                         i2u162_40 0026  
                       i2u170_41 00BA                         i2u162_41 0022  
                       Lcd_Cmd@a 0004                         i2u171_40 00D0  
                       i2u163_40 0042                         i2u171_41 00CC  
                       i2u163_41 003E                         i2u172_40 00E0  
                       i2u164_40 0056                         i2u172_41 00DC  
                       i2u164_41 0052                         i2u173_40 00F0  
                       i2u165_40 006C                         i2u173_41 00EC  
                       i2u165_41 0068                         i2u174_40 010C  
                       i2u166_40 007A                         i2u174_41 0108  
                       i2u166_41 0076                         i2u175_40 012A  
                       i2u167_40 008E                         i2u175_41 0124  
                       i2u167_41 008A                         i2u176_40 012C  
                       i2u168_40 009C                         i2u168_41 0098  
                       i2u177_40 013E                         i2u169_40 00B0  
                       i2u177_41 0138                         i2u169_41 00AC  
                  _Hardware_Init 160A                         _PIR1bits 000F9E  
                       i2u177_46 0140                      ??_Lcd_Clear 0005  
                       _RCONbits 000FD0                         _SSP1CON1 000FC6  
                       _SSP1STAT 000FC7                        _vfpfcnvrt 082E  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                     _ADCON2bits 000FC0                ___wmul@multiplier 0002  
               ??_Lcd_Write_Char 0003                     _isspace$2229 0006  
                       _Lcd_Init 1220                         _Lcd_Port 12FE  
                    _INTCON2bits 000FF1                      _INTCON3bits 000FF0  
                      copy_data0 151A         __end_of_Lcd_Write_String 1506  
                 _OSCILADOR_Init 1666                   ?_Hardware_Init 0001  
                       __Hrparam 0000                       vfprintf@ap 0058  
                       __Lrparam 0000                       vfprintf@fp 0054  
                     ?_vfpfcnvrt 003E                       _ANSELBbits 000F5C  
                     _ANSELCbits 000F5D                       _ANSELEbits 000F5F  
                     sprintf@fmt 009E                         __ptext10 0F14  
                       __ptext11 0E24                         __ptext20 160A  
                       __ptext12 0CDA                         __ptext21 15EC  
                       __ptext13 13FA                         __ptext22 1624  
                       __ptext14 157A                         __ptext23 1666  
                       __ptext15 15A6                         __ptext24 1220  
                       __ptext16 14C6                         __ptext25 15CC  
                       __ptext17 1542                         __ptext26 12FE  
                       __ptext18 1298                         __ptext27 1652  
                       __ptext19 168A                         __ptext28 1698  
                   _SSP1CON1bits 000FC6                     _SSP1CON2bits 000FC5  
         __end_of_OSCILADOR_Init 1678                         _is_pause 00C5  
                       isa$xinst 000000                         int$flags 005D  
        ?_TMR0_Temporizador_Init 0001                         _vfprintf 13AC  
                       _strReloj 0088                     _SSP1STATbits 000FC7  
       ?_RutinaServicioInterrupt 0001                       _INTCONbits 000FF2  
                       isdigit@c 0002         ?_INTERRUPT_Global_Config 0001  
             Lcd_Write_Char@temp 0003                         intlevel2 0000  
                      sprintf@ap 00A6                  ?_OSCILADOR_Init 0001  
                       isspace@c 0002                  ??_Hardware_Init 0006  
                     _RCSTA1bits 000FAB                       _OSCCONbits 000FD3  
 __end_of_TMR0_Temporizador_Init 160A                      ??_vfpfcnvrt 0044  
             Lcd_Set_Cursor@temp 0009                         sprintf@f 00A8  
                       sprintf@s 009C                      _SSPCON2bits 000FC5  
